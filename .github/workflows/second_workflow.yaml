
name: Second Workflow Testing

# Workflow Triggers: https://docs.github.com/en/actions/writing-workflows/choosing-when-your-workflow-runs/events-that-trigger-workflows
on: push

# Environment variables at workflow level
env:
    CONTAINER_REGISTRY: docker.io
    IMAGE_NAME: github-actions-nginx

    # This variable defined at Repository level, not at organization level, to use across workflows
    #CONTAINER_REGISTRY_USER_NAME: ravi

    # This secret at Repository level, not at organization level, to use across workflows
    #CONTAINER_REGISTRY_USER_PASSWORD: password

jobs:
    first_job:
        runs-on: ubuntu-latest
        steps:
        - name: Basic commands
          run: |
            cat /etc/*release*
            cat /proc/version
            git --version
            sudo apt-get install cowsay -y
        - name: Execute Cowsay command
          run: cowsay -f dragon "Run for cover, I am a DRAGON....RAWR" >> dragon.txt
        - name: Upload dragon.txt file
          uses: actions/upload-artifact@v3
          with:
            name: dragon-txt-file
            path: dragon.txt

    second_job:
        runs-on: ubuntu-latest
        needs: first_job
        steps:
        - name: Git clone
          uses: actions/checkout@v4
        - name: List all content
          run: |
            ls -la *
            ls -l README.md
        - name: Download dragon.txt file
          uses: actions/download-artifact@v3
          with:
            name: dragon-txt-file
        - name: Show dragon.txt file
          run:  cat dragon.txt

    third_job:
        runs-on: ubuntu-latest
        needs: [first_job, second_job]
        steps:
        - name: Docker build
          run: |
            echo docker build -t ${{ env.CONTAINER_REGISTRY}}/${{ vars.CONTAINER_REGISTRY_USER_NAME }}/${IMAGE_NAME}:latest .
        - name: Docker Login
          run: |
            echo docker login --user-name=${{ vars.CONTAINER_REGISTRY_USER_NAME }} --password=${{ secrets.CONTAINER_REGISTRY_USER_PASSWORD }}
        - name: Docker Push or Publish
          run: |
            echo docker push ${{ env.CONTAINER_REGISTRY}}/${{ vars.CONTAINER_REGISTRY_USER_NAME }}/${IMAGE_NAME}:latest
