// update v1
function wN(e, t) {
    console.log("Purged updated");
    for (var r = 0; r < t.length; r++) {
        const a = t[r];
        if (typeof a != "string" && !Array.isArray(a)) {
            for (const n in a)
                if (n !== "default" && !(n in e)) {
                    const i = Object.getOwnPropertyDescriptor(a, n);
                    i && Object.defineProperty(e, n, i.get ? i : {
                        enumerable: !0,
                        get: () => a[n]
                    })
                }
        }
    }
    return Object.freeze(Object.defineProperty(e, Symbol.toStringTag, {
        value: "Module"
    }))
}
(function() {
    const t = document.createElement("link").relList;
    if (t && t.supports && t.supports("modulepreload"))
        return;
    for (const n of document.querySelectorAll('link[rel="modulepreload"]'))
        a(n);
    new MutationObserver(n => {
        for (const i of n)
            if (i.type === "childList")
                for (const o of i.addedNodes)
                    o.tagName === "LINK" && o.rel === "modulepreload" && a(o)
    }
    ).observe(document, {
        childList: !0,
        subtree: !0
    });
    function r(n) {
        const i = {};
        return n.integrity && (i.integrity = n.integrity),
        n.referrerPolicy && (i.referrerPolicy = n.referrerPolicy),
        n.crossOrigin === "use-credentials" ? i.credentials = "include" : n.crossOrigin === "anonymous" ? i.credentials = "omit" : i.credentials = "same-origin",
        i
    }
    function a(n) {
        if (n.ep)
            return;
        n.ep = !0;
        const i = r(n);
        fetch(n.href, i)
    }
}
)();
var un = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function vi(e) {
    return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e
}
function gN(e) {
    if (e.__esModule)
        return e;
    var t = e.default;
    if (typeof t == "function") {
        var r = function a() {
            return this instanceof a ? Reflect.construct(t, arguments, this.constructor) : t.apply(this, arguments)
        };
        r.prototype = t.prototype
    } else
        r = {};
    return Object.defineProperty(r, "__esModule", {
        value: !0
    }),
    Object.keys(e).forEach(function(a) {
        var n = Object.getOwnPropertyDescriptor(e, a);
        Object.defineProperty(r, a, n.get ? n : {
            enumerable: !0,
            get: function() {
                return e[a]
            }
        })
    }),
    r
}
var jx = {
    exports: {}
}
  , am = {}
  , Hx = {
    exports: {}
}
  , yt = {};
/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Lc = Symbol.for("react.element")
  , _N = Symbol.for("react.portal")
  , bN = Symbol.for("react.fragment")
  , CN = Symbol.for("react.strict_mode")
  , SN = Symbol.for("react.profiler")
  , xN = Symbol.for("react.provider")
  , AN = Symbol.for("react.context")
  , EN = Symbol.for("react.forward_ref")
  , kN = Symbol.for("react.suspense")
  , TN = Symbol.for("react.memo")
  , NN = Symbol.for("react.lazy")
  , c0 = Symbol.iterator;
function MN(e) {
    return e === null || typeof e != "object" ? null : (e = c0 && e[c0] || e["@@iterator"],
    typeof e == "function" ? e : null)
}
var Wx = {
    isMounted: function() {
        return !1
    },
    enqueueForceUpdate: function() {},
    enqueueReplaceState: function() {},
    enqueueSetState: function() {}
}
  , Yx = Object.assign
  , Jx = {};
function eu(e, t, r) {
    this.props = e,
    this.context = t,
    this.refs = Jx,
    this.updater = r || Wx
}
eu.prototype.isReactComponent = {};
eu.prototype.setState = function(e, t) {
    if (typeof e != "object" && typeof e != "function" && e != null)
        throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
    this.updater.enqueueSetState(this, e, t, "setState")
}
;
eu.prototype.forceUpdate = function(e) {
    this.updater.enqueueForceUpdate(this, e, "forceUpdate")
}
;
function Kx() {}
Kx.prototype = eu.prototype;
function Mw(e, t, r) {
    this.props = e,
    this.context = t,
    this.refs = Jx,
    this.updater = r || Wx
}
var Iw = Mw.prototype = new Kx;
Iw.constructor = Mw;
Yx(Iw, eu.prototype);
Iw.isPureReactComponent = !0;
var d0 = Array.isArray
  , Qx = Object.prototype.hasOwnProperty
  , Dw = {
    current: null
}
  , Zx = {
    key: !0,
    ref: !0,
    __self: !0,
    __source: !0
};
function Xx(e, t, r) {
    var a, n = {}, i = null, o = null;
    if (t != null)
        for (a in t.ref !== void 0 && (o = t.ref),
        t.key !== void 0 && (i = "" + t.key),
        t)
            Qx.call(t, a) && !Zx.hasOwnProperty(a) && (n[a] = t[a]);
    var s = arguments.length - 2;
    if (s === 1)
        n.children = r;
    else if (1 < s) {
        for (var l = Array(s), u = 0; u < s; u++)
            l[u] = arguments[u + 2];
        n.children = l
    }
    if (e && e.defaultProps)
        for (a in s = e.defaultProps,
        s)
            n[a] === void 0 && (n[a] = s[a]);
    return {
        $$typeof: Lc,
        type: e,
        key: i,
        ref: o,
        props: n,
        _owner: Dw.current
    }
}
function IN(e, t) {
    return {
        $$typeof: Lc,
        type: e.type,
        key: t,
        ref: e.ref,
        props: e.props,
        _owner: e._owner
    }
}
function Uw(e) {
    return typeof e == "object" && e !== null && e.$$typeof === Lc
}
function DN(e) {
    var t = {
        "=": "=0",
        ":": "=2"
    };
    return "$" + e.replace(/[=:]/g, function(r) {
        return t[r]
    })
}
var v0 = /\/+/g;
function Df(e, t) {
    return typeof e == "object" && e !== null && e.key != null ? DN("" + e.key) : t.toString(36)
}
function gv(e, t, r, a, n) {
    var i = typeof e;
    (i === "undefined" || i === "boolean") && (e = null);
    var o = !1;
    if (e === null)
        o = !0;
    else
        switch (i) {
        case "string":
        case "number":
            o = !0;
            break;
        case "object":
            switch (e.$$typeof) {
            case Lc:
            case _N:
                o = !0
            }
        }
    if (o)
        return o = e,
        n = n(o),
        e = a === "" ? "." + Df(o, 0) : a,
        d0(n) ? (r = "",
        e != null && (r = e.replace(v0, "$&/") + "/"),
        gv(n, t, r, "", function(u) {
            return u
        })) : n != null && (Uw(n) && (n = IN(n, r + (!n.key || o && o.key === n.key ? "" : ("" + n.key).replace(v0, "$&/") + "/") + e)),
        t.push(n)),
        1;
    if (o = 0,
    a = a === "" ? "." : a + ":",
    d0(e))
        for (var s = 0; s < e.length; s++) {
            i = e[s];
            var l = a + Df(i, s);
            o += gv(i, t, r, l, n)
        }
    else if (l = MN(e),
    typeof l == "function")
        for (e = l.call(e),
        s = 0; !(i = e.next()).done; )
            i = i.value,
            l = a + Df(i, s++),
            o += gv(i, t, r, l, n);
    else if (i === "object")
        throw t = String(e),
        Error("Objects are not valid as a React child (found: " + (t === "[object Object]" ? "object with keys {" + Object.keys(e).join(", ") + "}" : t) + "). If you meant to render a collection of children, use an array instead.");
    return o
}
function _d(e, t, r) {
    if (e == null)
        return e;
    var a = []
      , n = 0;
    return gv(e, a, "", "", function(i) {
        return t.call(r, i, n++)
    }),
    a
}
function UN(e) {
    if (e._status === -1) {
        var t = e._result;
        t = t(),
        t.then(function(r) {
            (e._status === 0 || e._status === -1) && (e._status = 1,
            e._result = r)
        }, function(r) {
            (e._status === 0 || e._status === -1) && (e._status = 2,
            e._result = r)
        }),
        e._status === -1 && (e._status = 0,
        e._result = t)
    }
    if (e._status === 1)
        return e._result.default;
    throw e._result
}
var ha = {
    current: null
}
  , _v = {
    transition: null
}
  , FN = {
    ReactCurrentDispatcher: ha,
    ReactCurrentBatchConfig: _v,
    ReactCurrentOwner: Dw
};
yt.Children = {
    map: _d,
    forEach: function(e, t, r) {
        _d(e, function() {
            t.apply(this, arguments)
        }, r)
    },
    count: function(e) {
        var t = 0;
        return _d(e, function() {
            t++
        }),
        t
    },
    toArray: function(e) {
        return _d(e, function(t) {
            return t
        }) || []
    },
    only: function(e) {
        if (!Uw(e))
            throw Error("React.Children.only expected to receive a single React element child.");
        return e
    }
};
yt.Component = eu;
yt.Fragment = bN;
yt.Profiler = SN;
yt.PureComponent = Mw;
yt.StrictMode = CN;
yt.Suspense = kN;
yt.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = FN;
yt.cloneElement = function(e, t, r) {
    if (e == null)
        throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + e + ".");
    var a = Yx({}, e.props)
      , n = e.key
      , i = e.ref
      , o = e._owner;
    if (t != null) {
        if (t.ref !== void 0 && (i = t.ref,
        o = Dw.current),
        t.key !== void 0 && (n = "" + t.key),
        e.type && e.type.defaultProps)
            var s = e.type.defaultProps;
        for (l in t)
            Qx.call(t, l) && !Zx.hasOwnProperty(l) && (a[l] = t[l] === void 0 && s !== void 0 ? s[l] : t[l])
    }
    var l = arguments.length - 2;
    if (l === 1)
        a.children = r;
    else if (1 < l) {
        s = Array(l);
        for (var u = 0; u < l; u++)
            s[u] = arguments[u + 2];
        a.children = s
    }
    return {
        $$typeof: Lc,
        type: e.type,
        key: n,
        ref: i,
        props: a,
        _owner: o
    }
}
;
yt.createContext = function(e) {
    return e = {
        $$typeof: AN,
        _currentValue: e,
        _currentValue2: e,
        _threadCount: 0,
        Provider: null,
        Consumer: null,
        _defaultValue: null,
        _globalName: null
    },
    e.Provider = {
        $$typeof: xN,
        _context: e
    },
    e.Consumer = e
}
;
yt.createElement = Xx;
yt.createFactory = function(e) {
    var t = Xx.bind(null, e);
    return t.type = e,
    t
}
;
yt.createRef = function() {
    return {
        current: null
    }
}
;
yt.forwardRef = function(e) {
    return {
        $$typeof: EN,
        render: e
    }
}
;
yt.isValidElement = Uw;
yt.lazy = function(e) {
    return {
        $$typeof: NN,
        _payload: {
            _status: -1,
            _result: e
        },
        _init: UN
    }
}
;
yt.memo = function(e, t) {
    return {
        $$typeof: TN,
        type: e,
        compare: t === void 0 ? null : t
    }
}
;
yt.startTransition = function(e) {
    var t = _v.transition;
    _v.transition = {};
    try {
        e()
    } finally {
        _v.transition = t
    }
}
;
yt.unstable_act = function() {
    throw Error("act(...) is not supported in production builds of React.")
}
;
yt.useCallback = function(e, t) {
    return ha.current.useCallback(e, t)
}
;
yt.useContext = function(e) {
    return ha.current.useContext(e)
}
;
yt.useDebugValue = function() {}
;
yt.useDeferredValue = function(e) {
    return ha.current.useDeferredValue(e)
}
;
yt.useEffect = function(e, t) {
    return ha.current.useEffect(e, t)
}
;
yt.useId = function() {
    return ha.current.useId()
}
;
yt.useImperativeHandle = function(e, t, r) {
    return ha.current.useImperativeHandle(e, t, r)
}
;
yt.useInsertionEffect = function(e, t) {
    return ha.current.useInsertionEffect(e, t)
}
;
yt.useLayoutEffect = function(e, t) {
    return ha.current.useLayoutEffect(e, t)
}
;
yt.useMemo = function(e, t) {
    return ha.current.useMemo(e, t)
}
;
yt.useReducer = function(e, t, r) {
    return ha.current.useReducer(e, t, r)
}
;
yt.useRef = function(e) {
    return ha.current.useRef(e)
}
;
yt.useState = function(e) {
    return ha.current.useState(e)
}
;
yt.useSyncExternalStore = function(e, t, r) {
    return ha.current.useSyncExternalStore(e, t, r)
}
;
yt.useTransition = function() {
    return ha.current.useTransition()
}
;
yt.version = "18.2.0";
Hx.exports = yt;
var q = Hx.exports;
const Gt = vi(q)
  , qp = wN({
    __proto__: null,
    default: Gt
}, [q]);
/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var ON = q
  , PN = Symbol.for("react.element")
  , BN = Symbol.for("react.fragment")
  , RN = Object.prototype.hasOwnProperty
  , LN = ON.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner
  , qN = {
    key: !0,
    ref: !0,
    __self: !0,
    __source: !0
};
function e5(e, t, r) {
    var a, n = {}, i = null, o = null;
    r !== void 0 && (i = "" + r),
    t.key !== void 0 && (i = "" + t.key),
    t.ref !== void 0 && (o = t.ref);
    for (a in t)
        RN.call(t, a) && !qN.hasOwnProperty(a) && (n[a] = t[a]);
    if (e && e.defaultProps)
        for (a in t = e.defaultProps,
        t)
            n[a] === void 0 && (n[a] = t[a]);
    return {
        $$typeof: PN,
        type: e,
        key: i,
        ref: o,
        props: n,
        _owner: LN.current
    }
}
am.Fragment = BN;
am.jsx = e5;
am.jsxs = e5;
jx.exports = am;
var S = jx.exports
  , Vp = {}
  , t5 = {
    exports: {}
}
  , Ha = {}
  , r5 = {
    exports: {}
}
  , a5 = {};
/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
(function(e) {
    function t(B, D) {
        var V = B.length;
        B.push(D);
        e: for (; 0 < V; ) {
            var J = V - 1 >>> 1
              , Y = B[J];
            if (0 < n(Y, D))
                B[J] = D,
                B[V] = Y,
                V = J;
            else
                break e
        }
    }
    function r(B) {
        return B.length === 0 ? null : B[0]
    }
    function a(B) {
        if (B.length === 0)
            return null;
        var D = B[0]
          , V = B.pop();
        if (V !== D) {
            B[0] = V;
            e: for (var J = 0, Y = B.length, G = Y >>> 1; J < G; ) {
                var Z = 2 * (J + 1) - 1
                  , ie = B[Z]
                  , re = Z + 1
                  , se = B[re];
                if (0 > n(ie, V))
                    re < Y && 0 > n(se, ie) ? (B[J] = se,
                    B[re] = V,
                    J = re) : (B[J] = ie,
                    B[Z] = V,
                    J = Z);
                else if (re < Y && 0 > n(se, V))
                    B[J] = se,
                    B[re] = V,
                    J = re;
                else
                    break e
            }
        }
        return D
    }
    function n(B, D) {
        var V = B.sortIndex - D.sortIndex;
        return V !== 0 ? V : B.id - D.id
    }
    if (typeof performance == "object" && typeof performance.now == "function") {
        var i = performance;
        e.unstable_now = function() {
            return i.now()
        }
    } else {
        var o = Date
          , s = o.now();
        e.unstable_now = function() {
            return o.now() - s
        }
    }
    var l = []
      , u = []
      , c = 1
      , d = null
      , v = 3
      , h = !1
      , p = !1
      , f = !1
      , _ = typeof setTimeout == "function" ? setTimeout : null
      , y = typeof clearTimeout == "function" ? clearTimeout : null
      , g = typeof setImmediate < "u" ? setImmediate : null;
    typeof navigator < "u" && navigator.scheduling !== void 0 && navigator.scheduling.isInputPending !== void 0 && navigator.scheduling.isInputPending.bind(navigator.scheduling);
    function m(B) {
        for (var D = r(u); D !== null; ) {
            if (D.callback === null)
                a(u);
            else if (D.startTime <= B)
                a(u),
                D.sortIndex = D.expirationTime,
                t(l, D);
            else
                break;
            D = r(u)
        }
    }
    function w(B) {
        if (f = !1,
        m(B),
        !p)
            if (r(l) !== null)
                p = !0,
                M(C);
            else {
                var D = r(u);
                D !== null && N(w, D.startTime - B)
            }
    }
    function C(B, D) {
        p = !1,
        f && (f = !1,
        y(E),
        E = -1),
        h = !0;
        var V = v;
        try {
            for (m(D),
            d = r(l); d !== null && (!(d.expirationTime > D) || B && !I()); ) {
                var J = d.callback;
                if (typeof J == "function") {
                    d.callback = null,
                    v = d.priorityLevel;
                    var Y = J(d.expirationTime <= D);
                    D = e.unstable_now(),
                    typeof Y == "function" ? d.callback = Y : d === r(l) && a(l),
                    m(D)
                } else
                    a(l);
                d = r(l)
            }
            if (d !== null)
                var G = !0;
            else {
                var Z = r(u);
                Z !== null && N(w, Z.startTime - D),
                G = !1
            }
            return G
        } finally {
            d = null,
            v = V,
            h = !1
        }
    }
    var b = !1
      , x = null
      , E = -1
      , k = 5
      , A = -1;
    function I() {
        return !(e.unstable_now() - A < k)
    }
    function T() {
        if (x !== null) {
            var B = e.unstable_now();
            A = B;
            var D = !0;
            try {
                D = x(!0, B)
            } finally {
                D ? F() : (b = !1,
                x = null)
            }
        } else
            b = !1
    }
    var F;
    if (typeof g == "function")
        F = function() {
            g(T)
        }
        ;
    else if (typeof MessageChannel < "u") {
        var R = new MessageChannel
          , O = R.port2;
        R.port1.onmessage = T,
        F = function() {
            O.postMessage(null)
        }
    } else
        F = function() {
            _(T, 0)
        }
        ;
    function M(B) {
        x = B,
        b || (b = !0,
        F())
    }
    function N(B, D) {
        E = _(function() {
            B(e.unstable_now())
        }, D)
    }
    e.unstable_IdlePriority = 5,
    e.unstable_ImmediatePriority = 1,
    e.unstable_LowPriority = 4,
    e.unstable_NormalPriority = 3,
    e.unstable_Profiling = null,
    e.unstable_UserBlockingPriority = 2,
    e.unstable_cancelCallback = function(B) {
        B.callback = null
    }
    ,
    e.unstable_continueExecution = function() {
        p || h || (p = !0,
        M(C))
    }
    ,
    e.unstable_forceFrameRate = function(B) {
        0 > B || 125 < B ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : k = 0 < B ? Math.floor(1e3 / B) : 5
    }
    ,
    e.unstable_getCurrentPriorityLevel = function() {
        return v
    }
    ,
    e.unstable_getFirstCallbackNode = function() {
        return r(l)
    }
    ,
    e.unstable_next = function(B) {
        switch (v) {
        case 1:
        case 2:
        case 3:
            var D = 3;
            break;
        default:
            D = v
        }
        var V = v;
        v = D;
        try {
            return B()
        } finally {
            v = V
        }
    }
    ,
    e.unstable_pauseExecution = function() {}
    ,
    e.unstable_requestPaint = function() {}
    ,
    e.unstable_runWithPriority = function(B, D) {
        switch (B) {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
            break;
        default:
            B = 3
        }
        var V = v;
        v = B;
        try {
            return D()
        } finally {
            v = V
        }
    }
    ,
    e.unstable_scheduleCallback = function(B, D, V) {
        var J = e.unstable_now();
        switch (typeof V == "object" && V !== null ? (V = V.delay,
        V = typeof V == "number" && 0 < V ? J + V : J) : V = J,
        B) {
        case 1:
            var Y = -1;
            break;
        case 2:
            Y = 250;
            break;
        case 5:
            Y = 1073741823;
            break;
        case 4:
            Y = 1e4;
            break;
        default:
            Y = 5e3
        }
        return Y = V + Y,
        B = {
            id: c++,
            callback: D,
            priorityLevel: B,
            startTime: V,
            expirationTime: Y,
            sortIndex: -1
        },
        V > J ? (B.sortIndex = V,
        t(u, B),
        r(l) === null && B === r(u) && (f ? (y(E),
        E = -1) : f = !0,
        N(w, V - J))) : (B.sortIndex = Y,
        t(l, B),
        p || h || (p = !0,
        M(C))),
        B
    }
    ,
    e.unstable_shouldYield = I,
    e.unstable_wrapCallback = function(B) {
        var D = v;
        return function() {
            var V = v;
            v = D;
            try {
                return B.apply(this, arguments)
            } finally {
                v = V
            }
        }
    }
}
)(a5);
r5.exports = a5;
var VN = r5.exports;
/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var n5 = q
  , $a = VN;
function Ne(e) {
    for (var t = "https://reactjs.org/docs/error-decoder.html?invariant=" + e, r = 1; r < arguments.length; r++)
        t += "&args[]=" + encodeURIComponent(arguments[r]);
    return "Minified React error #" + e + "; visit " + t + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings."
}
var i5 = new Set
  , vc = {};
function Ss(e, t) {
    Ol(e, t),
    Ol(e + "Capture", t)
}
function Ol(e, t) {
    for (vc[e] = t,
    e = 0; e < t.length; e++)
        i5.add(t[e])
}
var Bi = !(typeof window > "u" || typeof window.document > "u" || typeof window.document.createElement > "u")
  , $p = Object.prototype.hasOwnProperty
  , $N = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/
  , h0 = {}
  , m0 = {};
function zN(e) {
    return $p.call(m0, e) ? !0 : $p.call(h0, e) ? !1 : $N.test(e) ? m0[e] = !0 : (h0[e] = !0,
    !1)
}
function GN(e, t, r, a) {
    if (r !== null && r.type === 0)
        return !1;
    switch (typeof t) {
    case "function":
    case "symbol":
        return !0;
    case "boolean":
        return a ? !1 : r !== null ? !r.acceptsBooleans : (e = e.toLowerCase().slice(0, 5),
        e !== "data-" && e !== "aria-");
    default:
        return !1
    }
}
function jN(e, t, r, a) {
    if (t === null || typeof t > "u" || GN(e, t, r, a))
        return !0;
    if (a)
        return !1;
    if (r !== null)
        switch (r.type) {
        case 3:
            return !t;
        case 4:
            return t === !1;
        case 5:
            return isNaN(t);
        case 6:
            return isNaN(t) || 1 > t
        }
    return !1
}
function ma(e, t, r, a, n, i, o) {
    this.acceptsBooleans = t === 2 || t === 3 || t === 4,
    this.attributeName = a,
    this.attributeNamespace = n,
    this.mustUseProperty = r,
    this.propertyName = e,
    this.type = t,
    this.sanitizeURL = i,
    this.removeEmptyString = o
}
var Rr = {};
"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e) {
    Rr[e] = new ma(e,0,!1,e,null,!1,!1)
});
[["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(e) {
    var t = e[0];
    Rr[t] = new ma(t,1,!1,e[1],null,!1,!1)
});
["contentEditable", "draggable", "spellCheck", "value"].forEach(function(e) {
    Rr[e] = new ma(e,2,!1,e.toLowerCase(),null,!1,!1)
});
["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(e) {
    Rr[e] = new ma(e,2,!1,e,null,!1,!1)
});
"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e) {
    Rr[e] = new ma(e,3,!1,e.toLowerCase(),null,!1,!1)
});
["checked", "multiple", "muted", "selected"].forEach(function(e) {
    Rr[e] = new ma(e,3,!0,e,null,!1,!1)
});
["capture", "download"].forEach(function(e) {
    Rr[e] = new ma(e,4,!1,e,null,!1,!1)
});
["cols", "rows", "size", "span"].forEach(function(e) {
    Rr[e] = new ma(e,6,!1,e,null,!1,!1)
});
["rowSpan", "start"].forEach(function(e) {
    Rr[e] = new ma(e,5,!1,e.toLowerCase(),null,!1,!1)
});
var Fw = /[\-:]([a-z])/g;
function Ow(e) {
    return e[1].toUpperCase()
}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e) {
    var t = e.replace(Fw, Ow);
    Rr[t] = new ma(t,1,!1,e,null,!1,!1)
});
"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e) {
    var t = e.replace(Fw, Ow);
    Rr[t] = new ma(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)
});
["xml:base", "xml:lang", "xml:space"].forEach(function(e) {
    var t = e.replace(Fw, Ow);
    Rr[t] = new ma(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)
});
["tabIndex", "crossOrigin"].forEach(function(e) {
    Rr[e] = new ma(e,1,!1,e.toLowerCase(),null,!1,!1)
});
Rr.xlinkHref = new ma("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1);
["src", "href", "action", "formAction"].forEach(function(e) {
    Rr[e] = new ma(e,1,!1,e.toLowerCase(),null,!0,!0)
});
function Pw(e, t, r, a) {
    var n = Rr.hasOwnProperty(t) ? Rr[t] : null;
    (n !== null ? n.type !== 0 : a || !(2 < t.length) || t[0] !== "o" && t[0] !== "O" || t[1] !== "n" && t[1] !== "N") && (jN(t, r, n, a) && (r = null),
    a || n === null ? zN(t) && (r === null ? e.removeAttribute(t) : e.setAttribute(t, "" + r)) : n.mustUseProperty ? e[n.propertyName] = r === null ? n.type === 3 ? !1 : "" : r : (t = n.attributeName,
    a = n.attributeNamespace,
    r === null ? e.removeAttribute(t) : (n = n.type,
    r = n === 3 || n === 4 && r === !0 ? "" : "" + r,
    a ? e.setAttributeNS(a, t, r) : e.setAttribute(t, r))))
}
var ji = n5.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED
  , bd = Symbol.for("react.element")
  , nl = Symbol.for("react.portal")
  , il = Symbol.for("react.fragment")
  , Bw = Symbol.for("react.strict_mode")
  , zp = Symbol.for("react.profiler")
  , o5 = Symbol.for("react.provider")
  , s5 = Symbol.for("react.context")
  , Rw = Symbol.for("react.forward_ref")
  , Gp = Symbol.for("react.suspense")
  , jp = Symbol.for("react.suspense_list")
  , Lw = Symbol.for("react.memo")
  , io = Symbol.for("react.lazy")
  , l5 = Symbol.for("react.offscreen")
  , f0 = Symbol.iterator;
function ku(e) {
    return e === null || typeof e != "object" ? null : (e = f0 && e[f0] || e["@@iterator"],
    typeof e == "function" ? e : null)
}
var rr = Object.assign, Uf;
function Gu(e) {
    if (Uf === void 0)
        try {
            throw Error()
        } catch (r) {
            var t = r.stack.trim().match(/\n( *(at )?)/);
            Uf = t && t[1] || ""
        }
    return `
` + Uf + e
}
var Ff = !1;
function Of(e, t) {
    if (!e || Ff)
        return "";
    Ff = !0;
    var r = Error.prepareStackTrace;
    Error.prepareStackTrace = void 0;
    try {
        if (t)
            if (t = function() {
                throw Error()
            }
            ,
            Object.defineProperty(t.prototype, "props", {
                set: function() {
                    throw Error()
                }
            }),
            typeof Reflect == "object" && Reflect.construct) {
                try {
                    Reflect.construct(t, [])
                } catch (u) {
                    var a = u
                }
                Reflect.construct(e, [], t)
            } else {
                try {
                    t.call()
                } catch (u) {
                    a = u
                }
                e.call(t.prototype)
            }
        else {
            try {
                throw Error()
            } catch (u) {
                a = u
            }
            e()
        }
    } catch (u) {
        if (u && a && typeof u.stack == "string") {
            for (var n = u.stack.split(`
`), i = a.stack.split(`
`), o = n.length - 1, s = i.length - 1; 1 <= o && 0 <= s && n[o] !== i[s]; )
                s--;
            for (; 1 <= o && 0 <= s; o--,
            s--)
                if (n[o] !== i[s]) {
                    if (o !== 1 || s !== 1)
                        do
                            if (o--,
                            s--,
                            0 > s || n[o] !== i[s]) {
                                var l = `
` + n[o].replace(" at new ", " at ");
                                return e.displayName && l.includes("<anonymous>") && (l = l.replace("<anonymous>", e.displayName)),
                                l
                            }
                        while (1 <= o && 0 <= s);
                    break
                }
        }
    } finally {
        Ff = !1,
        Error.prepareStackTrace = r
    }
    return (e = e ? e.displayName || e.name : "") ? Gu(e) : ""
}
function HN(e) {
    switch (e.tag) {
    case 5:
        return Gu(e.type);
    case 16:
        return Gu("Lazy");
    case 13:
        return Gu("Suspense");
    case 19:
        return Gu("SuspenseList");
    case 0:
    case 2:
    case 15:
        return e = Of(e.type, !1),
        e;
    case 11:
        return e = Of(e.type.render, !1),
        e;
    case 1:
        return e = Of(e.type, !0),
        e;
    default:
        return ""
    }
}
function Hp(e) {
    if (e == null)
        return null;
    if (typeof e == "function")
        return e.displayName || e.name || null;
    if (typeof e == "string")
        return e;
    switch (e) {
    case il:
        return "Fragment";
    case nl:
        return "Portal";
    case zp:
        return "Profiler";
    case Bw:
        return "StrictMode";
    case Gp:
        return "Suspense";
    case jp:
        return "SuspenseList"
    }
    if (typeof e == "object")
        switch (e.$$typeof) {
        case s5:
            return (e.displayName || "Context") + ".Consumer";
        case o5:
            return (e._context.displayName || "Context") + ".Provider";
        case Rw:
            var t = e.render;
            return e = e.displayName,
            e || (e = t.displayName || t.name || "",
            e = e !== "" ? "ForwardRef(" + e + ")" : "ForwardRef"),
            e;
        case Lw:
            return t = e.displayName || null,
            t !== null ? t : Hp(e.type) || "Memo";
        case io:
            t = e._payload,
            e = e._init;
            try {
                return Hp(e(t))
            } catch {}
        }
    return null
}
function WN(e) {
    var t = e.type;
    switch (e.tag) {
    case 24:
        return "Cache";
    case 9:
        return (t.displayName || "Context") + ".Consumer";
    case 10:
        return (t._context.displayName || "Context") + ".Provider";
    case 18:
        return "DehydratedFragment";
    case 11:
        return e = t.render,
        e = e.displayName || e.name || "",
        t.displayName || (e !== "" ? "ForwardRef(" + e + ")" : "ForwardRef");
    case 7:
        return "Fragment";
    case 5:
        return t;
    case 4:
        return "Portal";
    case 3:
        return "Root";
    case 6:
        return "Text";
    case 16:
        return Hp(t);
    case 8:
        return t === Bw ? "StrictMode" : "Mode";
    case 22:
        return "Offscreen";
    case 12:
        return "Profiler";
    case 21:
        return "Scope";
    case 13:
        return "Suspense";
    case 19:
        return "SuspenseList";
    case 25:
        return "TracingMarker";
    case 1:
    case 0:
    case 17:
    case 2:
    case 14:
    case 15:
        if (typeof t == "function")
            return t.displayName || t.name || null;
        if (typeof t == "string")
            return t
    }
    return null
}
function Mo(e) {
    switch (typeof e) {
    case "boolean":
    case "number":
    case "string":
    case "undefined":
        return e;
    case "object":
        return e;
    default:
        return ""
    }
}
function u5(e) {
    var t = e.type;
    return (e = e.nodeName) && e.toLowerCase() === "input" && (t === "checkbox" || t === "radio")
}
function YN(e) {
    var t = u5(e) ? "checked" : "value"
      , r = Object.getOwnPropertyDescriptor(e.constructor.prototype, t)
      , a = "" + e[t];
    if (!e.hasOwnProperty(t) && typeof r < "u" && typeof r.get == "function" && typeof r.set == "function") {
        var n = r.get
          , i = r.set;
        return Object.defineProperty(e, t, {
            configurable: !0,
            get: function() {
                return n.call(this)
            },
            set: function(o) {
                a = "" + o,
                i.call(this, o)
            }
        }),
        Object.defineProperty(e, t, {
            enumerable: r.enumerable
        }),
        {
            getValue: function() {
                return a
            },
            setValue: function(o) {
                a = "" + o
            },
            stopTracking: function() {
                e._valueTracker = null,
                delete e[t]
            }
        }
    }
}
function Cd(e) {
    e._valueTracker || (e._valueTracker = YN(e))
}
function c5(e) {
    if (!e)
        return !1;
    var t = e._valueTracker;
    if (!t)
        return !0;
    var r = t.getValue()
      , a = "";
    return e && (a = u5(e) ? e.checked ? "true" : "false" : e.value),
    e = a,
    e !== r ? (t.setValue(e),
    !0) : !1
}
function qv(e) {
    if (e = e || (typeof document < "u" ? document : void 0),
    typeof e > "u")
        return null;
    try {
        return e.activeElement || e.body
    } catch {
        return e.body
    }
}
function Wp(e, t) {
    var r = t.checked;
    return rr({}, t, {
        defaultChecked: void 0,
        defaultValue: void 0,
        value: void 0,
        checked: r ?? e._wrapperState.initialChecked
    })
}
function p0(e, t) {
    var r = t.defaultValue == null ? "" : t.defaultValue
      , a = t.checked != null ? t.checked : t.defaultChecked;
    r = Mo(t.value != null ? t.value : r),
    e._wrapperState = {
        initialChecked: a,
        initialValue: r,
        controlled: t.type === "checkbox" || t.type === "radio" ? t.checked != null : t.value != null
    }
}
function d5(e, t) {
    t = t.checked,
    t != null && Pw(e, "checked", t, !1)
}
function Yp(e, t) {
    d5(e, t);
    var r = Mo(t.value)
      , a = t.type;
    if (r != null)
        a === "number" ? (r === 0 && e.value === "" || e.value != r) && (e.value = "" + r) : e.value !== "" + r && (e.value = "" + r);
    else if (a === "submit" || a === "reset") {
        e.removeAttribute("value");
        return
    }
    t.hasOwnProperty("value") ? Jp(e, t.type, r) : t.hasOwnProperty("defaultValue") && Jp(e, t.type, Mo(t.defaultValue)),
    t.checked == null && t.defaultChecked != null && (e.defaultChecked = !!t.defaultChecked)
}
function y0(e, t, r) {
    if (t.hasOwnProperty("value") || t.hasOwnProperty("defaultValue")) {
        var a = t.type;
        if (!(a !== "submit" && a !== "reset" || t.value !== void 0 && t.value !== null))
            return;
        t = "" + e._wrapperState.initialValue,
        r || t === e.value || (e.value = t),
        e.defaultValue = t
    }
    r = e.name,
    r !== "" && (e.name = ""),
    e.defaultChecked = !!e._wrapperState.initialChecked,
    r !== "" && (e.name = r)
}
function Jp(e, t, r) {
    (t !== "number" || qv(e.ownerDocument) !== e) && (r == null ? e.defaultValue = "" + e._wrapperState.initialValue : e.defaultValue !== "" + r && (e.defaultValue = "" + r))
}
var ju = Array.isArray;
function Sl(e, t, r, a) {
    if (e = e.options,
    t) {
        t = {};
        for (var n = 0; n < r.length; n++)
            t["$" + r[n]] = !0;
        for (r = 0; r < e.length; r++)
            n = t.hasOwnProperty("$" + e[r].value),
            e[r].selected !== n && (e[r].selected = n),
            n && a && (e[r].defaultSelected = !0)
    } else {
        for (r = "" + Mo(r),
        t = null,
        n = 0; n < e.length; n++) {
            if (e[n].value === r) {
                e[n].selected = !0,
                a && (e[n].defaultSelected = !0);
                return
            }
            t !== null || e[n].disabled || (t = e[n])
        }
        t !== null && (t.selected = !0)
    }
}
function Kp(e, t) {
    if (t.dangerouslySetInnerHTML != null)
        throw Error(Ne(91));
    return rr({}, t, {
        value: void 0,
        defaultValue: void 0,
        children: "" + e._wrapperState.initialValue
    })
}
function w0(e, t) {
    var r = t.value;
    if (r == null) {
        if (r = t.children,
        t = t.defaultValue,
        r != null) {
            if (t != null)
                throw Error(Ne(92));
            if (ju(r)) {
                if (1 < r.length)
                    throw Error(Ne(93));
                r = r[0]
            }
            t = r
        }
        t == null && (t = ""),
        r = t
    }
    e._wrapperState = {
        initialValue: Mo(r)
    }
}
function v5(e, t) {
    var r = Mo(t.value)
      , a = Mo(t.defaultValue);
    r != null && (r = "" + r,
    r !== e.value && (e.value = r),
    t.defaultValue == null && e.defaultValue !== r && (e.defaultValue = r)),
    a != null && (e.defaultValue = "" + a)
}
function g0(e) {
    var t = e.textContent;
    t === e._wrapperState.initialValue && t !== "" && t !== null && (e.value = t)
}
function h5(e) {
    switch (e) {
    case "svg":
        return "http://www.w3.org/2000/svg";
    case "math":
        return "http://www.w3.org/1998/Math/MathML";
    default:
        return "http://www.w3.org/1999/xhtml"
    }
}
function Qp(e, t) {
    return e == null || e === "http://www.w3.org/1999/xhtml" ? h5(t) : e === "http://www.w3.org/2000/svg" && t === "foreignObject" ? "http://www.w3.org/1999/xhtml" : e
}
var Sd, m5 = function(e) {
    return typeof MSApp < "u" && MSApp.execUnsafeLocalFunction ? function(t, r, a, n) {
        MSApp.execUnsafeLocalFunction(function() {
            return e(t, r, a, n)
        })
    }
    : e
}(function(e, t) {
    if (e.namespaceURI !== "http://www.w3.org/2000/svg" || "innerHTML"in e)
        e.innerHTML = t;
    else {
        for (Sd = Sd || document.createElement("div"),
        Sd.innerHTML = "<svg>" + t.valueOf().toString() + "</svg>",
        t = Sd.firstChild; e.firstChild; )
            e.removeChild(e.firstChild);
        for (; t.firstChild; )
            e.appendChild(t.firstChild)
    }
});
function hc(e, t) {
    if (t) {
        var r = e.firstChild;
        if (r && r === e.lastChild && r.nodeType === 3) {
            r.nodeValue = t;
            return
        }
    }
    e.textContent = t
}
var ec = {
    animationIterationCount: !0,
    aspectRatio: !0,
    borderImageOutset: !0,
    borderImageSlice: !0,
    borderImageWidth: !0,
    boxFlex: !0,
    boxFlexGroup: !0,
    boxOrdinalGroup: !0,
    columnCount: !0,
    columns: !0,
    flex: !0,
    flexGrow: !0,
    flexPositive: !0,
    flexShrink: !0,
    flexNegative: !0,
    flexOrder: !0,
    gridArea: !0,
    gridRow: !0,
    gridRowEnd: !0,
    gridRowSpan: !0,
    gridRowStart: !0,
    gridColumn: !0,
    gridColumnEnd: !0,
    gridColumnSpan: !0,
    gridColumnStart: !0,
    fontWeight: !0,
    lineClamp: !0,
    lineHeight: !0,
    opacity: !0,
    order: !0,
    orphans: !0,
    tabSize: !0,
    widows: !0,
    zIndex: !0,
    zoom: !0,
    fillOpacity: !0,
    floodOpacity: !0,
    stopOpacity: !0,
    strokeDasharray: !0,
    strokeDashoffset: !0,
    strokeMiterlimit: !0,
    strokeOpacity: !0,
    strokeWidth: !0
}
  , JN = ["Webkit", "ms", "Moz", "O"];
Object.keys(ec).forEach(function(e) {
    JN.forEach(function(t) {
        t = t + e.charAt(0).toUpperCase() + e.substring(1),
        ec[t] = ec[e]
    })
});
function f5(e, t, r) {
    return t == null || typeof t == "boolean" || t === "" ? "" : r || typeof t != "number" || t === 0 || ec.hasOwnProperty(e) && ec[e] ? ("" + t).trim() : t + "px"
}
function p5(e, t) {
    e = e.style;
    for (var r in t)
        if (t.hasOwnProperty(r)) {
            var a = r.indexOf("--") === 0
              , n = f5(r, t[r], a);
            r === "float" && (r = "cssFloat"),
            a ? e.setProperty(r, n) : e[r] = n
        }
}
var KN = rr({
    menuitem: !0
}, {
    area: !0,
    base: !0,
    br: !0,
    col: !0,
    embed: !0,
    hr: !0,
    img: !0,
    input: !0,
    keygen: !0,
    link: !0,
    meta: !0,
    param: !0,
    source: !0,
    track: !0,
    wbr: !0
});
function Zp(e, t) {
    if (t) {
        if (KN[e] && (t.children != null || t.dangerouslySetInnerHTML != null))
            throw Error(Ne(137, e));
        if (t.dangerouslySetInnerHTML != null) {
            if (t.children != null)
                throw Error(Ne(60));
            if (typeof t.dangerouslySetInnerHTML != "object" || !("__html"in t.dangerouslySetInnerHTML))
                throw Error(Ne(61))
        }
        if (t.style != null && typeof t.style != "object")
            throw Error(Ne(62))
    }
}
function Xp(e, t) {
    if (e.indexOf("-") === -1)
        return typeof t.is == "string";
    switch (e) {
    case "annotation-xml":
    case "color-profile":
    case "font-face":
    case "font-face-src":
    case "font-face-uri":
    case "font-face-format":
    case "font-face-name":
    case "missing-glyph":
        return !1;
    default:
        return !0
    }
}
var ey = null;
function qw(e) {
    return e = e.target || e.srcElement || window,
    e.correspondingUseElement && (e = e.correspondingUseElement),
    e.nodeType === 3 ? e.parentNode : e
}
var ty = null
  , xl = null
  , Al = null;
function _0(e) {
    if (e = $c(e)) {
        if (typeof ty != "function")
            throw Error(Ne(280));
        var t = e.stateNode;
        t && (t = lm(t),
        ty(e.stateNode, e.type, t))
    }
}
function y5(e) {
    xl ? Al ? Al.push(e) : Al = [e] : xl = e
}
function w5() {
    if (xl) {
        var e = xl
          , t = Al;
        if (Al = xl = null,
        _0(e),
        t)
            for (e = 0; e < t.length; e++)
                _0(t[e])
    }
}
function g5(e, t) {
    return e(t)
}
function _5() {}
var Pf = !1;
function b5(e, t, r) {
    if (Pf)
        return e(t, r);
    Pf = !0;
    try {
        return g5(e, t, r)
    } finally {
        Pf = !1,
        (xl !== null || Al !== null) && (_5(),
        w5())
    }
}
function mc(e, t) {
    var r = e.stateNode;
    if (r === null)
        return null;
    var a = lm(r);
    if (a === null)
        return null;
    r = a[t];
    e: switch (t) {
    case "onClick":
    case "onClickCapture":
    case "onDoubleClick":
    case "onDoubleClickCapture":
    case "onMouseDown":
    case "onMouseDownCapture":
    case "onMouseMove":
    case "onMouseMoveCapture":
    case "onMouseUp":
    case "onMouseUpCapture":
    case "onMouseEnter":
        (a = !a.disabled) || (e = e.type,
        a = !(e === "button" || e === "input" || e === "select" || e === "textarea")),
        e = !a;
        break e;
    default:
        e = !1
    }
    if (e)
        return null;
    if (r && typeof r != "function")
        throw Error(Ne(231, t, typeof r));
    return r
}
var ry = !1;
if (Bi)
    try {
        var Tu = {};
        Object.defineProperty(Tu, "passive", {
            get: function() {
                ry = !0
            }
        }),
        window.addEventListener("test", Tu, Tu),
        window.removeEventListener("test", Tu, Tu)
    } catch {
        ry = !1
    }
function QN(e, t, r, a, n, i, o, s, l) {
    var u = Array.prototype.slice.call(arguments, 3);
    try {
        t.apply(r, u)
    } catch (c) {
        this.onError(c)
    }
}
var tc = !1
  , Vv = null
  , $v = !1
  , ay = null
  , ZN = {
    onError: function(e) {
        tc = !0,
        Vv = e
    }
};
function XN(e, t, r, a, n, i, o, s, l) {
    tc = !1,
    Vv = null,
    QN.apply(ZN, arguments)
}
function eM(e, t, r, a, n, i, o, s, l) {
    if (XN.apply(this, arguments),
    tc) {
        if (tc) {
            var u = Vv;
            tc = !1,
            Vv = null
        } else
            throw Error(Ne(198));
        $v || ($v = !0,
        ay = u)
    }
}
function xs(e) {
    var t = e
      , r = e;
    if (e.alternate)
        for (; t.return; )
            t = t.return;
    else {
        e = t;
        do
            t = e,
            t.flags & 4098 && (r = t.return),
            e = t.return;
        while (e)
    }
    return t.tag === 3 ? r : null
}
function C5(e) {
    if (e.tag === 13) {
        var t = e.memoizedState;
        if (t === null && (e = e.alternate,
        e !== null && (t = e.memoizedState)),
        t !== null)
            return t.dehydrated
    }
    return null
}
function b0(e) {
    if (xs(e) !== e)
        throw Error(Ne(188))
}
function tM(e) {
    var t = e.alternate;
    if (!t) {
        if (t = xs(e),
        t === null)
            throw Error(Ne(188));
        return t !== e ? null : e
    }
    for (var r = e, a = t; ; ) {
        var n = r.return;
        if (n === null)
            break;
        var i = n.alternate;
        if (i === null) {
            if (a = n.return,
            a !== null) {
                r = a;
                continue
            }
            break
        }
        if (n.child === i.child) {
            for (i = n.child; i; ) {
                if (i === r)
                    return b0(n),
                    e;
                if (i === a)
                    return b0(n),
                    t;
                i = i.sibling
            }
            throw Error(Ne(188))
        }
        if (r.return !== a.return)
            r = n,
            a = i;
        else {
            for (var o = !1, s = n.child; s; ) {
                if (s === r) {
                    o = !0,
                    r = n,
                    a = i;
                    break
                }
                if (s === a) {
                    o = !0,
                    a = n,
                    r = i;
                    break
                }
                s = s.sibling
            }
            if (!o) {
                for (s = i.child; s; ) {
                    if (s === r) {
                        o = !0,
                        r = i,
                        a = n;
                        break
                    }
                    if (s === a) {
                        o = !0,
                        a = i,
                        r = n;
                        break
                    }
                    s = s.sibling
                }
                if (!o)
                    throw Error(Ne(189))
            }
        }
        if (r.alternate !== a)
            throw Error(Ne(190))
    }
    if (r.tag !== 3)
        throw Error(Ne(188));
    return r.stateNode.current === r ? e : t
}
function S5(e) {
    return e = tM(e),
    e !== null ? x5(e) : null
}
function x5(e) {
    if (e.tag === 5 || e.tag === 6)
        return e;
    for (e = e.child; e !== null; ) {
        var t = x5(e);
        if (t !== null)
            return t;
        e = e.sibling
    }
    return null
}
var A5 = $a.unstable_scheduleCallback
  , C0 = $a.unstable_cancelCallback
  , rM = $a.unstable_shouldYield
  , aM = $a.unstable_requestPaint
  , ur = $a.unstable_now
  , nM = $a.unstable_getCurrentPriorityLevel
  , Vw = $a.unstable_ImmediatePriority
  , E5 = $a.unstable_UserBlockingPriority
  , zv = $a.unstable_NormalPriority
  , iM = $a.unstable_LowPriority
  , k5 = $a.unstable_IdlePriority
  , nm = null
  , si = null;
function oM(e) {
    if (si && typeof si.onCommitFiberRoot == "function")
        try {
            si.onCommitFiberRoot(nm, e, void 0, (e.current.flags & 128) === 128)
        } catch {}
}
var Pn = Math.clz32 ? Math.clz32 : uM
  , sM = Math.log
  , lM = Math.LN2;
function uM(e) {
    return e >>>= 0,
    e === 0 ? 32 : 31 - (sM(e) / lM | 0) | 0
}
var xd = 64
  , Ad = 4194304;
function Hu(e) {
    switch (e & -e) {
    case 1:
        return 1;
    case 2:
        return 2;
    case 4:
        return 4;
    case 8:
        return 8;
    case 16:
        return 16;
    case 32:
        return 32;
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
        return e & 4194240;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
    case 67108864:
        return e & 130023424;
    case 134217728:
        return 134217728;
    case 268435456:
        return 268435456;
    case 536870912:
        return 536870912;
    case 1073741824:
        return 1073741824;
    default:
        return e
    }
}
function Gv(e, t) {
    var r = e.pendingLanes;
    if (r === 0)
        return 0;
    var a = 0
      , n = e.suspendedLanes
      , i = e.pingedLanes
      , o = r & 268435455;
    if (o !== 0) {
        var s = o & ~n;
        s !== 0 ? a = Hu(s) : (i &= o,
        i !== 0 && (a = Hu(i)))
    } else
        o = r & ~n,
        o !== 0 ? a = Hu(o) : i !== 0 && (a = Hu(i));
    if (a === 0)
        return 0;
    if (t !== 0 && t !== a && !(t & n) && (n = a & -a,
    i = t & -t,
    n >= i || n === 16 && (i & 4194240) !== 0))
        return t;
    if (a & 4 && (a |= r & 16),
    t = e.entangledLanes,
    t !== 0)
        for (e = e.entanglements,
        t &= a; 0 < t; )
            r = 31 - Pn(t),
            n = 1 << r,
            a |= e[r],
            t &= ~n;
    return a
}
function cM(e, t) {
    switch (e) {
    case 1:
    case 2:
    case 4:
        return t + 250;
    case 8:
    case 16:
    case 32:
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
        return t + 5e3;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
    case 67108864:
        return -1;
    case 134217728:
    case 268435456:
    case 536870912:
    case 1073741824:
        return -1;
    default:
        return -1
    }
}
function dM(e, t) {
    for (var r = e.suspendedLanes, a = e.pingedLanes, n = e.expirationTimes, i = e.pendingLanes; 0 < i; ) {
        var o = 31 - Pn(i)
          , s = 1 << o
          , l = n[o];
        l === -1 ? (!(s & r) || s & a) && (n[o] = cM(s, t)) : l <= t && (e.expiredLanes |= s),
        i &= ~s
    }
}
function ny(e) {
    return e = e.pendingLanes & -1073741825,
    e !== 0 ? e : e & 1073741824 ? 1073741824 : 0
}
function T5() {
    var e = xd;
    return xd <<= 1,
    !(xd & 4194240) && (xd = 64),
    e
}
function Bf(e) {
    for (var t = [], r = 0; 31 > r; r++)
        t.push(e);
    return t
}
function qc(e, t, r) {
    e.pendingLanes |= t,
    t !== 536870912 && (e.suspendedLanes = 0,
    e.pingedLanes = 0),
    e = e.eventTimes,
    t = 31 - Pn(t),
    e[t] = r
}
function vM(e, t) {
    var r = e.pendingLanes & ~t;
    e.pendingLanes = t,
    e.suspendedLanes = 0,
    e.pingedLanes = 0,
    e.expiredLanes &= t,
    e.mutableReadLanes &= t,
    e.entangledLanes &= t,
    t = e.entanglements;
    var a = e.eventTimes;
    for (e = e.expirationTimes; 0 < r; ) {
        var n = 31 - Pn(r)
          , i = 1 << n;
        t[n] = 0,
        a[n] = -1,
        e[n] = -1,
        r &= ~i
    }
}
function $w(e, t) {
    var r = e.entangledLanes |= t;
    for (e = e.entanglements; r; ) {
        var a = 31 - Pn(r)
          , n = 1 << a;
        n & t | e[a] & t && (e[a] |= t),
        r &= ~n
    }
}
var Rt = 0;
function N5(e) {
    return e &= -e,
    1 < e ? 4 < e ? e & 268435455 ? 16 : 536870912 : 4 : 1
}
var M5, zw, I5, D5, U5, iy = !1, Ed = [], bo = null, Co = null, So = null, fc = new Map, pc = new Map, co = [], hM = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");
function S0(e, t) {
    switch (e) {
    case "focusin":
    case "focusout":
        bo = null;
        break;
    case "dragenter":
    case "dragleave":
        Co = null;
        break;
    case "mouseover":
    case "mouseout":
        So = null;
        break;
    case "pointerover":
    case "pointerout":
        fc.delete(t.pointerId);
        break;
    case "gotpointercapture":
    case "lostpointercapture":
        pc.delete(t.pointerId)
    }
}
function Nu(e, t, r, a, n, i) {
    return e === null || e.nativeEvent !== i ? (e = {
        blockedOn: t,
        domEventName: r,
        eventSystemFlags: a,
        nativeEvent: i,
        targetContainers: [n]
    },
    t !== null && (t = $c(t),
    t !== null && zw(t)),
    e) : (e.eventSystemFlags |= a,
    t = e.targetContainers,
    n !== null && t.indexOf(n) === -1 && t.push(n),
    e)
}
function mM(e, t, r, a, n) {
    switch (t) {
    case "focusin":
        return bo = Nu(bo, e, t, r, a, n),
        !0;
    case "dragenter":
        return Co = Nu(Co, e, t, r, a, n),
        !0;
    case "mouseover":
        return So = Nu(So, e, t, r, a, n),
        !0;
    case "pointerover":
        var i = n.pointerId;
        return fc.set(i, Nu(fc.get(i) || null, e, t, r, a, n)),
        !0;
    case "gotpointercapture":
        return i = n.pointerId,
        pc.set(i, Nu(pc.get(i) || null, e, t, r, a, n)),
        !0
    }
    return !1
}
function F5(e) {
    var t = os(e.target);
    if (t !== null) {
        var r = xs(t);
        if (r !== null) {
            if (t = r.tag,
            t === 13) {
                if (t = C5(r),
                t !== null) {
                    e.blockedOn = t,
                    U5(e.priority, function() {
                        I5(r)
                    });
                    return
                }
            } else if (t === 3 && r.stateNode.current.memoizedState.isDehydrated) {
                e.blockedOn = r.tag === 3 ? r.stateNode.containerInfo : null;
                return
            }
        }
    }
    e.blockedOn = null
}
function bv(e) {
    if (e.blockedOn !== null)
        return !1;
    for (var t = e.targetContainers; 0 < t.length; ) {
        var r = oy(e.domEventName, e.eventSystemFlags, t[0], e.nativeEvent);
        if (r === null) {
            r = e.nativeEvent;
            var a = new r.constructor(r.type,r);
            ey = a,
            r.target.dispatchEvent(a),
            ey = null
        } else
            return t = $c(r),
            t !== null && zw(t),
            e.blockedOn = r,
            !1;
        t.shift()
    }
    return !0
}
function x0(e, t, r) {
    bv(e) && r.delete(t)
}
function fM() {
    iy = !1,
    bo !== null && bv(bo) && (bo = null),
    Co !== null && bv(Co) && (Co = null),
    So !== null && bv(So) && (So = null),
    fc.forEach(x0),
    pc.forEach(x0)
}
function Mu(e, t) {
    e.blockedOn === t && (e.blockedOn = null,
    iy || (iy = !0,
    $a.unstable_scheduleCallback($a.unstable_NormalPriority, fM)))
}
function yc(e) {
    function t(n) {
        return Mu(n, e)
    }
    if (0 < Ed.length) {
        Mu(Ed[0], e);
        for (var r = 1; r < Ed.length; r++) {
            var a = Ed[r];
            a.blockedOn === e && (a.blockedOn = null)
        }
    }
    for (bo !== null && Mu(bo, e),
    Co !== null && Mu(Co, e),
    So !== null && Mu(So, e),
    fc.forEach(t),
    pc.forEach(t),
    r = 0; r < co.length; r++)
        a = co[r],
        a.blockedOn === e && (a.blockedOn = null);
    for (; 0 < co.length && (r = co[0],
    r.blockedOn === null); )
        F5(r),
        r.blockedOn === null && co.shift()
}
var El = ji.ReactCurrentBatchConfig
  , jv = !0;
function pM(e, t, r, a) {
    var n = Rt
      , i = El.transition;
    El.transition = null;
    try {
        Rt = 1,
        Gw(e, t, r, a)
    } finally {
        Rt = n,
        El.transition = i
    }
}
function yM(e, t, r, a) {
    var n = Rt
      , i = El.transition;
    El.transition = null;
    try {
        Rt = 4,
        Gw(e, t, r, a)
    } finally {
        Rt = n,
        El.transition = i
    }
}
function Gw(e, t, r, a) {
    if (jv) {
        var n = oy(e, t, r, a);
        if (n === null)
            Wf(e, t, a, Hv, r),
            S0(e, a);
        else if (mM(n, e, t, r, a))
            a.stopPropagation();
        else if (S0(e, a),
        t & 4 && -1 < hM.indexOf(e)) {
            for (; n !== null; ) {
                var i = $c(n);
                if (i !== null && M5(i),
                i = oy(e, t, r, a),
                i === null && Wf(e, t, a, Hv, r),
                i === n)
                    break;
                n = i
            }
            n !== null && a.stopPropagation()
        } else
            Wf(e, t, a, null, r)
    }
}
var Hv = null;
function oy(e, t, r, a) {
    if (Hv = null,
    e = qw(a),
    e = os(e),
    e !== null)
        if (t = xs(e),
        t === null)
            e = null;
        else if (r = t.tag,
        r === 13) {
            if (e = C5(t),
            e !== null)
                return e;
            e = null
        } else if (r === 3) {
            if (t.stateNode.current.memoizedState.isDehydrated)
                return t.tag === 3 ? t.stateNode.containerInfo : null;
            e = null
        } else
            t !== e && (e = null);
    return Hv = e,
    null
}
function O5(e) {
    switch (e) {
    case "cancel":
    case "click":
    case "close":
    case "contextmenu":
    case "copy":
    case "cut":
    case "auxclick":
    case "dblclick":
    case "dragend":
    case "dragstart":
    case "drop":
    case "focusin":
    case "focusout":
    case "input":
    case "invalid":
    case "keydown":
    case "keypress":
    case "keyup":
    case "mousedown":
    case "mouseup":
    case "paste":
    case "pause":
    case "play":
    case "pointercancel":
    case "pointerdown":
    case "pointerup":
    case "ratechange":
    case "reset":
    case "resize":
    case "seeked":
    case "submit":
    case "touchcancel":
    case "touchend":
    case "touchstart":
    case "volumechange":
    case "change":
    case "selectionchange":
    case "textInput":
    case "compositionstart":
    case "compositionend":
    case "compositionupdate":
    case "beforeblur":
    case "afterblur":
    case "beforeinput":
    case "blur":
    case "fullscreenchange":
    case "focus":
    case "hashchange":
    case "popstate":
    case "select":
    case "selectstart":
        return 1;
    case "drag":
    case "dragenter":
    case "dragexit":
    case "dragleave":
    case "dragover":
    case "mousemove":
    case "mouseout":
    case "mouseover":
    case "pointermove":
    case "pointerout":
    case "pointerover":
    case "scroll":
    case "toggle":
    case "touchmove":
    case "wheel":
    case "mouseenter":
    case "mouseleave":
    case "pointerenter":
    case "pointerleave":
        return 4;
    case "message":
        switch (nM()) {
        case Vw:
            return 1;
        case E5:
            return 4;
        case zv:
        case iM:
            return 16;
        case k5:
            return 536870912;
        default:
            return 16
        }
    default:
        return 16
    }
}
var mo = null
  , jw = null
  , Cv = null;
function P5() {
    if (Cv)
        return Cv;
    var e, t = jw, r = t.length, a, n = "value"in mo ? mo.value : mo.textContent, i = n.length;
    for (e = 0; e < r && t[e] === n[e]; e++)
        ;
    var o = r - e;
    for (a = 1; a <= o && t[r - a] === n[i - a]; a++)
        ;
    return Cv = n.slice(e, 1 < a ? 1 - a : void 0)
}
function Sv(e) {
    var t = e.keyCode;
    return "charCode"in e ? (e = e.charCode,
    e === 0 && t === 13 && (e = 13)) : e = t,
    e === 10 && (e = 13),
    32 <= e || e === 13 ? e : 0
}
function kd() {
    return !0
}
function A0() {
    return !1
}
function Wa(e) {
    function t(r, a, n, i, o) {
        this._reactName = r,
        this._targetInst = n,
        this.type = a,
        this.nativeEvent = i,
        this.target = o,
        this.currentTarget = null;
        for (var s in e)
            e.hasOwnProperty(s) && (r = e[s],
            this[s] = r ? r(i) : i[s]);
        return this.isDefaultPrevented = (i.defaultPrevented != null ? i.defaultPrevented : i.returnValue === !1) ? kd : A0,
        this.isPropagationStopped = A0,
        this
    }
    return rr(t.prototype, {
        preventDefault: function() {
            this.defaultPrevented = !0;
            var r = this.nativeEvent;
            r && (r.preventDefault ? r.preventDefault() : typeof r.returnValue != "unknown" && (r.returnValue = !1),
            this.isDefaultPrevented = kd)
        },
        stopPropagation: function() {
            var r = this.nativeEvent;
            r && (r.stopPropagation ? r.stopPropagation() : typeof r.cancelBubble != "unknown" && (r.cancelBubble = !0),
            this.isPropagationStopped = kd)
        },
        persist: function() {},
        isPersistent: kd
    }),
    t
}
var tu = {
    eventPhase: 0,
    bubbles: 0,
    cancelable: 0,
    timeStamp: function(e) {
        return e.timeStamp || Date.now()
    },
    defaultPrevented: 0,
    isTrusted: 0
}, Hw = Wa(tu), Vc = rr({}, tu, {
    view: 0,
    detail: 0
}), wM = Wa(Vc), Rf, Lf, Iu, im = rr({}, Vc, {
    screenX: 0,
    screenY: 0,
    clientX: 0,
    clientY: 0,
    pageX: 0,
    pageY: 0,
    ctrlKey: 0,
    shiftKey: 0,
    altKey: 0,
    metaKey: 0,
    getModifierState: Ww,
    button: 0,
    buttons: 0,
    relatedTarget: function(e) {
        return e.relatedTarget === void 0 ? e.fromElement === e.srcElement ? e.toElement : e.fromElement : e.relatedTarget
    },
    movementX: function(e) {
        return "movementX"in e ? e.movementX : (e !== Iu && (Iu && e.type === "mousemove" ? (Rf = e.screenX - Iu.screenX,
        Lf = e.screenY - Iu.screenY) : Lf = Rf = 0,
        Iu = e),
        Rf)
    },
    movementY: function(e) {
        return "movementY"in e ? e.movementY : Lf
    }
}), E0 = Wa(im), gM = rr({}, im, {
    dataTransfer: 0
}), _M = Wa(gM), bM = rr({}, Vc, {
    relatedTarget: 0
}), qf = Wa(bM), CM = rr({}, tu, {
    animationName: 0,
    elapsedTime: 0,
    pseudoElement: 0
}), SM = Wa(CM), xM = rr({}, tu, {
    clipboardData: function(e) {
        return "clipboardData"in e ? e.clipboardData : window.clipboardData
    }
}), AM = Wa(xM), EM = rr({}, tu, {
    data: 0
}), k0 = Wa(EM), kM = {
    Esc: "Escape",
    Spacebar: " ",
    Left: "ArrowLeft",
    Up: "ArrowUp",
    Right: "ArrowRight",
    Down: "ArrowDown",
    Del: "Delete",
    Win: "OS",
    Menu: "ContextMenu",
    Apps: "ContextMenu",
    Scroll: "ScrollLock",
    MozPrintableKey: "Unidentified"
}, TM = {
    8: "Backspace",
    9: "Tab",
    12: "Clear",
    13: "Enter",
    16: "Shift",
    17: "Control",
    18: "Alt",
    19: "Pause",
    20: "CapsLock",
    27: "Escape",
    32: " ",
    33: "PageUp",
    34: "PageDown",
    35: "End",
    36: "Home",
    37: "ArrowLeft",
    38: "ArrowUp",
    39: "ArrowRight",
    40: "ArrowDown",
    45: "Insert",
    46: "Delete",
    112: "F1",
    113: "F2",
    114: "F3",
    115: "F4",
    116: "F5",
    117: "F6",
    118: "F7",
    119: "F8",
    120: "F9",
    121: "F10",
    122: "F11",
    123: "F12",
    144: "NumLock",
    145: "ScrollLock",
    224: "Meta"
}, NM = {
    Alt: "altKey",
    Control: "ctrlKey",
    Meta: "metaKey",
    Shift: "shiftKey"
};
function MM(e) {
    var t = this.nativeEvent;
    return t.getModifierState ? t.getModifierState(e) : (e = NM[e]) ? !!t[e] : !1
}
function Ww() {
    return MM
}
var IM = rr({}, Vc, {
    key: function(e) {
        if (e.key) {
            var t = kM[e.key] || e.key;
            if (t !== "Unidentified")
                return t
        }
        return e.type === "keypress" ? (e = Sv(e),
        e === 13 ? "Enter" : String.fromCharCode(e)) : e.type === "keydown" || e.type === "keyup" ? TM[e.keyCode] || "Unidentified" : ""
    },
    code: 0,
    location: 0,
    ctrlKey: 0,
    shiftKey: 0,
    altKey: 0,
    metaKey: 0,
    repeat: 0,
    locale: 0,
    getModifierState: Ww,
    charCode: function(e) {
        return e.type === "keypress" ? Sv(e) : 0
    },
    keyCode: function(e) {
        return e.type === "keydown" || e.type === "keyup" ? e.keyCode : 0
    },
    which: function(e) {
        return e.type === "keypress" ? Sv(e) : e.type === "keydown" || e.type === "keyup" ? e.keyCode : 0
    }
})
  , DM = Wa(IM)
  , UM = rr({}, im, {
    pointerId: 0,
    width: 0,
    height: 0,
    pressure: 0,
    tangentialPressure: 0,
    tiltX: 0,
    tiltY: 0,
    twist: 0,
    pointerType: 0,
    isPrimary: 0
})
  , T0 = Wa(UM)
  , FM = rr({}, Vc, {
    touches: 0,
    targetTouches: 0,
    changedTouches: 0,
    altKey: 0,
    metaKey: 0,
    ctrlKey: 0,
    shiftKey: 0,
    getModifierState: Ww
})
  , OM = Wa(FM)
  , PM = rr({}, tu, {
    propertyName: 0,
    elapsedTime: 0,
    pseudoElement: 0
})
  , BM = Wa(PM)
  , RM = rr({}, im, {
    deltaX: function(e) {
        return "deltaX"in e ? e.deltaX : "wheelDeltaX"in e ? -e.wheelDeltaX : 0
    },
    deltaY: function(e) {
        return "deltaY"in e ? e.deltaY : "wheelDeltaY"in e ? -e.wheelDeltaY : "wheelDelta"in e ? -e.wheelDelta : 0
    },
    deltaZ: 0,
    deltaMode: 0
})
  , LM = Wa(RM)
  , qM = [9, 13, 27, 32]
  , Yw = Bi && "CompositionEvent"in window
  , rc = null;
Bi && "documentMode"in document && (rc = document.documentMode);
var VM = Bi && "TextEvent"in window && !rc
  , B5 = Bi && (!Yw || rc && 8 < rc && 11 >= rc)
  , N0 = String.fromCharCode(32)
  , M0 = !1;
function R5(e, t) {
    switch (e) {
    case "keyup":
        return qM.indexOf(t.keyCode) !== -1;
    case "keydown":
        return t.keyCode !== 229;
    case "keypress":
    case "mousedown":
    case "focusout":
        return !0;
    default:
        return !1
    }
}
function L5(e) {
    return e = e.detail,
    typeof e == "object" && "data"in e ? e.data : null
}
var ol = !1;
function $M(e, t) {
    switch (e) {
    case "compositionend":
        return L5(t);
    case "keypress":
        return t.which !== 32 ? null : (M0 = !0,
        N0);
    case "textInput":
        return e = t.data,
        e === N0 && M0 ? null : e;
    default:
        return null
    }
}
function zM(e, t) {
    if (ol)
        return e === "compositionend" || !Yw && R5(e, t) ? (e = P5(),
        Cv = jw = mo = null,
        ol = !1,
        e) : null;
    switch (e) {
    case "paste":
        return null;
    case "keypress":
        if (!(t.ctrlKey || t.altKey || t.metaKey) || t.ctrlKey && t.altKey) {
            if (t.char && 1 < t.char.length)
                return t.char;
            if (t.which)
                return String.fromCharCode(t.which)
        }
        return null;
    case "compositionend":
        return B5 && t.locale !== "ko" ? null : t.data;
    default:
        return null
    }
}
var GM = {
    color: !0,
    date: !0,
    datetime: !0,
    "datetime-local": !0,
    email: !0,
    month: !0,
    number: !0,
    password: !0,
    range: !0,
    search: !0,
    tel: !0,
    text: !0,
    time: !0,
    url: !0,
    week: !0
};
function I0(e) {
    var t = e && e.nodeName && e.nodeName.toLowerCase();
    return t === "input" ? !!GM[e.type] : t === "textarea"
}
function q5(e, t, r, a) {
    y5(a),
    t = Wv(t, "onChange"),
    0 < t.length && (r = new Hw("onChange","change",null,r,a),
    e.push({
        event: r,
        listeners: t
    }))
}
var ac = null
  , wc = null;
function jM(e) {
    Q5(e, 0)
}
function om(e) {
    var t = ul(e);
    if (c5(t))
        return e
}
function HM(e, t) {
    if (e === "change")
        return t
}
var V5 = !1;
if (Bi) {
    var Vf;
    if (Bi) {
        var $f = "oninput"in document;
        if (!$f) {
            var D0 = document.createElement("div");
            D0.setAttribute("oninput", "return;"),
            $f = typeof D0.oninput == "function"
        }
        Vf = $f
    } else
        Vf = !1;
    V5 = Vf && (!document.documentMode || 9 < document.documentMode)
}
function U0() {
    ac && (ac.detachEvent("onpropertychange", $5),
    wc = ac = null)
}
function $5(e) {
    if (e.propertyName === "value" && om(wc)) {
        var t = [];
        q5(t, wc, e, qw(e)),
        b5(jM, t)
    }
}
function WM(e, t, r) {
    e === "focusin" ? (U0(),
    ac = t,
    wc = r,
    ac.attachEvent("onpropertychange", $5)) : e === "focusout" && U0()
}
function YM(e) {
    if (e === "selectionchange" || e === "keyup" || e === "keydown")
        return om(wc)
}
function JM(e, t) {
    if (e === "click")
        return om(t)
}
function KM(e, t) {
    if (e === "input" || e === "change")
        return om(t)
}
function QM(e, t) {
    return e === t && (e !== 0 || 1 / e === 1 / t) || e !== e && t !== t
}
var Vn = typeof Object.is == "function" ? Object.is : QM;
function gc(e, t) {
    if (Vn(e, t))
        return !0;
    if (typeof e != "object" || e === null || typeof t != "object" || t === null)
        return !1;
    var r = Object.keys(e)
      , a = Object.keys(t);
    if (r.length !== a.length)
        return !1;
    for (a = 0; a < r.length; a++) {
        var n = r[a];
        if (!$p.call(t, n) || !Vn(e[n], t[n]))
            return !1
    }
    return !0
}
function F0(e) {
    for (; e && e.firstChild; )
        e = e.firstChild;
    return e
}
function O0(e, t) {
    var r = F0(e);
    e = 0;
    for (var a; r; ) {
        if (r.nodeType === 3) {
            if (a = e + r.textContent.length,
            e <= t && a >= t)
                return {
                    node: r,
                    offset: t - e
                };
            e = a
        }
        e: {
            for (; r; ) {
                if (r.nextSibling) {
                    r = r.nextSibling;
                    break e
                }
                r = r.parentNode
            }
            r = void 0
        }
        r = F0(r)
    }
}
function z5(e, t) {
    return e && t ? e === t ? !0 : e && e.nodeType === 3 ? !1 : t && t.nodeType === 3 ? z5(e, t.parentNode) : "contains"in e ? e.contains(t) : e.compareDocumentPosition ? !!(e.compareDocumentPosition(t) & 16) : !1 : !1
}
function G5() {
    for (var e = window, t = qv(); t instanceof e.HTMLIFrameElement; ) {
        try {
            var r = typeof t.contentWindow.location.href == "string"
        } catch {
            r = !1
        }
        if (r)
            e = t.contentWindow;
        else
            break;
        t = qv(e.document)
    }
    return t
}
function Jw(e) {
    var t = e && e.nodeName && e.nodeName.toLowerCase();
    return t && (t === "input" && (e.type === "text" || e.type === "search" || e.type === "tel" || e.type === "url" || e.type === "password") || t === "textarea" || e.contentEditable === "true")
}
function ZM(e) {
    var t = G5()
      , r = e.focusedElem
      , a = e.selectionRange;
    if (t !== r && r && r.ownerDocument && z5(r.ownerDocument.documentElement, r)) {
        if (a !== null && Jw(r)) {
            if (t = a.start,
            e = a.end,
            e === void 0 && (e = t),
            "selectionStart"in r)
                r.selectionStart = t,
                r.selectionEnd = Math.min(e, r.value.length);
            else if (e = (t = r.ownerDocument || document) && t.defaultView || window,
            e.getSelection) {
                e = e.getSelection();
                var n = r.textContent.length
                  , i = Math.min(a.start, n);
                a = a.end === void 0 ? i : Math.min(a.end, n),
                !e.extend && i > a && (n = a,
                a = i,
                i = n),
                n = O0(r, i);
                var o = O0(r, a);
                n && o && (e.rangeCount !== 1 || e.anchorNode !== n.node || e.anchorOffset !== n.offset || e.focusNode !== o.node || e.focusOffset !== o.offset) && (t = t.createRange(),
                t.setStart(n.node, n.offset),
                e.removeAllRanges(),
                i > a ? (e.addRange(t),
                e.extend(o.node, o.offset)) : (t.setEnd(o.node, o.offset),
                e.addRange(t)))
            }
        }
        for (t = [],
        e = r; e = e.parentNode; )
            e.nodeType === 1 && t.push({
                element: e,
                left: e.scrollLeft,
                top: e.scrollTop
            });
        for (typeof r.focus == "function" && r.focus(),
        r = 0; r < t.length; r++)
            e = t[r],
            e.element.scrollLeft = e.left,
            e.element.scrollTop = e.top
    }
}
var XM = Bi && "documentMode"in document && 11 >= document.documentMode
  , sl = null
  , sy = null
  , nc = null
  , ly = !1;
function P0(e, t, r) {
    var a = r.window === r ? r.document : r.nodeType === 9 ? r : r.ownerDocument;
    ly || sl == null || sl !== qv(a) || (a = sl,
    "selectionStart"in a && Jw(a) ? a = {
        start: a.selectionStart,
        end: a.selectionEnd
    } : (a = (a.ownerDocument && a.ownerDocument.defaultView || window).getSelection(),
    a = {
        anchorNode: a.anchorNode,
        anchorOffset: a.anchorOffset,
        focusNode: a.focusNode,
        focusOffset: a.focusOffset
    }),
    nc && gc(nc, a) || (nc = a,
    a = Wv(sy, "onSelect"),
    0 < a.length && (t = new Hw("onSelect","select",null,t,r),
    e.push({
        event: t,
        listeners: a
    }),
    t.target = sl)))
}
function Td(e, t) {
    var r = {};
    return r[e.toLowerCase()] = t.toLowerCase(),
    r["Webkit" + e] = "webkit" + t,
    r["Moz" + e] = "moz" + t,
    r
}
var ll = {
    animationend: Td("Animation", "AnimationEnd"),
    animationiteration: Td("Animation", "AnimationIteration"),
    animationstart: Td("Animation", "AnimationStart"),
    transitionend: Td("Transition", "TransitionEnd")
}
  , zf = {}
  , j5 = {};
Bi && (j5 = document.createElement("div").style,
"AnimationEvent"in window || (delete ll.animationend.animation,
delete ll.animationiteration.animation,
delete ll.animationstart.animation),
"TransitionEvent"in window || delete ll.transitionend.transition);
function sm(e) {
    if (zf[e])
        return zf[e];
    if (!ll[e])
        return e;
    var t = ll[e], r;
    for (r in t)
        if (t.hasOwnProperty(r) && r in j5)
            return zf[e] = t[r];
    return e
}
var H5 = sm("animationend")
  , W5 = sm("animationiteration")
  , Y5 = sm("animationstart")
  , J5 = sm("transitionend")
  , K5 = new Map
  , B0 = "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");
function Ro(e, t) {
    K5.set(e, t),
    Ss(t, [e])
}
for (var Gf = 0; Gf < B0.length; Gf++) {
    var jf = B0[Gf]
      , eI = jf.toLowerCase()
      , tI = jf[0].toUpperCase() + jf.slice(1);
    Ro(eI, "on" + tI)
}
Ro(H5, "onAnimationEnd");
Ro(W5, "onAnimationIteration");
Ro(Y5, "onAnimationStart");
Ro("dblclick", "onDoubleClick");
Ro("focusin", "onFocus");
Ro("focusout", "onBlur");
Ro(J5, "onTransitionEnd");
Ol("onMouseEnter", ["mouseout", "mouseover"]);
Ol("onMouseLeave", ["mouseout", "mouseover"]);
Ol("onPointerEnter", ["pointerout", "pointerover"]);
Ol("onPointerLeave", ["pointerout", "pointerover"]);
Ss("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" "));
Ss("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));
Ss("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]);
Ss("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" "));
Ss("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" "));
Ss("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
var Wu = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" ")
  , rI = new Set("cancel close invalid load scroll toggle".split(" ").concat(Wu));
function R0(e, t, r) {
    var a = e.type || "unknown-event";
    e.currentTarget = r,
    eM(a, t, void 0, e),
    e.currentTarget = null
}
function Q5(e, t) {
    t = (t & 4) !== 0;
    for (var r = 0; r < e.length; r++) {
        var a = e[r]
          , n = a.event;
        a = a.listeners;
        e: {
            var i = void 0;
            if (t)
                for (var o = a.length - 1; 0 <= o; o--) {
                    var s = a[o]
                      , l = s.instance
                      , u = s.currentTarget;
                    if (s = s.listener,
                    l !== i && n.isPropagationStopped())
                        break e;
                    R0(n, s, u),
                    i = l
                }
            else
                for (o = 0; o < a.length; o++) {
                    if (s = a[o],
                    l = s.instance,
                    u = s.currentTarget,
                    s = s.listener,
                    l !== i && n.isPropagationStopped())
                        break e;
                    R0(n, s, u),
                    i = l
                }
        }
    }
    if ($v)
        throw e = ay,
        $v = !1,
        ay = null,
        e
}
function Wt(e, t) {
    var r = t[hy];
    r === void 0 && (r = t[hy] = new Set);
    var a = e + "__bubble";
    r.has(a) || (Z5(t, e, 2, !1),
    r.add(a))
}
function Hf(e, t, r) {
    var a = 0;
    t && (a |= 4),
    Z5(r, e, a, t)
}
var Nd = "_reactListening" + Math.random().toString(36).slice(2);
function _c(e) {
    if (!e[Nd]) {
        e[Nd] = !0,
        i5.forEach(function(r) {
            r !== "selectionchange" && (rI.has(r) || Hf(r, !1, e),
            Hf(r, !0, e))
        });
        var t = e.nodeType === 9 ? e : e.ownerDocument;
        t === null || t[Nd] || (t[Nd] = !0,
        Hf("selectionchange", !1, t))
    }
}
function Z5(e, t, r, a) {
    switch (O5(t)) {
    case 1:
        var n = pM;
        break;
    case 4:
        n = yM;
        break;
    default:
        n = Gw
    }
    r = n.bind(null, t, r, e),
    n = void 0,
    !ry || t !== "touchstart" && t !== "touchmove" && t !== "wheel" || (n = !0),
    a ? n !== void 0 ? e.addEventListener(t, r, {
        capture: !0,
        passive: n
    }) : e.addEventListener(t, r, !0) : n !== void 0 ? e.addEventListener(t, r, {
        passive: n
    }) : e.addEventListener(t, r, !1)
}
function Wf(e, t, r, a, n) {
    var i = a;
    if (!(t & 1) && !(t & 2) && a !== null)
        e: for (; ; ) {
            if (a === null)
                return;
            var o = a.tag;
            if (o === 3 || o === 4) {
                var s = a.stateNode.containerInfo;
                if (s === n || s.nodeType === 8 && s.parentNode === n)
                    break;
                if (o === 4)
                    for (o = a.return; o !== null; ) {
                        var l = o.tag;
                        if ((l === 3 || l === 4) && (l = o.stateNode.containerInfo,
                        l === n || l.nodeType === 8 && l.parentNode === n))
                            return;
                        o = o.return
                    }
                for (; s !== null; ) {
                    if (o = os(s),
                    o === null)
                        return;
                    if (l = o.tag,
                    l === 5 || l === 6) {
                        a = i = o;
                        continue e
                    }
                    s = s.parentNode
                }
            }
            a = a.return
        }
    b5(function() {
        var u = i
          , c = qw(r)
          , d = [];
        e: {
            var v = K5.get(e);
            if (v !== void 0) {
                var h = Hw
                  , p = e;
                switch (e) {
                case "keypress":
                    if (Sv(r) === 0)
                        break e;
                case "keydown":
                case "keyup":
                    h = DM;
                    break;
                case "focusin":
                    p = "focus",
                    h = qf;
                    break;
                case "focusout":
                    p = "blur",
                    h = qf;
                    break;
                case "beforeblur":
                case "afterblur":
                    h = qf;
                    break;
                case "click":
                    if (r.button === 2)
                        break e;
                case "auxclick":
                case "dblclick":
                case "mousedown":
                case "mousemove":
                case "mouseup":
                case "mouseout":
                case "mouseover":
                case "contextmenu":
                    h = E0;
                    break;
                case "drag":
                case "dragend":
                case "dragenter":
                case "dragexit":
                case "dragleave":
                case "dragover":
                case "dragstart":
                case "drop":
                    h = _M;
                    break;
                case "touchcancel":
                case "touchend":
                case "touchmove":
                case "touchstart":
                    h = OM;
                    break;
                case H5:
                case W5:
                case Y5:
                    h = SM;
                    break;
                case J5:
                    h = BM;
                    break;
                case "scroll":
                    h = wM;
                    break;
                case "wheel":
                    h = LM;
                    break;
                case "copy":
                case "cut":
                case "paste":
                    h = AM;
                    break;
                case "gotpointercapture":
                case "lostpointercapture":
                case "pointercancel":
                case "pointerdown":
                case "pointermove":
                case "pointerout":
                case "pointerover":
                case "pointerup":
                    h = T0
                }
                var f = (t & 4) !== 0
                  , _ = !f && e === "scroll"
                  , y = f ? v !== null ? v + "Capture" : null : v;
                f = [];
                for (var g = u, m; g !== null; ) {
                    m = g;
                    var w = m.stateNode;
                    if (m.tag === 5 && w !== null && (m = w,
                    y !== null && (w = mc(g, y),
                    w != null && f.push(bc(g, w, m)))),
                    _)
                        break;
                    g = g.return
                }
                0 < f.length && (v = new h(v,p,null,r,c),
                d.push({
                    event: v,
                    listeners: f
                }))
            }
        }
        if (!(t & 7)) {
            e: {
                if (v = e === "mouseover" || e === "pointerover",
                h = e === "mouseout" || e === "pointerout",
                v && r !== ey && (p = r.relatedTarget || r.fromElement) && (os(p) || p[Ri]))
                    break e;
                if ((h || v) && (v = c.window === c ? c : (v = c.ownerDocument) ? v.defaultView || v.parentWindow : window,
                h ? (p = r.relatedTarget || r.toElement,
                h = u,
                p = p ? os(p) : null,
                p !== null && (_ = xs(p),
                p !== _ || p.tag !== 5 && p.tag !== 6) && (p = null)) : (h = null,
                p = u),
                h !== p)) {
                    if (f = E0,
                    w = "onMouseLeave",
                    y = "onMouseEnter",
                    g = "mouse",
                    (e === "pointerout" || e === "pointerover") && (f = T0,
                    w = "onPointerLeave",
                    y = "onPointerEnter",
                    g = "pointer"),
                    _ = h == null ? v : ul(h),
                    m = p == null ? v : ul(p),
                    v = new f(w,g + "leave",h,r,c),
                    v.target = _,
                    v.relatedTarget = m,
                    w = null,
                    os(c) === u && (f = new f(y,g + "enter",p,r,c),
                    f.target = m,
                    f.relatedTarget = _,
                    w = f),
                    _ = w,
                    h && p)
                        t: {
                            for (f = h,
                            y = p,
                            g = 0,
                            m = f; m; m = js(m))
                                g++;
                            for (m = 0,
                            w = y; w; w = js(w))
                                m++;
                            for (; 0 < g - m; )
                                f = js(f),
                                g--;
                            for (; 0 < m - g; )
                                y = js(y),
                                m--;
                            for (; g--; ) {
                                if (f === y || y !== null && f === y.alternate)
                                    break t;
                                f = js(f),
                                y = js(y)
                            }
                            f = null
                        }
                    else
                        f = null;
                    h !== null && L0(d, v, h, f, !1),
                    p !== null && _ !== null && L0(d, _, p, f, !0)
                }
            }
            e: {
                if (v = u ? ul(u) : window,
                h = v.nodeName && v.nodeName.toLowerCase(),
                h === "select" || h === "input" && v.type === "file")
                    var C = HM;
                else if (I0(v))
                    if (V5)
                        C = KM;
                    else {
                        C = YM;
                        var b = WM
                    }
                else
                    (h = v.nodeName) && h.toLowerCase() === "input" && (v.type === "checkbox" || v.type === "radio") && (C = JM);
                if (C && (C = C(e, u))) {
                    q5(d, C, r, c);
                    break e
                }
                b && b(e, v, u),
                e === "focusout" && (b = v._wrapperState) && b.controlled && v.type === "number" && Jp(v, "number", v.value)
            }
            switch (b = u ? ul(u) : window,
            e) {
            case "focusin":
                (I0(b) || b.contentEditable === "true") && (sl = b,
                sy = u,
                nc = null);
                break;
            case "focusout":
                nc = sy = sl = null;
                break;
            case "mousedown":
                ly = !0;
                break;
            case "contextmenu":
            case "mouseup":
            case "dragend":
                ly = !1,
                P0(d, r, c);
                break;
            case "selectionchange":
                if (XM)
                    break;
            case "keydown":
            case "keyup":
                P0(d, r, c)
            }
            var x;
            if (Yw)
                e: {
                    switch (e) {
                    case "compositionstart":
                        var E = "onCompositionStart";
                        break e;
                    case "compositionend":
                        E = "onCompositionEnd";
                        break e;
                    case "compositionupdate":
                        E = "onCompositionUpdate";
                        break e
                    }
                    E = void 0
                }
            else
                ol ? R5(e, r) && (E = "onCompositionEnd") : e === "keydown" && r.keyCode === 229 && (E = "onCompositionStart");
            E && (B5 && r.locale !== "ko" && (ol || E !== "onCompositionStart" ? E === "onCompositionEnd" && ol && (x = P5()) : (mo = c,
            jw = "value"in mo ? mo.value : mo.textContent,
            ol = !0)),
            b = Wv(u, E),
            0 < b.length && (E = new k0(E,e,null,r,c),
            d.push({
                event: E,
                listeners: b
            }),
            x ? E.data = x : (x = L5(r),
            x !== null && (E.data = x)))),
            (x = VM ? $M(e, r) : zM(e, r)) && (u = Wv(u, "onBeforeInput"),
            0 < u.length && (c = new k0("onBeforeInput","beforeinput",null,r,c),
            d.push({
                event: c,
                listeners: u
            }),
            c.data = x))
        }
        Q5(d, t)
    })
}
function bc(e, t, r) {
    return {
        instance: e,
        listener: t,
        currentTarget: r
    }
}
function Wv(e, t) {
    for (var r = t + "Capture", a = []; e !== null; ) {
        var n = e
          , i = n.stateNode;
        n.tag === 5 && i !== null && (n = i,
        i = mc(e, r),
        i != null && a.unshift(bc(e, i, n)),
        i = mc(e, t),
        i != null && a.push(bc(e, i, n))),
        e = e.return
    }
    return a
}
function js(e) {
    if (e === null)
        return null;
    do
        e = e.return;
    while (e && e.tag !== 5);
    return e || null
}
function L0(e, t, r, a, n) {
    for (var i = t._reactName, o = []; r !== null && r !== a; ) {
        var s = r
          , l = s.alternate
          , u = s.stateNode;
        if (l !== null && l === a)
            break;
        s.tag === 5 && u !== null && (s = u,
        n ? (l = mc(r, i),
        l != null && o.unshift(bc(r, l, s))) : n || (l = mc(r, i),
        l != null && o.push(bc(r, l, s)))),
        r = r.return
    }
    o.length !== 0 && e.push({
        event: t,
        listeners: o
    })
}
var aI = /\r\n?/g
  , nI = /\u0000|\uFFFD/g;
function q0(e) {
    return (typeof e == "string" ? e : "" + e).replace(aI, `
`).replace(nI, "")
}
function Md(e, t, r) {
    if (t = q0(t),
    q0(e) !== t && r)
        throw Error(Ne(425))
}
function Yv() {}
var uy = null
  , cy = null;
function dy(e, t) {
    return e === "textarea" || e === "noscript" || typeof t.children == "string" || typeof t.children == "number" || typeof t.dangerouslySetInnerHTML == "object" && t.dangerouslySetInnerHTML !== null && t.dangerouslySetInnerHTML.__html != null
}
var vy = typeof setTimeout == "function" ? setTimeout : void 0
  , iI = typeof clearTimeout == "function" ? clearTimeout : void 0
  , V0 = typeof Promise == "function" ? Promise : void 0
  , oI = typeof queueMicrotask == "function" ? queueMicrotask : typeof V0 < "u" ? function(e) {
    return V0.resolve(null).then(e).catch(sI)
}
: vy;
function sI(e) {
    setTimeout(function() {
        throw e
    })
}
function Yf(e, t) {
    var r = t
      , a = 0;
    do {
        var n = r.nextSibling;
        if (e.removeChild(r),
        n && n.nodeType === 8)
            if (r = n.data,
            r === "/$") {
                if (a === 0) {
                    e.removeChild(n),
                    yc(t);
                    return
                }
                a--
            } else
                r !== "$" && r !== "$?" && r !== "$!" || a++;
        r = n
    } while (r);
    yc(t)
}
function xo(e) {
    for (; e != null; e = e.nextSibling) {
        var t = e.nodeType;
        if (t === 1 || t === 3)
            break;
        if (t === 8) {
            if (t = e.data,
            t === "$" || t === "$!" || t === "$?")
                break;
            if (t === "/$")
                return null
        }
    }
    return e
}
function $0(e) {
    e = e.previousSibling;
    for (var t = 0; e; ) {
        if (e.nodeType === 8) {
            var r = e.data;
            if (r === "$" || r === "$!" || r === "$?") {
                if (t === 0)
                    return e;
                t--
            } else
                r === "/$" && t++
        }
        e = e.previousSibling
    }
    return null
}
var ru = Math.random().toString(36).slice(2)
  , ni = "__reactFiber$" + ru
  , Cc = "__reactProps$" + ru
  , Ri = "__reactContainer$" + ru
  , hy = "__reactEvents$" + ru
  , lI = "__reactListeners$" + ru
  , uI = "__reactHandles$" + ru;
function os(e) {
    var t = e[ni];
    if (t)
        return t;
    for (var r = e.parentNode; r; ) {
        if (t = r[Ri] || r[ni]) {
            if (r = t.alternate,
            t.child !== null || r !== null && r.child !== null)
                for (e = $0(e); e !== null; ) {
                    if (r = e[ni])
                        return r;
                    e = $0(e)
                }
            return t
        }
        e = r,
        r = e.parentNode
    }
    return null
}
function $c(e) {
    return e = e[ni] || e[Ri],
    !e || e.tag !== 5 && e.tag !== 6 && e.tag !== 13 && e.tag !== 3 ? null : e
}
function ul(e) {
    if (e.tag === 5 || e.tag === 6)
        return e.stateNode;
    throw Error(Ne(33))
}
function lm(e) {
    return e[Cc] || null
}
var my = []
  , cl = -1;
function Lo(e) {
    return {
        current: e
    }
}
function Jt(e) {
    0 > cl || (e.current = my[cl],
    my[cl] = null,
    cl--)
}
function jt(e, t) {
    cl++,
    my[cl] = e.current,
    e.current = t
}
var Io = {}
  , Qr = Lo(Io)
  , xa = Lo(!1)
  , ps = Io;
function Pl(e, t) {
    var r = e.type.contextTypes;
    if (!r)
        return Io;
    var a = e.stateNode;
    if (a && a.__reactInternalMemoizedUnmaskedChildContext === t)
        return a.__reactInternalMemoizedMaskedChildContext;
    var n = {}, i;
    for (i in r)
        n[i] = t[i];
    return a && (e = e.stateNode,
    e.__reactInternalMemoizedUnmaskedChildContext = t,
    e.__reactInternalMemoizedMaskedChildContext = n),
    n
}
function Aa(e) {
    return e = e.childContextTypes,
    e != null
}
function Jv() {
    Jt(xa),
    Jt(Qr)
}
function z0(e, t, r) {
    if (Qr.current !== Io)
        throw Error(Ne(168));
    jt(Qr, t),
    jt(xa, r)
}
function X5(e, t, r) {
    var a = e.stateNode;
    if (t = t.childContextTypes,
    typeof a.getChildContext != "function")
        return r;
    a = a.getChildContext();
    for (var n in a)
        if (!(n in t))
            throw Error(Ne(108, WN(e) || "Unknown", n));
    return rr({}, r, a)
}
function Kv(e) {
    return e = (e = e.stateNode) && e.__reactInternalMemoizedMergedChildContext || Io,
    ps = Qr.current,
    jt(Qr, e),
    jt(xa, xa.current),
    !0
}
function G0(e, t, r) {
    var a = e.stateNode;
    if (!a)
        throw Error(Ne(169));
    r ? (e = X5(e, t, ps),
    a.__reactInternalMemoizedMergedChildContext = e,
    Jt(xa),
    Jt(Qr),
    jt(Qr, e)) : Jt(xa),
    jt(xa, r)
}
var ki = null
  , um = !1
  , Jf = !1;
function e9(e) {
    ki === null ? ki = [e] : ki.push(e)
}
function cI(e) {
    um = !0,
    e9(e)
}
function qo() {
    if (!Jf && ki !== null) {
        Jf = !0;
        var e = 0
          , t = Rt;
        try {
            var r = ki;
            for (Rt = 1; e < r.length; e++) {
                var a = r[e];
                do
                    a = a(!0);
                while (a !== null)
            }
            ki = null,
            um = !1
        } catch (n) {
            throw ki !== null && (ki = ki.slice(e + 1)),
            A5(Vw, qo),
            n
        } finally {
            Rt = t,
            Jf = !1
        }
    }
    return null
}
var dl = []
  , vl = 0
  , Qv = null
  , Zv = 0
  , nn = []
  , on = 0
  , ys = null
  , Ni = 1
  , Mi = "";
function ts(e, t) {
    dl[vl++] = Zv,
    dl[vl++] = Qv,
    Qv = e,
    Zv = t
}
function t9(e, t, r) {
    nn[on++] = Ni,
    nn[on++] = Mi,
    nn[on++] = ys,
    ys = e;
    var a = Ni;
    e = Mi;
    var n = 32 - Pn(a) - 1;
    a &= ~(1 << n),
    r += 1;
    var i = 32 - Pn(t) + n;
    if (30 < i) {
        var o = n - n % 5;
        i = (a & (1 << o) - 1).toString(32),
        a >>= o,
        n -= o,
        Ni = 1 << 32 - Pn(t) + n | r << n | a,
        Mi = i + e
    } else
        Ni = 1 << i | r << n | a,
        Mi = e
}
function Kw(e) {
    e.return !== null && (ts(e, 1),
    t9(e, 1, 0))
}
function Qw(e) {
    for (; e === Qv; )
        Qv = dl[--vl],
        dl[vl] = null,
        Zv = dl[--vl],
        dl[vl] = null;
    for (; e === ys; )
        ys = nn[--on],
        nn[on] = null,
        Mi = nn[--on],
        nn[on] = null,
        Ni = nn[--on],
        nn[on] = null
}
var Ra = null
  , Ba = null
  , Qt = !1
  , In = null;
function r9(e, t) {
    var r = dn(5, null, null, 0);
    r.elementType = "DELETED",
    r.stateNode = t,
    r.return = e,
    t = e.deletions,
    t === null ? (e.deletions = [r],
    e.flags |= 16) : t.push(r)
}
function j0(e, t) {
    switch (e.tag) {
    case 5:
        var r = e.type;
        return t = t.nodeType !== 1 || r.toLowerCase() !== t.nodeName.toLowerCase() ? null : t,
        t !== null ? (e.stateNode = t,
        Ra = e,
        Ba = xo(t.firstChild),
        !0) : !1;
    case 6:
        return t = e.pendingProps === "" || t.nodeType !== 3 ? null : t,
        t !== null ? (e.stateNode = t,
        Ra = e,
        Ba = null,
        !0) : !1;
    case 13:
        return t = t.nodeType !== 8 ? null : t,
        t !== null ? (r = ys !== null ? {
            id: Ni,
            overflow: Mi
        } : null,
        e.memoizedState = {
            dehydrated: t,
            treeContext: r,
            retryLane: 1073741824
        },
        r = dn(18, null, null, 0),
        r.stateNode = t,
        r.return = e,
        e.child = r,
        Ra = e,
        Ba = null,
        !0) : !1;
    default:
        return !1
    }
}
function fy(e) {
    return (e.mode & 1) !== 0 && (e.flags & 128) === 0
}
function py(e) {
    if (Qt) {
        var t = Ba;
        if (t) {
            var r = t;
            if (!j0(e, t)) {
                if (fy(e))
                    throw Error(Ne(418));
                t = xo(r.nextSibling);
                var a = Ra;
                t && j0(e, t) ? r9(a, r) : (e.flags = e.flags & -4097 | 2,
                Qt = !1,
                Ra = e)
            }
        } else {
            if (fy(e))
                throw Error(Ne(418));
            e.flags = e.flags & -4097 | 2,
            Qt = !1,
            Ra = e
        }
    }
}
function H0(e) {
    for (e = e.return; e !== null && e.tag !== 5 && e.tag !== 3 && e.tag !== 13; )
        e = e.return;
    Ra = e
}
function Id(e) {
    if (e !== Ra)
        return !1;
    if (!Qt)
        return H0(e),
        Qt = !0,
        !1;
    var t;
    if ((t = e.tag !== 3) && !(t = e.tag !== 5) && (t = e.type,
    t = t !== "head" && t !== "body" && !dy(e.type, e.memoizedProps)),
    t && (t = Ba)) {
        if (fy(e))
            throw a9(),
            Error(Ne(418));
        for (; t; )
            r9(e, t),
            t = xo(t.nextSibling)
    }
    if (H0(e),
    e.tag === 13) {
        if (e = e.memoizedState,
        e = e !== null ? e.dehydrated : null,
        !e)
            throw Error(Ne(317));
        e: {
            for (e = e.nextSibling,
            t = 0; e; ) {
                if (e.nodeType === 8) {
                    var r = e.data;
                    if (r === "/$") {
                        if (t === 0) {
                            Ba = xo(e.nextSibling);
                            break e
                        }
                        t--
                    } else
                        r !== "$" && r !== "$!" && r !== "$?" || t++
                }
                e = e.nextSibling
            }
            Ba = null
        }
    } else
        Ba = Ra ? xo(e.stateNode.nextSibling) : null;
    return !0
}
function a9() {
    for (var e = Ba; e; )
        e = xo(e.nextSibling)
}
function Bl() {
    Ba = Ra = null,
    Qt = !1
}
function Zw(e) {
    In === null ? In = [e] : In.push(e)
}
var dI = ji.ReactCurrentBatchConfig;
function kn(e, t) {
    if (e && e.defaultProps) {
        t = rr({}, t),
        e = e.defaultProps;
        for (var r in e)
            t[r] === void 0 && (t[r] = e[r]);
        return t
    }
    return t
}
var Xv = Lo(null)
  , eh = null
  , hl = null
  , Xw = null;
function eg() {
    Xw = hl = eh = null
}
function tg(e) {
    var t = Xv.current;
    Jt(Xv),
    e._currentValue = t
}
function yy(e, t, r) {
    for (; e !== null; ) {
        var a = e.alternate;
        if ((e.childLanes & t) !== t ? (e.childLanes |= t,
        a !== null && (a.childLanes |= t)) : a !== null && (a.childLanes & t) !== t && (a.childLanes |= t),
        e === r)
            break;
        e = e.return
    }
}
function kl(e, t) {
    eh = e,
    Xw = hl = null,
    e = e.dependencies,
    e !== null && e.firstContext !== null && (e.lanes & t && (Sa = !0),
    e.firstContext = null)
}
function fn(e) {
    var t = e._currentValue;
    if (Xw !== e)
        if (e = {
            context: e,
            memoizedValue: t,
            next: null
        },
        hl === null) {
            if (eh === null)
                throw Error(Ne(308));
            hl = e,
            eh.dependencies = {
                lanes: 0,
                firstContext: e
            }
        } else
            hl = hl.next = e;
    return t
}
var ss = null;
function rg(e) {
    ss === null ? ss = [e] : ss.push(e)
}
function n9(e, t, r, a) {
    var n = t.interleaved;
    return n === null ? (r.next = r,
    rg(t)) : (r.next = n.next,
    n.next = r),
    t.interleaved = r,
    Li(e, a)
}
function Li(e, t) {
    e.lanes |= t;
    var r = e.alternate;
    for (r !== null && (r.lanes |= t),
    r = e,
    e = e.return; e !== null; )
        e.childLanes |= t,
        r = e.alternate,
        r !== null && (r.childLanes |= t),
        r = e,
        e = e.return;
    return r.tag === 3 ? r.stateNode : null
}
var oo = !1;
function ag(e) {
    e.updateQueue = {
        baseState: e.memoizedState,
        firstBaseUpdate: null,
        lastBaseUpdate: null,
        shared: {
            pending: null,
            interleaved: null,
            lanes: 0
        },
        effects: null
    }
}
function i9(e, t) {
    e = e.updateQueue,
    t.updateQueue === e && (t.updateQueue = {
        baseState: e.baseState,
        firstBaseUpdate: e.firstBaseUpdate,
        lastBaseUpdate: e.lastBaseUpdate,
        shared: e.shared,
        effects: e.effects
    })
}
function Fi(e, t) {
    return {
        eventTime: e,
        lane: t,
        tag: 0,
        payload: null,
        callback: null,
        next: null
    }
}
function Ao(e, t, r) {
    var a = e.updateQueue;
    if (a === null)
        return null;
    if (a = a.shared,
    Et & 2) {
        var n = a.pending;
        return n === null ? t.next = t : (t.next = n.next,
        n.next = t),
        a.pending = t,
        Li(e, r)
    }
    return n = a.interleaved,
    n === null ? (t.next = t,
    rg(a)) : (t.next = n.next,
    n.next = t),
    a.interleaved = t,
    Li(e, r)
}
function xv(e, t, r) {
    if (t = t.updateQueue,
    t !== null && (t = t.shared,
    (r & 4194240) !== 0)) {
        var a = t.lanes;
        a &= e.pendingLanes,
        r |= a,
        t.lanes = r,
        $w(e, r)
    }
}
function W0(e, t) {
    var r = e.updateQueue
      , a = e.alternate;
    if (a !== null && (a = a.updateQueue,
    r === a)) {
        var n = null
          , i = null;
        if (r = r.firstBaseUpdate,
        r !== null) {
            do {
                var o = {
                    eventTime: r.eventTime,
                    lane: r.lane,
                    tag: r.tag,
                    payload: r.payload,
                    callback: r.callback,
                    next: null
                };
                i === null ? n = i = o : i = i.next = o,
                r = r.next
            } while (r !== null);
            i === null ? n = i = t : i = i.next = t
        } else
            n = i = t;
        r = {
            baseState: a.baseState,
            firstBaseUpdate: n,
            lastBaseUpdate: i,
            shared: a.shared,
            effects: a.effects
        },
        e.updateQueue = r;
        return
    }
    e = r.lastBaseUpdate,
    e === null ? r.firstBaseUpdate = t : e.next = t,
    r.lastBaseUpdate = t
}
function th(e, t, r, a) {
    var n = e.updateQueue;
    oo = !1;
    var i = n.firstBaseUpdate
      , o = n.lastBaseUpdate
      , s = n.shared.pending;
    if (s !== null) {
        n.shared.pending = null;
        var l = s
          , u = l.next;
        l.next = null,
        o === null ? i = u : o.next = u,
        o = l;
        var c = e.alternate;
        c !== null && (c = c.updateQueue,
        s = c.lastBaseUpdate,
        s !== o && (s === null ? c.firstBaseUpdate = u : s.next = u,
        c.lastBaseUpdate = l))
    }
    if (i !== null) {
        var d = n.baseState;
        o = 0,
        c = u = l = null,
        s = i;
        do {
            var v = s.lane
              , h = s.eventTime;
            if ((a & v) === v) {
                c !== null && (c = c.next = {
                    eventTime: h,
                    lane: 0,
                    tag: s.tag,
                    payload: s.payload,
                    callback: s.callback,
                    next: null
                });
                e: {
                    var p = e
                      , f = s;
                    switch (v = t,
                    h = r,
                    f.tag) {
                    case 1:
                        if (p = f.payload,
                        typeof p == "function") {
                            d = p.call(h, d, v);
                            break e
                        }
                        d = p;
                        break e;
                    case 3:
                        p.flags = p.flags & -65537 | 128;
                    case 0:
                        if (p = f.payload,
                        v = typeof p == "function" ? p.call(h, d, v) : p,
                        v == null)
                            break e;
                        d = rr({}, d, v);
                        break e;
                    case 2:
                        oo = !0
                    }
                }
                s.callback !== null && s.lane !== 0 && (e.flags |= 64,
                v = n.effects,
                v === null ? n.effects = [s] : v.push(s))
            } else
                h = {
                    eventTime: h,
                    lane: v,
                    tag: s.tag,
                    payload: s.payload,
                    callback: s.callback,
                    next: null
                },
                c === null ? (u = c = h,
                l = d) : c = c.next = h,
                o |= v;
            if (s = s.next,
            s === null) {
                if (s = n.shared.pending,
                s === null)
                    break;
                v = s,
                s = v.next,
                v.next = null,
                n.lastBaseUpdate = v,
                n.shared.pending = null
            }
        } while (1);
        if (c === null && (l = d),
        n.baseState = l,
        n.firstBaseUpdate = u,
        n.lastBaseUpdate = c,
        t = n.shared.interleaved,
        t !== null) {
            n = t;
            do
                o |= n.lane,
                n = n.next;
            while (n !== t)
        } else
            i === null && (n.shared.lanes = 0);
        gs |= o,
        e.lanes = o,
        e.memoizedState = d
    }
}
function Y0(e, t, r) {
    if (e = t.effects,
    t.effects = null,
    e !== null)
        for (t = 0; t < e.length; t++) {
            var a = e[t]
              , n = a.callback;
            if (n !== null) {
                if (a.callback = null,
                a = r,
                typeof n != "function")
                    throw Error(Ne(191, n));
                n.call(a)
            }
        }
}
var o9 = new n5.Component().refs;
function wy(e, t, r, a) {
    t = e.memoizedState,
    r = r(a, t),
    r = r == null ? t : rr({}, t, r),
    e.memoizedState = r,
    e.lanes === 0 && (e.updateQueue.baseState = r)
}
var cm = {
    isMounted: function(e) {
        return (e = e._reactInternals) ? xs(e) === e : !1
    },
    enqueueSetState: function(e, t, r) {
        e = e._reactInternals;
        var a = oa()
          , n = ko(e)
          , i = Fi(a, n);
        i.payload = t,
        r != null && (i.callback = r),
        t = Ao(e, i, n),
        t !== null && (Bn(t, e, n, a),
        xv(t, e, n))
    },
    enqueueReplaceState: function(e, t, r) {
        e = e._reactInternals;
        var a = oa()
          , n = ko(e)
          , i = Fi(a, n);
        i.tag = 1,
        i.payload = t,
        r != null && (i.callback = r),
        t = Ao(e, i, n),
        t !== null && (Bn(t, e, n, a),
        xv(t, e, n))
    },
    enqueueForceUpdate: function(e, t) {
        e = e._reactInternals;
        var r = oa()
          , a = ko(e)
          , n = Fi(r, a);
        n.tag = 2,
        t != null && (n.callback = t),
        t = Ao(e, n, a),
        t !== null && (Bn(t, e, a, r),
        xv(t, e, a))
    }
};
function J0(e, t, r, a, n, i, o) {
    return e = e.stateNode,
    typeof e.shouldComponentUpdate == "function" ? e.shouldComponentUpdate(a, i, o) : t.prototype && t.prototype.isPureReactComponent ? !gc(r, a) || !gc(n, i) : !0
}
function s9(e, t, r) {
    var a = !1
      , n = Io
      , i = t.contextType;
    return typeof i == "object" && i !== null ? i = fn(i) : (n = Aa(t) ? ps : Qr.current,
    a = t.contextTypes,
    i = (a = a != null) ? Pl(e, n) : Io),
    t = new t(r,i),
    e.memoizedState = t.state !== null && t.state !== void 0 ? t.state : null,
    t.updater = cm,
    e.stateNode = t,
    t._reactInternals = e,
    a && (e = e.stateNode,
    e.__reactInternalMemoizedUnmaskedChildContext = n,
    e.__reactInternalMemoizedMaskedChildContext = i),
    t
}
function K0(e, t, r, a) {
    e = t.state,
    typeof t.componentWillReceiveProps == "function" && t.componentWillReceiveProps(r, a),
    typeof t.UNSAFE_componentWillReceiveProps == "function" && t.UNSAFE_componentWillReceiveProps(r, a),
    t.state !== e && cm.enqueueReplaceState(t, t.state, null)
}
function gy(e, t, r, a) {
    var n = e.stateNode;
    n.props = r,
    n.state = e.memoizedState,
    n.refs = o9,
    ag(e);
    var i = t.contextType;
    typeof i == "object" && i !== null ? n.context = fn(i) : (i = Aa(t) ? ps : Qr.current,
    n.context = Pl(e, i)),
    n.state = e.memoizedState,
    i = t.getDerivedStateFromProps,
    typeof i == "function" && (wy(e, t, i, r),
    n.state = e.memoizedState),
    typeof t.getDerivedStateFromProps == "function" || typeof n.getSnapshotBeforeUpdate == "function" || typeof n.UNSAFE_componentWillMount != "function" && typeof n.componentWillMount != "function" || (t = n.state,
    typeof n.componentWillMount == "function" && n.componentWillMount(),
    typeof n.UNSAFE_componentWillMount == "function" && n.UNSAFE_componentWillMount(),
    t !== n.state && cm.enqueueReplaceState(n, n.state, null),
    th(e, r, n, a),
    n.state = e.memoizedState),
    typeof n.componentDidMount == "function" && (e.flags |= 4194308)
}
function Du(e, t, r) {
    if (e = r.ref,
    e !== null && typeof e != "function" && typeof e != "object") {
        if (r._owner) {
            if (r = r._owner,
            r) {
                if (r.tag !== 1)
                    throw Error(Ne(309));
                var a = r.stateNode
            }
            if (!a)
                throw Error(Ne(147, e));
            var n = a
              , i = "" + e;
            return t !== null && t.ref !== null && typeof t.ref == "function" && t.ref._stringRef === i ? t.ref : (t = function(o) {
                var s = n.refs;
                s === o9 && (s = n.refs = {}),
                o === null ? delete s[i] : s[i] = o
            }
            ,
            t._stringRef = i,
            t)
        }
        if (typeof e != "string")
            throw Error(Ne(284));
        if (!r._owner)
            throw Error(Ne(290, e))
    }
    return e
}
function Dd(e, t) {
    throw e = Object.prototype.toString.call(t),
    Error(Ne(31, e === "[object Object]" ? "object with keys {" + Object.keys(t).join(", ") + "}" : e))
}
function Q0(e) {
    var t = e._init;
    return t(e._payload)
}
function l9(e) {
    function t(y, g) {
        if (e) {
            var m = y.deletions;
            m === null ? (y.deletions = [g],
            y.flags |= 16) : m.push(g)
        }
    }
    function r(y, g) {
        if (!e)
            return null;
        for (; g !== null; )
            t(y, g),
            g = g.sibling;
        return null
    }
    function a(y, g) {
        for (y = new Map; g !== null; )
            g.key !== null ? y.set(g.key, g) : y.set(g.index, g),
            g = g.sibling;
        return y
    }
    function n(y, g) {
        return y = To(y, g),
        y.index = 0,
        y.sibling = null,
        y
    }
    function i(y, g, m) {
        return y.index = m,
        e ? (m = y.alternate,
        m !== null ? (m = m.index,
        m < g ? (y.flags |= 2,
        g) : m) : (y.flags |= 2,
        g)) : (y.flags |= 1048576,
        g)
    }
    function o(y) {
        return e && y.alternate === null && (y.flags |= 2),
        y
    }
    function s(y, g, m, w) {
        return g === null || g.tag !== 6 ? (g = rp(m, y.mode, w),
        g.return = y,
        g) : (g = n(g, m),
        g.return = y,
        g)
    }
    function l(y, g, m, w) {
        var C = m.type;
        return C === il ? c(y, g, m.props.children, w, m.key) : g !== null && (g.elementType === C || typeof C == "object" && C !== null && C.$$typeof === io && Q0(C) === g.type) ? (w = n(g, m.props),
        w.ref = Du(y, g, m),
        w.return = y,
        w) : (w = Mv(m.type, m.key, m.props, null, y.mode, w),
        w.ref = Du(y, g, m),
        w.return = y,
        w)
    }
    function u(y, g, m, w) {
        return g === null || g.tag !== 4 || g.stateNode.containerInfo !== m.containerInfo || g.stateNode.implementation !== m.implementation ? (g = ap(m, y.mode, w),
        g.return = y,
        g) : (g = n(g, m.children || []),
        g.return = y,
        g)
    }
    function c(y, g, m, w, C) {
        return g === null || g.tag !== 7 ? (g = hs(m, y.mode, w, C),
        g.return = y,
        g) : (g = n(g, m),
        g.return = y,
        g)
    }
    function d(y, g, m) {
        if (typeof g == "string" && g !== "" || typeof g == "number")
            return g = rp("" + g, y.mode, m),
            g.return = y,
            g;
        if (typeof g == "object" && g !== null) {
            switch (g.$$typeof) {
            case bd:
                return m = Mv(g.type, g.key, g.props, null, y.mode, m),
                m.ref = Du(y, null, g),
                m.return = y,
                m;
            case nl:
                return g = ap(g, y.mode, m),
                g.return = y,
                g;
            case io:
                var w = g._init;
                return d(y, w(g._payload), m)
            }
            if (ju(g) || ku(g))
                return g = hs(g, y.mode, m, null),
                g.return = y,
                g;
            Dd(y, g)
        }
        return null
    }
    function v(y, g, m, w) {
        var C = g !== null ? g.key : null;
        if (typeof m == "string" && m !== "" || typeof m == "number")
            return C !== null ? null : s(y, g, "" + m, w);
        if (typeof m == "object" && m !== null) {
            switch (m.$$typeof) {
            case bd:
                return m.key === C ? l(y, g, m, w) : null;
            case nl:
                return m.key === C ? u(y, g, m, w) : null;
            case io:
                return C = m._init,
                v(y, g, C(m._payload), w)
            }
            if (ju(m) || ku(m))
                return C !== null ? null : c(y, g, m, w, null);
            Dd(y, m)
        }
        return null
    }
    function h(y, g, m, w, C) {
        if (typeof w == "string" && w !== "" || typeof w == "number")
            return y = y.get(m) || null,
            s(g, y, "" + w, C);
        if (typeof w == "object" && w !== null) {
            switch (w.$$typeof) {
            case bd:
                return y = y.get(w.key === null ? m : w.key) || null,
                l(g, y, w, C);
            case nl:
                return y = y.get(w.key === null ? m : w.key) || null,
                u(g, y, w, C);
            case io:
                var b = w._init;
                return h(y, g, m, b(w._payload), C)
            }
            if (ju(w) || ku(w))
                return y = y.get(m) || null,
                c(g, y, w, C, null);
            Dd(g, w)
        }
        return null
    }
    function p(y, g, m, w) {
        for (var C = null, b = null, x = g, E = g = 0, k = null; x !== null && E < m.length; E++) {
            x.index > E ? (k = x,
            x = null) : k = x.sibling;
            var A = v(y, x, m[E], w);
            if (A === null) {
                x === null && (x = k);
                break
            }
            e && x && A.alternate === null && t(y, x),
            g = i(A, g, E),
            b === null ? C = A : b.sibling = A,
            b = A,
            x = k
        }
        if (E === m.length)
            return r(y, x),
            Qt && ts(y, E),
            C;
        if (x === null) {
            for (; E < m.length; E++)
                x = d(y, m[E], w),
                x !== null && (g = i(x, g, E),
                b === null ? C = x : b.sibling = x,
                b = x);
            return Qt && ts(y, E),
            C
        }
        for (x = a(y, x); E < m.length; E++)
            k = h(x, y, E, m[E], w),
            k !== null && (e && k.alternate !== null && x.delete(k.key === null ? E : k.key),
            g = i(k, g, E),
            b === null ? C = k : b.sibling = k,
            b = k);
        return e && x.forEach(function(I) {
            return t(y, I)
        }),
        Qt && ts(y, E),
        C
    }
    function f(y, g, m, w) {
        var C = ku(m);
        if (typeof C != "function")
            throw Error(Ne(150));
        if (m = C.call(m),
        m == null)
            throw Error(Ne(151));
        for (var b = C = null, x = g, E = g = 0, k = null, A = m.next(); x !== null && !A.done; E++,
        A = m.next()) {
            x.index > E ? (k = x,
            x = null) : k = x.sibling;
            var I = v(y, x, A.value, w);
            if (I === null) {
                x === null && (x = k);
                break
            }
            e && x && I.alternate === null && t(y, x),
            g = i(I, g, E),
            b === null ? C = I : b.sibling = I,
            b = I,
            x = k
        }
        if (A.done)
            return r(y, x),
            Qt && ts(y, E),
            C;
        if (x === null) {
            for (; !A.done; E++,
            A = m.next())
                A = d(y, A.value, w),
                A !== null && (g = i(A, g, E),
                b === null ? C = A : b.sibling = A,
                b = A);
            return Qt && ts(y, E),
            C
        }
        for (x = a(y, x); !A.done; E++,
        A = m.next())
            A = h(x, y, E, A.value, w),
            A !== null && (e && A.alternate !== null && x.delete(A.key === null ? E : A.key),
            g = i(A, g, E),
            b === null ? C = A : b.sibling = A,
            b = A);
        return e && x.forEach(function(T) {
            return t(y, T)
        }),
        Qt && ts(y, E),
        C
    }
    function _(y, g, m, w) {
        if (typeof m == "object" && m !== null && m.type === il && m.key === null && (m = m.props.children),
        typeof m == "object" && m !== null) {
            switch (m.$$typeof) {
            case bd:
                e: {
                    for (var C = m.key, b = g; b !== null; ) {
                        if (b.key === C) {
                            if (C = m.type,
                            C === il) {
                                if (b.tag === 7) {
                                    r(y, b.sibling),
                                    g = n(b, m.props.children),
                                    g.return = y,
                                    y = g;
                                    break e
                                }
                            } else if (b.elementType === C || typeof C == "object" && C !== null && C.$$typeof === io && Q0(C) === b.type) {
                                r(y, b.sibling),
                                g = n(b, m.props),
                                g.ref = Du(y, b, m),
                                g.return = y,
                                y = g;
                                break e
                            }
                            r(y, b);
                            break
                        } else
                            t(y, b);
                        b = b.sibling
                    }
                    m.type === il ? (g = hs(m.props.children, y.mode, w, m.key),
                    g.return = y,
                    y = g) : (w = Mv(m.type, m.key, m.props, null, y.mode, w),
                    w.ref = Du(y, g, m),
                    w.return = y,
                    y = w)
                }
                return o(y);
            case nl:
                e: {
                    for (b = m.key; g !== null; ) {
                        if (g.key === b)
                            if (g.tag === 4 && g.stateNode.containerInfo === m.containerInfo && g.stateNode.implementation === m.implementation) {
                                r(y, g.sibling),
                                g = n(g, m.children || []),
                                g.return = y,
                                y = g;
                                break e
                            } else {
                                r(y, g);
                                break
                            }
                        else
                            t(y, g);
                        g = g.sibling
                    }
                    g = ap(m, y.mode, w),
                    g.return = y,
                    y = g
                }
                return o(y);
            case io:
                return b = m._init,
                _(y, g, b(m._payload), w)
            }
            if (ju(m))
                return p(y, g, m, w);
            if (ku(m))
                return f(y, g, m, w);
            Dd(y, m)
        }
        return typeof m == "string" && m !== "" || typeof m == "number" ? (m = "" + m,
        g !== null && g.tag === 6 ? (r(y, g.sibling),
        g = n(g, m),
        g.return = y,
        y = g) : (r(y, g),
        g = rp(m, y.mode, w),
        g.return = y,
        y = g),
        o(y)) : r(y, g)
    }
    return _
}
var Rl = l9(!0)
  , u9 = l9(!1)
  , zc = {}
  , li = Lo(zc)
  , Sc = Lo(zc)
  , xc = Lo(zc);
function ls(e) {
    if (e === zc)
        throw Error(Ne(174));
    return e
}
function ng(e, t) {
    switch (jt(xc, t),
    jt(Sc, e),
    jt(li, zc),
    e = t.nodeType,
    e) {
    case 9:
    case 11:
        t = (t = t.documentElement) ? t.namespaceURI : Qp(null, "");
        break;
    default:
        e = e === 8 ? t.parentNode : t,
        t = e.namespaceURI || null,
        e = e.tagName,
        t = Qp(t, e)
    }
    Jt(li),
    jt(li, t)
}
function Ll() {
    Jt(li),
    Jt(Sc),
    Jt(xc)
}
function c9(e) {
    ls(xc.current);
    var t = ls(li.current)
      , r = Qp(t, e.type);
    t !== r && (jt(Sc, e),
    jt(li, r))
}
function ig(e) {
    Sc.current === e && (Jt(li),
    Jt(Sc))
}
var er = Lo(0);
function rh(e) {
    for (var t = e; t !== null; ) {
        if (t.tag === 13) {
            var r = t.memoizedState;
            if (r !== null && (r = r.dehydrated,
            r === null || r.data === "$?" || r.data === "$!"))
                return t
        } else if (t.tag === 19 && t.memoizedProps.revealOrder !== void 0) {
            if (t.flags & 128)
                return t
        } else if (t.child !== null) {
            t.child.return = t,
            t = t.child;
            continue
        }
        if (t === e)
            break;
        for (; t.sibling === null; ) {
            if (t.return === null || t.return === e)
                return null;
            t = t.return
        }
        t.sibling.return = t.return,
        t = t.sibling
    }
    return null
}
var Kf = [];
function og() {
    for (var e = 0; e < Kf.length; e++)
        Kf[e]._workInProgressVersionPrimary = null;
    Kf.length = 0
}
var Av = ji.ReactCurrentDispatcher
  , Qf = ji.ReactCurrentBatchConfig
  , ws = 0
  , tr = null
  , wr = null
  , Ar = null
  , ah = !1
  , ic = !1
  , Ac = 0
  , vI = 0;
function zr() {
    throw Error(Ne(321))
}
function sg(e, t) {
    if (t === null)
        return !1;
    for (var r = 0; r < t.length && r < e.length; r++)
        if (!Vn(e[r], t[r]))
            return !1;
    return !0
}
function lg(e, t, r, a, n, i) {
    if (ws = i,
    tr = t,
    t.memoizedState = null,
    t.updateQueue = null,
    t.lanes = 0,
    Av.current = e === null || e.memoizedState === null ? pI : yI,
    e = r(a, n),
    ic) {
        i = 0;
        do {
            if (ic = !1,
            Ac = 0,
            25 <= i)
                throw Error(Ne(301));
            i += 1,
            Ar = wr = null,
            t.updateQueue = null,
            Av.current = wI,
            e = r(a, n)
        } while (ic)
    }
    if (Av.current = nh,
    t = wr !== null && wr.next !== null,
    ws = 0,
    Ar = wr = tr = null,
    ah = !1,
    t)
        throw Error(Ne(300));
    return e
}
function ug() {
    var e = Ac !== 0;
    return Ac = 0,
    e
}
function ei() {
    var e = {
        memoizedState: null,
        baseState: null,
        baseQueue: null,
        queue: null,
        next: null
    };
    return Ar === null ? tr.memoizedState = Ar = e : Ar = Ar.next = e,
    Ar
}
function pn() {
    if (wr === null) {
        var e = tr.alternate;
        e = e !== null ? e.memoizedState : null
    } else
        e = wr.next;
    var t = Ar === null ? tr.memoizedState : Ar.next;
    if (t !== null)
        Ar = t,
        wr = e;
    else {
        if (e === null)
            throw Error(Ne(310));
        wr = e,
        e = {
            memoizedState: wr.memoizedState,
            baseState: wr.baseState,
            baseQueue: wr.baseQueue,
            queue: wr.queue,
            next: null
        },
        Ar === null ? tr.memoizedState = Ar = e : Ar = Ar.next = e
    }
    return Ar
}
function Ec(e, t) {
    return typeof t == "function" ? t(e) : t
}
function Zf(e) {
    var t = pn()
      , r = t.queue;
    if (r === null)
        throw Error(Ne(311));
    r.lastRenderedReducer = e;
    var a = wr
      , n = a.baseQueue
      , i = r.pending;
    if (i !== null) {
        if (n !== null) {
            var o = n.next;
            n.next = i.next,
            i.next = o
        }
        a.baseQueue = n = i,
        r.pending = null
    }
    if (n !== null) {
        i = n.next,
        a = a.baseState;
        var s = o = null
          , l = null
          , u = i;
        do {
            var c = u.lane;
            if ((ws & c) === c)
                l !== null && (l = l.next = {
                    lane: 0,
                    action: u.action,
                    hasEagerState: u.hasEagerState,
                    eagerState: u.eagerState,
                    next: null
                }),
                a = u.hasEagerState ? u.eagerState : e(a, u.action);
            else {
                var d = {
                    lane: c,
                    action: u.action,
                    hasEagerState: u.hasEagerState,
                    eagerState: u.eagerState,
                    next: null
                };
                l === null ? (s = l = d,
                o = a) : l = l.next = d,
                tr.lanes |= c,
                gs |= c
            }
            u = u.next
        } while (u !== null && u !== i);
        l === null ? o = a : l.next = s,
        Vn(a, t.memoizedState) || (Sa = !0),
        t.memoizedState = a,
        t.baseState = o,
        t.baseQueue = l,
        r.lastRenderedState = a
    }
    if (e = r.interleaved,
    e !== null) {
        n = e;
        do
            i = n.lane,
            tr.lanes |= i,
            gs |= i,
            n = n.next;
        while (n !== e)
    } else
        n === null && (r.lanes = 0);
    return [t.memoizedState, r.dispatch]
}
function Xf(e) {
    var t = pn()
      , r = t.queue;
    if (r === null)
        throw Error(Ne(311));
    r.lastRenderedReducer = e;
    var a = r.dispatch
      , n = r.pending
      , i = t.memoizedState;
    if (n !== null) {
        r.pending = null;
        var o = n = n.next;
        do
            i = e(i, o.action),
            o = o.next;
        while (o !== n);
        Vn(i, t.memoizedState) || (Sa = !0),
        t.memoizedState = i,
        t.baseQueue === null && (t.baseState = i),
        r.lastRenderedState = i
    }
    return [i, a]
}
function d9() {}
function v9(e, t) {
    var r = tr
      , a = pn()
      , n = t()
      , i = !Vn(a.memoizedState, n);
    if (i && (a.memoizedState = n,
    Sa = !0),
    a = a.queue,
    cg(f9.bind(null, r, a, e), [e]),
    a.getSnapshot !== t || i || Ar !== null && Ar.memoizedState.tag & 1) {
        if (r.flags |= 2048,
        kc(9, m9.bind(null, r, a, n, t), void 0, null),
        kr === null)
            throw Error(Ne(349));
        ws & 30 || h9(r, t, n)
    }
    return n
}
function h9(e, t, r) {
    e.flags |= 16384,
    e = {
        getSnapshot: t,
        value: r
    },
    t = tr.updateQueue,
    t === null ? (t = {
        lastEffect: null,
        stores: null
    },
    tr.updateQueue = t,
    t.stores = [e]) : (r = t.stores,
    r === null ? t.stores = [e] : r.push(e))
}
function m9(e, t, r, a) {
    t.value = r,
    t.getSnapshot = a,
    p9(t) && y9(e)
}
function f9(e, t, r) {
    return r(function() {
        p9(t) && y9(e)
    })
}
function p9(e) {
    var t = e.getSnapshot;
    e = e.value;
    try {
        var r = t();
        return !Vn(e, r)
    } catch {
        return !0
    }
}
function y9(e) {
    var t = Li(e, 1);
    t !== null && Bn(t, e, 1, -1)
}
function Z0(e) {
    var t = ei();
    return typeof e == "function" && (e = e()),
    t.memoizedState = t.baseState = e,
    e = {
        pending: null,
        interleaved: null,
        lanes: 0,
        dispatch: null,
        lastRenderedReducer: Ec,
        lastRenderedState: e
    },
    t.queue = e,
    e = e.dispatch = fI.bind(null, tr, e),
    [t.memoizedState, e]
}
function kc(e, t, r, a) {
    return e = {
        tag: e,
        create: t,
        destroy: r,
        deps: a,
        next: null
    },
    t = tr.updateQueue,
    t === null ? (t = {
        lastEffect: null,
        stores: null
    },
    tr.updateQueue = t,
    t.lastEffect = e.next = e) : (r = t.lastEffect,
    r === null ? t.lastEffect = e.next = e : (a = r.next,
    r.next = e,
    e.next = a,
    t.lastEffect = e)),
    e
}
function w9() {
    return pn().memoizedState
}
function Ev(e, t, r, a) {
    var n = ei();
    tr.flags |= e,
    n.memoizedState = kc(1 | t, r, void 0, a === void 0 ? null : a)
}
function dm(e, t, r, a) {
    var n = pn();
    a = a === void 0 ? null : a;
    var i = void 0;
    if (wr !== null) {
        var o = wr.memoizedState;
        if (i = o.destroy,
        a !== null && sg(a, o.deps)) {
            n.memoizedState = kc(t, r, i, a);
            return
        }
    }
    tr.flags |= e,
    n.memoizedState = kc(1 | t, r, i, a)
}
function X0(e, t) {
    return Ev(8390656, 8, e, t)
}
function cg(e, t) {
    return dm(2048, 8, e, t)
}
function g9(e, t) {
    return dm(4, 2, e, t)
}
function _9(e, t) {
    return dm(4, 4, e, t)
}
function b9(e, t) {
    if (typeof t == "function")
        return e = e(),
        t(e),
        function() {
            t(null)
        }
        ;
    if (t != null)
        return e = e(),
        t.current = e,
        function() {
            t.current = null
        }
}
function C9(e, t, r) {
    return r = r != null ? r.concat([e]) : null,
    dm(4, 4, b9.bind(null, t, e), r)
}
function dg() {}
function S9(e, t) {
    var r = pn();
    t = t === void 0 ? null : t;
    var a = r.memoizedState;
    return a !== null && t !== null && sg(t, a[1]) ? a[0] : (r.memoizedState = [e, t],
    e)
}
function x9(e, t) {
    var r = pn();
    t = t === void 0 ? null : t;
    var a = r.memoizedState;
    return a !== null && t !== null && sg(t, a[1]) ? a[0] : (e = e(),
    r.memoizedState = [e, t],
    e)
}
function A9(e, t, r) {
    return ws & 21 ? (Vn(r, t) || (r = T5(),
    tr.lanes |= r,
    gs |= r,
    e.baseState = !0),
    t) : (e.baseState && (e.baseState = !1,
    Sa = !0),
    e.memoizedState = r)
}
function hI(e, t) {
    var r = Rt;
    Rt = r !== 0 && 4 > r ? r : 4,
    e(!0);
    var a = Qf.transition;
    Qf.transition = {};
    try {
        e(!1),
        t()
    } finally {
        Rt = r,
        Qf.transition = a
    }
}
function E9() {
    return pn().memoizedState
}
function mI(e, t, r) {
    var a = ko(e);
    if (r = {
        lane: a,
        action: r,
        hasEagerState: !1,
        eagerState: null,
        next: null
    },
    k9(e))
        T9(t, r);
    else if (r = n9(e, t, r, a),
    r !== null) {
        var n = oa();
        Bn(r, e, a, n),
        N9(r, t, a)
    }
}
function fI(e, t, r) {
    var a = ko(e)
      , n = {
        lane: a,
        action: r,
        hasEagerState: !1,
        eagerState: null,
        next: null
    };
    if (k9(e))
        T9(t, n);
    else {
        var i = e.alternate;
        if (e.lanes === 0 && (i === null || i.lanes === 0) && (i = t.lastRenderedReducer,
        i !== null))
            try {
                var o = t.lastRenderedState
                  , s = i(o, r);
                if (n.hasEagerState = !0,
                n.eagerState = s,
                Vn(s, o)) {
                    var l = t.interleaved;
                    l === null ? (n.next = n,
                    rg(t)) : (n.next = l.next,
                    l.next = n),
                    t.interleaved = n;
                    return
                }
            } catch {} finally {}
        r = n9(e, t, n, a),
        r !== null && (n = oa(),
        Bn(r, e, a, n),
        N9(r, t, a))
    }
}
function k9(e) {
    var t = e.alternate;
    return e === tr || t !== null && t === tr
}
function T9(e, t) {
    ic = ah = !0;
    var r = e.pending;
    r === null ? t.next = t : (t.next = r.next,
    r.next = t),
    e.pending = t
}
function N9(e, t, r) {
    if (r & 4194240) {
        var a = t.lanes;
        a &= e.pendingLanes,
        r |= a,
        t.lanes = r,
        $w(e, r)
    }
}
var nh = {
    readContext: fn,
    useCallback: zr,
    useContext: zr,
    useEffect: zr,
    useImperativeHandle: zr,
    useInsertionEffect: zr,
    useLayoutEffect: zr,
    useMemo: zr,
    useReducer: zr,
    useRef: zr,
    useState: zr,
    useDebugValue: zr,
    useDeferredValue: zr,
    useTransition: zr,
    useMutableSource: zr,
    useSyncExternalStore: zr,
    useId: zr,
    unstable_isNewReconciler: !1
}
  , pI = {
    readContext: fn,
    useCallback: function(e, t) {
        return ei().memoizedState = [e, t === void 0 ? null : t],
        e
    },
    useContext: fn,
    useEffect: X0,
    useImperativeHandle: function(e, t, r) {
        return r = r != null ? r.concat([e]) : null,
        Ev(4194308, 4, b9.bind(null, t, e), r)
    },
    useLayoutEffect: function(e, t) {
        return Ev(4194308, 4, e, t)
    },
    useInsertionEffect: function(e, t) {
        return Ev(4, 2, e, t)
    },
    useMemo: function(e, t) {
        var r = ei();
        return t = t === void 0 ? null : t,
        e = e(),
        r.memoizedState = [e, t],
        e
    },
    useReducer: function(e, t, r) {
        var a = ei();
        return t = r !== void 0 ? r(t) : t,
        a.memoizedState = a.baseState = t,
        e = {
            pending: null,
            interleaved: null,
            lanes: 0,
            dispatch: null,
            lastRenderedReducer: e,
            lastRenderedState: t
        },
        a.queue = e,
        e = e.dispatch = mI.bind(null, tr, e),
        [a.memoizedState, e]
    },
    useRef: function(e) {
        var t = ei();
        return e = {
            current: e
        },
        t.memoizedState = e
    },
    useState: Z0,
    useDebugValue: dg,
    useDeferredValue: function(e) {
        return ei().memoizedState = e
    },
    useTransition: function() {
        var e = Z0(!1)
          , t = e[0];
        return e = hI.bind(null, e[1]),
        ei().memoizedState = e,
        [t, e]
    },
    useMutableSource: function() {},
    useSyncExternalStore: function(e, t, r) {
        var a = tr
          , n = ei();
        if (Qt) {
            if (r === void 0)
                throw Error(Ne(407));
            r = r()
        } else {
            if (r = t(),
            kr === null)
                throw Error(Ne(349));
            ws & 30 || h9(a, t, r)
        }
        n.memoizedState = r;
        var i = {
            value: r,
            getSnapshot: t
        };
        return n.queue = i,
        X0(f9.bind(null, a, i, e), [e]),
        a.flags |= 2048,
        kc(9, m9.bind(null, a, i, r, t), void 0, null),
        r
    },
    useId: function() {
        var e = ei()
          , t = kr.identifierPrefix;
        if (Qt) {
            var r = Mi
              , a = Ni;
            r = (a & ~(1 << 32 - Pn(a) - 1)).toString(32) + r,
            t = ":" + t + "R" + r,
            r = Ac++,
            0 < r && (t += "H" + r.toString(32)),
            t += ":"
        } else
            r = vI++,
            t = ":" + t + "r" + r.toString(32) + ":";
        return e.memoizedState = t
    },
    unstable_isNewReconciler: !1
}
  , yI = {
    readContext: fn,
    useCallback: S9,
    useContext: fn,
    useEffect: cg,
    useImperativeHandle: C9,
    useInsertionEffect: g9,
    useLayoutEffect: _9,
    useMemo: x9,
    useReducer: Zf,
    useRef: w9,
    useState: function() {
        return Zf(Ec)
    },
    useDebugValue: dg,
    useDeferredValue: function(e) {
        var t = pn();
        return A9(t, wr.memoizedState, e)
    },
    useTransition: function() {
        var e = Zf(Ec)[0]
          , t = pn().memoizedState;
        return [e, t]
    },
    useMutableSource: d9,
    useSyncExternalStore: v9,
    useId: E9,
    unstable_isNewReconciler: !1
}
  , wI = {
    readContext: fn,
    useCallback: S9,
    useContext: fn,
    useEffect: cg,
    useImperativeHandle: C9,
    useInsertionEffect: g9,
    useLayoutEffect: _9,
    useMemo: x9,
    useReducer: Xf,
    useRef: w9,
    useState: function() {
        return Xf(Ec)
    },
    useDebugValue: dg,
    useDeferredValue: function(e) {
        var t = pn();
        return wr === null ? t.memoizedState = e : A9(t, wr.memoizedState, e)
    },
    useTransition: function() {
        var e = Xf(Ec)[0]
          , t = pn().memoizedState;
        return [e, t]
    },
    useMutableSource: d9,
    useSyncExternalStore: v9,
    useId: E9,
    unstable_isNewReconciler: !1
};
function ql(e, t) {
    try {
        var r = ""
          , a = t;
        do
            r += HN(a),
            a = a.return;
        while (a);
        var n = r
    } catch (i) {
        n = `
Error generating stack: ` + i.message + `
` + i.stack
    }
    return {
        value: e,
        source: t,
        stack: n,
        digest: null
    }
}
function ep(e, t, r) {
    return {
        value: e,
        source: null,
        stack: r ?? null,
        digest: t ?? null
    }
}
function _y(e, t) {
    try {
        console.error(t.value)
    } catch (r) {
        setTimeout(function() {
            throw r
        })
    }
}
var gI = typeof WeakMap == "function" ? WeakMap : Map;
function M9(e, t, r) {
    r = Fi(-1, r),
    r.tag = 3,
    r.payload = {
        element: null
    };
    var a = t.value;
    return r.callback = function() {
        oh || (oh = !0,
        My = a),
        _y(e, t)
    }
    ,
    r
}
function I9(e, t, r) {
    r = Fi(-1, r),
    r.tag = 3;
    var a = e.type.getDerivedStateFromError;
    if (typeof a == "function") {
        var n = t.value;
        r.payload = function() {
            return a(n)
        }
        ,
        r.callback = function() {
            _y(e, t)
        }
    }
    var i = e.stateNode;
    return i !== null && typeof i.componentDidCatch == "function" && (r.callback = function() {
        _y(e, t),
        typeof a != "function" && (Eo === null ? Eo = new Set([this]) : Eo.add(this));
        var o = t.stack;
        this.componentDidCatch(t.value, {
            componentStack: o !== null ? o : ""
        })
    }
    ),
    r
}
function e_(e, t, r) {
    var a = e.pingCache;
    if (a === null) {
        a = e.pingCache = new gI;
        var n = new Set;
        a.set(t, n)
    } else
        n = a.get(t),
        n === void 0 && (n = new Set,
        a.set(t, n));
    n.has(r) || (n.add(r),
    e = UI.bind(null, e, t, r),
    t.then(e, e))
}
function t_(e) {
    do {
        var t;
        if ((t = e.tag === 13) && (t = e.memoizedState,
        t = t !== null ? t.dehydrated !== null : !0),
        t)
            return e;
        e = e.return
    } while (e !== null);
    return null
}
function r_(e, t, r, a, n) {
    return e.mode & 1 ? (e.flags |= 65536,
    e.lanes = n,
    e) : (e === t ? e.flags |= 65536 : (e.flags |= 128,
    r.flags |= 131072,
    r.flags &= -52805,
    r.tag === 1 && (r.alternate === null ? r.tag = 17 : (t = Fi(-1, 1),
    t.tag = 2,
    Ao(r, t, 1))),
    r.lanes |= 1),
    e)
}
var _I = ji.ReactCurrentOwner
  , Sa = !1;
function aa(e, t, r, a) {
    t.child = e === null ? u9(t, null, r, a) : Rl(t, e.child, r, a)
}
function a_(e, t, r, a, n) {
    r = r.render;
    var i = t.ref;
    return kl(t, n),
    a = lg(e, t, r, a, i, n),
    r = ug(),
    e !== null && !Sa ? (t.updateQueue = e.updateQueue,
    t.flags &= -2053,
    e.lanes &= ~n,
    qi(e, t, n)) : (Qt && r && Kw(t),
    t.flags |= 1,
    aa(e, t, a, n),
    t.child)
}
function n_(e, t, r, a, n) {
    if (e === null) {
        var i = r.type;
        return typeof i == "function" && !gg(i) && i.defaultProps === void 0 && r.compare === null && r.defaultProps === void 0 ? (t.tag = 15,
        t.type = i,
        D9(e, t, i, a, n)) : (e = Mv(r.type, null, a, t, t.mode, n),
        e.ref = t.ref,
        e.return = t,
        t.child = e)
    }
    if (i = e.child,
    !(e.lanes & n)) {
        var o = i.memoizedProps;
        if (r = r.compare,
        r = r !== null ? r : gc,
        r(o, a) && e.ref === t.ref)
            return qi(e, t, n)
    }
    return t.flags |= 1,
    e = To(i, a),
    e.ref = t.ref,
    e.return = t,
    t.child = e
}
function D9(e, t, r, a, n) {
    if (e !== null) {
        var i = e.memoizedProps;
        if (gc(i, a) && e.ref === t.ref)
            if (Sa = !1,
            t.pendingProps = a = i,
            (e.lanes & n) !== 0)
                e.flags & 131072 && (Sa = !0);
            else
                return t.lanes = e.lanes,
                qi(e, t, n)
    }
    return by(e, t, r, a, n)
}
function U9(e, t, r) {
    var a = t.pendingProps
      , n = a.children
      , i = e !== null ? e.memoizedState : null;
    if (a.mode === "hidden")
        if (!(t.mode & 1))
            t.memoizedState = {
                baseLanes: 0,
                cachePool: null,
                transitions: null
            },
            jt(fl, Oa),
            Oa |= r;
        else {
            if (!(r & 1073741824))
                return e = i !== null ? i.baseLanes | r : r,
                t.lanes = t.childLanes = 1073741824,
                t.memoizedState = {
                    baseLanes: e,
                    cachePool: null,
                    transitions: null
                },
                t.updateQueue = null,
                jt(fl, Oa),
                Oa |= e,
                null;
            t.memoizedState = {
                baseLanes: 0,
                cachePool: null,
                transitions: null
            },
            a = i !== null ? i.baseLanes : r,
            jt(fl, Oa),
            Oa |= a
        }
    else
        i !== null ? (a = i.baseLanes | r,
        t.memoizedState = null) : a = r,
        jt(fl, Oa),
        Oa |= a;
    return aa(e, t, n, r),
    t.child
}
function F9(e, t) {
    var r = t.ref;
    (e === null && r !== null || e !== null && e.ref !== r) && (t.flags |= 512,
    t.flags |= 2097152)
}
function by(e, t, r, a, n) {
    var i = Aa(r) ? ps : Qr.current;
    return i = Pl(t, i),
    kl(t, n),
    r = lg(e, t, r, a, i, n),
    a = ug(),
    e !== null && !Sa ? (t.updateQueue = e.updateQueue,
    t.flags &= -2053,
    e.lanes &= ~n,
    qi(e, t, n)) : (Qt && a && Kw(t),
    t.flags |= 1,
    aa(e, t, r, n),
    t.child)
}
function i_(e, t, r, a, n) {
    if (Aa(r)) {
        var i = !0;
        Kv(t)
    } else
        i = !1;
    if (kl(t, n),
    t.stateNode === null)
        kv(e, t),
        s9(t, r, a),
        gy(t, r, a, n),
        a = !0;
    else if (e === null) {
        var o = t.stateNode
          , s = t.memoizedProps;
        o.props = s;
        var l = o.context
          , u = r.contextType;
        typeof u == "object" && u !== null ? u = fn(u) : (u = Aa(r) ? ps : Qr.current,
        u = Pl(t, u));
        var c = r.getDerivedStateFromProps
          , d = typeof c == "function" || typeof o.getSnapshotBeforeUpdate == "function";
        d || typeof o.UNSAFE_componentWillReceiveProps != "function" && typeof o.componentWillReceiveProps != "function" || (s !== a || l !== u) && K0(t, o, a, u),
        oo = !1;
        var v = t.memoizedState;
        o.state = v,
        th(t, a, o, n),
        l = t.memoizedState,
        s !== a || v !== l || xa.current || oo ? (typeof c == "function" && (wy(t, r, c, a),
        l = t.memoizedState),
        (s = oo || J0(t, r, s, a, v, l, u)) ? (d || typeof o.UNSAFE_componentWillMount != "function" && typeof o.componentWillMount != "function" || (typeof o.componentWillMount == "function" && o.componentWillMount(),
        typeof o.UNSAFE_componentWillMount == "function" && o.UNSAFE_componentWillMount()),
        typeof o.componentDidMount == "function" && (t.flags |= 4194308)) : (typeof o.componentDidMount == "function" && (t.flags |= 4194308),
        t.memoizedProps = a,
        t.memoizedState = l),
        o.props = a,
        o.state = l,
        o.context = u,
        a = s) : (typeof o.componentDidMount == "function" && (t.flags |= 4194308),
        a = !1)
    } else {
        o = t.stateNode,
        i9(e, t),
        s = t.memoizedProps,
        u = t.type === t.elementType ? s : kn(t.type, s),
        o.props = u,
        d = t.pendingProps,
        v = o.context,
        l = r.contextType,
        typeof l == "object" && l !== null ? l = fn(l) : (l = Aa(r) ? ps : Qr.current,
        l = Pl(t, l));
        var h = r.getDerivedStateFromProps;
        (c = typeof h == "function" || typeof o.getSnapshotBeforeUpdate == "function") || typeof o.UNSAFE_componentWillReceiveProps != "function" && typeof o.componentWillReceiveProps != "function" || (s !== d || v !== l) && K0(t, o, a, l),
        oo = !1,
        v = t.memoizedState,
        o.state = v,
        th(t, a, o, n);
        var p = t.memoizedState;
        s !== d || v !== p || xa.current || oo ? (typeof h == "function" && (wy(t, r, h, a),
        p = t.memoizedState),
        (u = oo || J0(t, r, u, a, v, p, l) || !1) ? (c || typeof o.UNSAFE_componentWillUpdate != "function" && typeof o.componentWillUpdate != "function" || (typeof o.componentWillUpdate == "function" && o.componentWillUpdate(a, p, l),
        typeof o.UNSAFE_componentWillUpdate == "function" && o.UNSAFE_componentWillUpdate(a, p, l)),
        typeof o.componentDidUpdate == "function" && (t.flags |= 4),
        typeof o.getSnapshotBeforeUpdate == "function" && (t.flags |= 1024)) : (typeof o.componentDidUpdate != "function" || s === e.memoizedProps && v === e.memoizedState || (t.flags |= 4),
        typeof o.getSnapshotBeforeUpdate != "function" || s === e.memoizedProps && v === e.memoizedState || (t.flags |= 1024),
        t.memoizedProps = a,
        t.memoizedState = p),
        o.props = a,
        o.state = p,
        o.context = l,
        a = u) : (typeof o.componentDidUpdate != "function" || s === e.memoizedProps && v === e.memoizedState || (t.flags |= 4),
        typeof o.getSnapshotBeforeUpdate != "function" || s === e.memoizedProps && v === e.memoizedState || (t.flags |= 1024),
        a = !1)
    }
    return Cy(e, t, r, a, i, n)
}
function Cy(e, t, r, a, n, i) {
    F9(e, t);
    var o = (t.flags & 128) !== 0;
    if (!a && !o)
        return n && G0(t, r, !1),
        qi(e, t, i);
    a = t.stateNode,
    _I.current = t;
    var s = o && typeof r.getDerivedStateFromError != "function" ? null : a.render();
    return t.flags |= 1,
    e !== null && o ? (t.child = Rl(t, e.child, null, i),
    t.child = Rl(t, null, s, i)) : aa(e, t, s, i),
    t.memoizedState = a.state,
    n && G0(t, r, !0),
    t.child
}
function O9(e) {
    var t = e.stateNode;
    t.pendingContext ? z0(e, t.pendingContext, t.pendingContext !== t.context) : t.context && z0(e, t.context, !1),
    ng(e, t.containerInfo)
}
function o_(e, t, r, a, n) {
    return Bl(),
    Zw(n),
    t.flags |= 256,
    aa(e, t, r, a),
    t.child
}
var Sy = {
    dehydrated: null,
    treeContext: null,
    retryLane: 0
};
function xy(e) {
    return {
        baseLanes: e,
        cachePool: null,
        transitions: null
    }
}
function P9(e, t, r) {
    var a = t.pendingProps, n = er.current, i = !1, o = (t.flags & 128) !== 0, s;
    if ((s = o) || (s = e !== null && e.memoizedState === null ? !1 : (n & 2) !== 0),
    s ? (i = !0,
    t.flags &= -129) : (e === null || e.memoizedState !== null) && (n |= 1),
    jt(er, n & 1),
    e === null)
        return py(t),
        e = t.memoizedState,
        e !== null && (e = e.dehydrated,
        e !== null) ? (t.mode & 1 ? e.data === "$!" ? t.lanes = 8 : t.lanes = 1073741824 : t.lanes = 1,
        null) : (o = a.children,
        e = a.fallback,
        i ? (a = t.mode,
        i = t.child,
        o = {
            mode: "hidden",
            children: o
        },
        !(a & 1) && i !== null ? (i.childLanes = 0,
        i.pendingProps = o) : i = mm(o, a, 0, null),
        e = hs(e, a, r, null),
        i.return = t,
        e.return = t,
        i.sibling = e,
        t.child = i,
        t.child.memoizedState = xy(r),
        t.memoizedState = Sy,
        e) : vg(t, o));
    if (n = e.memoizedState,
    n !== null && (s = n.dehydrated,
    s !== null))
        return bI(e, t, o, a, s, n, r);
    if (i) {
        i = a.fallback,
        o = t.mode,
        n = e.child,
        s = n.sibling;
        var l = {
            mode: "hidden",
            children: a.children
        };
        return !(o & 1) && t.child !== n ? (a = t.child,
        a.childLanes = 0,
        a.pendingProps = l,
        t.deletions = null) : (a = To(n, l),
        a.subtreeFlags = n.subtreeFlags & 14680064),
        s !== null ? i = To(s, i) : (i = hs(i, o, r, null),
        i.flags |= 2),
        i.return = t,
        a.return = t,
        a.sibling = i,
        t.child = a,
        a = i,
        i = t.child,
        o = e.child.memoizedState,
        o = o === null ? xy(r) : {
            baseLanes: o.baseLanes | r,
            cachePool: null,
            transitions: o.transitions
        },
        i.memoizedState = o,
        i.childLanes = e.childLanes & ~r,
        t.memoizedState = Sy,
        a
    }
    return i = e.child,
    e = i.sibling,
    a = To(i, {
        mode: "visible",
        children: a.children
    }),
    !(t.mode & 1) && (a.lanes = r),
    a.return = t,
    a.sibling = null,
    e !== null && (r = t.deletions,
    r === null ? (t.deletions = [e],
    t.flags |= 16) : r.push(e)),
    t.child = a,
    t.memoizedState = null,
    a
}
function vg(e, t) {
    return t = mm({
        mode: "visible",
        children: t
    }, e.mode, 0, null),
    t.return = e,
    e.child = t
}
function Ud(e, t, r, a) {
    return a !== null && Zw(a),
    Rl(t, e.child, null, r),
    e = vg(t, t.pendingProps.children),
    e.flags |= 2,
    t.memoizedState = null,
    e
}
function bI(e, t, r, a, n, i, o) {
    if (r)
        return t.flags & 256 ? (t.flags &= -257,
        a = ep(Error(Ne(422))),
        Ud(e, t, o, a)) : t.memoizedState !== null ? (t.child = e.child,
        t.flags |= 128,
        null) : (i = a.fallback,
        n = t.mode,
        a = mm({
            mode: "visible",
            children: a.children
        }, n, 0, null),
        i = hs(i, n, o, null),
        i.flags |= 2,
        a.return = t,
        i.return = t,
        a.sibling = i,
        t.child = a,
        t.mode & 1 && Rl(t, e.child, null, o),
        t.child.memoizedState = xy(o),
        t.memoizedState = Sy,
        i);
    if (!(t.mode & 1))
        return Ud(e, t, o, null);
    if (n.data === "$!") {
        if (a = n.nextSibling && n.nextSibling.dataset,
        a)
            var s = a.dgst;
        return a = s,
        i = Error(Ne(419)),
        a = ep(i, a, void 0),
        Ud(e, t, o, a)
    }
    if (s = (o & e.childLanes) !== 0,
    Sa || s) {
        if (a = kr,
        a !== null) {
            switch (o & -o) {
            case 4:
                n = 2;
                break;
            case 16:
                n = 8;
                break;
            case 64:
            case 128:
            case 256:
            case 512:
            case 1024:
            case 2048:
            case 4096:
            case 8192:
            case 16384:
            case 32768:
            case 65536:
            case 131072:
            case 262144:
            case 524288:
            case 1048576:
            case 2097152:
            case 4194304:
            case 8388608:
            case 16777216:
            case 33554432:
            case 67108864:
                n = 32;
                break;
            case 536870912:
                n = 268435456;
                break;
            default:
                n = 0
            }
            n = n & (a.suspendedLanes | o) ? 0 : n,
            n !== 0 && n !== i.retryLane && (i.retryLane = n,
            Li(e, n),
            Bn(a, e, n, -1))
        }
        return wg(),
        a = ep(Error(Ne(421))),
        Ud(e, t, o, a)
    }
    return n.data === "$?" ? (t.flags |= 128,
    t.child = e.child,
    t = FI.bind(null, e),
    n._reactRetry = t,
    null) : (e = i.treeContext,
    Ba = xo(n.nextSibling),
    Ra = t,
    Qt = !0,
    In = null,
    e !== null && (nn[on++] = Ni,
    nn[on++] = Mi,
    nn[on++] = ys,
    Ni = e.id,
    Mi = e.overflow,
    ys = t),
    t = vg(t, a.children),
    t.flags |= 4096,
    t)
}
function s_(e, t, r) {
    e.lanes |= t;
    var a = e.alternate;
    a !== null && (a.lanes |= t),
    yy(e.return, t, r)
}
function tp(e, t, r, a, n) {
    var i = e.memoizedState;
    i === null ? e.memoizedState = {
        isBackwards: t,
        rendering: null,
        renderingStartTime: 0,
        last: a,
        tail: r,
        tailMode: n
    } : (i.isBackwards = t,
    i.rendering = null,
    i.renderingStartTime = 0,
    i.last = a,
    i.tail = r,
    i.tailMode = n)
}
function B9(e, t, r) {
    var a = t.pendingProps
      , n = a.revealOrder
      , i = a.tail;
    if (aa(e, t, a.children, r),
    a = er.current,
    a & 2)
        a = a & 1 | 2,
        t.flags |= 128;
    else {
        if (e !== null && e.flags & 128)
            e: for (e = t.child; e !== null; ) {
                if (e.tag === 13)
                    e.memoizedState !== null && s_(e, r, t);
                else if (e.tag === 19)
                    s_(e, r, t);
                else if (e.child !== null) {
                    e.child.return = e,
                    e = e.child;
                    continue
                }
                if (e === t)
                    break e;
                for (; e.sibling === null; ) {
                    if (e.return === null || e.return === t)
                        break e;
                    e = e.return
                }
                e.sibling.return = e.return,
                e = e.sibling
            }
        a &= 1
    }
    if (jt(er, a),
    !(t.mode & 1))
        t.memoizedState = null;
    else
        switch (n) {
        case "forwards":
            for (r = t.child,
            n = null; r !== null; )
                e = r.alternate,
                e !== null && rh(e) === null && (n = r),
                r = r.sibling;
            r = n,
            r === null ? (n = t.child,
            t.child = null) : (n = r.sibling,
            r.sibling = null),
            tp(t, !1, n, r, i);
            break;
        case "backwards":
            for (r = null,
            n = t.child,
            t.child = null; n !== null; ) {
                if (e = n.alternate,
                e !== null && rh(e) === null) {
                    t.child = n;
                    break
                }
                e = n.sibling,
                n.sibling = r,
                r = n,
                n = e
            }
            tp(t, !0, r, null, i);
            break;
        case "together":
            tp(t, !1, null, null, void 0);
            break;
        default:
            t.memoizedState = null
        }
    return t.child
}
function kv(e, t) {
    !(t.mode & 1) && e !== null && (e.alternate = null,
    t.alternate = null,
    t.flags |= 2)
}
function qi(e, t, r) {
    if (e !== null && (t.dependencies = e.dependencies),
    gs |= t.lanes,
    !(r & t.childLanes))
        return null;
    if (e !== null && t.child !== e.child)
        throw Error(Ne(153));
    if (t.child !== null) {
        for (e = t.child,
        r = To(e, e.pendingProps),
        t.child = r,
        r.return = t; e.sibling !== null; )
            e = e.sibling,
            r = r.sibling = To(e, e.pendingProps),
            r.return = t;
        r.sibling = null
    }
    return t.child
}
function CI(e, t, r) {
    switch (t.tag) {
    case 3:
        O9(t),
        Bl();
        break;
    case 5:
        c9(t);
        break;
    case 1:
        Aa(t.type) && Kv(t);
        break;
    case 4:
        ng(t, t.stateNode.containerInfo);
        break;
    case 10:
        var a = t.type._context
          , n = t.memoizedProps.value;
        jt(Xv, a._currentValue),
        a._currentValue = n;
        break;
    case 13:
        if (a = t.memoizedState,
        a !== null)
            return a.dehydrated !== null ? (jt(er, er.current & 1),
            t.flags |= 128,
            null) : r & t.child.childLanes ? P9(e, t, r) : (jt(er, er.current & 1),
            e = qi(e, t, r),
            e !== null ? e.sibling : null);
        jt(er, er.current & 1);
        break;
    case 19:
        if (a = (r & t.childLanes) !== 0,
        e.flags & 128) {
            if (a)
                return B9(e, t, r);
            t.flags |= 128
        }
        if (n = t.memoizedState,
        n !== null && (n.rendering = null,
        n.tail = null,
        n.lastEffect = null),
        jt(er, er.current),
        a)
            break;
        return null;
    case 22:
    case 23:
        return t.lanes = 0,
        U9(e, t, r)
    }
    return qi(e, t, r)
}
var R9, Ay, L9, q9;
R9 = function(e, t) {
    for (var r = t.child; r !== null; ) {
        if (r.tag === 5 || r.tag === 6)
            e.appendChild(r.stateNode);
        else if (r.tag !== 4 && r.child !== null) {
            r.child.return = r,
            r = r.child;
            continue
        }
        if (r === t)
            break;
        for (; r.sibling === null; ) {
            if (r.return === null || r.return === t)
                return;
            r = r.return
        }
        r.sibling.return = r.return,
        r = r.sibling
    }
}
;
Ay = function() {}
;
L9 = function(e, t, r, a) {
    var n = e.memoizedProps;
    if (n !== a) {
        e = t.stateNode,
        ls(li.current);
        var i = null;
        switch (r) {
        case "input":
            n = Wp(e, n),
            a = Wp(e, a),
            i = [];
            break;
        case "select":
            n = rr({}, n, {
                value: void 0
            }),
            a = rr({}, a, {
                value: void 0
            }),
            i = [];
            break;
        case "textarea":
            n = Kp(e, n),
            a = Kp(e, a),
            i = [];
            break;
        default:
            typeof n.onClick != "function" && typeof a.onClick == "function" && (e.onclick = Yv)
        }
        Zp(r, a);
        var o;
        r = null;
        for (u in n)
            if (!a.hasOwnProperty(u) && n.hasOwnProperty(u) && n[u] != null)
                if (u === "style") {
                    var s = n[u];
                    for (o in s)
                        s.hasOwnProperty(o) && (r || (r = {}),
                        r[o] = "")
                } else
                    u !== "dangerouslySetInnerHTML" && u !== "children" && u !== "suppressContentEditableWarning" && u !== "suppressHydrationWarning" && u !== "autoFocus" && (vc.hasOwnProperty(u) ? i || (i = []) : (i = i || []).push(u, null));
        for (u in a) {
            var l = a[u];
            if (s = n != null ? n[u] : void 0,
            a.hasOwnProperty(u) && l !== s && (l != null || s != null))
                if (u === "style")
                    if (s) {
                        for (o in s)
                            !s.hasOwnProperty(o) || l && l.hasOwnProperty(o) || (r || (r = {}),
                            r[o] = "");
                        for (o in l)
                            l.hasOwnProperty(o) && s[o] !== l[o] && (r || (r = {}),
                            r[o] = l[o])
                    } else
                        r || (i || (i = []),
                        i.push(u, r)),
                        r = l;
                else
                    u === "dangerouslySetInnerHTML" ? (l = l ? l.__html : void 0,
                    s = s ? s.__html : void 0,
                    l != null && s !== l && (i = i || []).push(u, l)) : u === "children" ? typeof l != "string" && typeof l != "number" || (i = i || []).push(u, "" + l) : u !== "suppressContentEditableWarning" && u !== "suppressHydrationWarning" && (vc.hasOwnProperty(u) ? (l != null && u === "onScroll" && Wt("scroll", e),
                    i || s === l || (i = [])) : (i = i || []).push(u, l))
        }
        r && (i = i || []).push("style", r);
        var u = i;
        (t.updateQueue = u) && (t.flags |= 4)
    }
}
;
q9 = function(e, t, r, a) {
    r !== a && (t.flags |= 4)
}
;
function Uu(e, t) {
    if (!Qt)
        switch (e.tailMode) {
        case "hidden":
            t = e.tail;
            for (var r = null; t !== null; )
                t.alternate !== null && (r = t),
                t = t.sibling;
            r === null ? e.tail = null : r.sibling = null;
            break;
        case "collapsed":
            r = e.tail;
            for (var a = null; r !== null; )
                r.alternate !== null && (a = r),
                r = r.sibling;
            a === null ? t || e.tail === null ? e.tail = null : e.tail.sibling = null : a.sibling = null
        }
}
function Gr(e) {
    var t = e.alternate !== null && e.alternate.child === e.child
      , r = 0
      , a = 0;
    if (t)
        for (var n = e.child; n !== null; )
            r |= n.lanes | n.childLanes,
            a |= n.subtreeFlags & 14680064,
            a |= n.flags & 14680064,
            n.return = e,
            n = n.sibling;
    else
        for (n = e.child; n !== null; )
            r |= n.lanes | n.childLanes,
            a |= n.subtreeFlags,
            a |= n.flags,
            n.return = e,
            n = n.sibling;
    return e.subtreeFlags |= a,
    e.childLanes = r,
    t
}
function SI(e, t, r) {
    var a = t.pendingProps;
    switch (Qw(t),
    t.tag) {
    case 2:
    case 16:
    case 15:
    case 0:
    case 11:
    case 7:
    case 8:
    case 12:
    case 9:
    case 14:
        return Gr(t),
        null;
    case 1:
        return Aa(t.type) && Jv(),
        Gr(t),
        null;
    case 3:
        return a = t.stateNode,
        Ll(),
        Jt(xa),
        Jt(Qr),
        og(),
        a.pendingContext && (a.context = a.pendingContext,
        a.pendingContext = null),
        (e === null || e.child === null) && (Id(t) ? t.flags |= 4 : e === null || e.memoizedState.isDehydrated && !(t.flags & 256) || (t.flags |= 1024,
        In !== null && (Uy(In),
        In = null))),
        Ay(e, t),
        Gr(t),
        null;
    case 5:
        ig(t);
        var n = ls(xc.current);
        if (r = t.type,
        e !== null && t.stateNode != null)
            L9(e, t, r, a, n),
            e.ref !== t.ref && (t.flags |= 512,
            t.flags |= 2097152);
        else {
            if (!a) {
                if (t.stateNode === null)
                    throw Error(Ne(166));
                return Gr(t),
                null
            }
            if (e = ls(li.current),
            Id(t)) {
                a = t.stateNode,
                r = t.type;
                var i = t.memoizedProps;
                switch (a[ni] = t,
                a[Cc] = i,
                e = (t.mode & 1) !== 0,
                r) {
                case "dialog":
                    Wt("cancel", a),
                    Wt("close", a);
                    break;
                case "iframe":
                case "object":
                case "embed":
                    Wt("load", a);
                    break;
                case "video":
                case "audio":
                    for (n = 0; n < Wu.length; n++)
                        Wt(Wu[n], a);
                    break;
                case "source":
                    Wt("error", a);
                    break;
                case "img":
                case "image":
                case "link":
                    Wt("error", a),
                    Wt("load", a);
                    break;
                case "details":
                    Wt("toggle", a);
                    break;
                case "input":
                    p0(a, i),
                    Wt("invalid", a);
                    break;
                case "select":
                    a._wrapperState = {
                        wasMultiple: !!i.multiple
                    },
                    Wt("invalid", a);
                    break;
                case "textarea":
                    w0(a, i),
                    Wt("invalid", a)
                }
                Zp(r, i),
                n = null;
                for (var o in i)
                    if (i.hasOwnProperty(o)) {
                        var s = i[o];
                        o === "children" ? typeof s == "string" ? a.textContent !== s && (i.suppressHydrationWarning !== !0 && Md(a.textContent, s, e),
                        n = ["children", s]) : typeof s == "number" && a.textContent !== "" + s && (i.suppressHydrationWarning !== !0 && Md(a.textContent, s, e),
                        n = ["children", "" + s]) : vc.hasOwnProperty(o) && s != null && o === "onScroll" && Wt("scroll", a)
                    }
                switch (r) {
                case "input":
                    Cd(a),
                    y0(a, i, !0);
                    break;
                case "textarea":
                    Cd(a),
                    g0(a);
                    break;
                case "select":
                case "option":
                    break;
                default:
                    typeof i.onClick == "function" && (a.onclick = Yv)
                }
                a = n,
                t.updateQueue = a,
                a !== null && (t.flags |= 4)
            } else {
                o = n.nodeType === 9 ? n : n.ownerDocument,
                e === "http://www.w3.org/1999/xhtml" && (e = h5(r)),
                e === "http://www.w3.org/1999/xhtml" ? r === "script" ? (e = o.createElement("div"),
                e.innerHTML = "<script><\/script>",
                e = e.removeChild(e.firstChild)) : typeof a.is == "string" ? e = o.createElement(r, {
                    is: a.is
                }) : (e = o.createElement(r),
                r === "select" && (o = e,
                a.multiple ? o.multiple = !0 : a.size && (o.size = a.size))) : e = o.createElementNS(e, r),
                e[ni] = t,
                e[Cc] = a,
                R9(e, t, !1, !1),
                t.stateNode = e;
                e: {
                    switch (o = Xp(r, a),
                    r) {
                    case "dialog":
                        Wt("cancel", e),
                        Wt("close", e),
                        n = a;
                        break;
                    case "iframe":
                    case "object":
                    case "embed":
                        Wt("load", e),
                        n = a;
                        break;
                    case "video":
                    case "audio":
                        for (n = 0; n < Wu.length; n++)
                            Wt(Wu[n], e);
                        n = a;
                        break;
                    case "source":
                        Wt("error", e),
                        n = a;
                        break;
                    case "img":
                    case "image":
                    case "link":
                        Wt("error", e),
                        Wt("load", e),
                        n = a;
                        break;
                    case "details":
                        Wt("toggle", e),
                        n = a;
                        break;
                    case "input":
                        p0(e, a),
                        n = Wp(e, a),
                        Wt("invalid", e);
                        break;
                    case "option":
                        n = a;
                        break;
                    case "select":
                        e._wrapperState = {
                            wasMultiple: !!a.multiple
                        },
                        n = rr({}, a, {
                            value: void 0
                        }),
                        Wt("invalid", e);
                        break;
                    case "textarea":
                        w0(e, a),
                        n = Kp(e, a),
                        Wt("invalid", e);
                        break;
                    default:
                        n = a
                    }
                    Zp(r, n),
                    s = n;
                    for (i in s)
                        if (s.hasOwnProperty(i)) {
                            var l = s[i];
                            i === "style" ? p5(e, l) : i === "dangerouslySetInnerHTML" ? (l = l ? l.__html : void 0,
                            l != null && m5(e, l)) : i === "children" ? typeof l == "string" ? (r !== "textarea" || l !== "") && hc(e, l) : typeof l == "number" && hc(e, "" + l) : i !== "suppressContentEditableWarning" && i !== "suppressHydrationWarning" && i !== "autoFocus" && (vc.hasOwnProperty(i) ? l != null && i === "onScroll" && Wt("scroll", e) : l != null && Pw(e, i, l, o))
                        }
                    switch (r) {
                    case "input":
                        Cd(e),
                        y0(e, a, !1);
                        break;
                    case "textarea":
                        Cd(e),
                        g0(e);
                        break;
                    case "option":
                        a.value != null && e.setAttribute("value", "" + Mo(a.value));
                        break;
                    case "select":
                        e.multiple = !!a.multiple,
                        i = a.value,
                        i != null ? Sl(e, !!a.multiple, i, !1) : a.defaultValue != null && Sl(e, !!a.multiple, a.defaultValue, !0);
                        break;
                    default:
                        typeof n.onClick == "function" && (e.onclick = Yv)
                    }
                    switch (r) {
                    case "button":
                    case "input":
                    case "select":
                    case "textarea":
                        a = !!a.autoFocus;
                        break e;
                    case "img":
                        a = !0;
                        break e;
                    default:
                        a = !1
                    }
                }
                a && (t.flags |= 4)
            }
            t.ref !== null && (t.flags |= 512,
            t.flags |= 2097152)
        }
        return Gr(t),
        null;
    case 6:
        if (e && t.stateNode != null)
            q9(e, t, e.memoizedProps, a);
        else {
            if (typeof a != "string" && t.stateNode === null)
                throw Error(Ne(166));
            if (r = ls(xc.current),
            ls(li.current),
            Id(t)) {
                if (a = t.stateNode,
                r = t.memoizedProps,
                a[ni] = t,
                (i = a.nodeValue !== r) && (e = Ra,
                e !== null))
                    switch (e.tag) {
                    case 3:
                        Md(a.nodeValue, r, (e.mode & 1) !== 0);
                        break;
                    case 5:
                        e.memoizedProps.suppressHydrationWarning !== !0 && Md(a.nodeValue, r, (e.mode & 1) !== 0)
                    }
                i && (t.flags |= 4)
            } else
                a = (r.nodeType === 9 ? r : r.ownerDocument).createTextNode(a),
                a[ni] = t,
                t.stateNode = a
        }
        return Gr(t),
        null;
    case 13:
        if (Jt(er),
        a = t.memoizedState,
        e === null || e.memoizedState !== null && e.memoizedState.dehydrated !== null) {
            if (Qt && Ba !== null && t.mode & 1 && !(t.flags & 128))
                a9(),
                Bl(),
                t.flags |= 98560,
                i = !1;
            else if (i = Id(t),
            a !== null && a.dehydrated !== null) {
                if (e === null) {
                    if (!i)
                        throw Error(Ne(318));
                    if (i = t.memoizedState,
                    i = i !== null ? i.dehydrated : null,
                    !i)
                        throw Error(Ne(317));
                    i[ni] = t
                } else
                    Bl(),
                    !(t.flags & 128) && (t.memoizedState = null),
                    t.flags |= 4;
                Gr(t),
                i = !1
            } else
                In !== null && (Uy(In),
                In = null),
                i = !0;
            if (!i)
                return t.flags & 65536 ? t : null
        }
        return t.flags & 128 ? (t.lanes = r,
        t) : (a = a !== null,
        a !== (e !== null && e.memoizedState !== null) && a && (t.child.flags |= 8192,
        t.mode & 1 && (e === null || er.current & 1 ? _r === 0 && (_r = 3) : wg())),
        t.updateQueue !== null && (t.flags |= 4),
        Gr(t),
        null);
    case 4:
        return Ll(),
        Ay(e, t),
        e === null && _c(t.stateNode.containerInfo),
        Gr(t),
        null;
    case 10:
        return tg(t.type._context),
        Gr(t),
        null;
    case 17:
        return Aa(t.type) && Jv(),
        Gr(t),
        null;
    case 19:
        if (Jt(er),
        i = t.memoizedState,
        i === null)
            return Gr(t),
            null;
        if (a = (t.flags & 128) !== 0,
        o = i.rendering,
        o === null)
            if (a)
                Uu(i, !1);
            else {
                if (_r !== 0 || e !== null && e.flags & 128)
                    for (e = t.child; e !== null; ) {
                        if (o = rh(e),
                        o !== null) {
                            for (t.flags |= 128,
                            Uu(i, !1),
                            a = o.updateQueue,
                            a !== null && (t.updateQueue = a,
                            t.flags |= 4),
                            t.subtreeFlags = 0,
                            a = r,
                            r = t.child; r !== null; )
                                i = r,
                                e = a,
                                i.flags &= 14680066,
                                o = i.alternate,
                                o === null ? (i.childLanes = 0,
                                i.lanes = e,
                                i.child = null,
                                i.subtreeFlags = 0,
                                i.memoizedProps = null,
                                i.memoizedState = null,
                                i.updateQueue = null,
                                i.dependencies = null,
                                i.stateNode = null) : (i.childLanes = o.childLanes,
                                i.lanes = o.lanes,
                                i.child = o.child,
                                i.subtreeFlags = 0,
                                i.deletions = null,
                                i.memoizedProps = o.memoizedProps,
                                i.memoizedState = o.memoizedState,
                                i.updateQueue = o.updateQueue,
                                i.type = o.type,
                                e = o.dependencies,
                                i.dependencies = e === null ? null : {
                                    lanes: e.lanes,
                                    firstContext: e.firstContext
                                }),
                                r = r.sibling;
                            return jt(er, er.current & 1 | 2),
                            t.child
                        }
                        e = e.sibling
                    }
                i.tail !== null && ur() > Vl && (t.flags |= 128,
                a = !0,
                Uu(i, !1),
                t.lanes = 4194304)
            }
        else {
            if (!a)
                if (e = rh(o),
                e !== null) {
                    if (t.flags |= 128,
                    a = !0,
                    r = e.updateQueue,
                    r !== null && (t.updateQueue = r,
                    t.flags |= 4),
                    Uu(i, !0),
                    i.tail === null && i.tailMode === "hidden" && !o.alternate && !Qt)
                        return Gr(t),
                        null
                } else
                    2 * ur() - i.renderingStartTime > Vl && r !== 1073741824 && (t.flags |= 128,
                    a = !0,
                    Uu(i, !1),
                    t.lanes = 4194304);
            i.isBackwards ? (o.sibling = t.child,
            t.child = o) : (r = i.last,
            r !== null ? r.sibling = o : t.child = o,
            i.last = o)
        }
        return i.tail !== null ? (t = i.tail,
        i.rendering = t,
        i.tail = t.sibling,
        i.renderingStartTime = ur(),
        t.sibling = null,
        r = er.current,
        jt(er, a ? r & 1 | 2 : r & 1),
        t) : (Gr(t),
        null);
    case 22:
    case 23:
        return yg(),
        a = t.memoizedState !== null,
        e !== null && e.memoizedState !== null !== a && (t.flags |= 8192),
        a && t.mode & 1 ? Oa & 1073741824 && (Gr(t),
        t.subtreeFlags & 6 && (t.flags |= 8192)) : Gr(t),
        null;
    case 24:
        return null;
    case 25:
        return null
    }
    throw Error(Ne(156, t.tag))
}
function xI(e, t) {
    switch (Qw(t),
    t.tag) {
    case 1:
        return Aa(t.type) && Jv(),
        e = t.flags,
        e & 65536 ? (t.flags = e & -65537 | 128,
        t) : null;
    case 3:
        return Ll(),
        Jt(xa),
        Jt(Qr),
        og(),
        e = t.flags,
        e & 65536 && !(e & 128) ? (t.flags = e & -65537 | 128,
        t) : null;
    case 5:
        return ig(t),
        null;
    case 13:
        if (Jt(er),
        e = t.memoizedState,
        e !== null && e.dehydrated !== null) {
            if (t.alternate === null)
                throw Error(Ne(340));
            Bl()
        }
        return e = t.flags,
        e & 65536 ? (t.flags = e & -65537 | 128,
        t) : null;
    case 19:
        return Jt(er),
        null;
    case 4:
        return Ll(),
        null;
    case 10:
        return tg(t.type._context),
        null;
    case 22:
    case 23:
        return yg(),
        null;
    case 24:
        return null;
    default:
        return null
    }
}
var Fd = !1
  , Hr = !1
  , AI = typeof WeakSet == "function" ? WeakSet : Set
  , Fe = null;
function ml(e, t) {
    var r = e.ref;
    if (r !== null)
        if (typeof r == "function")
            try {
                r(null)
            } catch (a) {
                ir(e, t, a)
            }
        else
            r.current = null
}
function Ey(e, t, r) {
    try {
        r()
    } catch (a) {
        ir(e, t, a)
    }
}
var l_ = !1;
function EI(e, t) {
    if (uy = jv,
    e = G5(),
    Jw(e)) {
        if ("selectionStart"in e)
            var r = {
                start: e.selectionStart,
                end: e.selectionEnd
            };
        else
            e: {
                r = (r = e.ownerDocument) && r.defaultView || window;
                var a = r.getSelection && r.getSelection();
                if (a && a.rangeCount !== 0) {
                    r = a.anchorNode;
                    var n = a.anchorOffset
                      , i = a.focusNode;
                    a = a.focusOffset;
                    try {
                        r.nodeType,
                        i.nodeType
                    } catch {
                        r = null;
                        break e
                    }
                    var o = 0
                      , s = -1
                      , l = -1
                      , u = 0
                      , c = 0
                      , d = e
                      , v = null;
                    t: for (; ; ) {
                        for (var h; d !== r || n !== 0 && d.nodeType !== 3 || (s = o + n),
                        d !== i || a !== 0 && d.nodeType !== 3 || (l = o + a),
                        d.nodeType === 3 && (o += d.nodeValue.length),
                        (h = d.firstChild) !== null; )
                            v = d,
                            d = h;
                        for (; ; ) {
                            if (d === e)
                                break t;
                            if (v === r && ++u === n && (s = o),
                            v === i && ++c === a && (l = o),
                            (h = d.nextSibling) !== null)
                                break;
                            d = v,
                            v = d.parentNode
                        }
                        d = h
                    }
                    r = s === -1 || l === -1 ? null : {
                        start: s,
                        end: l
                    }
                } else
                    r = null
            }
        r = r || {
            start: 0,
            end: 0
        }
    } else
        r = null;
    for (cy = {
        focusedElem: e,
        selectionRange: r
    },
    jv = !1,
    Fe = t; Fe !== null; )
        if (t = Fe,
        e = t.child,
        (t.subtreeFlags & 1028) !== 0 && e !== null)
            e.return = t,
            Fe = e;
        else
            for (; Fe !== null; ) {
                t = Fe;
                try {
                    var p = t.alternate;
                    if (t.flags & 1024)
                        switch (t.tag) {
                        case 0:
                        case 11:
                        case 15:
                            break;
                        case 1:
                            if (p !== null) {
                                var f = p.memoizedProps
                                  , _ = p.memoizedState
                                  , y = t.stateNode
                                  , g = y.getSnapshotBeforeUpdate(t.elementType === t.type ? f : kn(t.type, f), _);
                                y.__reactInternalSnapshotBeforeUpdate = g
                            }
                            break;
                        case 3:
                            var m = t.stateNode.containerInfo;
                            m.nodeType === 1 ? m.textContent = "" : m.nodeType === 9 && m.documentElement && m.removeChild(m.documentElement);
                            break;
                        case 5:
                        case 6:
                        case 4:
                        case 17:
                            break;
                        default:
                            throw Error(Ne(163))
                        }
                } catch (w) {
                    ir(t, t.return, w)
                }
                if (e = t.sibling,
                e !== null) {
                    e.return = t.return,
                    Fe = e;
                    break
                }
                Fe = t.return
            }
    return p = l_,
    l_ = !1,
    p
}
function oc(e, t, r) {
    var a = t.updateQueue;
    if (a = a !== null ? a.lastEffect : null,
    a !== null) {
        var n = a = a.next;
        do {
            if ((n.tag & e) === e) {
                var i = n.destroy;
                n.destroy = void 0,
                i !== void 0 && Ey(t, r, i)
            }
            n = n.next
        } while (n !== a)
    }
}
function vm(e, t) {
    if (t = t.updateQueue,
    t = t !== null ? t.lastEffect : null,
    t !== null) {
        var r = t = t.next;
        do {
            if ((r.tag & e) === e) {
                var a = r.create;
                r.destroy = a()
            }
            r = r.next
        } while (r !== t)
    }
}
function ky(e) {
    var t = e.ref;
    if (t !== null) {
        var r = e.stateNode;
        switch (e.tag) {
        case 5:
            e = r;
            break;
        default:
            e = r
        }
        typeof t == "function" ? t(e) : t.current = e
    }
}
function V9(e) {
    var t = e.alternate;
    t !== null && (e.alternate = null,
    V9(t)),
    e.child = null,
    e.deletions = null,
    e.sibling = null,
    e.tag === 5 && (t = e.stateNode,
    t !== null && (delete t[ni],
    delete t[Cc],
    delete t[hy],
    delete t[lI],
    delete t[uI])),
    e.stateNode = null,
    e.return = null,
    e.dependencies = null,
    e.memoizedProps = null,
    e.memoizedState = null,
    e.pendingProps = null,
    e.stateNode = null,
    e.updateQueue = null
}
function $9(e) {
    return e.tag === 5 || e.tag === 3 || e.tag === 4
}
function u_(e) {
    e: for (; ; ) {
        for (; e.sibling === null; ) {
            if (e.return === null || $9(e.return))
                return null;
            e = e.return
        }
        for (e.sibling.return = e.return,
        e = e.sibling; e.tag !== 5 && e.tag !== 6 && e.tag !== 18; ) {
            if (e.flags & 2 || e.child === null || e.tag === 4)
                continue e;
            e.child.return = e,
            e = e.child
        }
        if (!(e.flags & 2))
            return e.stateNode
    }
}
function Ty(e, t, r) {
    var a = e.tag;
    if (a === 5 || a === 6)
        e = e.stateNode,
        t ? r.nodeType === 8 ? r.parentNode.insertBefore(e, t) : r.insertBefore(e, t) : (r.nodeType === 8 ? (t = r.parentNode,
        t.insertBefore(e, r)) : (t = r,
        t.appendChild(e)),
        r = r._reactRootContainer,
        r != null || t.onclick !== null || (t.onclick = Yv));
    else if (a !== 4 && (e = e.child,
    e !== null))
        for (Ty(e, t, r),
        e = e.sibling; e !== null; )
            Ty(e, t, r),
            e = e.sibling
}
function Ny(e, t, r) {
    var a = e.tag;
    if (a === 5 || a === 6)
        e = e.stateNode,
        t ? r.insertBefore(e, t) : r.appendChild(e);
    else if (a !== 4 && (e = e.child,
    e !== null))
        for (Ny(e, t, r),
        e = e.sibling; e !== null; )
            Ny(e, t, r),
            e = e.sibling
}
var Ur = null
  , Nn = !1;
function eo(e, t, r) {
    for (r = r.child; r !== null; )
        z9(e, t, r),
        r = r.sibling
}
function z9(e, t, r) {
    if (si && typeof si.onCommitFiberUnmount == "function")
        try {
            si.onCommitFiberUnmount(nm, r)
        } catch {}
    switch (r.tag) {
    case 5:
        Hr || ml(r, t);
    case 6:
        var a = Ur
          , n = Nn;
        Ur = null,
        eo(e, t, r),
        Ur = a,
        Nn = n,
        Ur !== null && (Nn ? (e = Ur,
        r = r.stateNode,
        e.nodeType === 8 ? e.parentNode.removeChild(r) : e.removeChild(r)) : Ur.removeChild(r.stateNode));
        break;
    case 18:
        Ur !== null && (Nn ? (e = Ur,
        r = r.stateNode,
        e.nodeType === 8 ? Yf(e.parentNode, r) : e.nodeType === 1 && Yf(e, r),
        yc(e)) : Yf(Ur, r.stateNode));
        break;
    case 4:
        a = Ur,
        n = Nn,
        Ur = r.stateNode.containerInfo,
        Nn = !0,
        eo(e, t, r),
        Ur = a,
        Nn = n;
        break;
    case 0:
    case 11:
    case 14:
    case 15:
        if (!Hr && (a = r.updateQueue,
        a !== null && (a = a.lastEffect,
        a !== null))) {
            n = a = a.next;
            do {
                var i = n
                  , o = i.destroy;
                i = i.tag,
                o !== void 0 && (i & 2 || i & 4) && Ey(r, t, o),
                n = n.next
            } while (n !== a)
        }
        eo(e, t, r);
        break;
    case 1:
        if (!Hr && (ml(r, t),
        a = r.stateNode,
        typeof a.componentWillUnmount == "function"))
            try {
                a.props = r.memoizedProps,
                a.state = r.memoizedState,
                a.componentWillUnmount()
            } catch (s) {
                ir(r, t, s)
            }
        eo(e, t, r);
        break;
    case 21:
        eo(e, t, r);
        break;
    case 22:
        r.mode & 1 ? (Hr = (a = Hr) || r.memoizedState !== null,
        eo(e, t, r),
        Hr = a) : eo(e, t, r);
        break;
    default:
        eo(e, t, r)
    }
}
function c_(e) {
    var t = e.updateQueue;
    if (t !== null) {
        e.updateQueue = null;
        var r = e.stateNode;
        r === null && (r = e.stateNode = new AI),
        t.forEach(function(a) {
            var n = OI.bind(null, e, a);
            r.has(a) || (r.add(a),
            a.then(n, n))
        })
    }
}
function Sn(e, t) {
    var r = t.deletions;
    if (r !== null)
        for (var a = 0; a < r.length; a++) {
            var n = r[a];
            try {
                var i = e
                  , o = t
                  , s = o;
                e: for (; s !== null; ) {
                    switch (s.tag) {
                    case 5:
                        Ur = s.stateNode,
                        Nn = !1;
                        break e;
                    case 3:
                        Ur = s.stateNode.containerInfo,
                        Nn = !0;
                        break e;
                    case 4:
                        Ur = s.stateNode.containerInfo,
                        Nn = !0;
                        break e
                    }
                    s = s.return
                }
                if (Ur === null)
                    throw Error(Ne(160));
                z9(i, o, n),
                Ur = null,
                Nn = !1;
                var l = n.alternate;
                l !== null && (l.return = null),
                n.return = null
            } catch (u) {
                ir(n, t, u)
            }
        }
    if (t.subtreeFlags & 12854)
        for (t = t.child; t !== null; )
            G9(t, e),
            t = t.sibling
}
function G9(e, t) {
    var r = e.alternate
      , a = e.flags;
    switch (e.tag) {
    case 0:
    case 11:
    case 14:
    case 15:
        if (Sn(t, e),
        Xn(e),
        a & 4) {
            try {
                oc(3, e, e.return),
                vm(3, e)
            } catch (f) {
                ir(e, e.return, f)
            }
            try {
                oc(5, e, e.return)
            } catch (f) {
                ir(e, e.return, f)
            }
        }
        break;
    case 1:
        Sn(t, e),
        Xn(e),
        a & 512 && r !== null && ml(r, r.return);
        break;
    case 5:
        if (Sn(t, e),
        Xn(e),
        a & 512 && r !== null && ml(r, r.return),
        e.flags & 32) {
            var n = e.stateNode;
            try {
                hc(n, "")
            } catch (f) {
                ir(e, e.return, f)
            }
        }
        if (a & 4 && (n = e.stateNode,
        n != null)) {
            var i = e.memoizedProps
              , o = r !== null ? r.memoizedProps : i
              , s = e.type
              , l = e.updateQueue;
            if (e.updateQueue = null,
            l !== null)
                try {
                    s === "input" && i.type === "radio" && i.name != null && d5(n, i),
                    Xp(s, o);
                    var u = Xp(s, i);
                    for (o = 0; o < l.length; o += 2) {
                        var c = l[o]
                          , d = l[o + 1];
                        c === "style" ? p5(n, d) : c === "dangerouslySetInnerHTML" ? m5(n, d) : c === "children" ? hc(n, d) : Pw(n, c, d, u)
                    }
                    switch (s) {
                    case "input":
                        Yp(n, i);
                        break;
                    case "textarea":
                        v5(n, i);
                        break;
                    case "select":
                        var v = n._wrapperState.wasMultiple;
                        n._wrapperState.wasMultiple = !!i.multiple;
                        var h = i.value;
                        h != null ? Sl(n, !!i.multiple, h, !1) : v !== !!i.multiple && (i.defaultValue != null ? Sl(n, !!i.multiple, i.defaultValue, !0) : Sl(n, !!i.multiple, i.multiple ? [] : "", !1))
                    }
                    n[Cc] = i
                } catch (f) {
                    ir(e, e.return, f)
                }
        }
        break;
    case 6:
        if (Sn(t, e),
        Xn(e),
        a & 4) {
            if (e.stateNode === null)
                throw Error(Ne(162));
            n = e.stateNode,
            i = e.memoizedProps;
            try {
                n.nodeValue = i
            } catch (f) {
                ir(e, e.return, f)
            }
        }
        break;
    case 3:
        if (Sn(t, e),
        Xn(e),
        a & 4 && r !== null && r.memoizedState.isDehydrated)
            try {
                yc(t.containerInfo)
            } catch (f) {
                ir(e, e.return, f)
            }
        break;
    case 4:
        Sn(t, e),
        Xn(e);
        break;
    case 13:
        Sn(t, e),
        Xn(e),
        n = e.child,
        n.flags & 8192 && (i = n.memoizedState !== null,
        n.stateNode.isHidden = i,
        !i || n.alternate !== null && n.alternate.memoizedState !== null || (fg = ur())),
        a & 4 && c_(e);
        break;
    case 22:
        if (c = r !== null && r.memoizedState !== null,
        e.mode & 1 ? (Hr = (u = Hr) || c,
        Sn(t, e),
        Hr = u) : Sn(t, e),
        Xn(e),
        a & 8192) {
            if (u = e.memoizedState !== null,
            (e.stateNode.isHidden = u) && !c && e.mode & 1)
                for (Fe = e,
                c = e.child; c !== null; ) {
                    for (d = Fe = c; Fe !== null; ) {
                        switch (v = Fe,
                        h = v.child,
                        v.tag) {
                        case 0:
                        case 11:
                        case 14:
                        case 15:
                            oc(4, v, v.return);
                            break;
                        case 1:
                            ml(v, v.return);
                            var p = v.stateNode;
                            if (typeof p.componentWillUnmount == "function") {
                                a = v,
                                r = v.return;
                                try {
                                    t = a,
                                    p.props = t.memoizedProps,
                                    p.state = t.memoizedState,
                                    p.componentWillUnmount()
                                } catch (f) {
                                    ir(a, r, f)
                                }
                            }
                            break;
                        case 5:
                            ml(v, v.return);
                            break;
                        case 22:
                            if (v.memoizedState !== null) {
                                v_(d);
                                continue
                            }
                        }
                        h !== null ? (h.return = v,
                        Fe = h) : v_(d)
                    }
                    c = c.sibling
                }
            e: for (c = null,
            d = e; ; ) {
                if (d.tag === 5) {
                    if (c === null) {
                        c = d;
                        try {
                            n = d.stateNode,
                            u ? (i = n.style,
                            typeof i.setProperty == "function" ? i.setProperty("display", "none", "important") : i.display = "none") : (s = d.stateNode,
                            l = d.memoizedProps.style,
                            o = l != null && l.hasOwnProperty("display") ? l.display : null,
                            s.style.display = f5("display", o))
                        } catch (f) {
                            ir(e, e.return, f)
                        }
                    }
                } else if (d.tag === 6) {
                    if (c === null)
                        try {
                            d.stateNode.nodeValue = u ? "" : d.memoizedProps
                        } catch (f) {
                            ir(e, e.return, f)
                        }
                } else if ((d.tag !== 22 && d.tag !== 23 || d.memoizedState === null || d === e) && d.child !== null) {
                    d.child.return = d,
                    d = d.child;
                    continue
                }
                if (d === e)
                    break e;
                for (; d.sibling === null; ) {
                    if (d.return === null || d.return === e)
                        break e;
                    c === d && (c = null),
                    d = d.return
                }
                c === d && (c = null),
                d.sibling.return = d.return,
                d = d.sibling
            }
        }
        break;
    case 19:
        Sn(t, e),
        Xn(e),
        a & 4 && c_(e);
        break;
    case 21:
        break;
    default:
        Sn(t, e),
        Xn(e)
    }
}
function Xn(e) {
    var t = e.flags;
    if (t & 2) {
        try {
            e: {
                for (var r = e.return; r !== null; ) {
                    if ($9(r)) {
                        var a = r;
                        break e
                    }
                    r = r.return
                }
                throw Error(Ne(160))
            }
            switch (a.tag) {
            case 5:
                var n = a.stateNode;
                a.flags & 32 && (hc(n, ""),
                a.flags &= -33);
                var i = u_(e);
                Ny(e, i, n);
                break;
            case 3:
            case 4:
                var o = a.stateNode.containerInfo
                  , s = u_(e);
                Ty(e, s, o);
                break;
            default:
                throw Error(Ne(161))
            }
        } catch (l) {
            ir(e, e.return, l)
        }
        e.flags &= -3
    }
    t & 4096 && (e.flags &= -4097)
}
function kI(e, t, r) {
    Fe = e,
    j9(e)
}
function j9(e, t, r) {
    for (var a = (e.mode & 1) !== 0; Fe !== null; ) {
        var n = Fe
          , i = n.child;
        if (n.tag === 22 && a) {
            var o = n.memoizedState !== null || Fd;
            if (!o) {
                var s = n.alternate
                  , l = s !== null && s.memoizedState !== null || Hr;
                s = Fd;
                var u = Hr;
                if (Fd = o,
                (Hr = l) && !u)
                    for (Fe = n; Fe !== null; )
                        o = Fe,
                        l = o.child,
                        o.tag === 22 && o.memoizedState !== null ? h_(n) : l !== null ? (l.return = o,
                        Fe = l) : h_(n);
                for (; i !== null; )
                    Fe = i,
                    j9(i),
                    i = i.sibling;
                Fe = n,
                Fd = s,
                Hr = u
            }
            d_(e)
        } else
            n.subtreeFlags & 8772 && i !== null ? (i.return = n,
            Fe = i) : d_(e)
    }
}
function d_(e) {
    for (; Fe !== null; ) {
        var t = Fe;
        if (t.flags & 8772) {
            var r = t.alternate;
            try {
                if (t.flags & 8772)
                    switch (t.tag) {
                    case 0:
                    case 11:
                    case 15:
                        Hr || vm(5, t);
                        break;
                    case 1:
                        var a = t.stateNode;
                        if (t.flags & 4 && !Hr)
                            if (r === null)
                                a.componentDidMount();
                            else {
                                var n = t.elementType === t.type ? r.memoizedProps : kn(t.type, r.memoizedProps);
                                a.componentDidUpdate(n, r.memoizedState, a.__reactInternalSnapshotBeforeUpdate)
                            }
                        var i = t.updateQueue;
                        i !== null && Y0(t, i, a);
                        break;
                    case 3:
                        var o = t.updateQueue;
                        if (o !== null) {
                            if (r = null,
                            t.child !== null)
                                switch (t.child.tag) {
                                case 5:
                                    r = t.child.stateNode;
                                    break;
                                case 1:
                                    r = t.child.stateNode
                                }
                            Y0(t, o, r)
                        }
                        break;
                    case 5:
                        var s = t.stateNode;
                        if (r === null && t.flags & 4) {
                            r = s;
                            var l = t.memoizedProps;
                            switch (t.type) {
                            case "button":
                            case "input":
                            case "select":
                            case "textarea":
                                l.autoFocus && r.focus();
                                break;
                            case "img":
                                l.src && (r.src = l.src)
                            }
                        }
                        break;
                    case 6:
                        break;
                    case 4:
                        break;
                    case 12:
                        break;
                    case 13:
                        if (t.memoizedState === null) {
                            var u = t.alternate;
                            if (u !== null) {
                                var c = u.memoizedState;
                                if (c !== null) {
                                    var d = c.dehydrated;
                                    d !== null && yc(d)
                                }
                            }
                        }
                        break;
                    case 19:
                    case 17:
                    case 21:
                    case 22:
                    case 23:
                    case 25:
                        break;
                    default:
                        throw Error(Ne(163))
                    }
                Hr || t.flags & 512 && ky(t)
            } catch (v) {
                ir(t, t.return, v)
            }
        }
        if (t === e) {
            Fe = null;
            break
        }
        if (r = t.sibling,
        r !== null) {
            r.return = t.return,
            Fe = r;
            break
        }
        Fe = t.return
    }
}
function v_(e) {
    for (; Fe !== null; ) {
        var t = Fe;
        if (t === e) {
            Fe = null;
            break
        }
        var r = t.sibling;
        if (r !== null) {
            r.return = t.return,
            Fe = r;
            break
        }
        Fe = t.return
    }
}
function h_(e) {
    for (; Fe !== null; ) {
        var t = Fe;
        try {
            switch (t.tag) {
            case 0:
            case 11:
            case 15:
                var r = t.return;
                try {
                    vm(4, t)
                } catch (l) {
                    ir(t, r, l)
                }
                break;
            case 1:
                var a = t.stateNode;
                if (typeof a.componentDidMount == "function") {
                    var n = t.return;
                    try {
                        a.componentDidMount()
                    } catch (l) {
                        ir(t, n, l)
                    }
                }
                var i = t.return;
                try {
                    ky(t)
                } catch (l) {
                    ir(t, i, l)
                }
                break;
            case 5:
                var o = t.return;
                try {
                    ky(t)
                } catch (l) {
                    ir(t, o, l)
                }
            }
        } catch (l) {
            ir(t, t.return, l)
        }
        if (t === e) {
            Fe = null;
            break
        }
        var s = t.sibling;
        if (s !== null) {
            s.return = t.return,
            Fe = s;
            break
        }
        Fe = t.return
    }
}
var TI = Math.ceil
  , ih = ji.ReactCurrentDispatcher
  , hg = ji.ReactCurrentOwner
  , hn = ji.ReactCurrentBatchConfig
  , Et = 0
  , kr = null
  , mr = null
  , Br = 0
  , Oa = 0
  , fl = Lo(0)
  , _r = 0
  , Tc = null
  , gs = 0
  , hm = 0
  , mg = 0
  , sc = null
  , _a = null
  , fg = 0
  , Vl = 1 / 0
  , Ei = null
  , oh = !1
  , My = null
  , Eo = null
  , Od = !1
  , fo = null
  , sh = 0
  , lc = 0
  , Iy = null
  , Tv = -1
  , Nv = 0;
function oa() {
    return Et & 6 ? ur() : Tv !== -1 ? Tv : Tv = ur()
}
function ko(e) {
    return e.mode & 1 ? Et & 2 && Br !== 0 ? Br & -Br : dI.transition !== null ? (Nv === 0 && (Nv = T5()),
    Nv) : (e = Rt,
    e !== 0 || (e = window.event,
    e = e === void 0 ? 16 : O5(e.type)),
    e) : 1
}
function Bn(e, t, r, a) {
    if (50 < lc)
        throw lc = 0,
        Iy = null,
        Error(Ne(185));
    qc(e, r, a),
    (!(Et & 2) || e !== kr) && (e === kr && (!(Et & 2) && (hm |= r),
    _r === 4 && vo(e, Br)),
    Ea(e, a),
    r === 1 && Et === 0 && !(t.mode & 1) && (Vl = ur() + 500,
    um && qo()))
}
function Ea(e, t) {
    var r = e.callbackNode;
    dM(e, t);
    var a = Gv(e, e === kr ? Br : 0);
    if (a === 0)
        r !== null && C0(r),
        e.callbackNode = null,
        e.callbackPriority = 0;
    else if (t = a & -a,
    e.callbackPriority !== t) {
        if (r != null && C0(r),
        t === 1)
            e.tag === 0 ? cI(m_.bind(null, e)) : e9(m_.bind(null, e)),
            oI(function() {
                !(Et & 6) && qo()
            }),
            r = null;
        else {
            switch (N5(a)) {
            case 1:
                r = Vw;
                break;
            case 4:
                r = E5;
                break;
            case 16:
                r = zv;
                break;
            case 536870912:
                r = k5;
                break;
            default:
                r = zv
            }
            r = X9(r, H9.bind(null, e))
        }
        e.callbackPriority = t,
        e.callbackNode = r
    }
}
function H9(e, t) {
    if (Tv = -1,
    Nv = 0,
    Et & 6)
        throw Error(Ne(327));
    var r = e.callbackNode;
    if (Tl() && e.callbackNode !== r)
        return null;
    var a = Gv(e, e === kr ? Br : 0);
    if (a === 0)
        return null;
    if (a & 30 || a & e.expiredLanes || t)
        t = lh(e, a);
    else {
        t = a;
        var n = Et;
        Et |= 2;
        var i = Y9();
        (kr !== e || Br !== t) && (Ei = null,
        Vl = ur() + 500,
        vs(e, t));
        do
            try {
                II();
                break
            } catch (s) {
                W9(e, s)
            }
        while (1);
        eg(),
        ih.current = i,
        Et = n,
        mr !== null ? t = 0 : (kr = null,
        Br = 0,
        t = _r)
    }
    if (t !== 0) {
        if (t === 2 && (n = ny(e),
        n !== 0 && (a = n,
        t = Dy(e, n))),
        t === 1)
            throw r = Tc,
            vs(e, 0),
            vo(e, a),
            Ea(e, ur()),
            r;
        if (t === 6)
            vo(e, a);
        else {
            if (n = e.current.alternate,
            !(a & 30) && !NI(n) && (t = lh(e, a),
            t === 2 && (i = ny(e),
            i !== 0 && (a = i,
            t = Dy(e, i))),
            t === 1))
                throw r = Tc,
                vs(e, 0),
                vo(e, a),
                Ea(e, ur()),
                r;
            switch (e.finishedWork = n,
            e.finishedLanes = a,
            t) {
            case 0:
            case 1:
                throw Error(Ne(345));
            case 2:
                rs(e, _a, Ei);
                break;
            case 3:
                if (vo(e, a),
                (a & 130023424) === a && (t = fg + 500 - ur(),
                10 < t)) {
                    if (Gv(e, 0) !== 0)
                        break;
                    if (n = e.suspendedLanes,
                    (n & a) !== a) {
                        oa(),
                        e.pingedLanes |= e.suspendedLanes & n;
                        break
                    }
                    e.timeoutHandle = vy(rs.bind(null, e, _a, Ei), t);
                    break
                }
                rs(e, _a, Ei);
                break;
            case 4:
                if (vo(e, a),
                (a & 4194240) === a)
                    break;
                for (t = e.eventTimes,
                n = -1; 0 < a; ) {
                    var o = 31 - Pn(a);
                    i = 1 << o,
                    o = t[o],
                    o > n && (n = o),
                    a &= ~i
                }
                if (a = n,
                a = ur() - a,
                a = (120 > a ? 120 : 480 > a ? 480 : 1080 > a ? 1080 : 1920 > a ? 1920 : 3e3 > a ? 3e3 : 4320 > a ? 4320 : 1960 * TI(a / 1960)) - a,
                10 < a) {
                    e.timeoutHandle = vy(rs.bind(null, e, _a, Ei), a);
                    break
                }
                rs(e, _a, Ei);
                break;
            case 5:
                rs(e, _a, Ei);
                break;
            default:
                throw Error(Ne(329))
            }
        }
    }
    return Ea(e, ur()),
    e.callbackNode === r ? H9.bind(null, e) : null
}
function Dy(e, t) {
    var r = sc;
    return e.current.memoizedState.isDehydrated && (vs(e, t).flags |= 256),
    e = lh(e, t),
    e !== 2 && (t = _a,
    _a = r,
    t !== null && Uy(t)),
    e
}
function Uy(e) {
    _a === null ? _a = e : _a.push.apply(_a, e)
}
function NI(e) {
    for (var t = e; ; ) {
        if (t.flags & 16384) {
            var r = t.updateQueue;
            if (r !== null && (r = r.stores,
            r !== null))
                for (var a = 0; a < r.length; a++) {
                    var n = r[a]
                      , i = n.getSnapshot;
                    n = n.value;
                    try {
                        if (!Vn(i(), n))
                            return !1
                    } catch {
                        return !1
                    }
                }
        }
        if (r = t.child,
        t.subtreeFlags & 16384 && r !== null)
            r.return = t,
            t = r;
        else {
            if (t === e)
                break;
            for (; t.sibling === null; ) {
                if (t.return === null || t.return === e)
                    return !0;
                t = t.return
            }
            t.sibling.return = t.return,
            t = t.sibling
        }
    }
    return !0
}
function vo(e, t) {
    for (t &= ~mg,
    t &= ~hm,
    e.suspendedLanes |= t,
    e.pingedLanes &= ~t,
    e = e.expirationTimes; 0 < t; ) {
        var r = 31 - Pn(t)
          , a = 1 << r;
        e[r] = -1,
        t &= ~a
    }
}
function m_(e) {
    if (Et & 6)
        throw Error(Ne(327));
    Tl();
    var t = Gv(e, 0);
    if (!(t & 1))
        return Ea(e, ur()),
        null;
    var r = lh(e, t);
    if (e.tag !== 0 && r === 2) {
        var a = ny(e);
        a !== 0 && (t = a,
        r = Dy(e, a))
    }
    if (r === 1)
        throw r = Tc,
        vs(e, 0),
        vo(e, t),
        Ea(e, ur()),
        r;
    if (r === 6)
        throw Error(Ne(345));
    return e.finishedWork = e.current.alternate,
    e.finishedLanes = t,
    rs(e, _a, Ei),
    Ea(e, ur()),
    null
}
function pg(e, t) {
    var r = Et;
    Et |= 1;
    try {
        return e(t)
    } finally {
        Et = r,
        Et === 0 && (Vl = ur() + 500,
        um && qo())
    }
}
function _s(e) {
    fo !== null && fo.tag === 0 && !(Et & 6) && Tl();
    var t = Et;
    Et |= 1;
    var r = hn.transition
      , a = Rt;
    try {
        if (hn.transition = null,
        Rt = 1,
        e)
            return e()
    } finally {
        Rt = a,
        hn.transition = r,
        Et = t,
        !(Et & 6) && qo()
    }
}
function yg() {
    Oa = fl.current,
    Jt(fl)
}
function vs(e, t) {
    e.finishedWork = null,
    e.finishedLanes = 0;
    var r = e.timeoutHandle;
    if (r !== -1 && (e.timeoutHandle = -1,
    iI(r)),
    mr !== null)
        for (r = mr.return; r !== null; ) {
            var a = r;
            switch (Qw(a),
            a.tag) {
            case 1:
                a = a.type.childContextTypes,
                a != null && Jv();
                break;
            case 3:
                Ll(),
                Jt(xa),
                Jt(Qr),
                og();
                break;
            case 5:
                ig(a);
                break;
            case 4:
                Ll();
                break;
            case 13:
                Jt(er);
                break;
            case 19:
                Jt(er);
                break;
            case 10:
                tg(a.type._context);
                break;
            case 22:
            case 23:
                yg()
            }
            r = r.return
        }
    if (kr = e,
    mr = e = To(e.current, null),
    Br = Oa = t,
    _r = 0,
    Tc = null,
    mg = hm = gs = 0,
    _a = sc = null,
    ss !== null) {
        for (t = 0; t < ss.length; t++)
            if (r = ss[t],
            a = r.interleaved,
            a !== null) {
                r.interleaved = null;
                var n = a.next
                  , i = r.pending;
                if (i !== null) {
                    var o = i.next;
                    i.next = n,
                    a.next = o
                }
                r.pending = a
            }
        ss = null
    }
    return e
}
function W9(e, t) {
    do {
        var r = mr;
        try {
            if (eg(),
            Av.current = nh,
            ah) {
                for (var a = tr.memoizedState; a !== null; ) {
                    var n = a.queue;
                    n !== null && (n.pending = null),
                    a = a.next
                }
                ah = !1
            }
            if (ws = 0,
            Ar = wr = tr = null,
            ic = !1,
            Ac = 0,
            hg.current = null,
            r === null || r.return === null) {
                _r = 1,
                Tc = t,
                mr = null;
                break
            }
            e: {
                var i = e
                  , o = r.return
                  , s = r
                  , l = t;
                if (t = Br,
                s.flags |= 32768,
                l !== null && typeof l == "object" && typeof l.then == "function") {
                    var u = l
                      , c = s
                      , d = c.tag;
                    if (!(c.mode & 1) && (d === 0 || d === 11 || d === 15)) {
                        var v = c.alternate;
                        v ? (c.updateQueue = v.updateQueue,
                        c.memoizedState = v.memoizedState,
                        c.lanes = v.lanes) : (c.updateQueue = null,
                        c.memoizedState = null)
                    }
                    var h = t_(o);
                    if (h !== null) {
                        h.flags &= -257,
                        r_(h, o, s, i, t),
                        h.mode & 1 && e_(i, u, t),
                        t = h,
                        l = u;
                        var p = t.updateQueue;
                        if (p === null) {
                            var f = new Set;
                            f.add(l),
                            t.updateQueue = f
                        } else
                            p.add(l);
                        break e
                    } else {
                        if (!(t & 1)) {
                            e_(i, u, t),
                            wg();
                            break e
                        }
                        l = Error(Ne(426))
                    }
                } else if (Qt && s.mode & 1) {
                    var _ = t_(o);
                    if (_ !== null) {
                        !(_.flags & 65536) && (_.flags |= 256),
                        r_(_, o, s, i, t),
                        Zw(ql(l, s));
                        break e
                    }
                }
                i = l = ql(l, s),
                _r !== 4 && (_r = 2),
                sc === null ? sc = [i] : sc.push(i),
                i = o;
                do {
                    switch (i.tag) {
                    case 3:
                        i.flags |= 65536,
                        t &= -t,
                        i.lanes |= t;
                        var y = M9(i, l, t);
                        W0(i, y);
                        break e;
                    case 1:
                        s = l;
                        var g = i.type
                          , m = i.stateNode;
                        if (!(i.flags & 128) && (typeof g.getDerivedStateFromError == "function" || m !== null && typeof m.componentDidCatch == "function" && (Eo === null || !Eo.has(m)))) {
                            i.flags |= 65536,
                            t &= -t,
                            i.lanes |= t;
                            var w = I9(i, s, t);
                            W0(i, w);
                            break e
                        }
                    }
                    i = i.return
                } while (i !== null)
            }
            K9(r)
        } catch (C) {
            t = C,
            mr === r && r !== null && (mr = r = r.return);
            continue
        }
        break
    } while (1)
}
function Y9() {
    var e = ih.current;
    return ih.current = nh,
    e === null ? nh : e
}
function wg() {
    (_r === 0 || _r === 3 || _r === 2) && (_r = 4),
    kr === null || !(gs & 268435455) && !(hm & 268435455) || vo(kr, Br)
}
function lh(e, t) {
    var r = Et;
    Et |= 2;
    var a = Y9();
    (kr !== e || Br !== t) && (Ei = null,
    vs(e, t));
    do
        try {
            MI();
            break
        } catch (n) {
            W9(e, n)
        }
    while (1);
    if (eg(),
    Et = r,
    ih.current = a,
    mr !== null)
        throw Error(Ne(261));
    return kr = null,
    Br = 0,
    _r
}
function MI() {
    for (; mr !== null; )
        J9(mr)
}
function II() {
    for (; mr !== null && !rM(); )
        J9(mr)
}
function J9(e) {
    var t = Z9(e.alternate, e, Oa);
    e.memoizedProps = e.pendingProps,
    t === null ? K9(e) : mr = t,
    hg.current = null
}
function K9(e) {
    var t = e;
    do {
        var r = t.alternate;
        if (e = t.return,
        t.flags & 32768) {
            if (r = xI(r, t),
            r !== null) {
                r.flags &= 32767,
                mr = r;
                return
            }
            if (e !== null)
                e.flags |= 32768,
                e.subtreeFlags = 0,
                e.deletions = null;
            else {
                _r = 6,
                mr = null;
                return
            }
        } else if (r = SI(r, t, Oa),
        r !== null) {
            mr = r;
            return
        }
        if (t = t.sibling,
        t !== null) {
            mr = t;
            return
        }
        mr = t = e
    } while (t !== null);
    _r === 0 && (_r = 5)
}
function rs(e, t, r) {
    var a = Rt
      , n = hn.transition;
    try {
        hn.transition = null,
        Rt = 1,
        DI(e, t, r, a)
    } finally {
        hn.transition = n,
        Rt = a
    }
    return null
}
function DI(e, t, r, a) {
    do
        Tl();
    while (fo !== null);
    if (Et & 6)
        throw Error(Ne(327));
    r = e.finishedWork;
    var n = e.finishedLanes;
    if (r === null)
        return null;
    if (e.finishedWork = null,
    e.finishedLanes = 0,
    r === e.current)
        throw Error(Ne(177));
    e.callbackNode = null,
    e.callbackPriority = 0;
    var i = r.lanes | r.childLanes;
    if (vM(e, i),
    e === kr && (mr = kr = null,
    Br = 0),
    !(r.subtreeFlags & 2064) && !(r.flags & 2064) || Od || (Od = !0,
    X9(zv, function() {
        return Tl(),
        null
    })),
    i = (r.flags & 15990) !== 0,
    r.subtreeFlags & 15990 || i) {
        i = hn.transition,
        hn.transition = null;
        var o = Rt;
        Rt = 1;
        var s = Et;
        Et |= 4,
        hg.current = null,
        EI(e, r),
        G9(r, e),
        ZM(cy),
        jv = !!uy,
        cy = uy = null,
        e.current = r,
        kI(r),
        aM(),
        Et = s,
        Rt = o,
        hn.transition = i
    } else
        e.current = r;
    if (Od && (Od = !1,
    fo = e,
    sh = n),
    i = e.pendingLanes,
    i === 0 && (Eo = null),
    oM(r.stateNode),
    Ea(e, ur()),
    t !== null)
        for (a = e.onRecoverableError,
        r = 0; r < t.length; r++)
            n = t[r],
            a(n.value, {
                componentStack: n.stack,
                digest: n.digest
            });
    if (oh)
        throw oh = !1,
        e = My,
        My = null,
        e;
    return sh & 1 && e.tag !== 0 && Tl(),
    i = e.pendingLanes,
    i & 1 ? e === Iy ? lc++ : (lc = 0,
    Iy = e) : lc = 0,
    qo(),
    null
}
function Tl() {
    if (fo !== null) {
        var e = N5(sh)
          , t = hn.transition
          , r = Rt;
        try {
            if (hn.transition = null,
            Rt = 16 > e ? 16 : e,
            fo === null)
                var a = !1;
            else {
                if (e = fo,
                fo = null,
                sh = 0,
                Et & 6)
                    throw Error(Ne(331));
                var n = Et;
                for (Et |= 4,
                Fe = e.current; Fe !== null; ) {
                    var i = Fe
                      , o = i.child;
                    if (Fe.flags & 16) {
                        var s = i.deletions;
                        if (s !== null) {
                            for (var l = 0; l < s.length; l++) {
                                var u = s[l];
                                for (Fe = u; Fe !== null; ) {
                                    var c = Fe;
                                    switch (c.tag) {
                                    case 0:
                                    case 11:
                                    case 15:
                                        oc(8, c, i)
                                    }
                                    var d = c.child;
                                    if (d !== null)
                                        d.return = c,
                                        Fe = d;
                                    else
                                        for (; Fe !== null; ) {
                                            c = Fe;
                                            var v = c.sibling
                                              , h = c.return;
                                            if (V9(c),
                                            c === u) {
                                                Fe = null;
                                                break
                                            }
                                            if (v !== null) {
                                                v.return = h,
                                                Fe = v;
                                                break
                                            }
                                            Fe = h
                                        }
                                }
                            }
                            var p = i.alternate;
                            if (p !== null) {
                                var f = p.child;
                                if (f !== null) {
                                    p.child = null;
                                    do {
                                        var _ = f.sibling;
                                        f.sibling = null,
                                        f = _
                                    } while (f !== null)
                                }
                            }
                            Fe = i
                        }
                    }
                    if (i.subtreeFlags & 2064 && o !== null)
                        o.return = i,
                        Fe = o;
                    else
                        e: for (; Fe !== null; ) {
                            if (i = Fe,
                            i.flags & 2048)
                                switch (i.tag) {
                                case 0:
                                case 11:
                                case 15:
                                    oc(9, i, i.return)
                                }
                            var y = i.sibling;
                            if (y !== null) {
                                y.return = i.return,
                                Fe = y;
                                break e
                            }
                            Fe = i.return
                        }
                }
                var g = e.current;
                for (Fe = g; Fe !== null; ) {
                    o = Fe;
                    var m = o.child;
                    if (o.subtreeFlags & 2064 && m !== null)
                        m.return = o,
                        Fe = m;
                    else
                        e: for (o = g; Fe !== null; ) {
                            if (s = Fe,
                            s.flags & 2048)
                                try {
                                    switch (s.tag) {
                                    case 0:
                                    case 11:
                                    case 15:
                                        vm(9, s)
                                    }
                                } catch (C) {
                                    ir(s, s.return, C)
                                }
                            if (s === o) {
                                Fe = null;
                                break e
                            }
                            var w = s.sibling;
                            if (w !== null) {
                                w.return = s.return,
                                Fe = w;
                                break e
                            }
                            Fe = s.return
                        }
                }
                if (Et = n,
                qo(),
                si && typeof si.onPostCommitFiberRoot == "function")
                    try {
                        si.onPostCommitFiberRoot(nm, e)
                    } catch {}
                a = !0
            }
            return a
        } finally {
            Rt = r,
            hn.transition = t
        }
    }
    return !1
}
function f_(e, t, r) {
    t = ql(r, t),
    t = M9(e, t, 1),
    e = Ao(e, t, 1),
    t = oa(),
    e !== null && (qc(e, 1, t),
    Ea(e, t))
}
function ir(e, t, r) {
    if (e.tag === 3)
        f_(e, e, r);
    else
        for (; t !== null; ) {
            if (t.tag === 3) {
                f_(t, e, r);
                break
            } else if (t.tag === 1) {
                var a = t.stateNode;
                if (typeof t.type.getDerivedStateFromError == "function" || typeof a.componentDidCatch == "function" && (Eo === null || !Eo.has(a))) {
                    e = ql(r, e),
                    e = I9(t, e, 1),
                    t = Ao(t, e, 1),
                    e = oa(),
                    t !== null && (qc(t, 1, e),
                    Ea(t, e));
                    break
                }
            }
            t = t.return
        }
}
function UI(e, t, r) {
    var a = e.pingCache;
    a !== null && a.delete(t),
    t = oa(),
    e.pingedLanes |= e.suspendedLanes & r,
    kr === e && (Br & r) === r && (_r === 4 || _r === 3 && (Br & 130023424) === Br && 500 > ur() - fg ? vs(e, 0) : mg |= r),
    Ea(e, t)
}
function Q9(e, t) {
    t === 0 && (e.mode & 1 ? (t = Ad,
    Ad <<= 1,
    !(Ad & 130023424) && (Ad = 4194304)) : t = 1);
    var r = oa();
    e = Li(e, t),
    e !== null && (qc(e, t, r),
    Ea(e, r))
}
function FI(e) {
    var t = e.memoizedState
      , r = 0;
    t !== null && (r = t.retryLane),
    Q9(e, r)
}
function OI(e, t) {
    var r = 0;
    switch (e.tag) {
    case 13:
        var a = e.stateNode
          , n = e.memoizedState;
        n !== null && (r = n.retryLane);
        break;
    case 19:
        a = e.stateNode;
        break;
    default:
        throw Error(Ne(314))
    }
    a !== null && a.delete(t),
    Q9(e, r)
}
var Z9;
Z9 = function(e, t, r) {
    if (e !== null)
        if (e.memoizedProps !== t.pendingProps || xa.current)
            Sa = !0;
        else {
            if (!(e.lanes & r) && !(t.flags & 128))
                return Sa = !1,
                CI(e, t, r);
            Sa = !!(e.flags & 131072)
        }
    else
        Sa = !1,
        Qt && t.flags & 1048576 && t9(t, Zv, t.index);
    switch (t.lanes = 0,
    t.tag) {
    case 2:
        var a = t.type;
        kv(e, t),
        e = t.pendingProps;
        var n = Pl(t, Qr.current);
        kl(t, r),
        n = lg(null, t, a, e, n, r);
        var i = ug();
        return t.flags |= 1,
        typeof n == "object" && n !== null && typeof n.render == "function" && n.$$typeof === void 0 ? (t.tag = 1,
        t.memoizedState = null,
        t.updateQueue = null,
        Aa(a) ? (i = !0,
        Kv(t)) : i = !1,
        t.memoizedState = n.state !== null && n.state !== void 0 ? n.state : null,
        ag(t),
        n.updater = cm,
        t.stateNode = n,
        n._reactInternals = t,
        gy(t, a, e, r),
        t = Cy(null, t, a, !0, i, r)) : (t.tag = 0,
        Qt && i && Kw(t),
        aa(null, t, n, r),
        t = t.child),
        t;
    case 16:
        a = t.elementType;
        e: {
            switch (kv(e, t),
            e = t.pendingProps,
            n = a._init,
            a = n(a._payload),
            t.type = a,
            n = t.tag = BI(a),
            e = kn(a, e),
            n) {
            case 0:
                t = by(null, t, a, e, r);
                break e;
            case 1:
                t = i_(null, t, a, e, r);
                break e;
            case 11:
                t = a_(null, t, a, e, r);
                break e;
            case 14:
                t = n_(null, t, a, kn(a.type, e), r);
                break e
            }
            throw Error(Ne(306, a, ""))
        }
        return t;
    case 0:
        return a = t.type,
        n = t.pendingProps,
        n = t.elementType === a ? n : kn(a, n),
        by(e, t, a, n, r);
    case 1:
        return a = t.type,
        n = t.pendingProps,
        n = t.elementType === a ? n : kn(a, n),
        i_(e, t, a, n, r);
    case 3:
        e: {
            if (O9(t),
            e === null)
                throw Error(Ne(387));
            a = t.pendingProps,
            i = t.memoizedState,
            n = i.element,
            i9(e, t),
            th(t, a, null, r);
            var o = t.memoizedState;
            if (a = o.element,
            i.isDehydrated)
                if (i = {
                    element: a,
                    isDehydrated: !1,
                    cache: o.cache,
                    pendingSuspenseBoundaries: o.pendingSuspenseBoundaries,
                    transitions: o.transitions
                },
                t.updateQueue.baseState = i,
                t.memoizedState = i,
                t.flags & 256) {
                    n = ql(Error(Ne(423)), t),
                    t = o_(e, t, a, r, n);
                    break e
                } else if (a !== n) {
                    n = ql(Error(Ne(424)), t),
                    t = o_(e, t, a, r, n);
                    break e
                } else
                    for (Ba = xo(t.stateNode.containerInfo.firstChild),
                    Ra = t,
                    Qt = !0,
                    In = null,
                    r = u9(t, null, a, r),
                    t.child = r; r; )
                        r.flags = r.flags & -3 | 4096,
                        r = r.sibling;
            else {
                if (Bl(),
                a === n) {
                    t = qi(e, t, r);
                    break e
                }
                aa(e, t, a, r)
            }
            t = t.child
        }
        return t;
    case 5:
        return c9(t),
        e === null && py(t),
        a = t.type,
        n = t.pendingProps,
        i = e !== null ? e.memoizedProps : null,
        o = n.children,
        dy(a, n) ? o = null : i !== null && dy(a, i) && (t.flags |= 32),
        F9(e, t),
        aa(e, t, o, r),
        t.child;
    case 6:
        return e === null && py(t),
        null;
    case 13:
        return P9(e, t, r);
    case 4:
        return ng(t, t.stateNode.containerInfo),
        a = t.pendingProps,
        e === null ? t.child = Rl(t, null, a, r) : aa(e, t, a, r),
        t.child;
    case 11:
        return a = t.type,
        n = t.pendingProps,
        n = t.elementType === a ? n : kn(a, n),
        a_(e, t, a, n, r);
    case 7:
        return aa(e, t, t.pendingProps, r),
        t.child;
    case 8:
        return aa(e, t, t.pendingProps.children, r),
        t.child;
    case 12:
        return aa(e, t, t.pendingProps.children, r),
        t.child;
    case 10:
        e: {
            if (a = t.type._context,
            n = t.pendingProps,
            i = t.memoizedProps,
            o = n.value,
            jt(Xv, a._currentValue),
            a._currentValue = o,
            i !== null)
                if (Vn(i.value, o)) {
                    if (i.children === n.children && !xa.current) {
                        t = qi(e, t, r);
                        break e
                    }
                } else
                    for (i = t.child,
                    i !== null && (i.return = t); i !== null; ) {
                        var s = i.dependencies;
                        if (s !== null) {
                            o = i.child;
                            for (var l = s.firstContext; l !== null; ) {
                                if (l.context === a) {
                                    if (i.tag === 1) {
                                        l = Fi(-1, r & -r),
                                        l.tag = 2;
                                        var u = i.updateQueue;
                                        if (u !== null) {
                                            u = u.shared;
                                            var c = u.pending;
                                            c === null ? l.next = l : (l.next = c.next,
                                            c.next = l),
                                            u.pending = l
                                        }
                                    }
                                    i.lanes |= r,
                                    l = i.alternate,
                                    l !== null && (l.lanes |= r),
                                    yy(i.return, r, t),
                                    s.lanes |= r;
                                    break
                                }
                                l = l.next
                            }
                        } else if (i.tag === 10)
                            o = i.type === t.type ? null : i.child;
                        else if (i.tag === 18) {
                            if (o = i.return,
                            o === null)
                                throw Error(Ne(341));
                            o.lanes |= r,
                            s = o.alternate,
                            s !== null && (s.lanes |= r),
                            yy(o, r, t),
                            o = i.sibling
                        } else
                            o = i.child;
                        if (o !== null)
                            o.return = i;
                        else
                            for (o = i; o !== null; ) {
                                if (o === t) {
                                    o = null;
                                    break
                                }
                                if (i = o.sibling,
                                i !== null) {
                                    i.return = o.return,
                                    o = i;
                                    break
                                }
                                o = o.return
                            }
                        i = o
                    }
            aa(e, t, n.children, r),
            t = t.child
        }
        return t;
    case 9:
        return n = t.type,
        a = t.pendingProps.children,
        kl(t, r),
        n = fn(n),
        a = a(n),
        t.flags |= 1,
        aa(e, t, a, r),
        t.child;
    case 14:
        return a = t.type,
        n = kn(a, t.pendingProps),
        n = kn(a.type, n),
        n_(e, t, a, n, r);
    case 15:
        return D9(e, t, t.type, t.pendingProps, r);
    case 17:
        return a = t.type,
        n = t.pendingProps,
        n = t.elementType === a ? n : kn(a, n),
        kv(e, t),
        t.tag = 1,
        Aa(a) ? (e = !0,
        Kv(t)) : e = !1,
        kl(t, r),
        s9(t, a, n),
        gy(t, a, n, r),
        Cy(null, t, a, !0, e, r);
    case 19:
        return B9(e, t, r);
    case 22:
        return U9(e, t, r)
    }
    throw Error(Ne(156, t.tag))
}
;
function X9(e, t) {
    return A5(e, t)
}
function PI(e, t, r, a) {
    this.tag = e,
    this.key = r,
    this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null,
    this.index = 0,
    this.ref = null,
    this.pendingProps = t,
    this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null,
    this.mode = a,
    this.subtreeFlags = this.flags = 0,
    this.deletions = null,
    this.childLanes = this.lanes = 0,
    this.alternate = null
}
function dn(e, t, r, a) {
    return new PI(e,t,r,a)
}
function gg(e) {
    return e = e.prototype,
    !(!e || !e.isReactComponent)
}
function BI(e) {
    if (typeof e == "function")
        return gg(e) ? 1 : 0;
    if (e != null) {
        if (e = e.$$typeof,
        e === Rw)
            return 11;
        if (e === Lw)
            return 14
    }
    return 2
}
function To(e, t) {
    var r = e.alternate;
    return r === null ? (r = dn(e.tag, t, e.key, e.mode),
    r.elementType = e.elementType,
    r.type = e.type,
    r.stateNode = e.stateNode,
    r.alternate = e,
    e.alternate = r) : (r.pendingProps = t,
    r.type = e.type,
    r.flags = 0,
    r.subtreeFlags = 0,
    r.deletions = null),
    r.flags = e.flags & 14680064,
    r.childLanes = e.childLanes,
    r.lanes = e.lanes,
    r.child = e.child,
    r.memoizedProps = e.memoizedProps,
    r.memoizedState = e.memoizedState,
    r.updateQueue = e.updateQueue,
    t = e.dependencies,
    r.dependencies = t === null ? null : {
        lanes: t.lanes,
        firstContext: t.firstContext
    },
    r.sibling = e.sibling,
    r.index = e.index,
    r.ref = e.ref,
    r
}
function Mv(e, t, r, a, n, i) {
    var o = 2;
    if (a = e,
    typeof e == "function")
        gg(e) && (o = 1);
    else if (typeof e == "string")
        o = 5;
    else
        e: switch (e) {
        case il:
            return hs(r.children, n, i, t);
        case Bw:
            o = 8,
            n |= 8;
            break;
        case zp:
            return e = dn(12, r, t, n | 2),
            e.elementType = zp,
            e.lanes = i,
            e;
        case Gp:
            return e = dn(13, r, t, n),
            e.elementType = Gp,
            e.lanes = i,
            e;
        case jp:
            return e = dn(19, r, t, n),
            e.elementType = jp,
            e.lanes = i,
            e;
        case l5:
            return mm(r, n, i, t);
        default:
            if (typeof e == "object" && e !== null)
                switch (e.$$typeof) {
                case o5:
                    o = 10;
                    break e;
                case s5:
                    o = 9;
                    break e;
                case Rw:
                    o = 11;
                    break e;
                case Lw:
                    o = 14;
                    break e;
                case io:
                    o = 16,
                    a = null;
                    break e
                }
            throw Error(Ne(130, e == null ? e : typeof e, ""))
        }
    return t = dn(o, r, t, n),
    t.elementType = e,
    t.type = a,
    t.lanes = i,
    t
}
function hs(e, t, r, a) {
    return e = dn(7, e, a, t),
    e.lanes = r,
    e
}
function mm(e, t, r, a) {
    return e = dn(22, e, a, t),
    e.elementType = l5,
    e.lanes = r,
    e.stateNode = {
        isHidden: !1
    },
    e
}
function rp(e, t, r) {
    return e = dn(6, e, null, t),
    e.lanes = r,
    e
}
function ap(e, t, r) {
    return t = dn(4, e.children !== null ? e.children : [], e.key, t),
    t.lanes = r,
    t.stateNode = {
        containerInfo: e.containerInfo,
        pendingChildren: null,
        implementation: e.implementation
    },
    t
}
function RI(e, t, r, a, n) {
    this.tag = t,
    this.containerInfo = e,
    this.finishedWork = this.pingCache = this.current = this.pendingChildren = null,
    this.timeoutHandle = -1,
    this.callbackNode = this.pendingContext = this.context = null,
    this.callbackPriority = 0,
    this.eventTimes = Bf(0),
    this.expirationTimes = Bf(-1),
    this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0,
    this.entanglements = Bf(0),
    this.identifierPrefix = a,
    this.onRecoverableError = n,
    this.mutableSourceEagerHydrationData = null
}
function _g(e, t, r, a, n, i, o, s, l) {
    return e = new RI(e,t,r,s,l),
    t === 1 ? (t = 1,
    i === !0 && (t |= 8)) : t = 0,
    i = dn(3, null, null, t),
    e.current = i,
    i.stateNode = e,
    i.memoizedState = {
        element: a,
        isDehydrated: r,
        cache: null,
        transitions: null,
        pendingSuspenseBoundaries: null
    },
    ag(i),
    e
}
function LI(e, t, r) {
    var a = 3 < arguments.length && arguments[3] !== void 0 ? arguments[3] : null;
    return {
        $$typeof: nl,
        key: a == null ? null : "" + a,
        children: e,
        containerInfo: t,
        implementation: r
    }
}
function e3(e) {
    if (!e)
        return Io;
    e = e._reactInternals;
    e: {
        if (xs(e) !== e || e.tag !== 1)
            throw Error(Ne(170));
        var t = e;
        do {
            switch (t.tag) {
            case 3:
                t = t.stateNode.context;
                break e;
            case 1:
                if (Aa(t.type)) {
                    t = t.stateNode.__reactInternalMemoizedMergedChildContext;
                    break e
                }
            }
            t = t.return
        } while (t !== null);
        throw Error(Ne(171))
    }
    if (e.tag === 1) {
        var r = e.type;
        if (Aa(r))
            return X5(e, r, t)
    }
    return t
}
function t3(e, t, r, a, n, i, o, s, l) {
    return e = _g(r, a, !0, e, n, i, o, s, l),
    e.context = e3(null),
    r = e.current,
    a = oa(),
    n = ko(r),
    i = Fi(a, n),
    i.callback = t ?? null,
    Ao(r, i, n),
    e.current.lanes = n,
    qc(e, n, a),
    Ea(e, a),
    e
}
function fm(e, t, r, a) {
    var n = t.current
      , i = oa()
      , o = ko(n);
    return r = e3(r),
    t.context === null ? t.context = r : t.pendingContext = r,
    t = Fi(i, o),
    t.payload = {
        element: e
    },
    a = a === void 0 ? null : a,
    a !== null && (t.callback = a),
    e = Ao(n, t, o),
    e !== null && (Bn(e, n, o, i),
    xv(e, n, o)),
    o
}
function uh(e) {
    if (e = e.current,
    !e.child)
        return null;
    switch (e.child.tag) {
    case 5:
        return e.child.stateNode;
    default:
        return e.child.stateNode
    }
}
function p_(e, t) {
    if (e = e.memoizedState,
    e !== null && e.dehydrated !== null) {
        var r = e.retryLane;
        e.retryLane = r !== 0 && r < t ? r : t
    }
}
function bg(e, t) {
    p_(e, t),
    (e = e.alternate) && p_(e, t)
}
function qI() {
    return null
}
var r3 = typeof reportError == "function" ? reportError : function(e) {
    console.error(e)
}
;
function Cg(e) {
    this._internalRoot = e
}
pm.prototype.render = Cg.prototype.render = function(e) {
    var t = this._internalRoot;
    if (t === null)
        throw Error(Ne(409));
    fm(e, t, null, null)
}
;
pm.prototype.unmount = Cg.prototype.unmount = function() {
    var e = this._internalRoot;
    if (e !== null) {
        this._internalRoot = null;
        var t = e.containerInfo;
        _s(function() {
            fm(null, e, null, null)
        }),
        t[Ri] = null
    }
}
;
function pm(e) {
    this._internalRoot = e
}
pm.prototype.unstable_scheduleHydration = function(e) {
    if (e) {
        var t = D5();
        e = {
            blockedOn: null,
            target: e,
            priority: t
        };
        for (var r = 0; r < co.length && t !== 0 && t < co[r].priority; r++)
            ;
        co.splice(r, 0, e),
        r === 0 && F5(e)
    }
}
;
function Sg(e) {
    return !(!e || e.nodeType !== 1 && e.nodeType !== 9 && e.nodeType !== 11)
}
function ym(e) {
    return !(!e || e.nodeType !== 1 && e.nodeType !== 9 && e.nodeType !== 11 && (e.nodeType !== 8 || e.nodeValue !== " react-mount-point-unstable "))
}
function y_() {}
function VI(e, t, r, a, n) {
    if (n) {
        if (typeof a == "function") {
            var i = a;
            a = function() {
                var u = uh(o);
                i.call(u)
            }
        }
        var o = t3(t, a, e, 0, null, !1, !1, "", y_);
        return e._reactRootContainer = o,
        e[Ri] = o.current,
        _c(e.nodeType === 8 ? e.parentNode : e),
        _s(),
        o
    }
    for (; n = e.lastChild; )
        e.removeChild(n);
    if (typeof a == "function") {
        var s = a;
        a = function() {
            var u = uh(l);
            s.call(u)
        }
    }
    var l = _g(e, 0, !1, null, null, !1, !1, "", y_);
    return e._reactRootContainer = l,
    e[Ri] = l.current,
    _c(e.nodeType === 8 ? e.parentNode : e),
    _s(function() {
        fm(t, l, r, a)
    }),
    l
}
function wm(e, t, r, a, n) {
    var i = r._reactRootContainer;
    if (i) {
        var o = i;
        if (typeof n == "function") {
            var s = n;
            n = function() {
                var l = uh(o);
                s.call(l)
            }
        }
        fm(t, o, e, n)
    } else
        o = VI(r, t, e, n, a);
    return uh(o)
}
M5 = function(e) {
    switch (e.tag) {
    case 3:
        var t = e.stateNode;
        if (t.current.memoizedState.isDehydrated) {
            var r = Hu(t.pendingLanes);
            r !== 0 && ($w(t, r | 1),
            Ea(t, ur()),
            !(Et & 6) && (Vl = ur() + 500,
            qo()))
        }
        break;
    case 13:
        _s(function() {
            var a = Li(e, 1);
            if (a !== null) {
                var n = oa();
                Bn(a, e, 1, n)
            }
        }),
        bg(e, 1)
    }
}
;
zw = function(e) {
    if (e.tag === 13) {
        var t = Li(e, 134217728);
        if (t !== null) {
            var r = oa();
            Bn(t, e, 134217728, r)
        }
        bg(e, 134217728)
    }
}
;
I5 = function(e) {
    if (e.tag === 13) {
        var t = ko(e)
          , r = Li(e, t);
        if (r !== null) {
            var a = oa();
            Bn(r, e, t, a)
        }
        bg(e, t)
    }
}
;
D5 = function() {
    return Rt
}
;
U5 = function(e, t) {
    var r = Rt;
    try {
        return Rt = e,
        t()
    } finally {
        Rt = r
    }
}
;
ty = function(e, t, r) {
    switch (t) {
    case "input":
        if (Yp(e, r),
        t = r.name,
        r.type === "radio" && t != null) {
            for (r = e; r.parentNode; )
                r = r.parentNode;
            for (r = r.querySelectorAll("input[name=" + JSON.stringify("" + t) + '][type="radio"]'),
            t = 0; t < r.length; t++) {
                var a = r[t];
                if (a !== e && a.form === e.form) {
                    var n = lm(a);
                    if (!n)
                        throw Error(Ne(90));
                    c5(a),
                    Yp(a, n)
                }
            }
        }
        break;
    case "textarea":
        v5(e, r);
        break;
    case "select":
        t = r.value,
        t != null && Sl(e, !!r.multiple, t, !1)
    }
}
;
g5 = pg;
_5 = _s;
var $I = {
    usingClientEntryPoint: !1,
    Events: [$c, ul, lm, y5, w5, pg]
}
  , Fu = {
    findFiberByHostInstance: os,
    bundleType: 0,
    version: "18.2.0",
    rendererPackageName: "react-dom"
}
  , zI = {
    bundleType: Fu.bundleType,
    version: Fu.version,
    rendererPackageName: Fu.rendererPackageName,
    rendererConfig: Fu.rendererConfig,
    overrideHookState: null,
    overrideHookStateDeletePath: null,
    overrideHookStateRenamePath: null,
    overrideProps: null,
    overridePropsDeletePath: null,
    overridePropsRenamePath: null,
    setErrorHandler: null,
    setSuspenseHandler: null,
    scheduleUpdate: null,
    currentDispatcherRef: ji.ReactCurrentDispatcher,
    findHostInstanceByFiber: function(e) {
        return e = S5(e),
        e === null ? null : e.stateNode
    },
    findFiberByHostInstance: Fu.findFiberByHostInstance || qI,
    findHostInstancesForRefresh: null,
    scheduleRefresh: null,
    scheduleRoot: null,
    setRefreshHandler: null,
    getCurrentFiber: null,
    reconcilerVersion: "18.2.0-next-9e3b772b8-20220608"
};
if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u") {
    var Pd = __REACT_DEVTOOLS_GLOBAL_HOOK__;
    if (!Pd.isDisabled && Pd.supportsFiber)
        try {
            nm = Pd.inject(zI),
            si = Pd
        } catch {}
}
Ha.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = $I;
Ha.createPortal = function(e, t) {
    var r = 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : null;
    if (!Sg(t))
        throw Error(Ne(200));
    return LI(e, t, null, r)
}
;
Ha.createRoot = function(e, t) {
    if (!Sg(e))
        throw Error(Ne(299));
    var r = !1
      , a = ""
      , n = r3;
    return t != null && (t.unstable_strictMode === !0 && (r = !0),
    t.identifierPrefix !== void 0 && (a = t.identifierPrefix),
    t.onRecoverableError !== void 0 && (n = t.onRecoverableError)),
    t = _g(e, 1, !1, null, null, r, !1, a, n),
    e[Ri] = t.current,
    _c(e.nodeType === 8 ? e.parentNode : e),
    new Cg(t)
}
;
Ha.findDOMNode = function(e) {
    if (e == null)
        return null;
    if (e.nodeType === 1)
        return e;
    var t = e._reactInternals;
    if (t === void 0)
        throw typeof e.render == "function" ? Error(Ne(188)) : (e = Object.keys(e).join(","),
        Error(Ne(268, e)));
    return e = S5(t),
    e = e === null ? null : e.stateNode,
    e
}
;
Ha.flushSync = function(e) {
    return _s(e)
}
;
Ha.hydrate = function(e, t, r) {
    if (!ym(t))
        throw Error(Ne(200));
    return wm(null, e, t, !0, r)
}
;
Ha.hydrateRoot = function(e, t, r) {
    if (!Sg(e))
        throw Error(Ne(405));
    var a = r != null && r.hydratedSources || null
      , n = !1
      , i = ""
      , o = r3;
    if (r != null && (r.unstable_strictMode === !0 && (n = !0),
    r.identifierPrefix !== void 0 && (i = r.identifierPrefix),
    r.onRecoverableError !== void 0 && (o = r.onRecoverableError)),
    t = t3(t, null, e, 1, r ?? null, n, !1, i, o),
    e[Ri] = t.current,
    _c(e),
    a)
        for (e = 0; e < a.length; e++)
            r = a[e],
            n = r._getVersion,
            n = n(r._source),
            t.mutableSourceEagerHydrationData == null ? t.mutableSourceEagerHydrationData = [r, n] : t.mutableSourceEagerHydrationData.push(r, n);
    return new pm(t)
}
;
Ha.render = function(e, t, r) {
    if (!ym(t))
        throw Error(Ne(200));
    return wm(null, e, t, !1, r)
}
;
Ha.unmountComponentAtNode = function(e) {
    if (!ym(e))
        throw Error(Ne(40));
    return e._reactRootContainer ? (_s(function() {
        wm(null, null, e, !1, function() {
            e._reactRootContainer = null,
            e[Ri] = null
        })
    }),
    !0) : !1
}
;
Ha.unstable_batchedUpdates = pg;
Ha.unstable_renderSubtreeIntoContainer = function(e, t, r, a) {
    if (!ym(r))
        throw Error(Ne(200));
    if (e == null || e._reactInternals === void 0)
        throw Error(Ne(38));
    return wm(e, t, r, !1, a)
}
;
Ha.version = "18.2.0-next-9e3b772b8-20220608";
function a3() {
    if (!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ > "u" || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE != "function"))
        try {
            __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(a3)
        } catch (e) {
            console.error(e)
        }
}
a3(),
t5.exports = Ha;
var Gc = t5.exports;
const GI = vi(Gc);
var w_ = Gc;
Vp.createRoot = w_.createRoot,
Vp.hydrateRoot = w_.hydrateRoot;
const jI = LoadingAnimation = () => S.jsx("svg", {
    style: {
        display: "block"
    },
    class: "loading-animation",
    viewBox: "0 0 50 50",
    children: S.jsx("circle", {
        cx: "25",
        cy: "25",
        r: "20",
        fill: "none",
        "stroke-width": "5"
    })
});
function Re(e) {
    const {children: t, onClick: r, isLoading: a, ...n} = e
      , i = () => {
        r && r()
    }
    ;
    return S.jsx("button", {
        ...n,
        onClick: i,
        children: a ? S.jsx(jI, {}) : t
    })
}
function HI({label: e, value: t, isFiltered: r, toggleButton: a}) {
    return S.jsxs(Re, {
        "data-link-name": e,
        className: `resource-filter-button ${r ? "resource-filter-button__filtered" : ""}`,
        onClick: () => a(t),
        children: [e, r && S.jsx("img", {
            src: "/static/assets/images/icons/x-white.svg",
            alt: "remove filter"
        })]
    })
}
const mn = e => window.eventQueue ? window.eventQueue.push(e) : window.eventQueue = [e]
  , n3 = () => ({
    sendEvent: ({eventAction: t, eventLabel: r}) => {
        mn({
            type: "event",
            eventAction: t,
            eventLabel: r
        })
    }
});
function WI({handleSearch: e, categories: t, filteredTags: r, toggleFilter: a, clearFilters: n, isFiltered: i}) {
    const o = Object.values(t).map(v => v)
      , s = q.useRef("")
      , {sendEvent: l} = n3()
      , u = () => {
        n(),
        s.current.value = ""
    }
      , c = v => {
        v.key === "Enter" && e(s.current.value)
    }
      , d = () => {
        l({
            eventAction: "Form Field - interaction",
            eventLabel: "Article Filter > Search"
        })
    }
    ;
    return S.jsx("section", {
        className: "resource-filter-section",
        "data-section-name": "Resource Filter Section",
        children: S.jsx("div", {
            className: "section-container",
            children: S.jsxs("div", {
                className: "resource-filter-section__main-container background-color__light-teal",
                children: [S.jsxs("div", {
                    className: "resource-filter-section__search-section",
                    children: [S.jsx("h4", {
                        className: "h4",
                        children: "Search Resources"
                    }), S.jsxs("div", {
                        className: "resource-filter-section__search-container",
                        children: [S.jsx("div", {
                            className: "form-field form-field__text-input",
                            children: S.jsx("label", {
                                className: "form-field__label-container",
                                children: S.jsxs("div", {
                                    className: "form-field__text-input-button-container",
                                    children: [S.jsx("div", {
                                        className: "form-field__text-input-container",
                                        children: S.jsx("input", {
                                            onBlur: d,
                                            onKeyUp: c,
                                            ref: s,
                                            type: "text",
                                            name: "search_terms",
                                            className: "form-field__input",
                                            placeholder: "Search for anything loan or finance related..."
                                        })
                                    }), S.jsx(Re, {
                                        className: "form-field__search-button hidden-md hidden-lg hidden-xl",
                                        onClick: () => e(s.current.value),
                                        children: S.jsx("img", {
                                            src: "/static/assets/images/icons/magnifying-glass.svg",
                                            alt: "search"
                                        })
                                    })]
                                })
                            })
                        }), S.jsxs(Re, {
                            class: "button button__dark-teal button__width-203 dropshadow dropshadow__hover-off  hidden-xs hidden-sm",
                            onClick: () => e(s.current.value),
                            children: [S.jsx("img", {
                                src: "/static/assets/images/icons/magnifying-glass.svg",
                                alt: "search"
                            }), "Search"]
                        })]
                    })]
                }), S.jsxs("div", {
                    className: "resource-filter-section__buttons-section",
                    children: [S.jsx("h4", {
                        className: "h4",
                        children: "Refine your search by topic"
                    }), S.jsx("div", {
                        className: "resources-filter-section__buttons-container",
                        children: S.jsx("div", {
                            className: "resources-filter-section__buttons-flex-container",
                            children: o.map(v => S.jsx(HI, {
                                label: v.label,
                                value: v.id,
                                isFiltered: r.includes(v.id),
                                toggleButton: a
                            }, v.id))
                        })
                    }), i && S.jsx(Re, {
                        "data-link-name": "Clear Searcn & All Filters",
                        className: "resource-filter-section__clear-filters",
                        onClick: u,
                        children: "Clear Search & All Filters"
                    })]
                })]
            })
        })
    })
}
const YI = SortToggle = ({setLayout: e}) => {
    const t = () => {
        e && e("grid")
    }
      , r = () => {
        e && e("rows")
    }
    ;
    return S.jsxs("div", {
        className: "resources-grid-toggle hidden-md hidden-sm hidden-xs",
        children: [S.jsx("label", {
            className: "resources-grid-toggle__label",
            children: "Sort Topics By:"
        }), S.jsx(Re, {
            className: "resources-grid-toggle__button",
            onClick: t,
            children: S.jsx("img", {
                src: "/static/assets/images/icons/grid-toggle.svg",
                alt: "Use Grid Layout"
            })
        }), S.jsx(Re, {
            className: "resources-grid-toggle__button",
            onClick: r,
            children: S.jsx("img", {
                src: "/static/assets/images/icons/rows-toggle.svg",
                alt: "Use Rows Layout"
            })
        })]
    })
}
  , JI = ResourceCard = ({href: e, category: t, title: r}) => S.jsx("a", {
    href: e,
    className: "resource-card dropshadow",
    "data-link-name": r,
    children: S.jsxs("div", {
        className: "resource-card__container",
        children: [S.jsxs("div", {
            className: "resource-card__content",
            children: [S.jsx("div", {
                className: "resource-card__category-container",
                children: S.jsx("h4", {
                    className: "resource-card__category",
                    children: t
                })
            }), S.jsx("h3", {
                className: "resource-card__title",
                children: r
            })]
        }), S.jsxs("span", {
            className: "arrow-link",
            children: ["Learn More", S.jsx("svg", {
                width: "16",
                height: "14",
                viewBox: "0 0 16 14",
                fill: "#01326B",
                xmlns: "http://www.w3.org/2000/svg",
                children: S.jsx("path", {
                    d: "M7.47332 10.7722L3.21807 6.3278C2.92731 6.02398 2.92731 5.53155 3.21807 5.22786C3.50884 4.92405 3.98043 4.92405 4.27119 5.22786L8 9.12246L11.7288 5.22786C12.0196 4.92405 12.4912 4.92405 12.7819 5.22786C13.0727 5.53156 13.0727 6.02399 12.7819 6.3278L8.52668 10.7722C8.23591 11.0759 7.76408 11.0759 7.47332 10.7722Z",
                    fill: "#002769"
                })
            })]
        })]
    })
});
function xg({currentPage: e, totalPages: t, setPageNumber: r}) {
    const a = () => {
        e < t && r(e + 1)
    }
      , n = () => {
        e > 1 && r(e - 1)
    }
    ;
    return t < 2 ? null : S.jsx("div", {
        className: "pagination",
        children: S.jsxs("div", {
            className: "pagination__container",
            children: [S.jsx(Re, {
                "data-link-name": "Pagination - Previous",
                className: "pagination-button pagination-button--left",
                onClick: n,
                children: "Previous"
            }), S.jsx("p", {
                className: "pagination__pages",
                children: `${e} of ${t}`
            }), S.jsx(Re, {
                "data-link-name": "Pagination - Next",
                className: "pagination-button pagination-button--right",
                onClick: a,
                children: "Next"
            })]
        })
    })
}
const KI = e => {
    if (!(!e || typeof e != "string"))
        return e.replace(/(<([^>]+)>)/ig, "")
}
  , gm = (e, t) => {
    try {
        if (!Array.isArray(e))
            throw new Error("Must be an array.");
        if (typeof t != "number")
            throw new Error("Chunk size must be a number.");
        if (t < 1)
            throw new Error("Chunk size must be greater than zero.");
        return e.length <= t ? [e] : [e.slice(0, t), ...gm(e.slice(t), t)]
    } catch (r) {
        return console.error(r),
        []
    }
}
  , i3 = e => {
    if (window.eventQueue)
        return window.eventQueue.push(e);
    window.eventQueue = [e]
}
;
function QI() {
    const e = document.querySelector('[data-nav="container"]');
    return (e == null ? void 0 : e.offsetHeight) ?? 0
}
const ii = (e, t) => {
    if (!e)
        return;
    const r = QI()
      , a = t ?? r
      , n = e.getBoundingClientRect().top + window.scrollY - a;
    window.scrollTo({
        top: n,
        behavior: "smooth"
    })
}
  , g_ = 12;
function ZI({resources: e, isFiltered: t}) {
    const [r,a] = q.useState("grid")
      , [n,i] = q.useState(1)
      , o = q.useRef()
      , s = q.useCallback(c => {
        ii(o.current),
        i(c)
    }
    , [o]);
    q.useEffect( () => {
        i(1)
    }
    , [e]);
    const l = q.useMemo( () => {
        const c = gm(e, g_);
        return c[n - 1] ?? c[0]
    }
    , [e, n])
      , u = Math.ceil(e.length / g_);
    return S.jsx("section", {
        ref: o,
        class: "resources-grid resources-grid__archive-page",
        "data-section-name": "Resources grid",
        children: S.jsx("div", {
            class: "section-container",
            children: S.jsxs("div", {
                className: "resources-grid__archive-page-container",
                children: [S.jsx(YI, {
                    setLayout: a
                }), S.jsxs("div", {
                    class: "resources-grid__container",
                    children: [t && S.jsx("div", {
                        class: "resources-grid__header-container",
                        style: e.length === 0 ? {} : {
                            alignSelf: "flex-start"
                        },
                        children: S.jsx("h2", {
                            class: "h2",
                            children: e.length === 0 ? "Sorry, there are no results" : "Search Results"
                        })
                    }), S.jsx("div", {
                        className: `resources-grid__cards-container resources-grid__layout-${r}`,
                        children: l.map(c => S.jsx(JI, {
                            href: c.url,
                            category: c.category.name,
                            title: c.title
                        }))
                    })]
                }), S.jsx(xg, {
                    currentPage: n,
                    totalPages: u,
                    setPageNumber: s
                })]
            })
        })
    })
}
function XI(e, t) {
    const r = e.includes("http") ? e : `${window.location.origin}${e}`
      , a = new URL(r)
      , n = Object.fromEntries(a.searchParams)
      , i = new URLSearchParams({
        ...n,
        ...t
    });
    return a.search = i,
    /\.[^.]*$/.test(a.pathname) || (a.pathname = a.pathname.replace(/\/?$/, "/")),
    a
}
const Ag = (e, t) => {
    const r = {
        status: e,
        ...t
    };
    throw new Error(t.code,{
        cause: r
    })
}
  , eD = async (e, t, r) => {
    const a = JSON.stringify(t)
      , n = {
        method: "POST",
        ...r,
        body: a
    }
      , i = await fetch(e, n)
      , o = await i.json();
    return i.status !== 200 && Ag(i.status, o),
    o
}
  , tD = async (e, t, r) => {
    const a = {
        method: "GET",
        ...r
    }
      , n = XI(e, t)
      , i = await fetch(n, a)
      , o = await i.json();
    return i.status !== 200 && Ag(i.status, o),
    o
}
  , rD = async (e, t, r) => {
    const a = JSON.stringify(t)
      , n = {
        method: "PUT",
        ...r,
        body: a
    }
      , i = await fetch(e, n)
      , o = await i.json();
    return i.status !== 200 && Ag(i.status, o),
    o
}
  , za = {
    post: eD,
    put: rD,
    get: tD
}
  , aD = (e, t) => t === null ? e : t.length === 0 ? [] : t.map(a => e.find(n => n.id === a));

function nD() {
    const {articles: e, categories: t} = window.articlesInfo
      , [r,a] = q.useState([])
      , [n,i] = q.useState(null)
      , {sendEvent: o} = n3()
      ,
    s = q.useCallback(d => {
        if (r.includes(d)) {
            const v = r.filter(h => h !== d);
            return a(v)
        }
        return a([...r, d])
    }
    , [r])
      , l = q.useMemo( () => {
        const d = aD(e, n);
        return r.length === 0 ? d : d.filter(h => r.includes(h.category.id))
    }
    , [r, n])
      , u = () => {
        a([]),
        i(null)
    }
      , c = async d => {
        if (!d)
            return i(null);
        o({
            eventAction: "Search Form - submit",
            eventLabel: "Search"
        });
        const v = await za.get(`/wp-json/articles/search?search_term=${d}`);
        o({
            eventAction: "Search Form - submit success",
            eventLabel: "Search"
        }),
        i(v)
    }
    ;
    return S.jsxs(S.Fragment, {
        children: [S.jsx(WI, {
            categories: t,
            isFiltered: l.length !== e.length,
            handleSearch: c,
            filteredTags: r,
            toggleFilter: s,
            clearFilters: u
        }), S.jsx(ZI, {
            resources: l,
            isFiltered: l.length !== e.length
        })]
    })
}
function iD({glossaryTerms: e}) {
    const [t,r] = q.useState("");
    if (!e || e.length === 0)
        return null;
    const a = n => {
        if (n === t)
            return r("");
        r(n)
    }
    ;
    return S.jsx("div", {
        className: "glossary-section__scrollable-section background-color__white",
        children: S.jsx("div", {
            className: "glossary-section__scrollable-area",
            children: S.jsx("div", {
                className: "glossary-section__terms-container",
                children: e.map(n => {
                    const i = S.jsxs("p", {
                        className: "glossary-section__term-label",
                        children: [S.jsx("strong", {
                            children: n.title.slice(0, 1)
                        }), n.title.slice(1)]
                    })
                      , o = S.jsx("p", {
                        className: "p-small",
                        children: KI(n.explanation)
                    })
                      , s = t === n.title;
                    return S.jsxs("div", {
                        className: `glossary-section__term${s ? " glossary-section__term--expanded" : ""}`,
                        onClick: () => a(n.title),
                        children: [i, s && o]
                    }, n.title)
                }
                )
            })
        })
    })
}
function Ga(e) {
    const {href: t, label: r, children: a, ...n} = e;
    return S.jsx("a", {
        "data-link-name": r,
        href: t,
        ...n,
        children: a || r
    })
}
const oD = q.memo(function({glossaryTerms: t}) {
    if (!t)
        return null;
    const r = t.map(n => ({
        "@type": "DefinedTerm",
        "@id": "https://www.afrifunduniversitylender.com/loans/student-loans/",
        name: n.title,
        description: n.explanation,
        inDefinedTermSet: "https://www.afrifunduniversitylender.com/loans/student-loans/"
    }))
      ,
    a = [{
        "@context": "https://schema.org/"
    }, {
        "@type": ["DefinedTermSet", "Glossary"],
        "@id": "https://www.afrifunduniversitylender.com/student-loans",
        name: "Afri Fund Universty Lender - Student Loan Glossary"
    }, ...r];
    return S.jsx("script", {
        type: "application/ld+json",
        children: JSON.stringify(a)
    })
});
function sD() {
    const [e,t] = q.useState(null)
      , [r,a] = q.useState([])
      , [n,i] = q.useState("")
      , o = q.useRef("");
    q.useEffect( () => {
        (async () => {
            try {
                const u = await za.get("/api/loans/glossary/");
                t(u.slice(0, -1)),
                a(u.slice(0, -1))
            } catch {
                return
            }
        }
        )()
    }
    , []);
    const s = () => {
        o.current.value = "",
        a(e),
        i("")
    }
      , l = () => {
        const u = o.current.value;
        if (!u)
            return s();
        const c = e.filter(d => d.title.toLowerCase().indexOf(u.toLowerCase()) > -1);
        if (c.length === 0) {
            a(e),
            i("Please enter a valid search term");
            return
        }
        i("Clear search"),
        a(c)
    }
    ;
    return e === null ? null : S.jsxs(S.Fragment, {
        children: [S.jsx(oD, {
            glossaryTerms: e
        }), S.jsx("section", {
            className: "glossary-section",
            children: S.jsx("div", {
                className: "section-container",
                children: S.jsx("div", {
                    className: "glossary-section__outer-container background-color__light-teal",
                    children: S.jsx("div", {
                        className: "glossary-section__container",
                        children: S.jsxs("div", {
                            className: "glossary-section__columns-container",
                            children: [S.jsx("div", {
                                className: "glossary-section__left-column",
                                children: S.jsxs("div", {
                                    className: "glossary-section__left-column-content",
                                    children: [S.jsxs("div", {
                                        className: "glossary-section__content-text-container",
                                        children: [S.jsx("h2", {
                                            className: "h2",
                                            children: "Loan Glossary"
                                        }), S.jsx("p", {
                                            className: "p-large",
                                            children: "Our Loan Glossary is your guide to understanding all the different terms, abbreviations, and financial jargon that’s associated with Government and private student loans."
                                        })]
                                    }), S.jsx("div", {
                                        className: "glossary-section__content-input-container",
                                        children: S.jsxs("div", {
                                            className: "form-field form-field__text-input",
                                            children: [S.jsxs("label", {
                                                className: "form-field__label-container",
                                                children: [S.jsx("p", {
                                                    className: "form-field__label",
                                                    children: "Lookup"
                                                }), S.jsxs("div", {
                                                    className: "form-field__text-input-button-container",
                                                    children: [S.jsx("div", {
                                                        className: "form-field__text-input-container",
                                                        children: S.jsx("input", {
                                                            ref: o,
                                                            name: "filter",
                                                            type: "text",
                                                            className: "form-field__input",
                                                            placeholder: ""
                                                        })
                                                    }), S.jsx(Re, {
                                                        className: "form-field__search-button",
                                                        onClick: l,
                                                        children: S.jsx("img", {
                                                            src: "/static/assets/images/icons/magnifying-glass.svg",
                                                            alt: "search"
                                                        })
                                                    })]
                                                })]
                                            }), !!n && S.jsx(Re, {
                                                onClick: s,
                                                style: {
                                                    border: "none",
                                                    background: "transparent",
                                                    width: "fit-content"
                                                },
                                                children: S.jsxs("p", {
                                                    className: "form-field__message",
                                                    children: [" ✕ ", n]
                                                })
                                            })]
                                        })
                                    }), S.jsx("div", {
                                        className: "glossary-section__button-container hidden-xs hidden-sm hidden-md",
                                        children: S.jsx(Ga, {
                                            href: "",
                                            className: "button button__dark-teal button__width-293 dropshadow dropshadow__hover-off",
                                            label: "View Full Loan Glossary"
                                        })
                                    })]
                                })
                            }), S.jsxs("div", {
                                className: "glossary-section__right-column",
                                children: [S.jsx(iD, {
                                    glossaryTerms: r
                                }), S.jsx("div", {
                                    className: "glossary-section__button-container hidden-lg hidden-xl",
                                    children: S.jsx(Ga, {
                                        href: "",
                                        className: "button button__dark-teal button__width-293 dropshadow dropshadow__hover-off",
                                        label: "View Full Loan Glossary"
                                    })
                                })]
                            })]
                        })
                    })
                })
            })
        })]
    })
}
function lD({percent: e, background: t="light-gray", color: r="teal"}) {
    return S.jsx("div", {
        className: `progress-bar background-color__${t}`,
        children: S.jsx("div", {
            className: `progress-bar__complete background-color__${r}`,
            style: {
                width: `${e}%`
            }
        })
    })
}
function o3({label: e, direction: t, onClick: r}) {
    return S.jsxs(Re, {
        className: `arrow-button arrow-button__${t}`,
        onClick: r,
        children: [S.jsx("div", {
            className: "arrow-button__arrow-container",
            children: S.jsx("svg", {
                width: "16",
                height: "14",
                viewBox: "0 0 16 14",
                fill: "#01326B",
                xmlns: "http://www.w3.org/2000/svg",
                children: S.jsx("path", {
                    d: "M7.47332 10.7722L3.21807 6.3278C2.92731 6.02398 2.92731 5.53155 3.21807 5.22786C3.50884 4.92405 3.98043 4.92405 4.27119 5.22786L8 9.12246L11.7288 5.22786C12.0196 4.92405 12.4912 4.92405 12.7819 5.22786C13.0727 5.53156 13.0727 6.02399 12.7819 6.3278L8.52668 10.7722C8.23591 11.0759 7.76408 11.0759 7.47332 10.7722Z",
                    fill: "#002769"
                })
            })
        }), S.jsx("div", {
            className: "arrow-button__label p-small font-weight-700",
            children: e
        })]
    })
}
function uD({children: e}) {
    return S.jsx("div", {
        className: "prequalify-screen__step-container background-color__white",
        children: S.jsx("div", {
            className: "prequalify-screen__step-container--content",
            children: e
        })
    })
}
function s3({label: e, value: t, onClick: r, icon: a, type: n, href: i}) {
    if (n === "button") {
        const o = () => {
            r && r(t)
        }
        ;
        return S.jsxs(Re, {
            onClick: o,
            className: "product-selection-button dropshadow dropshadow__hover-on",
            children: [S.jsx("img", {
                src: `/static/assets/images/icons/${a}.svg`,
                alt: e,
                className: "product-selection-button__icon"
            }), S.jsx("h4", {
                className: "h4",
                children: e
            }), S.jsx("img", {
                src: "/static/assets/images/icons/arrow.svg",
                alt: "arrow",
                className: "product-selection-button__arrow"
            })]
        })
    }
    if (n === "link")
        return S.jsxs("a", {
            href: i,
            className: "product-selection-button dropshadow dropshadow__hover-on",
            children: [S.jsx("img", {
                src: `/static/assets/images/icons/${a}.svg`,
                alt: e,
                className: "product-selection-button__icon"
            }), S.jsx("h4", {
                className: "h4",
                children: e
            }), S.jsx("img", {
                src: "/static/assets/images/icons/arrow.svg",
                alt: "arrow",
                className: "product-selection-button__arrow"
            })]
        })
}
function cD({handleSelection: e}) {
    const t = [{
        label: "Undergraduate Loan",
        value: "CAIS01",
        type: "button",
        onClick: e
    }, {
        label: "Graduate Loan",
        value: "CAIS02",
        type: "button",
        onClick: e
    }, {
        label: "Career Loans",
        value: "CAIS03",
        type: "button",
        onClick: e
    }, {
        label: "Parent Loan",
        value: "CAPA01",
        type: "button",
        onClick: e
    }, {
        label: "Student Loan Refinancing",
        value: "CARF01",
        type: "link",
        href: "/application/?ACT=SS&SC=CARF01"
    }];
    return S.jsxs("div", {
        className: "prequalify-screen__selection-view",
        children: [S.jsx("div", {
            className: "prequalify-screen__text-container",
            children: S.jsx("h2", {
                className: "h2",
                children: "What would you like to prequalify for?"
            })
        }), S.jsx("div", {
            className: "prequalify-selection-group",
            children: t.map(r => S.jsx(s3, {
                onClick: r.onClick,
                href: r.href,
                type: r.type,
                value: r.value,
                icon: r.value,
                label: r.label
            }, r.value))
        }), S.jsxs("p", {
            className: "p-large",
            children: ["Looking to compare your loan with competitors? ", S.jsx(Ga, {
                href: "/compare/",
                label: "Compare"
            })]
        })]
    })
}
const dD = {
    label: "Student",
    value: "student",
    icon: "CAIS01"
}
  , vD = {
    label: "Undergraduate Student",
    value: "student",
    icon: "CAIS01"
}
  , hD = {
    label: "Graduate Student",
    value: "graduate",
    icon: "CAIS02"
}
  , __ = {
    label: "Cosigner",
    value: "cosigner",
    icon: "parchment"
};
function mD({handleSelection: e, sourceCode: t}) {
    const r = ( () => t === "CAIS03" ? [vD, hD, __] : [dD, __])();
    return S.jsxs("div", {
        className: "prequalify-screen__selection-view",
        children: [S.jsx("div", {
            className: "prequalify-screen__text-container",
            children: S.jsxs("h2", {
                className: "h2",
                children: ["Tell Us About Yourself,", S.jsx("br", {}), "I am a..."]
            })
        }), S.jsx("div", {
            className: "prequalify-selection-group",
            children: r.map(a => S.jsx(s3, {
                type: "button",
                onClick: e,
                value: a.value,
                icon: a.icon,
                label: a.label
            }))
        })]
    })
}
var jc = e => e.type === "checkbox"
  , pl = e => e instanceof Date
  , na = e => e == null;
const l3 = e => typeof e == "object";
var br = e => !na(e) && !Array.isArray(e) && l3(e) && !pl(e)
  , u3 = e => br(e) && e.target ? jc(e.target) ? e.target.checked : e.target.value : e
  , fD = e => e.substring(0, e.search(/\.\d+(\.|$)/)) || e
  , c3 = (e, t) => e.has(fD(t))
  , pD = e => {
    const t = e.constructor && e.constructor.prototype;
    return br(t) && t.hasOwnProperty("isPrototypeOf")
}
  , Eg = typeof window < "u" && typeof window.HTMLElement < "u" && typeof document < "u";
function Tn(e) {
    let t;
    const r = Array.isArray(e);
    if (e instanceof Date)
        t = new Date(e);
    else if (e instanceof Set)
        t = new Set(e);
    else if (!(Eg && (e instanceof Blob || e instanceof FileList)) && (r || br(e)))
        if (t = r ? [] : {},
        !r && !pD(e))
            t = e;
        else
            for (const a in e)
                e.hasOwnProperty(a) && (t[a] = Tn(e[a]));
    else
        return e;
    return t
}
var Hc = e => Array.isArray(e) ? e.filter(Boolean) : []
  , lr = e => e === void 0
  , De = (e, t, r) => {
    if (!t || !br(e))
        return r;
    const a = Hc(t.split(/[,[\].]+?/)).reduce( (n, i) => na(n) ? n : n[i], e);
    return lr(a) || a === e ? lr(e[t]) ? r : e[t] : a
}
  , po = e => typeof e == "boolean";
const ch = {
    BLUR: "blur",
    FOCUS_OUT: "focusout",
    CHANGE: "change"
}
  , Un = {
    onBlur: "onBlur",
    onChange: "onChange",
    onSubmit: "onSubmit",
    onTouched: "onTouched",
    all: "all"
}
  , Ci = {
    max: "max",
    min: "min",
    maxLength: "maxLength",
    minLength: "minLength",
    pattern: "pattern",
    required: "required",
    validate: "validate"
}
  , yD = Gt.createContext(null)
  , kg = () => Gt.useContext(yD);
var d3 = (e, t, r, a=!0) => {
    const n = {
        defaultValues: t._defaultValues
    };
    for (const i in e)
        Object.defineProperty(n, i, {
            get: () => {
                const o = i;
                return t._proxyFormState[o] !== Un.all && (t._proxyFormState[o] = !a || Un.all),
                r && (r[o] = !0),
                e[o]
            }
        });
    return n
}
  , rn = e => br(e) && !Object.keys(e).length
  , v3 = (e, t, r, a) => {
    r(e);
    const {name: n, ...i} = e;
    return rn(i) || Object.keys(i).length >= Object.keys(t).length || Object.keys(i).find(o => t[o] === (!a || Un.all))
}
  , Iv = e => Array.isArray(e) ? e : [e]
  , h3 = (e, t, r) => !e || !t || e === t || Iv(e).some(a => a && (r ? a === t : a.startsWith(t) || t.startsWith(a)));
function Tg(e) {
    const t = Gt.useRef(e);
    t.current = e,
    Gt.useEffect( () => {
        const r = !e.disabled && t.current.subject && t.current.subject.subscribe({
            next: t.current.next
        });
        return () => {
            r && r.unsubscribe()
        }
    }
    , [e.disabled])
}
function wD(e) {
    const t = kg()
      , {control: r=t.control, disabled: a, name: n, exact: i} = e || {}
      , [o,s] = Gt.useState(r._formState)
      , l = Gt.useRef(!0)
      , u = Gt.useRef({
        isDirty: !1,
        isLoading: !1,
        dirtyFields: !1,
        touchedFields: !1,
        isValidating: !1,
        isValid: !1,
        errors: !1
    })
      , c = Gt.useRef(n);
    return c.current = n,
    Tg({
        disabled: a,
        next: d => l.current && h3(c.current, d.name, i) && v3(d, u.current, r._updateFormState) && s({
            ...r._formState,
            ...d
        }),
        subject: r._subjects.state
    }),
    Gt.useEffect( () => (l.current = !0,
    u.current.isValid && r._updateValid(!0),
    () => {
        l.current = !1
    }
    ), [r]),
    d3(o, r, u.current, !1)
}
var oi = e => typeof e == "string"
  , m3 = (e, t, r, a, n) => oi(e) ? (a && t.watch.add(e),
De(r, e, n)) : Array.isArray(e) ? e.map(i => (a && t.watch.add(i),
De(r, i))) : (a && (t.watchAll = !0),
r);
function gD(e) {
    const t = kg()
      , {control: r=t.control, name: a, defaultValue: n, disabled: i, exact: o} = e || {}
      , s = Gt.useRef(a);
    s.current = a,
    Tg({
        disabled: i,
        subject: r._subjects.values,
        next: c => {
            h3(s.current, c.name, o) && u(Tn(m3(s.current, r._names, c.values || r._formValues, !1, n)))
        }
    });
    const [l,u] = Gt.useState(r._getWatch(a, n));
    return Gt.useEffect( () => r._removeUnmounted()),
    l
}
var Ng = e => /^\w*$/.test(e)
  , f3 = e => Hc(e.replace(/["|']|\]/g, "").split(/\.|\[/));
function zt(e, t, r) {
    let a = -1;
    const n = Ng(t) ? [t] : f3(t)
      , i = n.length
      , o = i - 1;
    for (; ++a < i; ) {
        const s = n[a];
        let l = r;
        if (a !== o) {
            const u = e[s];
            l = br(u) || Array.isArray(u) ? u : isNaN(+n[a + 1]) ? {} : []
        }
        e[s] = l,
        e = e[s]
    }
    return e
}
function _D(e) {
    const t = kg()
      , {name: r, disabled: a, control: n=t.control, shouldUnregister: i} = e
      , o = c3(n._names.array, r)
      , s = gD({
        control: n,
        name: r,
        defaultValue: De(n._formValues, r, De(n._defaultValues, r, e.defaultValue)),
        exact: !0
    })
      , l = wD({
        control: n,
        name: r
    })
      , u = Gt.useRef(n.register(r, {
        ...e.rules,
        value: s
    }));
    return u.current = n.register(r, e.rules),
    Gt.useEffect( () => {
        const c = n._options.shouldUnregister || i
          , d = (v, h) => {
            const p = De(n._fields, v);
            p && (p._f.mount = h)
        }
        ;
        if (d(r, !0),
        c) {
            const v = Tn(De(n._options.defaultValues, r));
            zt(n._defaultValues, r, v),
            lr(De(n._formValues, r)) && zt(n._formValues, r, v)
        }
        return () => {
            (o ? c && !n._state.action : c) ? n.unregister(r) : d(r, !1)
        }
    }
    , [r, n, o, i]),
    Gt.useEffect( () => {
        De(n._fields, r) && n._updateDisabledField({
            disabled: a,
            fields: n._fields,
            name: r
        })
    }
    , [a, r, n]),
    {
        field: {
            name: r,
            value: s,
            ...po(a) ? {
                disabled: a
            } : {},
            onChange: Gt.useCallback(c => u.current.onChange({
                target: {
                    value: u3(c),
                    name: r
                },
                type: ch.CHANGE
            }), [r]),
            onBlur: Gt.useCallback( () => u.current.onBlur({
                target: {
                    value: De(n._formValues, r),
                    name: r
                },
                type: ch.BLUR
            }), [r, n]),
            ref: c => {
                const d = De(n._fields, r);
                d && c && (d._f.ref = {
                    focus: () => c.focus(),
                    select: () => c.select(),
                    setCustomValidity: v => c.setCustomValidity(v),
                    reportValidity: () => c.reportValidity()
                })
            }
        },
        formState: l,
        fieldState: Object.defineProperties({}, {
            invalid: {
                enumerable: !0,
                get: () => !!De(l.errors, r)
            },
            isDirty: {
                enumerable: !0,
                get: () => !!De(l.dirtyFields, r)
            },
            isTouched: {
                enumerable: !0,
                get: () => !!De(l.touchedFields, r)
            },
            error: {
                enumerable: !0,
                get: () => De(l.errors, r)
            }
        })
    }
}
const au = e => e.render(_D(e));
var bD = (e, t, r, a, n) => t ? {
    ...r[e],
    types: {
        ...r[e] && r[e].types ? r[e].types : {},
        [a]: n || !0
    }
} : {};
const Fy = (e, t, r) => {
    for (const a of r || Object.keys(e)) {
        const n = De(e, a);
        if (n) {
            const {_f: i, ...o} = n;
            if (i && t(i.name)) {
                if (i.ref.focus) {
                    i.ref.focus();
                    break
                } else if (i.refs && i.refs[0].focus) {
                    i.refs[0].focus();
                    break
                }
            } else
                br(o) && Fy(o, t)
        }
    }
}
;
var b_ = e => ({
    isOnSubmit: !e || e === Un.onSubmit,
    isOnBlur: e === Un.onBlur,
    isOnChange: e === Un.onChange,
    isOnAll: e === Un.all,
    isOnTouch: e === Un.onTouched
})
  , C_ = (e, t, r) => !r && (t.watchAll || t.watch.has(e) || [...t.watch].some(a => e.startsWith(a) && /^\.\w+/.test(e.slice(a.length))))
  , CD = (e, t, r) => {
    const a = Hc(De(e, r));
    return zt(a, "root", t[r]),
    zt(e, r, a),
    e
}
  , Mg = e => e.type === "file"
  , yo = e => typeof e == "function"
  , dh = e => {
    if (!Eg)
        return !1;
    const t = e ? e.ownerDocument : 0;
    return e instanceof (t && t.defaultView ? t.defaultView.HTMLElement : HTMLElement)
}
  , Dv = e => oi(e)
  , Ig = e => e.type === "radio"
  , vh = e => e instanceof RegExp;
const S_ = {
    value: !1,
    isValid: !1
}
  , x_ = {
    value: !0,
    isValid: !0
};
var p3 = e => {
    if (Array.isArray(e)) {
        if (e.length > 1) {
            const t = e.filter(r => r && r.checked && !r.disabled).map(r => r.value);
            return {
                value: t,
                isValid: !!t.length
            }
        }
        return e[0].checked && !e[0].disabled ? e[0].attributes && !lr(e[0].attributes.value) ? lr(e[0].value) || e[0].value === "" ? x_ : {
            value: e[0].value,
            isValid: !0
        } : x_ : S_
    }
    return S_
}
;
const A_ = {
    isValid: !1,
    value: null
};
var y3 = e => Array.isArray(e) ? e.reduce( (t, r) => r && r.checked && !r.disabled ? {
    isValid: !0,
    value: r.value
} : t, A_) : A_;
function E_(e, t, r="validate") {
    if (Dv(e) || Array.isArray(e) && e.every(Dv) || po(e) && !e)
        return {
            type: r,
            message: Dv(e) ? e : "",
            ref: t
        }
}
var Hs = e => br(e) && !vh(e) ? e : {
    value: e,
    message: ""
}
  , k_ = async (e, t, r, a, n) => {
    const {ref: i, refs: o, required: s, maxLength: l, minLength: u, min: c, max: d, pattern: v, validate: h, name: p, valueAsNumber: f, mount: _, disabled: y} = e._f
      , g = De(t, p);
    if (!_ || y)
        return {};
    const m = o ? o[0] : i
      , w = T => {
        a && m.reportValidity && (m.setCustomValidity(po(T) ? "" : T || ""),
        m.reportValidity())
    }
      , C = {}
      , b = Ig(i)
      , x = jc(i)
      , E = b || x
      , k = (f || Mg(i)) && lr(i.value) && lr(g) || dh(i) && i.value === "" || g === "" || Array.isArray(g) && !g.length
      , A = bD.bind(null, p, r, C)
      , I = (T, F, R, O=Ci.maxLength, M=Ci.minLength) => {
        const N = T ? F : R;
        C[p] = {
            type: T ? O : M,
            message: N,
            ref: i,
            ...A(T ? O : M, N)
        }
    }
    ;
    if (n ? !Array.isArray(g) || !g.length : s && (!E && (k || na(g)) || po(g) && !g || x && !p3(o).isValid || b && !y3(o).isValid)) {
        const {value: T, message: F} = Dv(s) ? {
            value: !!s,
            message: s
        } : Hs(s);
        if (T && (C[p] = {
            type: Ci.required,
            message: F,
            ref: m,
            ...A(Ci.required, F)
        },
        !r))
            return w(F),
            C
    }
    if (!k && (!na(c) || !na(d))) {
        let T, F;
        const R = Hs(d)
          , O = Hs(c);
        if (!na(g) && !isNaN(g)) {
            const M = i.valueAsNumber || g && +g;
            na(R.value) || (T = M > R.value),
            na(O.value) || (F = M < O.value)
        } else {
            const M = i.valueAsDate || new Date(g)
              , N = V => new Date(new Date().toDateString() + " " + V)
              , B = i.type == "time"
              , D = i.type == "week";
            oi(R.value) && g && (T = B ? N(g) > N(R.value) : D ? g > R.value : M > new Date(R.value)),
            oi(O.value) && g && (F = B ? N(g) < N(O.value) : D ? g < O.value : M < new Date(O.value))
        }
        if ((T || F) && (I(!!T, R.message, O.message, Ci.max, Ci.min),
        !r))
            return w(C[p].message),
            C
    }
    if ((l || u) && !k && (oi(g) || n && Array.isArray(g))) {
        const T = Hs(l)
          , F = Hs(u)
          , R = !na(T.value) && g.length > +T.value
          , O = !na(F.value) && g.length < +F.value;
        if ((R || O) && (I(R, T.message, F.message),
        !r))
            return w(C[p].message),
            C
    }
    if (v && !k && oi(g)) {
        const {value: T, message: F} = Hs(v);
        if (vh(T) && !g.match(T) && (C[p] = {
            type: Ci.pattern,
            message: F,
            ref: i,
            ...A(Ci.pattern, F)
        },
        !r))
            return w(F),
            C
    }
    if (h) {
        if (yo(h)) {
            const T = await h(g, t)
              , F = E_(T, m);
            if (F && (C[p] = {
                ...F,
                ...A(Ci.validate, F.message)
            },
            !r))
                return w(F.message),
                C
        } else if (br(h)) {
            let T = {};
            for (const F in h) {
                if (!rn(T) && !r)
                    break;
                const R = E_(await h[F](g, t), m, F);
                R && (T = {
                    ...R,
                    ...A(F, R.message)
                },
                w(R.message),
                r && (C[p] = T))
            }
            if (!rn(T) && (C[p] = {
                ref: m,
                ...T
            },
            !r))
                return C
        }
    }
    return w(!0),
    C
}
;
function SD(e, t) {
    const r = t.slice(0, -1).length;
    let a = 0;
    for (; a < r; )
        e = lr(e) ? a++ : e[t[a++]];
    return e
}
function xD(e) {
    for (const t in e)
        if (e.hasOwnProperty(t) && !lr(e[t]))
            return !1;
    return !0
}
function Dr(e, t) {
    const r = Array.isArray(t) ? t : Ng(t) ? [t] : f3(t)
      , a = r.length === 1 ? e : SD(e, r)
      , n = r.length - 1
      , i = r[n];
    return a && delete a[i],
    n !== 0 && (br(a) && rn(a) || Array.isArray(a) && xD(a)) && Dr(e, r.slice(0, -1)),
    e
}
function np() {
    let e = [];
    return {
        get observers() {
            return e
        },
        next: n => {
            for (const i of e)
                i.next && i.next(n)
        }
        ,
        subscribe: n => (e.push(n),
        {
            unsubscribe: () => {
                e = e.filter(i => i !== n)
            }
        }),
        unsubscribe: () => {
            e = []
        }
    }
}
var hh = e => na(e) || !l3(e);
function us(e, t) {
    if (hh(e) || hh(t))
        return e === t;
    if (pl(e) && pl(t))
        return e.getTime() === t.getTime();
    const r = Object.keys(e)
      , a = Object.keys(t);
    if (r.length !== a.length)
        return !1;
    for (const n of r) {
        const i = e[n];
        if (!a.includes(n))
            return !1;
        if (n !== "ref") {
            const o = t[n];
            if (pl(i) && pl(o) || br(i) && br(o) || Array.isArray(i) && Array.isArray(o) ? !us(i, o) : i !== o)
                return !1
        }
    }
    return !0
}
var w3 = e => e.type === "select-multiple"
  , AD = e => Ig(e) || jc(e)
  , ip = e => dh(e) && e.isConnected
  , g3 = e => {
    for (const t in e)
        if (yo(e[t]))
            return !0;
    return !1
}
;
function mh(e, t={}) {
    const r = Array.isArray(e);
    if (br(e) || r)
        for (const a in e)
            Array.isArray(e[a]) || br(e[a]) && !g3(e[a]) ? (t[a] = Array.isArray(e[a]) ? [] : {},
            mh(e[a], t[a])) : na(e[a]) || (t[a] = !0);
    return t
}
function _3(e, t, r) {
    const a = Array.isArray(e);
    if (br(e) || a)
        for (const n in e)
            Array.isArray(e[n]) || br(e[n]) && !g3(e[n]) ? lr(t) || hh(r[n]) ? r[n] = Array.isArray(e[n]) ? mh(e[n], []) : {
                ...mh(e[n])
            } : _3(e[n], na(t) ? {} : t[n], r[n]) : r[n] = !us(e[n], t[n]);
    return r
}
var op = (e, t) => _3(e, t, mh(t))
  , b3 = (e, {valueAsNumber: t, valueAsDate: r, setValueAs: a}) => lr(e) ? e : t ? e === "" ? NaN : e && +e : r && oi(e) ? new Date(e) : a ? a(e) : e;
function sp(e) {
    const t = e.ref;
    if (!(e.refs ? e.refs.every(r => r.disabled) : t.disabled))
        return Mg(t) ? t.files : Ig(t) ? y3(e.refs).value : w3(t) ? [...t.selectedOptions].map( ({value: r}) => r) : jc(t) ? p3(e.refs).value : b3(lr(t.value) ? e.ref.value : t.value, e)
}
var ED = (e, t, r, a) => {
    const n = {};
    for (const i of e) {
        const o = De(t, i);
        o && zt(n, i, o._f)
    }
    return {
        criteriaMode: r,
        names: [...e],
        fields: n,
        shouldUseNativeValidation: a
    }
}
  , Ou = e => lr(e) ? e : vh(e) ? e.source : br(e) ? vh(e.value) ? e.value.source : e.value : e
  , kD = e => e.mount && (e.required || e.min || e.max || e.maxLength || e.minLength || e.pattern || e.validate);
function T_(e, t, r) {
    const a = De(e, r);
    if (a || Ng(r))
        return {
            error: a,
            name: r
        };
    const n = r.split(".");
    for (; n.length; ) {
        const i = n.join(".")
          , o = De(t, i)
          , s = De(e, i);
        if (o && !Array.isArray(o) && r !== i)
            return {
                name: r
            };
        if (s && s.type)
            return {
                name: i,
                error: s
            };
        n.pop()
    }
    return {
        name: r
    }
}
var TD = (e, t, r, a, n) => n.isOnAll ? !1 : !r && n.isOnTouch ? !(t || e) : (r ? a.isOnBlur : n.isOnBlur) ? !e : (r ? a.isOnChange : n.isOnChange) ? e : !0
  , ND = (e, t) => !Hc(De(e, t)).length && Dr(e, t);
const MD = {
    mode: Un.onSubmit,
    reValidateMode: Un.onChange,
    shouldFocusError: !0
};
function ID(e={}, t) {
    let r = {
        ...MD,
        ...e
    }, a = {
        submitCount: 0,
        isDirty: !1,
        isLoading: yo(r.defaultValues),
        isValidating: !1,
        isSubmitted: !1,
        isSubmitting: !1,
        isSubmitSuccessful: !1,
        isValid: !1,
        touchedFields: {},
        dirtyFields: {},
        errors: {}
    }, n = {}, i = br(r.defaultValues) || br(r.values) ? Tn(r.defaultValues || r.values) || {} : {}, o = r.shouldUnregister ? {} : Tn(i), s = {
        action: !1,
        mount: !1,
        watch: !1
    }, l = {
        mount: new Set,
        unMount: new Set,
        array: new Set,
        watch: new Set
    }, u, c = 0;
    const d = {
        isDirty: !1,
        dirtyFields: !1,
        touchedFields: !1,
        isValidating: !1,
        isValid: !1,
        errors: !1
    }
      , v = {
        values: np(),
        array: np(),
        state: np()
    }
      , h = e.resetOptions && e.resetOptions.keepDirtyValues
      , p = b_(r.mode)
      , f = b_(r.reValidateMode)
      , _ = r.criteriaMode === Un.all
      , y = z => P => {
        clearTimeout(c),
        c = setTimeout(z, P)
    }
      , g = async z => {
        if (d.isValid || z) {
            const P = r.resolver ? rn((await k()).errors) : await I(n, !0);
            P !== a.isValid && v.state.next({
                isValid: P
            })
        }
    }
      , m = z => d.isValidating && v.state.next({
        isValidating: z
    })
      , w = (z, P=[], $, K, ae=!0, te=!0) => {
        if (K && $) {
            if (s.action = !0,
            te && Array.isArray(De(n, z))) {
                const L = $(De(n, z), K.argA, K.argB);
                ae && zt(n, z, L)
            }
            if (te && Array.isArray(De(a.errors, z))) {
                const L = $(De(a.errors, z), K.argA, K.argB);
                ae && zt(a.errors, z, L),
                ND(a.errors, z)
            }
            if (d.touchedFields && te && Array.isArray(De(a.touchedFields, z))) {
                const L = $(De(a.touchedFields, z), K.argA, K.argB);
                ae && zt(a.touchedFields, z, L)
            }
            d.dirtyFields && (a.dirtyFields = op(i, o)),
            v.state.next({
                name: z,
                isDirty: F(z, P),
                dirtyFields: a.dirtyFields,
                errors: a.errors,
                isValid: a.isValid
            })
        } else
            zt(o, z, P)
    }
      , C = (z, P) => {
        zt(a.errors, z, P),
        v.state.next({
            errors: a.errors
        })
    }
      , b = (z, P, $, K) => {
        const ae = De(n, z);
        if (ae) {
            const te = De(o, z, lr($) ? De(i, z) : $);
            lr(te) || K && K.defaultChecked || P ? zt(o, z, P ? te : sp(ae._f)) : M(z, te),
            s.mount && g()
        }
    }
      , x = (z, P, $, K, ae) => {
        let te = !1
          , L = !1;
        const W = {
            name: z
        };
        if (!$ || K) {
            d.isDirty && (L = a.isDirty,
            a.isDirty = W.isDirty = F(),
            te = L !== W.isDirty);
            const ne = us(De(i, z), P);
            L = De(a.dirtyFields, z),
            ne ? Dr(a.dirtyFields, z) : zt(a.dirtyFields, z, !0),
            W.dirtyFields = a.dirtyFields,
            te = te || d.dirtyFields && L !== !ne
        }
        if ($) {
            const ne = De(a.touchedFields, z);
            ne || (zt(a.touchedFields, z, $),
            W.touchedFields = a.touchedFields,
            te = te || d.touchedFields && ne !== $)
        }
        return te && ae && v.state.next(W),
        te ? W : {}
    }
      , E = (z, P, $, K) => {
        const ae = De(a.errors, z)
          , te = d.isValid && po(P) && a.isValid !== P;
        if (e.delayError && $ ? (u = y( () => C(z, $)),
        u(e.delayError)) : (clearTimeout(c),
        u = null,
        $ ? zt(a.errors, z, $) : Dr(a.errors, z)),
        ($ ? !us(ae, $) : ae) || !rn(K) || te) {
            const L = {
                ...K,
                ...te && po(P) ? {
                    isValid: P
                } : {},
                errors: a.errors,
                name: z
            };
            a = {
                ...a,
                ...L
            },
            v.state.next(L)
        }
        m(!1)
    }
      , k = async z => r.resolver(o, r.context, ED(z || l.mount, n, r.criteriaMode, r.shouldUseNativeValidation))
      , A = async z => {
        const {errors: P} = await k(z);
        if (z)
            for (const $ of z) {
                const K = De(P, $);
                K ? zt(a.errors, $, K) : Dr(a.errors, $)
            }
        else
            a.errors = P;
        return P
    }
      , I = async (z, P, $={
        valid: !0
    }) => {
        for (const K in z) {
            const ae = z[K];
            if (ae) {
                const {_f: te, ...L} = ae;
                if (te) {
                    const W = l.array.has(te.name)
                      , ne = await k_(ae, o, _, r.shouldUseNativeValidation && !P, W);
                    if (ne[te.name] && ($.valid = !1,
                    P))
                        break;
                    !P && (De(ne, te.name) ? W ? CD(a.errors, ne, te.name) : zt(a.errors, te.name, ne[te.name]) : Dr(a.errors, te.name))
                }
                L && await I(L, P, $)
            }
        }
        return $.valid
    }
      , T = () => {
        for (const z of l.unMount) {
            const P = De(n, z);
            P && (P._f.refs ? P._f.refs.every($ => !ip($)) : !ip(P._f.ref)) && re(z)
        }
        l.unMount = new Set
    }
      , F = (z, P) => (z && P && zt(o, z, P),
    !us(J(), i))
      , R = (z, P, $) => m3(z, l, {
        ...s.mount ? o : lr(P) ? i : oi(z) ? {
            [z]: P
        } : P
    }, $, P)
      , O = z => Hc(De(s.mount ? o : i, z, e.shouldUnregister ? De(i, z, []) : []))
      , M = (z, P, $={}) => {
        const K = De(n, z);
        let ae = P;
        if (K) {
            const te = K._f;
            te && (!te.disabled && zt(o, z, b3(P, te)),
            ae = dh(te.ref) && na(P) ? "" : P,
            w3(te.ref) ? [...te.ref.options].forEach(L => L.selected = ae.includes(L.value)) : te.refs ? jc(te.ref) ? te.refs.length > 1 ? te.refs.forEach(L => (!L.defaultChecked || !L.disabled) && (L.checked = Array.isArray(ae) ? !!ae.find(W => W === L.value) : ae === L.value)) : te.refs[0] && (te.refs[0].checked = !!ae) : te.refs.forEach(L => L.checked = L.value === ae) : Mg(te.ref) ? te.ref.value = "" : (te.ref.value = ae,
            te.ref.type || v.values.next({
                name: z,
                values: {
                    ...o
                }
            })))
        }
        ($.shouldDirty || $.shouldTouch) && x(z, ae, $.shouldTouch, $.shouldDirty, !0),
        $.shouldValidate && V(z)
    }
      , N = (z, P, $) => {
        for (const K in P) {
            const ae = P[K]
              , te = `${z}.${K}`
              , L = De(n, te);
            (l.array.has(z) || !hh(ae) || L && !L._f) && !pl(ae) ? N(te, ae, $) : M(te, ae, $)
        }
    }
      , B = (z, P, $={}) => {
        const K = De(n, z)
          , ae = l.array.has(z)
          , te = Tn(P);
        zt(o, z, te),
        ae ? (v.array.next({
            name: z,
            values: {
                ...o
            }
        }),
        (d.isDirty || d.dirtyFields) && $.shouldDirty && v.state.next({
            name: z,
            dirtyFields: op(i, o),
            isDirty: F(z, te)
        })) : K && !K._f && !na(te) ? N(z, te, $) : M(z, te, $),
        C_(z, l) && v.state.next({
            ...a
        }),
        v.values.next({
            name: z,
            values: {
                ...o
            }
        }),
        !s.mount && t()
    }
      , D = async z => {
        const P = z.target;
        let $ = P.name
          , K = !0;
        const ae = De(n, $)
          , te = () => P.type ? sp(ae._f) : u3(z);
        if (ae) {
            let L, W;
            const ne = te()
              , le = z.type === ch.BLUR || z.type === ch.FOCUS_OUT
              , he = !kD(ae._f) && !r.resolver && !De(a.errors, $) && !ae._f.deps || TD(le, De(a.touchedFields, $), a.isSubmitted, f, p)
              , ve = C_($, l, le);
            zt(o, $, ne),
            le ? (ae._f.onBlur && ae._f.onBlur(z),
            u && u(0)) : ae._f.onChange && ae._f.onChange(z);
            const we = x($, ne, le, !1)
              , ye = !rn(we) || ve;
            if (!le && v.values.next({
                name: $,
                type: z.type,
                values: {
                    ...o
                }
            }),
            he)
                return d.isValid && g(),
                ye && v.state.next({
                    name: $,
                    ...ve ? {} : we
                });
            if (!le && ve && v.state.next({
                ...a
            }),
            m(!0),
            r.resolver) {
                const {errors: Ce} = await k([$])
                  , ge = T_(a.errors, n, $)
                  , We = T_(Ce, n, ge.name || $);
                L = We.error,
                $ = We.name,
                W = rn(Ce)
            } else
                L = (await k_(ae, o, _, r.shouldUseNativeValidation))[$],
                K = Number.isNaN(ne) || ne === De(o, $, ne),
                K && (L ? W = !1 : d.isValid && (W = await I(n, !0)));
            K && (ae._f.deps && V(ae._f.deps),
            E($, W, L, we))
        }
    }
      , V = async (z, P={}) => {
        let $, K;
        const ae = Iv(z);
        if (m(!0),
        r.resolver) {
            const te = await A(lr(z) ? z : ae);
            $ = rn(te),
            K = z ? !ae.some(L => De(te, L)) : $
        } else
            z ? (K = (await Promise.all(ae.map(async te => {
                const L = De(n, te);
                return await I(L && L._f ? {
                    [te]: L
                } : L)
            }
            ))).every(Boolean),
            !(!K && !a.isValid) && g()) : K = $ = await I(n);
        return v.state.next({
            ...!oi(z) || d.isValid && $ !== a.isValid ? {} : {
                name: z
            },
            ...r.resolver || !z ? {
                isValid: $
            } : {},
            errors: a.errors,
            isValidating: !1
        }),
        P.shouldFocus && !K && Fy(n, te => te && De(a.errors, te), z ? ae : l.mount),
        K
    }
      , J = z => {
        const P = {
            ...i,
            ...s.mount ? o : {}
        };
        return lr(z) ? P : oi(z) ? De(P, z) : z.map($ => De(P, $))
    }
      , Y = (z, P) => ({
        invalid: !!De((P || a).errors, z),
        isDirty: !!De((P || a).dirtyFields, z),
        isTouched: !!De((P || a).touchedFields, z),
        error: De((P || a).errors, z)
    })
      , G = z => {
        z && Iv(z).forEach(P => Dr(a.errors, P)),
        v.state.next({
            errors: z ? a.errors : {}
        })
    }
      , Z = (z, P, $) => {
        const K = (De(n, z, {
            _f: {}
        })._f || {}).ref;
        zt(a.errors, z, {
            ...P,
            ref: K
        }),
        v.state.next({
            name: z,
            errors: a.errors,
            isValid: !1
        }),
        $ && $.shouldFocus && K && K.focus && K.focus()
    }
      , ie = (z, P) => yo(z) ? v.values.subscribe({
        next: $ => z(R(void 0, P), $)
    }) : R(z, P, !0)
      , re = (z, P={}) => {
        for (const $ of z ? Iv(z) : l.mount)
            l.mount.delete($),
            l.array.delete($),
            P.keepValue || (Dr(n, $),
            Dr(o, $)),
            !P.keepError && Dr(a.errors, $),
            !P.keepDirty && Dr(a.dirtyFields, $),
            !P.keepTouched && Dr(a.touchedFields, $),
            !r.shouldUnregister && !P.keepDefaultValue && Dr(i, $);
        v.values.next({
            values: {
                ...o
            }
        }),
        v.state.next({
            ...a,
            ...P.keepDirty ? {
                isDirty: F()
            } : {}
        }),
        !P.keepIsValid && g()
    }
      , se = ({disabled: z, name: P, field: $, fields: K}) => {
        if (po(z)) {
            const ae = z ? void 0 : De(o, P, sp($ ? $._f : De(K, P)._f));
            zt(o, P, ae),
            x(P, ae, !1, !1, !0)
        }
    }
      , ce = (z, P={}) => {
        let $ = De(n, z);
        const K = po(P.disabled);
        return zt(n, z, {
            ...$ || {},
            _f: {
                ...$ && $._f ? $._f : {
                    ref: {
                        name: z
                    }
                },
                name: z,
                mount: !0,
                ...P
            }
        }),
        l.mount.add(z),
        $ ? se({
            field: $,
            disabled: P.disabled,
            name: z
        }) : b(z, !0, P.value),
        {
            ...K ? {
                disabled: P.disabled
            } : {},
            ...r.progressive ? {
                required: !!P.required,
                min: Ou(P.min),
                max: Ou(P.max),
                minLength: Ou(P.minLength),
                maxLength: Ou(P.maxLength),
                pattern: Ou(P.pattern)
            } : {},
            name: z,
            onChange: D,
            onBlur: D,
            ref: ae => {
                if (ae) {
                    ce(z, P),
                    $ = De(n, z);
                    const te = lr(ae.value) && ae.querySelectorAll && ae.querySelectorAll("input,select,textarea")[0] || ae
                      , L = AD(te)
                      , W = $._f.refs || [];
                    if (L ? W.find(ne => ne === te) : te === $._f.ref)
                        return;
                    zt(n, z, {
                        _f: {
                            ...$._f,
                            ...L ? {
                                refs: [...W.filter(ip), te, ...Array.isArray(De(i, z)) ? [{}] : []],
                                ref: {
                                    type: te.type,
                                    name: z
                                }
                            } : {
                                ref: te
                            }
                        }
                    }),
                    b(z, !1, void 0, te)
                } else
                    $ = De(n, z, {}),
                    $._f && ($._f.mount = !1),
                    (r.shouldUnregister || P.shouldUnregister) && !(c3(l.array, z) && s.action) && l.unMount.add(z)
            }
        }
    }
      , ue = () => r.shouldFocusError && Fy(n, z => z && De(a.errors, z), l.mount)
      , oe = (z, P) => async $ => {
        $ && ($.preventDefault && $.preventDefault(),
        $.persist && $.persist());
        let K = Tn(o);
        if (v.state.next({
            isSubmitting: !0
        }),
        r.resolver) {
            const {errors: ae, values: te} = await k();
            a.errors = ae,
            K = te
        } else
            await I(n);
        Dr(a.errors, "root"),
        rn(a.errors) ? (v.state.next({
            errors: {}
        }),
        await z(K, $)) : (P && await P({
            ...a.errors
        }, $),
        ue(),
        setTimeout(ue)),
        v.state.next({
            isSubmitted: !0,
            isSubmitting: !1,
            isSubmitSuccessful: rn(a.errors),
            submitCount: a.submitCount + 1,
            errors: a.errors
        })
    }
      , me = (z, P={}) => {
        De(n, z) && (lr(P.defaultValue) ? B(z, De(i, z)) : (B(z, P.defaultValue),
        zt(i, z, P.defaultValue)),
        P.keepTouched || Dr(a.touchedFields, z),
        P.keepDirty || (Dr(a.dirtyFields, z),
        a.isDirty = P.defaultValue ? F(z, De(i, z)) : F()),
        P.keepError || (Dr(a.errors, z),
        d.isValid && g()),
        v.state.next({
            ...a
        }))
    }
      , xe = (z, P={}) => {
        const $ = z ? Tn(z) : i
          , K = Tn($)
          , ae = z && !rn(z) ? K : i;
        if (P.keepDefaultValues || (i = $),
        !P.keepValues) {
            if (P.keepDirtyValues || h)
                for (const te of l.mount)
                    De(a.dirtyFields, te) ? zt(ae, te, De(o, te)) : B(te, De(ae, te));
            else {
                if (Eg && lr(z))
                    for (const te of l.mount) {
                        const L = De(n, te);
                        if (L && L._f) {
                            const W = Array.isArray(L._f.refs) ? L._f.refs[0] : L._f.ref;
                            if (dh(W)) {
                                const ne = W.closest("form");
                                if (ne) {
                                    ne.reset();
                                    break
                                }
                            }
                        }
                    }
                n = {}
            }
            o = e.shouldUnregister ? P.keepDefaultValues ? Tn(i) : {} : Tn(ae),
            v.array.next({
                values: {
                    ...ae
                }
            }),
            v.values.next({
                values: {
                    ...ae
                }
            })
        }
        l = {
            mount: new Set,
            unMount: new Set,
            array: new Set,
            watch: new Set,
            watchAll: !1,
            focus: ""
        },
        !s.mount && t(),
        s.mount = !d.isValid || !!P.keepIsValid,
        s.watch = !!e.shouldUnregister,
        v.state.next({
            submitCount: P.keepSubmitCount ? a.submitCount : 0,
            isDirty: P.keepDirty ? a.isDirty : !!(P.keepDefaultValues && !us(z, i)),
            isSubmitted: P.keepIsSubmitted ? a.isSubmitted : !1,
            dirtyFields: P.keepDirtyValues ? a.dirtyFields : P.keepDefaultValues && z ? op(i, z) : {},
            touchedFields: P.keepTouched ? a.touchedFields : {},
            errors: P.keepErrors ? a.errors : {},
            isSubmitSuccessful: P.keepIsSubmitSuccessful ? a.isSubmitSuccessful : !1,
            isSubmitting: !1
        })
    }
      , pe = (z, P) => xe(yo(z) ? z(o) : z, P);
    return {
        control: {
            register: ce,
            unregister: re,
            getFieldState: Y,
            handleSubmit: oe,
            setError: Z,
            _executeSchema: k,
            _getWatch: R,
            _getDirty: F,
            _updateValid: g,
            _removeUnmounted: T,
            _updateFieldArray: w,
            _updateDisabledField: se,
            _getFieldArray: O,
            _reset: xe,
            _resetDefaultValues: () => yo(r.defaultValues) && r.defaultValues().then(z => {
                pe(z, r.resetOptions),
                v.state.next({
                    isLoading: !1
                })
            }
            ),
            _updateFormState: z => {
                a = {
                    ...a,
                    ...z
                }
            }
            ,
            _subjects: v,
            _proxyFormState: d,
            get _fields() {
                return n
            },
            get _formValues() {
                return o
            },
            get _state() {
                return s
            },
            set _state(z) {
                s = z
            },
            get _defaultValues() {
                return i
            },
            get _names() {
                return l
            },
            set _names(z) {
                l = z
            },
            get _formState() {
                return a
            },
            set _formState(z) {
                a = z
            },
            get _options() {
                return r
            },
            set _options(z) {
                r = {
                    ...r,
                    ...z
                }
            }
        },
        trigger: V,
        register: ce,
        handleSubmit: oe,
        watch: ie,
        setValue: B,
        getValues: J,
        reset: pe,
        resetField: me,
        clearErrors: G,
        unregister: re,
        setError: Z,
        setFocus: (z, P={}) => {
            const $ = De(n, z)
              , K = $ && $._f;
            if (K) {
                const ae = K.refs ? K.refs[0] : K.ref;
                ae.focus && (ae.focus(),
                P.shouldSelect && ae.select())
            }
        }
        ,
        getFieldState: Y
    }
}
function Cr(e={}) {
    const t = Gt.useRef()
      , r = Gt.useRef()
      , [a,n] = Gt.useState({
        isDirty: !1,
        isValidating: !1,
        isLoading: yo(e.defaultValues),
        isSubmitted: !1,
        isSubmitting: !1,
        isSubmitSuccessful: !1,
        isValid: !1,
        submitCount: 0,
        dirtyFields: {},
        touchedFields: {},
        errors: {},
        defaultValues: yo(e.defaultValues) ? void 0 : e.defaultValues
    });
    t.current || (t.current = {
        ...ID(e, () => n(o => ({
            ...o
        }))),
        formState: a
    });
    const i = t.current.control;
    return i._options = e,
    Tg({
        subject: i._subjects.state,
        next: o => {
            v3(o, i._proxyFormState, i._updateFormState, !0) && n({
                ...i._formState
            })
        }
    }),
    Gt.useEffect( () => {
        e.values && !us(e.values, r.current) ? (i._reset(e.values, i._options.resetOptions),
        r.current = e.values) : i._resetDefaultValues()
    }
    , [e.values, i]),
    Gt.useEffect( () => {
        i._state.mount || (i._updateValid(),
        i._state.mount = !0),
        i._state.watch && (i._state.watch = !1,
        i._subjects.state.next({
            ...i._formState
        })),
        i._removeUnmounted()
    }
    ),
    t.current.formState = d3(a, i),
    t.current
}
var C3 = {
    exports: {}
}
  , DD = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"
  , UD = DD
  , FD = UD;
function S3() {}
function x3() {}
x3.resetWarningCache = S3;
var OD = function() {
    function e(a, n, i, o, s, l) {
        if (l !== FD) {
            var u = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");
            throw u.name = "Invariant Violation",
            u
        }
    }
    e.isRequired = e;
    function t() {
        return e
    }
    var r = {
        array: e,
        bigint: e,
        bool: e,
        func: e,
        number: e,
        object: e,
        string: e,
        symbol: e,
        any: e,
        arrayOf: t,
        element: e,
        elementType: e,
        instanceOf: t,
        node: e,
        objectOf: t,
        oneOf: t,
        oneOfType: t,
        shape: t,
        exact: t,
        checkPropTypes: x3,
        resetWarningCache: S3
    };
    return r.PropTypes = r,
    r
};
C3.exports = OD();
var PD = C3.exports;
const Pa = vi(PD);
var A3 = {
    exports: {}
};
(function(e, t) {
    (function(a, n) {
        e.exports = n(q)
    }
    )(un, function(r) {
        return function(a) {
            var n = {};
            function i(o) {
                if (n[o])
                    return n[o].exports;
                var s = n[o] = {
                    exports: {},
                    id: o,
                    loaded: !1
                };
                return a[o].call(s.exports, s, s.exports, i),
                s.loaded = !0,
                s.exports
            }
            return i.m = a,
            i.c = n,
            i.p = "",
            i(0)
        }([function(a, n, i) {
            var o = Object.assign || function(g) {
                for (var m = 1; m < arguments.length; m++) {
                    var w = arguments[m];
                    for (var C in w)
                        Object.prototype.hasOwnProperty.call(w, C) && (g[C] = w[C])
                }
                return g
            }
            ;
            function s(g, m) {
                var w = {};
                for (var C in g)
                    m.indexOf(C) >= 0 || Object.prototype.hasOwnProperty.call(g, C) && (w[C] = g[C]);
                return w
            }
            var l = i(1)
              , u = i(2)
              , c = i(9)
              , d = i(10)
              , v = i(11)
              , h = i(12)
              , p = i(13)
              , f = i(14)
              , _ = i(15)
              , y = u({
                componentDidMount: function() {
                    this.init()
                },
                componentDidUpdate: function(m) {
                    var w = this
                      , C = (w.props.options || {}).phoneRegionCode
                      , b = w.props.value
                      , x = w.properties;
                    w.updateRegisteredEvents(w.props),
                    m.value !== b && b !== void 0 && b !== null && (b = b.toString(),
                    b !== w.properties.result && (w.properties.initValue = b,
                    w.onInput(b, !0)));
                    var E = (m.options || {}).phoneRegionCode;
                    E !== C && C && C !== w.properties.phoneRegionCode && (w.properties.phoneRegionCode = C,
                    w.initPhoneFormatter(),
                    w.onInput(w.properties.result)),
                    f.setSelection(w.element, w.state.cursorPosition, x.document)
                },
                updateRegisteredEvents: function(m) {
                    var w = this
                      , C = w.registeredEvents
                      , b = C.onKeyDown
                      , x = C.onChange
                      , E = C.onFocus
                      , k = C.onBlur
                      , A = C.onInit;
                    m.onInit && m.onInit !== A && (w.registeredEvents.onInit = m.onInit),
                    m.onChange && m.onChange !== x && (w.registeredEvents.onChange = m.onChange),
                    m.onFocus && m.onFocus !== E && (w.registeredEvents.onFocus = m.onFocus),
                    m.onBlur && m.onBlur !== k && (w.registeredEvents.onBlur = m.onBlur),
                    m.onKeyDown && m.onKeyDown !== b && (w.registeredEvents.onKeyDown = m.onKeyDown)
                },
                getInitialState: function() {
                    var m = this
                      , w = m.props
                      , C = w.value
                      , b = w.options
                      , x = w.onKeyDown
                      , E = w.onChange
                      , k = w.onFocus
                      , A = w.onBlur
                      , I = w.onInit;
                    return m.registeredEvents = {
                        onInit: I || f.noop,
                        onChange: E || f.noop,
                        onFocus: k || f.noop,
                        onBlur: A || f.noop,
                        onKeyDown: x || f.noop
                    },
                    b || (b = {}),
                    b.initValue = C,
                    m.properties = _.assign({}, b),
                    {
                        value: m.properties.result,
                        cursorPosition: 0
                    }
                },
                init: function() {
                    var m = this
                      , w = m.properties;
                    if (!w.numeral && !w.phone && !w.creditCard && !w.time && !w.date && w.blocksLength === 0 && !w.prefix) {
                        m.onInput(w.initValue),
                        m.registeredEvents.onInit(m);
                        return
                    }
                    w.maxLength = f.getMaxLength(w.blocks),
                    m.isAndroid = f.isAndroid(),
                    m.initPhoneFormatter(),
                    m.initDateFormatter(),
                    m.initTimeFormatter(),
                    m.initNumeralFormatter(),
                    (w.initValue || w.prefix && !w.noImmediatePrefix) && m.onInput(w.initValue),
                    m.registeredEvents.onInit(m)
                },
                initNumeralFormatter: function() {
                    var m = this
                      , w = m.properties;
                    w.numeral && (w.numeralFormatter = new c(w.numeralDecimalMark,w.numeralIntegerScale,w.numeralDecimalScale,w.numeralThousandsGroupStyle,w.numeralPositiveOnly,w.stripLeadingZeroes,w.prefix,w.signBeforePrefix,w.tailPrefix,w.delimiter))
                },
                initTimeFormatter: function() {
                    var m = this
                      , w = m.properties;
                    w.time && (w.timeFormatter = new v(w.timePattern,w.timeFormat),
                    w.blocks = w.timeFormatter.getBlocks(),
                    w.blocksLength = w.blocks.length,
                    w.maxLength = f.getMaxLength(w.blocks))
                },
                initDateFormatter: function() {
                    var m = this
                      , w = m.properties;
                    w.date && (w.dateFormatter = new d(w.datePattern,w.dateMin,w.dateMax),
                    w.blocks = w.dateFormatter.getBlocks(),
                    w.blocksLength = w.blocks.length,
                    w.maxLength = f.getMaxLength(w.blocks))
                },
                initPhoneFormatter: function() {
                    var m = this
                      , w = m.properties;
                    if (w.phone)
                        try {
                            w.phoneFormatter = new h(new w.root.Cleave.AsYouTypeFormatter(w.phoneRegionCode),w.delimiter)
                        } catch {
                            throw new Error("Please include phone-type-formatter.{country}.js lib")
                        }
                },
                setRawValue: function(m) {
                    var w = this
                      , C = w.properties;
                    m = m != null ? m.toString() : "",
                    C.numeral && (m = m.replace(".", C.numeralDecimalMark)),
                    C.postDelimiterBackspace = !1,
                    w.onChange({
                        target: {
                            value: m
                        },
                        stopPropagation: f.noop,
                        preventDefault: f.noop,
                        persist: f.noop
                    })
                },
                getRawValue: function() {
                    var m = this
                      , w = m.properties
                      , C = w.result;
                    return w.rawValueTrimPrefix && (C = f.getPrefixStrippedValue(C, w.prefix, w.prefixLength, w.result, w.delimiter, w.delimiters, w.noImmediatePrefix, w.tailPrefix, w.signBeforePrefix)),
                    w.numeral ? C = w.numeralFormatter ? w.numeralFormatter.getRawValue(C) : "" : C = f.stripDelimiters(C, w.delimiter, w.delimiters),
                    C
                },
                getISOFormatDate: function() {
                    var m = this
                      , w = m.properties;
                    return w.date ? w.dateFormatter.getISOFormatDate() : ""
                },
                getISOFormatTime: function() {
                    var m = this
                      , w = m.properties;
                    return w.time ? w.timeFormatter.getISOFormatTime() : ""
                },
                onInit: function(m) {
                    return m
                },
                onKeyDown: function(m) {
                    var w = this
                      , C = w.properties
                      , b = m.which || m.keyCode;
                    w.lastInputValue = C.result,
                    w.isBackward = b === 8,
                    w.registeredEvents.onKeyDown(m)
                },
                onFocus: function(m) {
                    var w = this
                      , C = w.properties;
                    C.prefix && C.noImmediatePrefix && !m.target.value && w.onInput(C.prefix),
                    m.target.rawValue = w.getRawValue(),
                    m.target.value = C.result,
                    w.registeredEvents.onFocus(m),
                    f.fixPrefixCursor(w.element, C.prefix, C.delimiter, C.delimiters)
                },
                onBlur: function(m) {
                    var w = this
                      , C = w.properties;
                    m.target.rawValue = w.getRawValue(),
                    m.target.value = C.result,
                    w.registeredEvents.onBlur(m)
                },
                onChange: function(m) {
                    var w = this
                      , C = w.properties;
                    w.isBackward = w.isBackward || m.inputType === "deleteContentBackward";
                    var b = f.getPostDelimiter(w.lastInputValue, C.delimiter, C.delimiters);
                    w.isBackward && b ? C.postDelimiterBackspace = b : C.postDelimiterBackspace = !1,
                    w.onInput(m.target.value),
                    m.target.rawValue = w.getRawValue(),
                    m.target.value = C.result,
                    w.registeredEvents.onChange(m)
                },
                onInput: function(m, w) {
                    var C = this
                      , b = C.properties
                      , x = f.getPostDelimiter(m, b.delimiter, b.delimiters);
                    if (!w && !b.numeral && b.postDelimiterBackspace && !x && (m = f.headStr(m, m.length - b.postDelimiterBackspace.length)),
                    b.phone) {
                        b.prefix && (!b.noImmediatePrefix || m.length) ? b.result = b.prefix + b.phoneFormatter.format(m).slice(b.prefix.length) : b.result = b.phoneFormatter.format(m),
                        C.updateValueState();
                        return
                    }
                    if (b.numeral) {
                        b.prefix && b.noImmediatePrefix && m.length === 0 ? b.result = "" : b.result = b.numeralFormatter.format(m),
                        C.updateValueState();
                        return
                    }
                    if (b.date && (m = b.dateFormatter.getValidatedDate(m)),
                    b.time && (m = b.timeFormatter.getValidatedTime(m)),
                    m = f.stripDelimiters(m, b.delimiter, b.delimiters),
                    m = f.getPrefixStrippedValue(m, b.prefix, b.prefixLength, b.result, b.delimiter, b.delimiters, b.noImmediatePrefix, b.tailPrefix, b.signBeforePrefix),
                    m = b.numericOnly ? f.strip(m, /[^\d]/g) : m,
                    m = b.uppercase ? m.toUpperCase() : m,
                    m = b.lowercase ? m.toLowerCase() : m,
                    b.prefix && (b.tailPrefix ? m = m + b.prefix : m = b.prefix + m,
                    b.blocksLength === 0)) {
                        b.result = m,
                        C.updateValueState();
                        return
                    }
                    b.creditCard && C.updateCreditCardPropsByValue(m),
                    m = b.maxLength > 0 ? f.headStr(m, b.maxLength) : m,
                    b.result = f.getFormattedValue(m, b.blocks, b.blocksLength, b.delimiter, b.delimiters, b.delimiterLazyShow),
                    C.updateValueState()
                },
                updateCreditCardPropsByValue: function(m) {
                    var w = this, C = w.properties, b;
                    f.headStr(C.result, 4) !== f.headStr(m, 4) && (b = p.getInfo(m, C.creditCardStrictMode),
                    C.blocks = b.blocks,
                    C.blocksLength = C.blocks.length,
                    C.maxLength = f.getMaxLength(C.blocks),
                    C.creditCardType !== b.type && (C.creditCardType = b.type,
                    C.onCreditCardTypeChanged.call(w, C.creditCardType)))
                },
                updateValueState: function() {
                    var m = this
                      , w = m.properties;
                    if (!m.element) {
                        m.setState({
                            value: w.result
                        });
                        return
                    }
                    var C = m.element.selectionEnd
                      , b = m.element.value
                      , x = w.result;
                    if (m.lastInputValue = x,
                    C = f.getNextCursorPosition(C, b, x, w.delimiter, w.delimiters),
                    m.isAndroid) {
                        window.setTimeout(function() {
                            m.setState({
                                value: x,
                                cursorPosition: C
                            })
                        }, 1);
                        return
                    }
                    m.setState({
                        value: x,
                        cursorPosition: C
                    })
                },
                render: function() {
                    var m = this
                      , w = m.props;
                    w.value,
                    w.options,
                    w.onKeyDown,
                    w.onFocus,
                    w.onBlur,
                    w.onChange,
                    w.onInit;
                    var C = w.htmlRef
                      , b = s(w, ["value", "options", "onKeyDown", "onFocus", "onBlur", "onChange", "onInit", "htmlRef"]);
                    return l.createElement("input", o({
                        type: "text",
                        ref: function(E) {
                            m.element = E,
                            C && C.apply(this, arguments)
                        },
                        value: m.state.value,
                        onKeyDown: m.onKeyDown,
                        onChange: m.onChange,
                        onFocus: m.onFocus,
                        onBlur: m.onBlur
                    }, b))
                }
            });
            a.exports = y
        }
        , function(a, n) {
            a.exports = r
        }
        , function(a, n, i) {
            var o = i(1)
              , s = i(3);
            if (typeof o > "u")
                throw Error("create-react-class could not find the React object. If you are using script tags, make sure that React is being loaded before create-react-class.");
            var l = new o.Component().updater;
            a.exports = s(o.Component, o.isValidElement, l)
        }
        , function(a, n, i) {
            var o = i(4)
              , s = i(5)
              , l = i(6)
              , u = "mixins";
            function c(v) {
                return v
            }
            function d(v, h, p) {
                var f = []
                  , _ = {
                    mixins: "DEFINE_MANY",
                    statics: "DEFINE_MANY",
                    propTypes: "DEFINE_MANY",
                    contextTypes: "DEFINE_MANY",
                    childContextTypes: "DEFINE_MANY",
                    getDefaultProps: "DEFINE_MANY_MERGED",
                    getInitialState: "DEFINE_MANY_MERGED",
                    getChildContext: "DEFINE_MANY_MERGED",
                    render: "DEFINE_ONCE",
                    componentWillMount: "DEFINE_MANY",
                    componentDidMount: "DEFINE_MANY",
                    componentWillReceiveProps: "DEFINE_MANY",
                    shouldComponentUpdate: "DEFINE_ONCE",
                    componentWillUpdate: "DEFINE_MANY",
                    componentDidUpdate: "DEFINE_MANY",
                    componentWillUnmount: "DEFINE_MANY",
                    UNSAFE_componentWillMount: "DEFINE_MANY",
                    UNSAFE_componentWillReceiveProps: "DEFINE_MANY",
                    UNSAFE_componentWillUpdate: "DEFINE_MANY",
                    updateComponent: "OVERRIDE_BASE"
                }
                  , y = {
                    getDerivedStateFromProps: "DEFINE_MANY_MERGED"
                }
                  , g = {
                    displayName: function(M, N) {
                        M.displayName = N
                    },
                    mixins: function(M, N) {
                        if (N)
                            for (var B = 0; B < N.length; B++)
                                w(M, N[B])
                    },
                    childContextTypes: function(M, N) {
                        M.childContextTypes = o({}, M.childContextTypes, N)
                    },
                    contextTypes: function(M, N) {
                        M.contextTypes = o({}, M.contextTypes, N)
                    },
                    getDefaultProps: function(M, N) {
                        M.getDefaultProps ? M.getDefaultProps = x(M.getDefaultProps, N) : M.getDefaultProps = N
                    },
                    propTypes: function(M, N) {
                        M.propTypes = o({}, M.propTypes, N)
                    },
                    statics: function(M, N) {
                        C(M, N)
                    },
                    autobind: function() {}
                };
                function m(M, N) {
                    var B = _.hasOwnProperty(N) ? _[N] : null;
                    F.hasOwnProperty(N) && l(B === "OVERRIDE_BASE", "ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.", N),
                    M && l(B === "DEFINE_MANY" || B === "DEFINE_MANY_MERGED", "ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.", N)
                }
                function w(M, N) {
                    if (N) {
                        l(typeof N != "function", "ReactClass: You're attempting to use a component class or function as a mixin. Instead, just use a regular object."),
                        l(!h(N), "ReactClass: You're attempting to use a component as a mixin. Instead, just use a regular object.");
                        var B = M.prototype
                          , D = B.__reactAutoBindPairs;
                        N.hasOwnProperty(u) && g.mixins(M, N.mixins);
                        for (var V in N)
                            if (N.hasOwnProperty(V) && V !== u) {
                                var J = N[V]
                                  , Y = B.hasOwnProperty(V);
                                if (m(Y, V),
                                g.hasOwnProperty(V))
                                    g[V](M, J);
                                else {
                                    var G = _.hasOwnProperty(V)
                                      , Z = typeof J == "function"
                                      , ie = Z && !G && !Y && N.autobind !== !1;
                                    if (ie)
                                        D.push(V, J),
                                        B[V] = J;
                                    else if (Y) {
                                        var re = _[V];
                                        l(G && (re === "DEFINE_MANY_MERGED" || re === "DEFINE_MANY"), "ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.", re, V),
                                        re === "DEFINE_MANY_MERGED" ? B[V] = x(B[V], J) : re === "DEFINE_MANY" && (B[V] = E(B[V], J))
                                    } else
                                        B[V] = J
                                }
                            }
                    }
                }
                function C(M, N) {
                    if (N)
                        for (var B in N) {
                            var D = N[B];
                            if (N.hasOwnProperty(B)) {
                                var V = B in g;
                                l(!V, 'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\'t be on the "statics" key. Define it as an instance property instead; it will still be accessible on the constructor.', B);
                                var J = B in M;
                                if (J) {
                                    var Y = y.hasOwnProperty(B) ? y[B] : null;
                                    l(Y === "DEFINE_MANY_MERGED", "ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.", B),
                                    M[B] = x(M[B], D);
                                    return
                                }
                                M[B] = D
                            }
                        }
                }
                function b(M, N) {
                    l(M && N && typeof M == "object" && typeof N == "object", "mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.");
                    for (var B in N)
                        N.hasOwnProperty(B) && (l(M[B] === void 0, "mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.", B),
                        M[B] = N[B]);
                    return M
                }
                function x(M, N) {
                    return function() {
                        var D = M.apply(this, arguments)
                          , V = N.apply(this, arguments);
                        if (D == null)
                            return V;
                        if (V == null)
                            return D;
                        var J = {};
                        return b(J, D),
                        b(J, V),
                        J
                    }
                }
                function E(M, N) {
                    return function() {
                        M.apply(this, arguments),
                        N.apply(this, arguments)
                    }
                }
                function k(M, N) {
                    var B = N.bind(M);
                    return B
                }
                function A(M) {
                    for (var N = M.__reactAutoBindPairs, B = 0; B < N.length; B += 2) {
                        var D = N[B]
                          , V = N[B + 1];
                        M[D] = k(M, V)
                    }
                }
                var I = {
                    componentDidMount: function() {
                        this.__isMounted = !0
                    }
                }
                  , T = {
                    componentWillUnmount: function() {
                        this.__isMounted = !1
                    }
                }
                  , F = {
                    replaceState: function(M, N) {
                        this.updater.enqueueReplaceState(this, M, N)
                    },
                    isMounted: function() {
                        return !!this.__isMounted
                    }
                }
                  , R = function() {};
                o(R.prototype, v.prototype, F);
                function O(M) {
                    var N = function(D, V, J) {
                        this.__reactAutoBindPairs.length && A(this),
                        this.props = D,
                        this.context = V,
                        this.refs = s,
                        this.updater = J || p,
                        this.state = null;
                        var Y = this.getInitialState ? this.getInitialState() : null;
                        l(typeof Y == "object" && !Array.isArray(Y), "%s.getInitialState(): must return an object or null", N.displayName || "ReactCompositeComponent"),
                        this.state = Y
                    };
                    N.prototype = new R,
                    N.prototype.constructor = N,
                    N.prototype.__reactAutoBindPairs = [],
                    f.forEach(w.bind(null, N)),
                    w(N, I),
                    w(N, M),
                    w(N, T),
                    N.getDefaultProps && (N.defaultProps = N.getDefaultProps()),
                    l(N.prototype.render, "createClass(...): Class specification must implement a `render` method.");
                    for (var B in _)
                        N.prototype[B] || (N.prototype[B] = null);
                    return N
                }
                return O
            }
            a.exports = d
        }
        , function(a, n) {
            var i = Object.getOwnPropertySymbols
              , o = Object.prototype.hasOwnProperty
              , s = Object.prototype.propertyIsEnumerable;
            function l(c) {
                if (c == null)
                    throw new TypeError("Object.assign cannot be called with null or undefined");
                return Object(c)
            }
            function u() {
                try {
                    if (!Object.assign)
                        return !1;
                    var c = new String("abc");
                    if (c[5] = "de",
                    Object.getOwnPropertyNames(c)[0] === "5")
                        return !1;
                    for (var d = {}, v = 0; v < 10; v++)
                        d["_" + String.fromCharCode(v)] = v;
                    var h = Object.getOwnPropertyNames(d).map(function(f) {
                        return d[f]
                    });
                    if (h.join("") !== "0123456789")
                        return !1;
                    var p = {};
                    return "abcdefghijklmnopqrst".split("").forEach(function(f) {
                        p[f] = f
                    }),
                    Object.keys(Object.assign({}, p)).join("") === "abcdefghijklmnopqrst"
                } catch {
                    return !1
                }
            }
            a.exports = u() ? Object.assign : function(c, d) {
                for (var v, h = l(c), p, f = 1; f < arguments.length; f++) {
                    v = Object(arguments[f]);
                    for (var _ in v)
                        o.call(v, _) && (h[_] = v[_]);
                    if (i) {
                        p = i(v);
                        for (var y = 0; y < p.length; y++)
                            s.call(v, p[y]) && (h[p[y]] = v[p[y]])
                    }
                }
                return h
            }
        }
        , function(a, n) {
            var i = {};
            a.exports = i
        }
        , function(a, n) {
            function i(o, s, l, u, c, d, v, h) {
                if (!o) {
                    var p;
                    if (s === void 0)
                        p = new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
                    else {
                        var f = [l, u, c, d, v, h]
                          , _ = 0;
                        p = new Error(s.replace(/%s/g, function() {
                            return f[_++]
                        })),
                        p.name = "Invariant Violation"
                    }
                    throw p.framesToPop = 1,
                    p
                }
            }
            a.exports = i
        }
        , function(a, n, i) {
            var o = i(8)
              , s = o;
            a.exports = s
        }
        , function(a, n) {
            function i(s) {
                return function() {
                    return s
                }
            }
            var o = function() {};
            o.thatReturns = i,
            o.thatReturnsFalse = i(!1),
            o.thatReturnsTrue = i(!0),
            o.thatReturnsNull = i(null),
            o.thatReturnsThis = function() {
                return this
            }
            ,
            o.thatReturnsArgument = function(s) {
                return s
            }
            ,
            a.exports = o
        }
        , function(a, n) {
            var i = function o(s, l, u, c, d, v, h, p, f, _) {
                var y = this;
                y.numeralDecimalMark = s || ".",
                y.numeralIntegerScale = l > 0 ? l : 0,
                y.numeralDecimalScale = u >= 0 ? u : 2,
                y.numeralThousandsGroupStyle = c || o.groupStyle.thousand,
                y.numeralPositiveOnly = !!d,
                y.stripLeadingZeroes = v !== !1,
                y.prefix = h || h === "" ? h : "",
                y.signBeforePrefix = !!p,
                y.tailPrefix = !!f,
                y.delimiter = _ || _ === "" ? _ : ",",
                y.delimiterRE = _ ? new RegExp("\\" + _,"g") : ""
            };
            i.groupStyle = {
                thousand: "thousand",
                lakh: "lakh",
                wan: "wan",
                none: "none"
            },
            i.prototype = {
                getRawValue: function(s) {
                    return s.replace(this.delimiterRE, "").replace(this.numeralDecimalMark, ".")
                },
                format: function(s) {
                    var l = this, u, c, d, v, h = "";
                    switch (s = s.replace(/[A-Za-z]/g, "").replace(l.numeralDecimalMark, "M").replace(/[^\dM-]/g, "").replace(/^\-/, "N").replace(/\-/g, "").replace("N", l.numeralPositiveOnly ? "" : "-").replace("M", l.numeralDecimalMark),
                    l.stripLeadingZeroes && (s = s.replace(/^(-)?0+(?=\d)/, "$1")),
                    c = s.slice(0, 1) === "-" ? "-" : "",
                    typeof l.prefix < "u" ? l.signBeforePrefix ? d = c + l.prefix : d = l.prefix + c : d = c,
                    v = s,
                    s.indexOf(l.numeralDecimalMark) >= 0 && (u = s.split(l.numeralDecimalMark),
                    v = u[0],
                    h = l.numeralDecimalMark + u[1].slice(0, l.numeralDecimalScale)),
                    c === "-" && (v = v.slice(1)),
                    l.numeralIntegerScale > 0 && (v = v.slice(0, l.numeralIntegerScale)),
                    l.numeralThousandsGroupStyle) {
                    case i.groupStyle.lakh:
                        v = v.replace(/(\d)(?=(\d\d)+\d$)/g, "$1" + l.delimiter);
                        break;
                    case i.groupStyle.wan:
                        v = v.replace(/(\d)(?=(\d{4})+$)/g, "$1" + l.delimiter);
                        break;
                    case i.groupStyle.thousand:
                        v = v.replace(/(\d)(?=(\d{3})+$)/g, "$1" + l.delimiter);
                        break
                    }
                    return l.tailPrefix ? c + v.toString() + (l.numeralDecimalScale > 0 ? h.toString() : "") + l.prefix : d + v.toString() + (l.numeralDecimalScale > 0 ? h.toString() : "")
                }
            },
            a.exports = i
        }
        , function(a, n) {
            var i = function(s, l, u) {
                var c = this;
                c.date = [],
                c.blocks = [],
                c.datePattern = s,
                c.dateMin = l.split("-").reverse().map(function(d) {
                    return parseInt(d, 10)
                }),
                c.dateMin.length === 2 && c.dateMin.unshift(0),
                c.dateMax = u.split("-").reverse().map(function(d) {
                    return parseInt(d, 10)
                }),
                c.dateMax.length === 2 && c.dateMax.unshift(0),
                c.initBlocks()
            };
            i.prototype = {
                initBlocks: function() {
                    var s = this;
                    s.datePattern.forEach(function(l) {
                        l === "Y" ? s.blocks.push(4) : s.blocks.push(2)
                    })
                },
                getISOFormatDate: function() {
                    var s = this
                      , l = s.date;
                    return l[2] ? l[2] + "-" + s.addLeadingZero(l[1]) + "-" + s.addLeadingZero(l[0]) : ""
                },
                getBlocks: function() {
                    return this.blocks
                },
                getValidatedDate: function(s) {
                    var l = this
                      , u = "";
                    return s = s.replace(/[^\d]/g, ""),
                    l.blocks.forEach(function(c, d) {
                        if (s.length > 0) {
                            var v = s.slice(0, c)
                              , h = v.slice(0, 1)
                              , p = s.slice(c);
                            switch (l.datePattern[d]) {
                            case "d":
                                v === "00" ? v = "01" : parseInt(h, 10) > 3 ? v = "0" + h : parseInt(v, 10) > 31 && (v = "31");
                                break;
                            case "m":
                                v === "00" ? v = "01" : parseInt(h, 10) > 1 ? v = "0" + h : parseInt(v, 10) > 12 && (v = "12");
                                break
                            }
                            u += v,
                            s = p
                        }
                    }),
                    this.getFixedDateString(u)
                },
                getFixedDateString: function(s) {
                    var l = this, u = l.datePattern, c = [], d = 0, v = 0, h = 0, p = 0, f = 0, _ = 0, y, g, m, w = !1;
                    s.length === 4 && u[0].toLowerCase() !== "y" && u[1].toLowerCase() !== "y" && (p = u[0] === "d" ? 0 : 2,
                    f = 2 - p,
                    y = parseInt(s.slice(p, p + 2), 10),
                    g = parseInt(s.slice(f, f + 2), 10),
                    c = this.getFixedDate(y, g, 0)),
                    s.length === 8 && (u.forEach(function(b, x) {
                        switch (b) {
                        case "d":
                            d = x;
                            break;
                        case "m":
                            v = x;
                            break;
                        default:
                            h = x;
                            break
                        }
                    }),
                    _ = h * 2,
                    p = d <= h ? d * 2 : d * 2 + 2,
                    f = v <= h ? v * 2 : v * 2 + 2,
                    y = parseInt(s.slice(p, p + 2), 10),
                    g = parseInt(s.slice(f, f + 2), 10),
                    m = parseInt(s.slice(_, _ + 4), 10),
                    w = s.slice(_, _ + 4).length === 4,
                    c = this.getFixedDate(y, g, m)),
                    s.length === 4 && (u[0] === "y" || u[1] === "y") && (f = u[0] === "m" ? 0 : 2,
                    _ = 2 - f,
                    g = parseInt(s.slice(f, f + 2), 10),
                    m = parseInt(s.slice(_, _ + 2), 10),
                    w = s.slice(_, _ + 2).length === 2,
                    c = [0, g, m]),
                    s.length === 6 && (u[0] === "Y" || u[1] === "Y") && (f = u[0] === "m" ? 0 : 4,
                    _ = 2 - .5 * f,
                    g = parseInt(s.slice(f, f + 2), 10),
                    m = parseInt(s.slice(_, _ + 4), 10),
                    w = s.slice(_, _ + 4).length === 4,
                    c = [0, g, m]),
                    c = l.getRangeFixedDate(c),
                    l.date = c;
                    var C = c.length === 0 ? s : u.reduce(function(b, x) {
                        switch (x) {
                        case "d":
                            return b + (c[0] === 0 ? "" : l.addLeadingZero(c[0]));
                        case "m":
                            return b + (c[1] === 0 ? "" : l.addLeadingZero(c[1]));
                        case "y":
                            return b + (w ? l.addLeadingZeroForYear(c[2], !1) : "");
                        case "Y":
                            return b + (w ? l.addLeadingZeroForYear(c[2], !0) : "")
                        }
                    }, "");
                    return C
                },
                getRangeFixedDate: function(s) {
                    var l = this
                      , u = l.datePattern
                      , c = l.dateMin || []
                      , d = l.dateMax || [];
                    return !s.length || c.length < 3 && d.length < 3 || u.find(function(v) {
                        return v.toLowerCase() === "y"
                    }) && s[2] === 0 ? s : d.length && (d[2] < s[2] || d[2] === s[2] && (d[1] < s[1] || d[1] === s[1] && d[0] < s[0])) ? d : c.length && (c[2] > s[2] || c[2] === s[2] && (c[1] > s[1] || c[1] === s[1] && c[0] > s[0])) ? c : s
                },
                getFixedDate: function(s, l, u) {
                    return s = Math.min(s, 31),
                    l = Math.min(l, 12),
                    u = parseInt(u || 0, 10),
                    (l < 7 && l % 2 === 0 || l > 8 && l % 2 === 1) && (s = Math.min(s, l === 2 ? this.isLeapYear(u) ? 29 : 28 : 30)),
                    [s, l, u]
                },
                isLeapYear: function(s) {
                    return s % 4 === 0 && s % 100 !== 0 || s % 400 === 0
                },
                addLeadingZero: function(s) {
                    return (s < 10 ? "0" : "") + s
                },
                addLeadingZeroForYear: function(s, l) {
                    return l ? (s < 10 ? "000" : s < 100 ? "00" : s < 1e3 ? "0" : "") + s : (s < 10 ? "0" : "") + s
                }
            },
            a.exports = i
        }
        , function(a, n) {
            var i = function(s, l) {
                var u = this;
                u.time = [],
                u.blocks = [],
                u.timePattern = s,
                u.timeFormat = l,
                u.initBlocks()
            };
            i.prototype = {
                initBlocks: function() {
                    var s = this;
                    s.timePattern.forEach(function() {
                        s.blocks.push(2)
                    })
                },
                getISOFormatTime: function() {
                    var s = this
                      , l = s.time;
                    return l[2] ? s.addLeadingZero(l[0]) + ":" + s.addLeadingZero(l[1]) + ":" + s.addLeadingZero(l[2]) : ""
                },
                getBlocks: function() {
                    return this.blocks
                },
                getTimeFormatOptions: function() {
                    var s = this;
                    return String(s.timeFormat) === "12" ? {
                        maxHourFirstDigit: 1,
                        maxHours: 12,
                        maxMinutesFirstDigit: 5,
                        maxMinutes: 60
                    } : {
                        maxHourFirstDigit: 2,
                        maxHours: 23,
                        maxMinutesFirstDigit: 5,
                        maxMinutes: 60
                    }
                },
                getValidatedTime: function(s) {
                    var l = this
                      , u = "";
                    s = s.replace(/[^\d]/g, "");
                    var c = l.getTimeFormatOptions();
                    return l.blocks.forEach(function(d, v) {
                        if (s.length > 0) {
                            var h = s.slice(0, d)
                              , p = h.slice(0, 1)
                              , f = s.slice(d);
                            switch (l.timePattern[v]) {
                            case "h":
                                parseInt(p, 10) > c.maxHourFirstDigit ? h = "0" + p : parseInt(h, 10) > c.maxHours && (h = c.maxHours + "");
                                break;
                            case "m":
                            case "s":
                                parseInt(p, 10) > c.maxMinutesFirstDigit ? h = "0" + p : parseInt(h, 10) > c.maxMinutes && (h = c.maxMinutes + "");
                                break
                            }
                            u += h,
                            s = f
                        }
                    }),
                    this.getFixedTimeString(u)
                },
                getFixedTimeString: function(s) {
                    var l = this, u = l.timePattern, c = [], d = 0, v = 0, h = 0, p = 0, f = 0, _ = 0, y, g, m;
                    return s.length === 6 && (u.forEach(function(w, C) {
                        switch (w) {
                        case "s":
                            d = C * 2;
                            break;
                        case "m":
                            v = C * 2;
                            break;
                        case "h":
                            h = C * 2;
                            break
                        }
                    }),
                    _ = h,
                    f = v,
                    p = d,
                    y = parseInt(s.slice(p, p + 2), 10),
                    g = parseInt(s.slice(f, f + 2), 10),
                    m = parseInt(s.slice(_, _ + 2), 10),
                    c = this.getFixedTime(m, g, y)),
                    s.length === 4 && l.timePattern.indexOf("s") < 0 && (u.forEach(function(w, C) {
                        switch (w) {
                        case "m":
                            v = C * 2;
                            break;
                        case "h":
                            h = C * 2;
                            break
                        }
                    }),
                    _ = h,
                    f = v,
                    y = 0,
                    g = parseInt(s.slice(f, f + 2), 10),
                    m = parseInt(s.slice(_, _ + 2), 10),
                    c = this.getFixedTime(m, g, y)),
                    l.time = c,
                    c.length === 0 ? s : u.reduce(function(w, C) {
                        switch (C) {
                        case "s":
                            return w + l.addLeadingZero(c[2]);
                        case "m":
                            return w + l.addLeadingZero(c[1]);
                        case "h":
                            return w + l.addLeadingZero(c[0])
                        }
                    }, "")
                },
                getFixedTime: function(s, l, u) {
                    return u = Math.min(parseInt(u || 0, 10), 60),
                    l = Math.min(l, 60),
                    s = Math.min(s, 60),
                    [s, l, u]
                },
                addLeadingZero: function(s) {
                    return (s < 10 ? "0" : "") + s
                }
            },
            a.exports = i
        }
        , function(a, n) {
            var i = function(s, l) {
                var u = this;
                u.delimiter = l || l === "" ? l : " ",
                u.delimiterRE = l ? new RegExp("\\" + l,"g") : "",
                u.formatter = s
            };
            i.prototype = {
                setFormatter: function(s) {
                    this.formatter = s
                },
                format: function(s) {
                    var l = this;
                    l.formatter.clear(),
                    s = s.replace(/[^\d+]/g, ""),
                    s = s.replace(/^\+/, "B").replace(/\+/g, "").replace("B", "+"),
                    s = s.replace(l.delimiterRE, "");
                    for (var u = "", c, d = !1, v = 0, h = s.length; v < h; v++)
                        c = l.formatter.inputDigit(s.charAt(v)),
                        /[\s()-]/g.test(c) ? (u = c,
                        d = !0) : d || (u = c);
                    return u = u.replace(/[()]/g, ""),
                    u = u.replace(/[\s-]/g, l.delimiter),
                    u
                }
            },
            a.exports = i
        }
        , function(a, n) {
            var i = {
                blocks: {
                    uatp: [4, 5, 6],
                    amex: [4, 6, 5],
                    diners: [4, 6, 4],
                    discover: [4, 4, 4, 4],
                    mastercard: [4, 4, 4, 4],
                    dankort: [4, 4, 4, 4],
                    instapayment: [4, 4, 4, 4],
                    jcb15: [4, 6, 5],
                    jcb: [4, 4, 4, 4],
                    maestro: [4, 4, 4, 4],
                    visa: [4, 4, 4, 4],
                    mir: [4, 4, 4, 4],
                    unionPay: [4, 4, 4, 4],
                    general: [4, 4, 4, 4]
                },
                re: {
                    uatp: /^(?!1800)1\d{0,14}/,
                    amex: /^3[47]\d{0,13}/,
                    discover: /^(?:6011|65\d{0,2}|64[4-9]\d?)\d{0,12}/,
                    diners: /^3(?:0([0-5]|9)|[689]\d?)\d{0,11}/,
                    mastercard: /^(5[1-5]\d{0,2}|22[2-9]\d{0,1}|2[3-7]\d{0,2})\d{0,12}/,
                    dankort: /^(5019|4175|4571)\d{0,12}/,
                    instapayment: /^63[7-9]\d{0,13}/,
                    jcb15: /^(?:2131|1800)\d{0,11}/,
                    jcb: /^(?:35\d{0,2})\d{0,12}/,
                    maestro: /^(?:5[0678]\d{0,2}|6304|67\d{0,2})\d{0,12}/,
                    mir: /^220[0-4]\d{0,12}/,
                    visa: /^4\d{0,15}/,
                    unionPay: /^(62|81)\d{0,14}/
                },
                getStrictBlocks: function(s) {
                    var l = s.reduce(function(u, c) {
                        return u + c
                    }, 0);
                    return s.concat(19 - l)
                },
                getInfo: function(s, l) {
                    var u = i.blocks
                      , c = i.re;
                    l = !!l;
                    for (var d in c)
                        if (c[d].test(s)) {
                            var v = u[d];
                            return {
                                type: d,
                                blocks: l ? this.getStrictBlocks(v) : v
                            }
                        }
                    return {
                        type: "unknown",
                        blocks: l ? this.getStrictBlocks(u.general) : u.general
                    }
                }
            };
            a.exports = i
        }
        , function(a, n) {
            var i = {
                noop: function() {},
                strip: function(s, l) {
                    return s.replace(l, "")
                },
                getPostDelimiter: function(s, l, u) {
                    if (u.length === 0)
                        return s.slice(-l.length) === l ? l : "";
                    var c = "";
                    return u.forEach(function(d) {
                        s.slice(-d.length) === d && (c = d)
                    }),
                    c
                },
                getDelimiterREByDelimiter: function(s) {
                    return new RegExp(s.replace(/([.?*+^$[\]\\(){}|-])/g, "\\$1"),"g")
                },
                getNextCursorPosition: function(s, l, u, c, d) {
                    return l.length === s ? u.length : s + this.getPositionOffset(s, l, u, c, d)
                },
                getPositionOffset: function(s, l, u, c, d) {
                    var v, h, p;
                    return v = this.stripDelimiters(l.slice(0, s), c, d),
                    h = this.stripDelimiters(u.slice(0, s), c, d),
                    p = v.length - h.length,
                    p !== 0 ? p / Math.abs(p) : 0
                },
                stripDelimiters: function(s, l, u) {
                    var c = this;
                    if (u.length === 0) {
                        var d = l ? c.getDelimiterREByDelimiter(l) : "";
                        return s.replace(d, "")
                    }
                    return u.forEach(function(v) {
                        v.split("").forEach(function(h) {
                            s = s.replace(c.getDelimiterREByDelimiter(h), "")
                        })
                    }),
                    s
                },
                headStr: function(s, l) {
                    return s.slice(0, l)
                },
                getMaxLength: function(s) {
                    return s.reduce(function(l, u) {
                        return l + u
                    }, 0)
                },
                getPrefixStrippedValue: function(s, l, u, c, d, v, h, p, f) {
                    if (u === 0)
                        return s;
                    if (s === l && s !== "")
                        return "";
                    if (f && s.slice(0, 1) == "-") {
                        var _ = c.slice(0, 1) == "-" ? c.slice(1) : c;
                        return "-" + this.getPrefixStrippedValue(s.slice(1), l, u, _, d, v, h, p, f)
                    }
                    if (c.slice(0, u) !== l && !p)
                        return h && !c && s ? s : "";
                    if (c.slice(-u) !== l && p)
                        return h && !c && s ? s : "";
                    var y = this.stripDelimiters(c, d, v);
                    return s.slice(0, u) !== l && !p ? y.slice(u) : s.slice(-u) !== l && p ? y.slice(0, -u - 1) : p ? s.slice(0, -u) : s.slice(u)
                },
                getFirstDiffIndex: function(s, l) {
                    for (var u = 0; s.charAt(u) === l.charAt(u); )
                        if (s.charAt(u++) === "")
                            return -1;
                    return u
                },
                getFormattedValue: function(s, l, u, c, d, v) {
                    var h = ""
                      , p = d.length > 0
                      , f = "";
                    return u === 0 ? s : (l.forEach(function(_, y) {
                        if (s.length > 0) {
                            var g = s.slice(0, _)
                              , m = s.slice(_);
                            p ? f = d[v ? y - 1 : y] || f : f = c,
                            v ? (y > 0 && (h += f),
                            h += g) : (h += g,
                            g.length === _ && y < u - 1 && (h += f)),
                            s = m
                        }
                    }),
                    h)
                },
                fixPrefixCursor: function(s, l, u, c) {
                    if (s) {
                        var d = s.value
                          , v = u || c[0] || " ";
                        if (!(!s.setSelectionRange || !l || l.length + v.length <= d.length)) {
                            var h = d.length * 2;
                            setTimeout(function() {
                                s.setSelectionRange(h, h)
                            }, 1)
                        }
                    }
                },
                checkFullSelection: function(s) {
                    try {
                        var l = window.getSelection() || document.getSelection() || {};
                        return l.toString().length === s.length
                    } catch {}
                    return !1
                },
                setSelection: function(s, l, u) {
                    if (s === this.getActiveElement(u) && !(s && s.value.length <= l))
                        if (s.createTextRange) {
                            var c = s.createTextRange();
                            c.move("character", l),
                            c.select()
                        } else
                            try {
                                s.setSelectionRange(l, l)
                            } catch {
                                console.warn("The input element type does not support selection")
                            }
                },
                getActiveElement: function(s) {
                    var l = s.activeElement;
                    return l && l.shadowRoot ? this.getActiveElement(l.shadowRoot) : l
                },
                isAndroid: function() {
                    return navigator && /android/i.test(navigator.userAgent)
                },
                isAndroidBackspaceKeydown: function(s, l) {
                    return !this.isAndroid() || !s || !l ? !1 : l === s.slice(0, -1)
                }
            };
            a.exports = i
        }
        , function(a, n) {
            var i = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(s) {
                return typeof s
            }
            : function(s) {
                return s && typeof Symbol == "function" && s.constructor === Symbol && s !== Symbol.prototype ? "symbol" : typeof s
            }
              , o = {
                assign: function(l, u) {
                    return l = l || {},
                    u = u || {},
                    l.creditCard = !!u.creditCard,
                    l.creditCardStrictMode = !!u.creditCardStrictMode,
                    l.creditCardType = "",
                    l.onCreditCardTypeChanged = u.onCreditCardTypeChanged || function() {}
                    ,
                    l.phone = !!u.phone,
                    l.phoneRegionCode = u.phoneRegionCode || "AU",
                    l.phoneFormatter = {},
                    l.time = !!u.time,
                    l.timePattern = u.timePattern || ["h", "m", "s"],
                    l.timeFormat = u.timeFormat || "24",
                    l.timeFormatter = {},
                    l.date = !!u.date,
                    l.datePattern = u.datePattern || ["d", "m", "Y"],
                    l.dateMin = u.dateMin || "",
                    l.dateMax = u.dateMax || "",
                    l.dateFormatter = {},
                    l.numeral = !!u.numeral,
                    l.numeralIntegerScale = u.numeralIntegerScale > 0 ? u.numeralIntegerScale : 0,
                    l.numeralDecimalScale = u.numeralDecimalScale >= 0 ? u.numeralDecimalScale : 2,
                    l.numeralDecimalMark = u.numeralDecimalMark || ".",
                    l.numeralThousandsGroupStyle = u.numeralThousandsGroupStyle || "thousand",
                    l.numeralPositiveOnly = !!u.numeralPositiveOnly,
                    l.stripLeadingZeroes = u.stripLeadingZeroes !== !1,
                    l.signBeforePrefix = !!u.signBeforePrefix,
                    l.tailPrefix = !!u.tailPrefix,
                    l.swapHiddenInput = !!u.swapHiddenInput,
                    l.numericOnly = l.creditCard || l.date || !!u.numericOnly,
                    l.uppercase = !!u.uppercase,
                    l.lowercase = !!u.lowercase,
                    l.prefix = l.creditCard || l.date ? "" : u.prefix || "",
                    l.noImmediatePrefix = !!u.noImmediatePrefix,
                    l.prefixLength = l.prefix.length,
                    l.rawValueTrimPrefix = !!u.rawValueTrimPrefix,
                    l.copyDelimiter = !!u.copyDelimiter,
                    l.initValue = u.initValue !== void 0 && u.initValue !== null ? u.initValue.toString() : "",
                    l.delimiter = u.delimiter || u.delimiter === "" ? u.delimiter : u.date ? "/" : u.time ? ":" : u.numeral ? "," : (u.phone,
                    " "),
                    l.delimiterLength = l.delimiter.length,
                    l.delimiterLazyShow = !!u.delimiterLazyShow,
                    l.delimiters = u.delimiters || [],
                    l.blocks = u.blocks || [],
                    l.blocksLength = l.blocks.length,
                    l.root = (typeof un > "u" ? "undefined" : i(un)) === "object" && un ? un : window,
                    l.document = u.document || l.root.document,
                    l.maxLength = 0,
                    l.backspace = !1,
                    l.result = "",
                    l.onValueChanged = u.onValueChanged || function() {}
                    ,
                    l
                }
            };
            a.exports = o
        }
        ])
    })
}
)(A3);
var BD = A3.exports
  , RD = BD;
const LD = vi(RD)
  , N_ = {
    blocks: [2, 2, 4],
    delimiter: "/",
    numericOnly: !0
}
  , qD = {
    blocks: [2, 2],
    delimiter: "/",
    numericOnly: !0
}
  , VD = {
    blocks: [3, 3, 4],
    delimiter: "-",
    numericOnly: !0,
    rawValueTrimPrefix: !0
}
  , _m = {
    prefix: "KES ",
    noImmediatePrefix: !0,
    numericOnly: !0,
    numeral: !0,
    numeralPositiveOnly: !0,
    numeralThousandsGroupStyle: "thousand",
    numeralDecimalScale: 0,
    rawValueTrimPrefix: !0
}
  , E3 = {
    prefix: "KES ",
    noImmediatePrefix: !0,
    numericOnly: !0,
    numeral: !0,
    numeralPositiveOnly: !0,
    numeralThousandsGroupStyle: "thousand",
    numeralDecimalScale: 2,
    rawValueTrimPrefix: !0
}
  , M_ = {
    prefix: " years",
    tailPrefix: !0,
    noImmediatePrefix: !0,
    numericOnly: !0,
    numeral: !0,
    numeralDecimalScale: 0,
    numeralPositiveOnly: !0,
    numeralThousandsGroupStyle: "thousand",
    rawValueTrimPrefix: !0
}
  , $D = {
    prefix: "%",
    tailPrefix: !0,
    noImmediatePrefix: !0,
    numericOnly: !0,
    numeral: !0,
    numeralPositiveOnly: !0,
    numeralIntegerScale: 2,
    numeralDecimalScale: 2,
    rawValueTrimPrefix: !0
};
var k3 = {
    exports: {}
};
/*!
	Copyright (c) 2018 Jed Watson.
	Licensed under the MIT License (MIT), see
	http://jedwatson.github.io/classnames
*/
(function(e) {
    (function() {
        var t = {}.hasOwnProperty;
        function r() {
            for (var a = [], n = 0; n < arguments.length; n++) {
                var i = arguments[n];
                if (i) {
                    var o = typeof i;
                    if (o === "string" || o === "number")
                        a.push(i);
                    else if (Array.isArray(i)) {
                        if (i.length) {
                            var s = r.apply(null, i);
                            s && a.push(s)
                        }
                    } else if (o === "object") {
                        if (i.toString !== Object.prototype.toString && !i.toString.toString().includes("[native code]")) {
                            a.push(i.toString());
                            continue
                        }
                        for (var l in i)
                            t.call(i, l) && i[l] && a.push(l)
                    }
                }
            }
            return a.join(" ")
        }
        e.exports ? (r.default = r,
        e.exports = r) : window.classNames = r
    }
    )()
}
)(k3);
var zD = k3.exports;
const sa = vi(zD);
function GD(e) {
    var t = e.children
      , r = e.prefixCls
      , a = e.id
      , n = e.overlayInnerStyle
      , i = e.className
      , o = e.style;
    return q.createElement("div", {
        className: sa("".concat(r, "-content"), i),
        style: o
    }, q.createElement("div", {
        className: "".concat(r, "-inner"),
        id: a,
        role: "tooltip",
        style: n
    }, typeof t == "function" ? t() : t))
}
function Ie() {
    return Ie = Object.assign ? Object.assign.bind() : function(e) {
        for (var t = 1; t < arguments.length; t++) {
            var r = arguments[t];
            for (var a in r)
                Object.prototype.hasOwnProperty.call(r, a) && (e[a] = r[a])
        }
        return e
    }
    ,
    Ie.apply(this, arguments)
}

function Na(e) {
    "@babel/helpers - typeof";
    return Na = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t) {
        return typeof t
    }
    : function(t) {
        return t && typeof Symbol == "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
    }
    ,
    Na(e)
}
function jD(e, t) {
    if (Na(e) !== "object" || e === null)
        return e;
    var r = e[Symbol.toPrimitive];
    if (r !== void 0) {
        var a = r.call(e, t || "default");
        if (Na(a) !== "object")
            return a;
        throw new TypeError("@@toPrimitive must return a primitive value.")
    }
    return (t === "string" ? String : Number)(e)
}
function T3(e) {
    var t = jD(e, "string");
    return Na(t) === "symbol" ? t : String(t)
}
function Ze(e, t, r) {
    return t = T3(t),
    t in e ? Object.defineProperty(e, t, {
        value: r,
        enumerable: !0,
        configurable: !0,
        writable: !0
    }) : e[t] = r,
    e
}
function I_(e, t) {
    var r = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var a = Object.getOwnPropertySymbols(e);
        t && (a = a.filter(function(n) {
            return Object.getOwnPropertyDescriptor(e, n).enumerable
        })),
        r.push.apply(r, a)
    }
    return r
}
function _e(e) {
    for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t] != null ? arguments[t] : {};
        t % 2 ? I_(Object(r), !0).forEach(function(a) {
            Ze(e, a, r[a])
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : I_(Object(r)).forEach(function(a) {
            Object.defineProperty(e, a, Object.getOwnPropertyDescriptor(r, a))
        })
    }
    return e
}
function HD(e, t) {
    if (e == null)
        return {};
    var r = {}, a = Object.keys(e), n, i;
    for (i = 0; i < a.length; i++)
        n = a[i],
        !(t.indexOf(n) >= 0) && (r[n] = e[n]);
    return r
}
function Zr(e, t) {
    if (e == null)
        return {};
    var r = HD(e, t), a, n;
    if (Object.getOwnPropertySymbols) {
        var i = Object.getOwnPropertySymbols(e);
        for (n = 0; n < i.length; n++)
            a = i[n],
            !(t.indexOf(a) >= 0) && Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a])
    }
    return r
}
function WD(e) {
    if (Array.isArray(e))
        return e
}
function YD(e, t) {
    var r = e == null ? null : typeof Symbol < "u" && e[Symbol.iterator] || e["@@iterator"];
    if (r != null) {
        var a, n, i, o, s = [], l = !0, u = !1;
        try {
            if (i = (r = r.call(e)).next,
            t === 0) {
                if (Object(r) !== r)
                    return;
                l = !1
            } else
                for (; !(l = (a = i.call(r)).done) && (s.push(a.value),
                s.length !== t); l = !0)
                    ;
        } catch (c) {
            u = !0,
            n = c
        } finally {
            try {
                if (!l && r.return != null && (o = r.return(),
                Object(o) !== o))
                    return
            } finally {
                if (u)
                    throw n
            }
        }
        return s
    }
}
function Oy(e, t) {
    (t == null || t > e.length) && (t = e.length);
    for (var r = 0, a = new Array(t); r < t; r++)
        a[r] = e[r];
    return a
}
function N3(e, t) {
    if (e) {
        if (typeof e == "string")
            return Oy(e, t);
        var r = Object.prototype.toString.call(e).slice(8, -1);
        if (r === "Object" && e.constructor && (r = e.constructor.name),
        r === "Map" || r === "Set")
            return Array.from(e);
        if (r === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))
            return Oy(e, t)
    }
}
function JD() {
    throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
}
function qe(e, t) {
    return WD(e) || YD(e, t) || N3(e, t) || JD()
}
function Vi() {
    return !!(typeof window < "u" && window.document && window.document.createElement)
}
var Py = {}
  , KD = function(t) {};
function QD(e, t) {}
function ZD(e, t) {}
function XD() {
    Py = {}
}
function M3(e, t, r) {
    !t && !Py[r] && (e(!1, r),
    Py[r] = !0)
}
function bm(e, t) {
    M3(QD, e, t)
}
function e8(e, t) {
    M3(ZD, e, t)
}
bm.preMessage = KD;
bm.resetWarned = XD;
bm.noteOnce = e8;
var I3 = {
    exports: {}
}
  , Lt = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Nr = typeof Symbol == "function" && Symbol.for
  , Dg = Nr ? Symbol.for("react.element") : 60103
  , Ug = Nr ? Symbol.for("react.portal") : 60106
  , Cm = Nr ? Symbol.for("react.fragment") : 60107
  , Sm = Nr ? Symbol.for("react.strict_mode") : 60108
  , xm = Nr ? Symbol.for("react.profiler") : 60114
  , Am = Nr ? Symbol.for("react.provider") : 60109
  , Em = Nr ? Symbol.for("react.context") : 60110
  , Fg = Nr ? Symbol.for("react.async_mode") : 60111
  , km = Nr ? Symbol.for("react.concurrent_mode") : 60111
  , Tm = Nr ? Symbol.for("react.forward_ref") : 60112
  , Nm = Nr ? Symbol.for("react.suspense") : 60113
  , t8 = Nr ? Symbol.for("react.suspense_list") : 60120
  , Mm = Nr ? Symbol.for("react.memo") : 60115
  , Im = Nr ? Symbol.for("react.lazy") : 60116
  , r8 = Nr ? Symbol.for("react.block") : 60121
  , a8 = Nr ? Symbol.for("react.fundamental") : 60117
  , n8 = Nr ? Symbol.for("react.responder") : 60118
  , i8 = Nr ? Symbol.for("react.scope") : 60119;
function Ya(e) {
    if (typeof e == "object" && e !== null) {
        var t = e.$$typeof;
        switch (t) {
        case Dg:
            switch (e = e.type,
            e) {
            case Fg:
            case km:
            case Cm:
            case xm:
            case Sm:
            case Nm:
                return e;
            default:
                switch (e = e && e.$$typeof,
                e) {
                case Em:
                case Tm:
                case Im:
                case Mm:
                case Am:
                    return e;
                default:
                    return t
                }
            }
        case Ug:
            return t
        }
    }
}
function D3(e) {
    return Ya(e) === km
}
Lt.AsyncMode = Fg;
Lt.ConcurrentMode = km;
Lt.ContextConsumer = Em;
Lt.ContextProvider = Am;
Lt.Element = Dg;
Lt.ForwardRef = Tm;
Lt.Fragment = Cm;
Lt.Lazy = Im;
Lt.Memo = Mm;
Lt.Portal = Ug;
Lt.Profiler = xm;
Lt.StrictMode = Sm;
Lt.Suspense = Nm;
Lt.isAsyncMode = function(e) {
    return D3(e) || Ya(e) === Fg
}
;
Lt.isConcurrentMode = D3;
Lt.isContextConsumer = function(e) {
    return Ya(e) === Em
}
;
Lt.isContextProvider = function(e) {
    return Ya(e) === Am
}
;
Lt.isElement = function(e) {
    return typeof e == "object" && e !== null && e.$$typeof === Dg
}
;
Lt.isForwardRef = function(e) {
    return Ya(e) === Tm
}
;
Lt.isFragment = function(e) {
    return Ya(e) === Cm
}
;
Lt.isLazy = function(e) {
    return Ya(e) === Im
}
;
Lt.isMemo = function(e) {
    return Ya(e) === Mm
}
;
Lt.isPortal = function(e) {
    return Ya(e) === Ug
}
;
Lt.isProfiler = function(e) {
    return Ya(e) === xm
}
;
Lt.isStrictMode = function(e) {
    return Ya(e) === Sm
}
;
Lt.isSuspense = function(e) {
    return Ya(e) === Nm
}
;
Lt.isValidElementType = function(e) {
    return typeof e == "string" || typeof e == "function" || e === Cm || e === km || e === xm || e === Sm || e === Nm || e === t8 || typeof e == "object" && e !== null && (e.$$typeof === Im || e.$$typeof === Mm || e.$$typeof === Am || e.$$typeof === Em || e.$$typeof === Tm || e.$$typeof === a8 || e.$$typeof === n8 || e.$$typeof === i8 || e.$$typeof === r8)
}
;
Lt.typeOf = Ya;
I3.exports = Lt;
var Og = I3.exports;
function o8(e, t, r) {
    var a = q.useRef({});
    return (!("value"in a.current) || r(a.current.condition, t)) && (a.current.value = e(),
    a.current.condition = t),
    a.current.value
}
function Pg(e, t) {
    typeof e == "function" ? e(t) : Na(e) === "object" && e && "current"in e && (e.current = t)
}
function Bg() {
    for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++)
        t[r] = arguments[r];
    var a = t.filter(function(n) {
        return n
    });
    return a.length <= 1 ? a[0] : function(n) {
        t.forEach(function(i) {
            Pg(i, n)
        })
    }
}
function U3() {
    for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++)
        t[r] = arguments[r];
    return o8(function() {
        return Bg.apply(void 0, t)
    }, t, function(a, n) {
        return a.length !== n.length || a.every(function(i, o) {
            return i !== n[o]
        })
    })
}
function Dm(e) {
    var t, r, a = Og.isMemo(e) ? e.type.type : e.type;
    return !(typeof a == "function" && !((t = a.prototype) !== null && t !== void 0 && t.render) || typeof e == "function" && !((r = e.prototype) !== null && r !== void 0 && r.render))
}
var F3 = q.createContext(null);
function s8(e) {
    if (Array.isArray(e))
        return Oy(e)
}
function l8(e) {
    if (typeof Symbol < "u" && e[Symbol.iterator] != null || e["@@iterator"] != null)
        return Array.from(e)
}
function u8() {
    throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
}
function Jr(e) {
    return s8(e) || l8(e) || N3(e) || u8()
}
var D_ = Vi() ? q.useLayoutEffect : q.useEffect
  , ba = function(t, r) {
    var a = q.useRef(!0);
    D_(function() {
        return t(a.current)
    }, r),
    D_(function() {
        return a.current = !1,
        function() {
            a.current = !0
        }
    }, [])
}
  , U_ = function(t, r) {
    ba(function(a) {
        if (!a)
            return t()
    }, r)
}
  , F_ = [];
function c8(e, t) {
    var r = q.useState(function() {
        if (!Vi())
            return null;
        var p = document.createElement("div");
        return p
    })
      , a = qe(r, 1)
      , n = a[0]
      , i = q.useRef(!1)
      , o = q.useContext(F3)
      , s = q.useState(F_)
      , l = qe(s, 2)
      , u = l[0]
      , c = l[1]
      , d = o || (i.current ? void 0 : function(p) {
        c(function(f) {
            var _ = [p].concat(Jr(f));
            return _
        })
    }
    );
    function v() {
        n.parentElement || document.body.appendChild(n),
        i.current = !0
    }
    function h() {
        var p;
        (p = n.parentElement) === null || p === void 0 || p.removeChild(n),
        i.current = !1
    }
    return ba(function() {
        return e ? o ? o(v) : v() : h(),
        h
    }, [e]),
    ba(function() {
        u.length && (u.forEach(function(p) {
            return p()
        }),
        c(F_))
    }, [u]),
    [n, d]
}
function d8(e, t) {
    if (!e)
        return !1;
    if (e.contains)
        return e.contains(t);
    for (var r = t; r; ) {
        if (r === e)
            return !0;
        r = r.parentNode
    }
    return !1
}
var O_ = "data-rc-order"
  , P_ = "data-rc-priority"
  , v8 = "rc-util-key"
  , By = new Map;
function O3() {
    var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}
      , t = e.mark;
    return t ? t.startsWith("data-") ? t : "data-".concat(t) : v8
}
function Um(e) {
    if (e.attachTo)
        return e.attachTo;
    var t = document.querySelector("head");
    return t || document.body
}
function h8(e) {
    return e === "queue" ? "prependQueue" : e ? "prepend" : "append"
}
function P3(e) {
    return Array.from((By.get(e) || e).children).filter(function(t) {
        return t.tagName === "STYLE"
    })
}
function B3(e) {
    var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    if (!Vi())
        return null;
    var r = t.csp
      , a = t.prepend
      , n = t.priority
      , i = n === void 0 ? 0 : n
      , o = h8(a)
      , s = o === "prependQueue"
      , l = document.createElement("style");
    l.setAttribute(O_, o),
    s && i && l.setAttribute(P_, "".concat(i)),
    r != null && r.nonce && (l.nonce = r == null ? void 0 : r.nonce),
    l.innerHTML = e;
    var u = Um(t)
      , c = u.firstChild;
    if (a) {
        if (s) {
            var d = P3(u).filter(function(v) {
                if (!["prepend", "prependQueue"].includes(v.getAttribute(O_)))
                    return !1;
                var h = Number(v.getAttribute(P_) || 0);
                return i >= h
            });
            if (d.length)
                return u.insertBefore(l, d[d.length - 1].nextSibling),
                l
        }
        u.insertBefore(l, c)
    } else
        u.appendChild(l);
    return l
}
function R3(e) {
    var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}
      , r = Um(t);
    return P3(r).find(function(a) {
        return a.getAttribute(O3(t)) === e
    })
}
function B_(e) {
    var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}
      , r = R3(e, t);
    if (r) {
        var a = Um(t);
        a.removeChild(r)
    }
}
function m8(e, t) {
    var r = By.get(e);
    if (!r || !d8(document, r)) {
        var a = B3("", t)
          , n = a.parentNode;
        By.set(e, n),
        e.removeChild(a)
    }
}
function f8(e, t) {
    var r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}
      , a = Um(r);
    m8(a, r);
    var n = R3(t, r);
    if (n) {
        var i, o;
        if ((i = r.csp) !== null && i !== void 0 && i.nonce && n.nonce !== ((o = r.csp) === null || o === void 0 ? void 0 : o.nonce)) {
            var s;
            n.nonce = (s = r.csp) === null || s === void 0 ? void 0 : s.nonce
        }
        return n.innerHTML !== e && (n.innerHTML = e),
        n
    }
    var l = B3(e, r);
    return l.setAttribute(O3(r), t),
    l
}
var lp;
function p8(e) {
    if (typeof document > "u")
        return 0;
    if (e || lp === void 0) {
        var t = document.createElement("div");
        t.style.width = "100%",
        t.style.height = "200px";
        var r = document.createElement("div")
          , a = r.style;
        a.position = "absolute",
        a.top = "0",
        a.left = "0",
        a.pointerEvents = "none",
        a.visibility = "hidden",
        a.width = "200px",
        a.height = "150px",
        a.overflow = "hidden",
        r.appendChild(t),
        document.body.appendChild(r);
        var n = t.offsetWidth;
        r.style.overflow = "scroll";
        var i = t.offsetWidth;
        n === i && (i = r.clientWidth),
        document.body.removeChild(r),
        lp = n - i
    }
    return lp
}
function R_(e) {
    var t = e.match(/^(.*)px$/)
      , r = Number(t == null ? void 0 : t[1]);
    return Number.isNaN(r) ? p8() : r
}
function y8(e) {
    if (typeof document > "u" || !e || !(e instanceof Element))
        return {
            width: 0,
            height: 0
        };
    var t = getComputedStyle(e, "::-webkit-scrollbar")
      , r = t.width
      , a = t.height;
    return {
        width: R_(r),
        height: R_(a)
    }
}
function w8() {
    return document.body.scrollHeight > (window.innerHeight || document.documentElement.clientHeight) && window.innerWidth > document.body.offsetWidth
}
var g8 = "rc-util-locker-".concat(Date.now())
  , L_ = 0;
function _8(e) {
    var t = !!e
      , r = q.useState(function() {
        return L_ += 1,
        "".concat(g8, "_").concat(L_)
    })
      , a = qe(r, 1)
      , n = a[0];
    ba(function() {
        if (t) {
            var i = y8(document.body).width
              , o = w8();
            f8(`
html body {
  overflow-y: hidden;
  `.concat(o ? "width: calc(100% - ".concat(i, "px);") : "", `
}`), n)
        } else
            B_(n);
        return function() {
            B_(n)
        }
    }, [t, n])
}
var q_ = !1;
function b8(e) {
    return typeof e == "boolean" && (q_ = e),
    q_
}
var V_ = function(t) {
    return t === !1 ? !1 : !Vi() || !t ? null : typeof t == "string" ? document.querySelector(t) : typeof t == "function" ? t() : t
}
  , L3 = q.forwardRef(function(e, t) {
    var r = e.open
      , a = e.autoLock
      , n = e.getContainer;
    e.debug;
    var i = e.autoDestroy
      , o = i === void 0 ? !0 : i
      , s = e.children
      , l = q.useState(r)
      , u = qe(l, 2)
      , c = u[0]
      , d = u[1]
      , v = c || r;
    q.useEffect(function() {
        (o || r) && d(r)
    }, [r, o]);
    var h = q.useState(function() {
        return V_(n)
    })
      , p = qe(h, 2)
      , f = p[0]
      , _ = p[1];
    q.useEffect(function() {
        var I = V_(n);
        _(I ?? null)
    });
    var y = c8(v && !f)
      , g = qe(y, 2)
      , m = g[0]
      , w = g[1]
      , C = f ?? m;
    _8(a && r && Vi() && (C === m || C === document.body));
    var b = null;
    if (s && Dm(s) && t) {
        var x = s;
        b = x.ref
    }
    var E = U3(b, t);
    if (!v || !Vi() || f === void 0)
        return null;
    var k = C === !1 || b8()
      , A = s;
    return t && (A = q.cloneElement(s, {
        ref: E
    })),
    q.createElement(F3.Provider, {
        value: w
    }, k ? A : Gc.createPortal(A, C))
});
function Ry(e) {
    var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}
      , r = [];
    return Gt.Children.forEach(e, function(a) {
        a == null && !t.keepEmpty || (Array.isArray(a) ? r = r.concat(Ry(a)) : Og.isFragment(a) && a.props ? r = r.concat(Ry(a.props.children, t)) : r.push(a))
    }),
    r
}
function fh(e) {
    return e instanceof HTMLElement || e instanceof SVGElement
}
function Ly(e) {
    return fh(e) ? e : e instanceof Gt.Component ? GI.findDOMNode(e) : null
}
var q3 = function() {
    if (typeof Map < "u")
        return Map;
    function e(t, r) {
        var a = -1;
        return t.some(function(n, i) {
            return n[0] === r ? (a = i,
            !0) : !1
        }),
        a
    }
    return function() {
        function t() {
            this.__entries__ = []
        }
        return Object.defineProperty(t.prototype, "size", {
            get: function() {
                return this.__entries__.length
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.get = function(r) {
            var a = e(this.__entries__, r)
              , n = this.__entries__[a];
            return n && n[1]
        }
        ,
        t.prototype.set = function(r, a) {
            var n = e(this.__entries__, r);
            ~n ? this.__entries__[n][1] = a : this.__entries__.push([r, a])
        }
        ,
        t.prototype.delete = function(r) {
            var a = this.__entries__
              , n = e(a, r);
            ~n && a.splice(n, 1)
        }
        ,
        t.prototype.has = function(r) {
            return !!~e(this.__entries__, r)
        }
        ,
        t.prototype.clear = function() {
            this.__entries__.splice(0)
        }
        ,
        t.prototype.forEach = function(r, a) {
            a === void 0 && (a = null);
            for (var n = 0, i = this.__entries__; n < i.length; n++) {
                var o = i[n];
                r.call(a, o[1], o[0])
            }
        }
        ,
        t
    }()
}()
  , qy = typeof window < "u" && typeof document < "u" && window.document === document
  , ph = function() {
    return typeof global < "u" && global.Math === Math ? global : typeof self < "u" && self.Math === Math ? self : typeof window < "u" && window.Math === Math ? window : Function("return this")()
}()
  , C8 = function() {
    return typeof requestAnimationFrame == "function" ? requestAnimationFrame.bind(ph) : function(e) {
        return setTimeout(function() {
            return e(Date.now())
        }, 1e3 / 60)
    }
}()
  , S8 = 2;
function x8(e, t) {
    var r = !1
      , a = !1
      , n = 0;
    function i() {
        r && (r = !1,
        e()),
        a && s()
    }
    function o() {
        C8(i)
    }
    function s() {
        var l = Date.now();
        if (r) {
            if (l - n < S8)
                return;
            a = !0
        } else
            r = !0,
            a = !1,
            setTimeout(o, t);
        n = l
    }
    return s
}
var A8 = 20
  , E8 = ["top", "right", "bottom", "left", "width", "height", "size", "weight"]
  , k8 = typeof MutationObserver < "u"
  , T8 = function() {
    function e() {
        this.connected_ = !1,
        this.mutationEventsAdded_ = !1,
        this.mutationsObserver_ = null,
        this.observers_ = [],
        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this),
        this.refresh = x8(this.refresh.bind(this), A8)
    }
    return e.prototype.addObserver = function(t) {
        ~this.observers_.indexOf(t) || this.observers_.push(t),
        this.connected_ || this.connect_()
    }
    ,
    e.prototype.removeObserver = function(t) {
        var r = this.observers_
          , a = r.indexOf(t);
        ~a && r.splice(a, 1),
        !r.length && this.connected_ && this.disconnect_()
    }
    ,
    e.prototype.refresh = function() {
        var t = this.updateObservers_();
        t && this.refresh()
    }
    ,
    e.prototype.updateObservers_ = function() {
        var t = this.observers_.filter(function(r) {
            return r.gatherActive(),
            r.hasActive()
        });
        return t.forEach(function(r) {
            return r.broadcastActive()
        }),
        t.length > 0
    }
    ,
    e.prototype.connect_ = function() {
        !qy || this.connected_ || (document.addEventListener("transitionend", this.onTransitionEnd_),
        window.addEventListener("resize", this.refresh),
        k8 ? (this.mutationsObserver_ = new MutationObserver(this.refresh),
        this.mutationsObserver_.observe(document, {
            attributes: !0,
            childList: !0,
            characterData: !0,
            subtree: !0
        })) : (document.addEventListener("DOMSubtreeModified", this.refresh),
        this.mutationEventsAdded_ = !0),
        this.connected_ = !0)
    }
    ,
    e.prototype.disconnect_ = function() {
        !qy || !this.connected_ || (document.removeEventListener("transitionend", this.onTransitionEnd_),
        window.removeEventListener("resize", this.refresh),
        this.mutationsObserver_ && this.mutationsObserver_.disconnect(),
        this.mutationEventsAdded_ && document.removeEventListener("DOMSubtreeModified", this.refresh),
        this.mutationsObserver_ = null,
        this.mutationEventsAdded_ = !1,
        this.connected_ = !1)
    }
    ,
    e.prototype.onTransitionEnd_ = function(t) {
        var r = t.propertyName
          , a = r === void 0 ? "" : r
          , n = E8.some(function(i) {
            return !!~a.indexOf(i)
        });
        n && this.refresh()
    }
    ,
    e.getInstance = function() {
        return this.instance_ || (this.instance_ = new e),
        this.instance_
    }
    ,
    e.instance_ = null,
    e
}()
  , V3 = function(e, t) {
    for (var r = 0, a = Object.keys(t); r < a.length; r++) {
        var n = a[r];
        Object.defineProperty(e, n, {
            value: t[n],
            enumerable: !1,
            writable: !1,
            configurable: !0
        })
    }
    return e
}
  , $l = function(e) {
    var t = e && e.ownerDocument && e.ownerDocument.defaultView;
    return t || ph
}
  , $3 = Fm(0, 0, 0, 0);
function yh(e) {
    return parseFloat(e) || 0
}
function $_(e) {
    for (var t = [], r = 1; r < arguments.length; r++)
        t[r - 1] = arguments[r];
    return t.reduce(function(a, n) {
        var i = e["border-" + n + "-width"];
        return a + yh(i)
    }, 0)
}
function N8(e) {
    for (var t = ["top", "right", "bottom", "left"], r = {}, a = 0, n = t; a < n.length; a++) {
        var i = n[a]
          , o = e["padding-" + i];
        r[i] = yh(o)
    }
    return r
}
function M8(e) {
    var t = e.getBBox();
    return Fm(0, 0, t.width, t.height)
}
function I8(e) {
    var t = e.clientWidth
      , r = e.clientHeight;
    if (!t && !r)
        return $3;
    var a = $l(e).getComputedStyle(e)
      , n = N8(a)
      , i = n.left + n.right
      , o = n.top + n.bottom
      , s = yh(a.width)
      , l = yh(a.height);
    if (a.boxSizing === "border-box" && (Math.round(s + i) !== t && (s -= $_(a, "left", "right") + i),
    Math.round(l + o) !== r && (l -= $_(a, "top", "bottom") + o)),
    !U8(e)) {
        var u = Math.round(s + i) - t
          , c = Math.round(l + o) - r;
        Math.abs(u) !== 1 && (s -= u),
        Math.abs(c) !== 1 && (l -= c)
    }
    return Fm(n.left, n.top, s, l)
}
var D8 = function() {
    return typeof SVGGraphicsElement < "u" ? function(e) {
        return e instanceof $l(e).SVGGraphicsElement
    }
    : function(e) {
        return e instanceof $l(e).SVGElement && typeof e.getBBox == "function"
    }
}();
function U8(e) {
    return e === $l(e).document.documentElement
}
function F8(e) {
    return qy ? D8(e) ? M8(e) : I8(e) : $3
}
function O8(e) {
    var t = e.x
      , r = e.y
      , a = e.width
      , n = e.height
      , i = typeof DOMRectReadOnly < "u" ? DOMRectReadOnly : Object
      , o = Object.create(i.prototype);
    return V3(o, {
        x: t,
        y: r,
        width: a,
        height: n,
        top: r,
        right: t + a,
        bottom: n + r,
        left: t
    }),
    o
}
function Fm(e, t, r, a) {
    return {
        x: e,
        y: t,
        width: r,
        height: a
    }
}
var P8 = function() {
    function e(t) {
        this.broadcastWidth = 0,
        this.broadcastHeight = 0,
        this.contentRect_ = Fm(0, 0, 0, 0),
        this.target = t
    }
    return e.prototype.isActive = function() {
        var t = F8(this.target);
        return this.contentRect_ = t,
        t.width !== this.broadcastWidth || t.height !== this.broadcastHeight
    }
    ,
    e.prototype.broadcastRect = function() {
        var t = this.contentRect_;
        return this.broadcastWidth = t.width,
        this.broadcastHeight = t.height,
        t
    }
    ,
    e
}()
  , B8 = function() {
    function e(t, r) {
        var a = O8(r);
        V3(this, {
            target: t,
            contentRect: a
        })
    }
    return e
}()
  , R8 = function() {
    function e(t, r, a) {
        if (this.activeObservations_ = [],
        this.observations_ = new q3,
        typeof t != "function")
            throw new TypeError("The callback provided as parameter 1 is not a function.");
        this.callback_ = t,
        this.controller_ = r,
        this.callbackCtx_ = a
    }
    return e.prototype.observe = function(t) {
        if (!arguments.length)
            throw new TypeError("1 argument required, but only 0 present.");
        if (!(typeof Element > "u" || !(Element instanceof Object))) {
            if (!(t instanceof $l(t).Element))
                throw new TypeError('parameter 1 is not of type "Element".');
            var r = this.observations_;
            r.has(t) || (r.set(t, new P8(t)),
            this.controller_.addObserver(this),
            this.controller_.refresh())
        }
    }
    ,
    e.prototype.unobserve = function(t) {
        if (!arguments.length)
            throw new TypeError("1 argument required, but only 0 present.");
        if (!(typeof Element > "u" || !(Element instanceof Object))) {
            if (!(t instanceof $l(t).Element))
                throw new TypeError('parameter 1 is not of type "Element".');
            var r = this.observations_;
            r.has(t) && (r.delete(t),
            r.size || this.controller_.removeObserver(this))
        }
    }
    ,
    e.prototype.disconnect = function() {
        this.clearActive(),
        this.observations_.clear(),
        this.controller_.removeObserver(this)
    }
    ,
    e.prototype.gatherActive = function() {
        var t = this;
        this.clearActive(),
        this.observations_.forEach(function(r) {
            r.isActive() && t.activeObservations_.push(r)
        })
    }
    ,
    e.prototype.broadcastActive = function() {
        if (this.hasActive()) {
            var t = this.callbackCtx_
              , r = this.activeObservations_.map(function(a) {
                return new B8(a.target,a.broadcastRect())
            });
            this.callback_.call(t, r, t),
            this.clearActive()
        }
    }
    ,
    e.prototype.clearActive = function() {
        this.activeObservations_.splice(0)
    }
    ,
    e.prototype.hasActive = function() {
        return this.activeObservations_.length > 0
    }
    ,
    e
}()
  , z3 = typeof WeakMap < "u" ? new WeakMap : new q3
  , G3 = function() {
    function e(t) {
        if (!(this instanceof e))
            throw new TypeError("Cannot call a class as a function.");
        if (!arguments.length)
            throw new TypeError("1 argument required, but only 0 present.");
        var r = T8.getInstance()
          , a = new R8(t,r,this);
        z3.set(this, a)
    }
    return e
}();
["observe", "unobserve", "disconnect"].forEach(function(e) {
    G3.prototype[e] = function() {
        var t;
        return (t = z3.get(this))[e].apply(t, arguments)
    }
});
var L8 = function() {
    return typeof ph.ResizeObserver < "u" ? ph.ResizeObserver : G3
}()
  , wo = new Map;
function q8(e) {
    e.forEach(function(t) {
        var r, a = t.target;
        (r = wo.get(a)) === null || r === void 0 || r.forEach(function(n) {
            return n(a)
        })
    })
}
var j3 = new L8(q8);
function V8(e, t) {
    wo.has(e) || (wo.set(e, new Set),
    j3.observe(e)),
    wo.get(e).add(t)
}
function $8(e, t) {
    wo.has(e) && (wo.get(e).delete(t),
    wo.get(e).size || (j3.unobserve(e),
    wo.delete(e)))
}
function Om(e, t) {
    if (!(e instanceof t))
        throw new TypeError("Cannot call a class as a function")
}
function z_(e, t) {
    for (var r = 0; r < t.length; r++) {
        var a = t[r];
        a.enumerable = a.enumerable || !1,
        a.configurable = !0,
        "value"in a && (a.writable = !0),
        Object.defineProperty(e, T3(a.key), a)
    }
}
function Pm(e, t, r) {
    return t && z_(e.prototype, t),
    r && z_(e, r),
    Object.defineProperty(e, "prototype", {
        writable: !1
    }),
    e
}
function Vy(e, t) {
    return Vy = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(a, n) {
        return a.__proto__ = n,
        a
    }
    ,
    Vy(e, t)
}
function Bm(e, t) {
    if (typeof t != "function" && t !== null)
        throw new TypeError("Super expression must either be null or a function");
    e.prototype = Object.create(t && t.prototype, {
        constructor: {
            value: e,
            writable: !0,
            configurable: !0
        }
    }),
    Object.defineProperty(e, "prototype", {
        writable: !1
    }),
    t && Vy(e, t)
}
function wh(e) {
    return wh = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(r) {
        return r.__proto__ || Object.getPrototypeOf(r)
    }
    ,
    wh(e)
}
function z8() {
    if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
        return !1;
    if (typeof Proxy == "function")
        return !0;
    try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})),
        !0
    } catch {
        return !1
    }
}
function $y(e) {
    if (e === void 0)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return e
}
function G8(e, t) {
    if (t && (Na(t) === "object" || typeof t == "function"))
        return t;
    if (t !== void 0)
        throw new TypeError("Derived constructors may only return object or undefined");
    return $y(e)
}
function Rm(e) {
    var t = z8();
    return function() {
        var a = wh(e), n;
        if (t) {
            var i = wh(this).constructor;
            n = Reflect.construct(a, arguments, i)
        } else
            n = a.apply(this, arguments);
        return G8(this, n)
    }
}
var j8 = function(e) {
    Bm(r, e);
    var t = Rm(r);
    function r() {
        return Om(this, r),
        t.apply(this, arguments)
    }
    return Pm(r, [{
        key: "render",
        value: function() {
            return this.props.children
        }
    }]),
    r
}(q.Component)
  , zy = q.createContext(null);
function H8(e) {
    var t = e.children
      , r = e.onBatchResize
      , a = q.useRef(0)
      , n = q.useRef([])
      , i = q.useContext(zy)
      , o = q.useCallback(function(s, l, u) {
        a.current += 1;
        var c = a.current;
        n.current.push({
            size: s,
            element: l,
            data: u
        }),
        Promise.resolve().then(function() {
            c === a.current && (r == null || r(n.current),
            n.current = [])
        }),
        i == null || i(s, l, u)
    }, [r, i]);
    return q.createElement(zy.Provider, {
        value: o
    }, t)
}
function W8(e, t) {
    var r = e.children
      , a = e.disabled
      , n = q.useRef(null)
      , i = q.useRef(null)
      , o = q.useContext(zy)
      , s = typeof r == "function"
      , l = s ? r(n) : r
      , u = q.useRef({
        width: -1,
        height: -1,
        offsetWidth: -1,
        offsetHeight: -1
    })
      , c = !s && q.isValidElement(l) && Dm(l)
      , d = c ? l.ref : null
      , v = q.useMemo(function() {
        return Bg(d, n)
    }, [d, n])
      , h = function() {
        return Ly(n.current) || Ly(i.current)
    };
    q.useImperativeHandle(t, function() {
        return h()
    });
    var p = q.useRef(e);
    p.current = e;
    var f = q.useCallback(function(_) {
        var y = p.current
          , g = y.onResize
          , m = y.data
          , w = _.getBoundingClientRect()
          , C = w.width
          , b = w.height
          , x = _.offsetWidth
          , E = _.offsetHeight
          , k = Math.floor(C)
          , A = Math.floor(b);
        if (u.current.width !== k || u.current.height !== A || u.current.offsetWidth !== x || u.current.offsetHeight !== E) {
            var I = {
                width: k,
                height: A,
                offsetWidth: x,
                offsetHeight: E
            };
            u.current = I;
            var T = x === Math.round(C) ? C : x
              , F = E === Math.round(b) ? b : E
              , R = _e(_e({}, I), {}, {
                offsetWidth: T,
                offsetHeight: F
            });
            o == null || o(R, _, m),
            g && Promise.resolve().then(function() {
                g(R, _)
            })
        }
    }, []);
    return q.useEffect(function() {
        var _ = h();
        return _ && !a && V8(_, f),
        function() {
            return $8(_, f)
        }
    }, [n.current, a]),
    q.createElement(j8, {
        ref: i
    }, c ? q.cloneElement(l, {
        ref: v
    }) : l)
}
var Y8 = q.forwardRef(W8)
  , J8 = "rc-observer-key";
function K8(e, t) {
    var r = e.children
      , a = typeof r == "function" ? [r] : Ry(r);
    return a.map(function(n, i) {
        var o = (n == null ? void 0 : n.key) || "".concat(J8, "-").concat(i);
        return q.createElement(Y8, Ie({}, e, {
            key: o,
            ref: i === 0 ? t : void 0
        }), n)
    })
}
var Rg = q.forwardRef(K8);
Rg.Collection = H8;
function H3(e) {
    var t;
    return e == null || (t = e.getRootNode) === null || t === void 0 ? void 0 : t.call(e)
}
function Q8(e) {
    return H3(e)instanceof ShadowRoot
}
function Gy(e) {
    return Q8(e) ? H3(e) : null
}
function Ti(e) {
    var t = q.useRef();
    t.current = e;
    var r = q.useCallback(function() {
        for (var a, n = arguments.length, i = new Array(n), o = 0; o < n; o++)
            i[o] = arguments[o];
        return (a = t.current) === null || a === void 0 ? void 0 : a.call.apply(a, [t].concat(i))
    }, []);
    return r
}
function Z8() {
    var e = _e({}, qp);
    return e.useId
}
var G_ = 0;
function X8(e) {
    var t = q.useState("ssr-id")
      , r = qe(t, 2)
      , a = r[0]
      , n = r[1]
      , i = Z8()
      , o = i == null ? void 0 : i();
    return q.useEffect(function() {
        if (!i) {
            var s = G_;
            G_ += 1,
            n("rc_unique_".concat(s))
        }
    }, []),
    e || o || a
}
const e7 = function() {
    if (typeof navigator > "u" || typeof window > "u")
        return !1;
    var e = navigator.userAgent || navigator.vendor || window.opera;
    return /(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(e) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(e == null ? void 0 : e.substr(0, 4))
};
var j_ = q.createContext(null);
function H_(e) {
    return e ? Array.isArray(e) ? e : [e] : []
}
function t7(e, t, r, a) {
    return q.useMemo(function() {
        var n = H_(r ?? t)
          , i = H_(a ?? t)
          , o = new Set(n)
          , s = new Set(i);
        return e && (o.has("hover") && (o.delete("hover"),
        o.add("click")),
        s.has("hover") && (s.delete("hover"),
        s.add("click"))),
        [o, s]
    }, [e, t, r, a])
}
const r7 = function(e) {
    if (!e)
        return !1;
    if (e instanceof Element) {
        if (e.offsetParent)
            return !0;
        if (e.getBBox) {
            var t = e.getBBox()
              , r = t.width
              , a = t.height;
            if (r || a)
                return !0
        }
        if (e.getBoundingClientRect) {
            var n = e.getBoundingClientRect()
              , i = n.width
              , o = n.height;
            if (i || o)
                return !0
        }
    }
    return !1
};
function a7() {
    var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : []
      , t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : []
      , r = arguments.length > 2 ? arguments[2] : void 0;
    return r ? e[0] === t[0] : e[0] === t[0] && e[1] === t[1]
}
function n7(e, t, r, a) {
    for (var n = r.points, i = Object.keys(e), o = 0; o < i.length; o += 1) {
        var s, l = i[o];
        if (a7((s = e[l]) === null || s === void 0 ? void 0 : s.points, n, a))
            return "".concat(t, "-placement-").concat(l)
    }
    return ""
}
function W_(e, t, r, a) {
    return t || (r ? {
        motionName: "".concat(e, "-").concat(r)
    } : a ? {
        motionName: a
    } : null)
}
function Wc(e) {
    return e.ownerDocument.defaultView
}
function jy(e) {
    for (var t = [], r = e == null ? void 0 : e.parentElement, a = ["hidden", "scroll", "clip", "auto"]; r; ) {
        var n = Wc(r).getComputedStyle(r)
          , i = n.overflowX
          , o = n.overflowY
          , s = n.overflow;
        [i, o, s].some(function(l) {
            return a.includes(l)
        }) && t.push(r),
        r = r.parentElement
    }
    return t
}
function Nc(e) {
    var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
    return Number.isNaN(e) ? t : e
}
function Pu(e) {
    return Nc(parseFloat(e), 0)
}
function Y_(e, t) {
    var r = _e({}, e);
    return (t || []).forEach(function(a) {
        if (!(a instanceof HTMLBodyElement || a instanceof HTMLHtmlElement)) {
            var n = Wc(a).getComputedStyle(a)
              , i = n.overflow
              , o = n.overflowClipMargin
              , s = n.borderTopWidth
              , l = n.borderBottomWidth
              , u = n.borderLeftWidth
              , c = n.borderRightWidth
              , d = a.getBoundingClientRect()
              , v = a.offsetHeight
              , h = a.clientHeight
              , p = a.offsetWidth
              , f = a.clientWidth
              , _ = Pu(s)
              , y = Pu(l)
              , g = Pu(u)
              , m = Pu(c)
              , w = Nc(Math.round(d.width / p * 1e3) / 1e3)
              , C = Nc(Math.round(d.height / v * 1e3) / 1e3)
              , b = (p - f - g - m) * w
              , x = (v - h - _ - y) * C
              , E = _ * C
              , k = y * C
              , A = g * w
              , I = m * w
              , T = 0
              , F = 0;
            if (i === "clip") {
                var R = Pu(o);
                T = R * w,
                F = R * C
            }
            var O = d.x + A - T
              , M = d.y + E - F
              , N = O + d.width + 2 * T - A - I - b
              , B = M + d.height + 2 * F - E - k - x;
            r.left = Math.max(r.left, O),
            r.top = Math.max(r.top, M),
            r.right = Math.min(r.right, N),
            r.bottom = Math.min(r.bottom, B)
        }
    }),
    r
}
function J_(e) {
    var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0
      , r = "".concat(t)
      , a = r.match(/^(.*)\%$/);
    return a ? e * (parseFloat(a[1]) / 100) : parseFloat(r)
}
function K_(e, t) {
    var r = t || []
      , a = qe(r, 2)
      , n = a[0]
      , i = a[1];
    return [J_(e.width, n), J_(e.height, i)]
}
function Q_() {
    var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
    return [e[0], e[1]]
}
function Ws(e, t) {
    var r = t[0], a = t[1], n, i;
    return r === "t" ? i = e.y : r === "b" ? i = e.y + e.height : i = e.y + e.height / 2,
    a === "l" ? n = e.x : a === "r" ? n = e.x + e.width : n = e.x + e.width / 2,
    {
        x: n,
        y: i
    }
}
function to(e, t) {
    var r = {
        t: "b",
        b: "t",
        l: "r",
        r: "l"
    };
    return e.map(function(a, n) {
        return n === t ? r[a] || "c" : a
    }).join("")
}
function i7(e, t, r, a, n, i, o) {
    var s = q.useState({
        ready: !1,
        offsetX: 0,
        offsetY: 0,
        offsetR: 0,
        offsetB: 0,
        arrowX: 0,
        arrowY: 0,
        scaleX: 1,
        scaleY: 1,
        align: n[a] || {}
    })
      , l = qe(s, 2)
      , u = l[0]
      , c = l[1]
      , d = q.useRef(0)
      , v = q.useMemo(function() {
        return t ? jy(t) : []
    }, [t])
      , h = q.useRef({})
      , p = function() {
        h.current = {}
    };
    e || p();
    var f = Ti(function() {
        if (t && r && e) {
            let Fa = function(Gs, Zi) {
                var Xi = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : $
                  , Eu = D.x + Gs
                  , yd = D.y + Zi
                  , Tf = Eu + ce
                  , Nf = yd + se
                  , Mf = Math.max(Eu, Xi.left)
                  , Pe = Math.max(yd, Xi.top)
                  , ot = Math.min(Tf, Xi.right)
                  , Kt = Math.min(Nf, Xi.bottom);
                return Math.max(0, (ot - Mf) * (Kt - Pe))
            }
              , Au = function() {
                ga = D.y + Xe,
                Cn = ga + se,
                Ut = D.x + Oe,
                ht = Ut + ce
            };
            var l0 = Fa, Xo = Au, g, m, w = t, C = w.ownerDocument, b = Wc(w), x = b.getComputedStyle(w), E = x.width, k = x.height, A = x.position, I = w.style.left, T = w.style.top, F = w.style.right, R = w.style.bottom, O = _e(_e({}, n[a]), i), M = C.createElement("div");
            (g = w.parentElement) === null || g === void 0 || g.appendChild(M),
            M.style.left = "".concat(w.offsetLeft, "px"),
            M.style.top = "".concat(w.offsetTop, "px"),
            M.style.position = A,
            M.style.height = "".concat(w.offsetHeight, "px"),
            M.style.width = "".concat(w.offsetWidth, "px"),
            w.style.left = "0",
            w.style.top = "0",
            w.style.right = "auto",
            w.style.bottom = "auto";
            var N;
            if (Array.isArray(r))
                N = {
                    x: r[0],
                    y: r[1],
                    width: 0,
                    height: 0
                };
            else {
                var B = r.getBoundingClientRect();
                N = {
                    x: B.x,
                    y: B.y,
                    width: B.width,
                    height: B.height
                }
            }
            var D = w.getBoundingClientRect()
              , V = C.documentElement
              , J = V.clientWidth
              , Y = V.clientHeight
              , G = V.scrollWidth
              , Z = V.scrollHeight
              , ie = V.scrollTop
              , re = V.scrollLeft
              , se = D.height
              , ce = D.width
              , ue = N.height
              , oe = N.width
              , me = {
                left: 0,
                top: 0,
                right: J,
                bottom: Y
            }
              , xe = {
                left: -re,
                top: -ie,
                right: G - re,
                bottom: Z - ie
            }
              , pe = O.htmlRegion
              , be = "visible"
              , H = "visibleFirst";
            pe !== "scroll" && pe !== H && (pe = be);
            var Q = pe === H
              , z = Y_(xe, v)
              , P = Y_(me, v)
              , $ = pe === be ? P : z
              , K = Q ? P : $;
            w.style.left = "auto",
            w.style.top = "auto",
            w.style.right = "0",
            w.style.bottom = "0";
            var ae = w.getBoundingClientRect();
            w.style.left = I,
            w.style.top = T,
            w.style.right = F,
            w.style.bottom = R,
            (m = w.parentElement) === null || m === void 0 || m.removeChild(M);
            var te = Nc(Math.round(ce / parseFloat(E) * 1e3) / 1e3)
              , L = Nc(Math.round(se / parseFloat(k) * 1e3) / 1e3);
            if (te === 0 || L === 0 || fh(r) && !r7(r))
                return;
            var W = O.offset
              , ne = O.targetOffset
              , le = K_(D, W)
              , he = qe(le, 2)
              , ve = he[0]
              , we = he[1]
              , ye = K_(N, ne)
              , Ce = qe(ye, 2)
              , ge = Ce[0]
              , We = Ce[1];
            N.x -= ge,
            N.y -= We;
            var He = O.points || [], $e = qe(He, 2), Ge = $e[0], St = $e[1], U = Q_(St), X = Q_(Ge), de = Ws(N, U), Ae = Ws(D, X), ze = _e({}, O), Oe = de.x - Ae.x + ve, Xe = de.y - Ae.y + we, qr = Fa(Oe, Xe), Mr = Fa(Oe, Xe, P), Qn = Ws(N, ["t", "l"]), pi = Ws(D, ["t", "l"]), _n = Ws(N, ["b", "r"]), Vr = Ws(D, ["b", "r"]), bn = O.overflow || {}, yi = bn.adjustX, wa = bn.adjustY, wi = bn.shiftX, gi = bn.shiftY, Zn = function(Zi) {
                return typeof Zi == "boolean" ? Zi : Zi >= 0
            }, ga, Cn, Ut, ht;
            Au();
            var et = Zn(wa)
              , Ht = X[0] === U[0];
            if (et && X[0] === "t" && (Cn > K.bottom || h.current.bt)) {
                var wt = Xe;
                Ht ? wt -= se - ue : wt = Qn.y - Vr.y - we;
                var Da = Fa(Oe, wt)
                  , Xt = Fa(Oe, wt, P);
                Da > qr || Da === qr && (!Q || Xt >= Mr) ? (h.current.bt = !0,
                Xe = wt,
                we = -we,
                ze.points = [to(X, 0), to(U, 0)]) : h.current.bt = !1
            }
            if (et && X[0] === "b" && (ga < K.top || h.current.tb)) {
                var xr = Xe;
                Ht ? xr += se - ue : xr = _n.y - pi.y - we;
                var Qa = Fa(Oe, xr)
                  , Ji = Fa(Oe, xr, P);
                Qa > qr || Qa === qr && (!Q || Ji >= Mr) ? (h.current.tb = !0,
                Xe = xr,
                we = -we,
                ze.points = [to(X, 0), to(U, 0)]) : h.current.tb = !1
            }
            var _i = Zn(yi)
              , $r = X[1] === U[1];
            if (_i && X[1] === "l" && (ht > K.right || h.current.rl)) {
                var mt = Oe;
                $r ? mt -= ce - oe : mt = Qn.x - Vr.x - ve;
                var pr = Fa(mt, Xe)
                  , xu = Fa(mt, Xe, P);
                pr > qr || pr === qr && (!Q || xu >= Mr) ? (h.current.rl = !0,
                Oe = mt,
                ve = -ve,
                ze.points = [to(X, 1), to(U, 1)]) : h.current.rl = !1
            }
            if (_i && X[1] === "r" && (Ut < K.left || h.current.lr)) {
                var Za = Oe;
                $r ? Za += ce - oe : Za = _n.x - pi.x - ve;
                var Ua = Fa(Za, Xe)
                  , Ko = Fa(Za, Xe, P);
                Ua > qr || Ua === qr && (!Q || Ko >= Mr) ? (h.current.lr = !0,
                Oe = Za,
                ve = -ve,
                ze.points = [to(X, 1), to(U, 1)]) : h.current.lr = !1
            }
            Au();
            var Qo = wi === !0 ? 0 : wi;
            typeof Qo == "number" && (Ut < P.left && (Oe -= Ut - P.left - ve,
            N.x + oe < P.left + Qo && (Oe += N.x - P.left + oe - Qo)),
            ht > P.right && (Oe -= ht - P.right - ve,
            N.x > P.right - Qo && (Oe += N.x - P.right + Qo)));
            var Ki = gi === !0 ? 0 : gi;
            typeof Ki == "number" && (ga < P.top && (Xe -= ga - P.top - we,
            N.y + ue < P.top + Ki && (Xe += N.y - P.top + ue - Ki)),
            Cn > P.bottom && (Xe -= Cn - P.bottom - we,
            N.y > P.bottom - Ki && (Xe += N.y - P.bottom + Ki)));
            var Qi = D.x + Oe
              , Zo = Qi + ce
              , $s = D.y + Xe
              , zs = $s + se
              , bi = N.x
              , gf = bi + oe
              , hd = N.y
              , _f = hd + ue
              , md = Math.max(Qi, bi)
              , bf = Math.min(Zo, gf)
              , Cf = (md + bf) / 2
              , Sf = Cf - Qi
              , fd = Math.max($s, hd)
              , xf = Math.min(zs, _f)
              , Af = (fd + xf) / 2
              , pd = Af - $s;
            o == null || o(t, ze);
            var Ef = ae.right - D.x - (Oe + D.width)
              , kf = ae.bottom - D.y - (Xe + D.height);
            c({
                ready: !0,
                offsetX: Oe / te,
                offsetY: Xe / L,
                offsetR: Ef / te,
                offsetB: kf / L,
                arrowX: Sf / te,
                arrowY: pd / L,
                scaleX: te,
                scaleY: L,
                align: ze
            })
        }
    })
      , _ = function() {
        d.current += 1;
        var m = d.current;
        Promise.resolve().then(function() {
            d.current === m && f()
        })
    }
      , y = function() {
        c(function(m) {
            return _e(_e({}, m), {}, {
                ready: !1
            })
        })
    };
    return ba(y, [a]),
    ba(function() {
        e || y()
    }, [e]),
    [u.ready, u.offsetX, u.offsetY, u.offsetR, u.offsetB, u.arrowX, u.arrowY, u.scaleX, u.scaleY, u.align, _]
}
function o7(e, t, r, a, n) {
    ba(function() {
        if (e && t && r) {
            let v = function() {
                a(),
                n()
            };
            var d = v
              , i = t
              , o = r
              , s = jy(i)
              , l = jy(o)
              , u = Wc(o)
              , c = new Set([u].concat(Jr(s), Jr(l)));
            return c.forEach(function(h) {
                h.addEventListener("scroll", v, {
                    passive: !0
                })
            }),
            u.addEventListener("resize", v, {
                passive: !0
            }),
            a(),
            function() {
                c.forEach(function(h) {
                    h.removeEventListener("scroll", v),
                    u.removeEventListener("resize", v)
                })
            }
        }
    }, [e, t, r])
}
function Nl(e) {
    var t = q.useRef(!1)
      , r = q.useState(e)
      , a = qe(r, 2)
      , n = a[0]
      , i = a[1];
    q.useEffect(function() {
        return t.current = !1,
        function() {
            t.current = !0
        }
    }, []);
    function o(s, l) {
        l && t.current || i(s)
    }
    return [n, o]
}
function up(e) {
    return e !== void 0
}
function s7(e, t) {
    var r = t || {}
      , a = r.defaultValue
      , n = r.value
      , i = r.onChange
      , o = r.postState
      , s = Nl(function() {
        return up(n) ? n : up(a) ? typeof a == "function" ? a() : a : typeof e == "function" ? e() : e
    })
      , l = qe(s, 2)
      , u = l[0]
      , c = l[1]
      , d = n !== void 0 ? n : u
      , v = o ? o(d) : d
      , h = Ti(i)
      , p = Nl([d])
      , f = qe(p, 2)
      , _ = f[0]
      , y = f[1];
    U_(function() {
        var m = _[0];
        u !== m && h(u, m)
    }, [_]),
    U_(function() {
        up(n) || c(n)
    }, [n]);
    var g = Ti(function(m, w) {
        c(m, w),
        y([d], w)
    });
    return [v, g]
}
var W3 = function(t) {
    return +setTimeout(t, 16)
}
  , Y3 = function(t) {
    return clearTimeout(t)
};
typeof window < "u" && "requestAnimationFrame"in window && (W3 = function(t) {
    return window.requestAnimationFrame(t)
}
,
Y3 = function(t) {
    return window.cancelAnimationFrame(t)
}
);
var Z_ = 0
  , Lg = new Map;
function J3(e) {
    Lg.delete(e)
}
var Mc = function(t) {
    var r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
    Z_ += 1;
    var a = Z_;
    function n(i) {
        if (i === 0)
            J3(a),
            t();
        else {
            var o = W3(function() {
                n(i - 1)
            });
            Lg.set(a, o)
        }
    }
    return n(r),
    a
};
Mc.cancel = function(e) {
    var t = Lg.get(e);
    return J3(t),
    Y3(t)
}
;
function l7(e, t, r, a, n, i, o, s) {
    var l = q.useRef(e)
      , u = q.useRef(!1);
    l.current !== e && (u.current = !0,
    l.current = e),
    q.useEffect(function() {
        var c = Mc(function() {
            u.current = !1
        });
        return function() {
            Mc.cancel(c)
        }
    }, [e]),
    q.useEffect(function() {
        if (t && a && (!n || i)) {
            var c = function() {
                var b = !1
                  , x = function(A) {
                    var I = A.target;
                    b = o(I)
                }
                  , E = function(A) {
                    var I = A.target;
                    !u.current && l.current && !b && !o(I) && s(!1)
                };
                return [x, E]
            }
              , d = c()
              , v = qe(d, 2)
              , h = v[0]
              , p = v[1]
              , f = c()
              , _ = qe(f, 2)
              , y = _[0]
              , g = _[1]
              , m = Wc(a);
            m.addEventListener("mousedown", h, !0),
            m.addEventListener("click", p, !0),
            m.addEventListener("contextmenu", p, !0);
            var w = Gy(r);
            return w && (w.addEventListener("mousedown", y, !0),
            w.addEventListener("click", g, !0),
            w.addEventListener("contextmenu", g, !0)),
            function() {
                m.removeEventListener("mousedown", h, !0),
                m.removeEventListener("click", p, !0),
                m.removeEventListener("contextmenu", p, !0),
                w && (w.removeEventListener("mousedown", y, !0),
                w.removeEventListener("click", g, !0),
                w.removeEventListener("contextmenu", g, !0))
            }
        }
    }, [t, r, a, n, i])
}
var u7 = q.createContext({})
  , c7 = function(e) {
    Bm(r, e);
    var t = Rm(r);
    function r() {
        return Om(this, r),
        t.apply(this, arguments)
    }
    return Pm(r, [{
        key: "render",
        value: function() {
            return this.props.children
        }
    }]),
    r
}(q.Component)
  , as = "none"
  , Bd = "appear"
  , Rd = "enter"
  , Ld = "leave"
  , X_ = "none"
  , Mn = "prepare"
  , yl = "start"
  , wl = "active"
  , qg = "end"
  , K3 = "prepared";
function e1(e, t) {
    var r = {};
    return r[e.toLowerCase()] = t.toLowerCase(),
    r["Webkit".concat(e)] = "webkit".concat(t),
    r["Moz".concat(e)] = "moz".concat(t),
    r["ms".concat(e)] = "MS".concat(t),
    r["O".concat(e)] = "o".concat(t.toLowerCase()),
    r
}
function d7(e, t) {
    var r = {
        animationend: e1("Animation", "AnimationEnd"),
        transitionend: e1("Transition", "TransitionEnd")
    };
    return e && ("AnimationEvent"in t || delete r.animationend.animation,
    "TransitionEvent"in t || delete r.transitionend.transition),
    r
}
var v7 = d7(Vi(), typeof window < "u" ? window : {})
  , Q3 = {};
if (Vi()) {
    var h7 = document.createElement("div");
    Q3 = h7.style
}
var qd = {};
function Z3(e) {
    if (qd[e])
        return qd[e];
    var t = v7[e];
    if (t)
        for (var r = Object.keys(t), a = r.length, n = 0; n < a; n += 1) {
            var i = r[n];
            if (Object.prototype.hasOwnProperty.call(t, i) && i in Q3)
                return qd[e] = t[i],
                qd[e]
        }
    return ""
}
var X3 = Z3("animationend")
  , eA = Z3("transitionend")
  , tA = !!(X3 && eA)
  , t1 = X3 || "animationend"
  , r1 = eA || "transitionend";
function a1(e, t) {
    if (!e)
        return null;
    if (Na(e) === "object") {
        var r = t.replace(/-\w/g, function(a) {
            return a[1].toUpperCase()
        });
        return e[r]
    }
    return "".concat(e, "-").concat(t)
}
const m7 = function(e) {
    var t = q.useRef()
      , r = q.useRef(e);
    r.current = e;
    var a = q.useCallback(function(o) {
        r.current(o)
    }, []);
    function n(o) {
        o && (o.removeEventListener(r1, a),
        o.removeEventListener(t1, a))
    }
    function i(o) {
        t.current && t.current !== o && n(t.current),
        o && o !== t.current && (o.addEventListener(r1, a),
        o.addEventListener(t1, a),
        t.current = o)
    }
    return q.useEffect(function() {
        return function() {
            n(t.current)
        }
    }, []),
    [i, n]
};
var rA = Vi() ? q.useLayoutEffect : q.useEffect;
const f7 = function() {
    var e = q.useRef(null);
    function t() {
        Mc.cancel(e.current)
    }
    function r(a) {
        var n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 2;
        t();
        var i = Mc(function() {
            n <= 1 ? a({
                isCanceled: function() {
                    return i !== e.current
                }
            }) : r(a, n - 1)
        });
        e.current = i
    }
    return q.useEffect(function() {
        return function() {
            t()
        }
    }, []),
    [r, t]
};
var p7 = [Mn, yl, wl, qg]
  , y7 = [Mn, K3]
  , aA = !1
  , w7 = !0;
function nA(e) {
    return e === wl || e === qg
}
const g7 = function(e, t, r) {
    var a = Nl(X_)
      , n = qe(a, 2)
      , i = n[0]
      , o = n[1]
      , s = f7()
      , l = qe(s, 2)
      , u = l[0]
      , c = l[1];
    function d() {
        o(Mn, !0)
    }
    var v = t ? y7 : p7;
    return rA(function() {
        if (i !== X_ && i !== qg) {
            var h = v.indexOf(i)
              , p = v[h + 1]
              , f = r(i);
            f === aA ? o(p, !0) : p && u(function(_) {
                function y() {
                    _.isCanceled() || o(p, !0)
                }
                f === !0 ? y() : Promise.resolve(f).then(y)
            })
        }
    }, [e, i]),
    q.useEffect(function() {
        return function() {
            c()
        }
    }, []),
    [d, i]
};
function _7(e, t, r, a) {
    var n = a.motionEnter
      , i = n === void 0 ? !0 : n
      , o = a.motionAppear
      , s = o === void 0 ? !0 : o
      , l = a.motionLeave
      , u = l === void 0 ? !0 : l
      , c = a.motionDeadline
      , d = a.motionLeaveImmediately
      , v = a.onAppearPrepare
      , h = a.onEnterPrepare
      , p = a.onLeavePrepare
      , f = a.onAppearStart
      , _ = a.onEnterStart
      , y = a.onLeaveStart
      , g = a.onAppearActive
      , m = a.onEnterActive
      , w = a.onLeaveActive
      , C = a.onAppearEnd
      , b = a.onEnterEnd
      , x = a.onLeaveEnd
      , E = a.onVisibleChanged
      , k = Nl()
      , A = qe(k, 2)
      , I = A[0]
      , T = A[1]
      , F = Nl(as)
      , R = qe(F, 2)
      , O = R[0]
      , M = R[1]
      , N = Nl(null)
      , B = qe(N, 2)
      , D = B[0]
      , V = B[1]
      , J = q.useRef(!1)
      , Y = q.useRef(null);
    function G() {
        return r()
    }
    var Z = q.useRef(!1);
    function ie() {
        M(as, !0),
        V(null, !0)
    }
    function re($) {
        var K = G();
        if (!($ && !$.deadline && $.target !== K)) {
            var ae = Z.current, te;
            O === Bd && ae ? te = C == null ? void 0 : C(K, $) : O === Rd && ae ? te = b == null ? void 0 : b(K, $) : O === Ld && ae && (te = x == null ? void 0 : x(K, $)),
            O !== as && ae && te !== !1 && ie()
        }
    }
    var se = m7(re)
      , ce = qe(se, 1)
      , ue = ce[0]
      , oe = function(K) {
        var ae, te, L;
        switch (K) {
        case Bd:
            return ae = {},
            Ze(ae, Mn, v),
            Ze(ae, yl, f),
            Ze(ae, wl, g),
            ae;
        case Rd:
            return te = {},
            Ze(te, Mn, h),
            Ze(te, yl, _),
            Ze(te, wl, m),
            te;
        case Ld:
            return L = {},
            Ze(L, Mn, p),
            Ze(L, yl, y),
            Ze(L, wl, w),
            L;
        default:
            return {}
        }
    }
      , me = q.useMemo(function() {
        return oe(O)
    }, [O])
      , xe = g7(O, !e, function($) {
        if ($ === Mn) {
            var K = me[Mn];
            return K ? K(G()) : aA
        }
        if (H in me) {
            var ae;
            V(((ae = me[H]) === null || ae === void 0 ? void 0 : ae.call(me, G(), null)) || null)
        }
        return H === wl && (ue(G()),
        c > 0 && (clearTimeout(Y.current),
        Y.current = setTimeout(function() {
            re({
                deadline: !0
            })
        }, c))),
        H === K3 && ie(),
        w7
    })
      , pe = qe(xe, 2)
      , be = pe[0]
      , H = pe[1]
      , Q = nA(H);
    Z.current = Q,
    rA(function() {
        T(t);
        var $ = J.current;
        J.current = !0;
        var K;
        !$ && t && s && (K = Bd),
        $ && t && i && (K = Rd),
        ($ && !t && u || !$ && d && !t && u) && (K = Ld);
        var ae = oe(K);
        K && (e || ae[Mn]) ? (M(K),
        be()) : M(as)
    }, [t]),
    q.useEffect(function() {
        (O === Bd && !s || O === Rd && !i || O === Ld && !u) && M(as)
    }, [s, i, u]),
    q.useEffect(function() {
        return function() {
            J.current = !1,
            clearTimeout(Y.current)
        }
    }, []);
    var z = q.useRef(!1);
    q.useEffect(function() {
        I && (z.current = !0),
        I !== void 0 && O === as && ((z.current || I) && (E == null || E(I)),
        z.current = !0)
    }, [I, O]);
    var P = D;
    return me[Mn] && H === yl && (P = _e({
        transition: "none"
    }, P)),
    [O, H, P, I ?? t]
}
function b7(e) {
    var t = e;
    Na(e) === "object" && (t = e.transitionSupport);
    function r(n, i) {
        return !!(n.motionName && t && i !== !1)
    }
    var a = q.forwardRef(function(n, i) {
        var o = n.visible
          , s = o === void 0 ? !0 : o
          , l = n.removeOnLeave
          , u = l === void 0 ? !0 : l
          , c = n.forceRender
          , d = n.children
          , v = n.motionName
          , h = n.leavedClassName
          , p = n.eventProps
          , f = q.useContext(u7)
          , _ = f.motion
          , y = r(n, _)
          , g = q.useRef()
          , m = q.useRef();
        function w() {
            try {
                return g.current instanceof HTMLElement ? g.current : Ly(m.current)
            } catch {
                return null
            }
        }
        var C = _7(y, s, w, n)
          , b = qe(C, 4)
          , x = b[0]
          , E = b[1]
          , k = b[2]
          , A = b[3]
          , I = q.useRef(A);
        A && (I.current = !0);
        var T = q.useCallback(function(V) {
            g.current = V,
            Pg(i, V)
        }, [i]), F, R = _e(_e({}, p), {}, {
            visible: s
        });
        if (!d)
            F = null;
        else if (x === as)
            A ? F = d(_e({}, R), T) : !u && I.current && h ? F = d(_e(_e({}, R), {}, {
                className: h
            }), T) : c || !u && !h ? F = d(_e(_e({}, R), {}, {
                style: {
                    display: "none"
                }
            }), T) : F = null;
        else {
            var O, M;
            E === Mn ? M = "prepare" : nA(E) ? M = "active" : E === yl && (M = "start");
            var N = a1(v, "".concat(x, "-").concat(M));
            F = d(_e(_e({}, R), {}, {
                className: sa(a1(v, x), (O = {},
                Ze(O, N, N && M),
                Ze(O, v, typeof v == "string"),
                O)),
                style: k
            }), T)
        }
        if (q.isValidElement(F) && Dm(F)) {
            var B = F
              , D = B.ref;
            D || (F = q.cloneElement(F, {
                ref: T
            }))
        }
        return q.createElement(c7, {
            ref: m
        }, F)
    });
    return a.displayName = "CSSMotion",
    a
}
const Vg = b7(tA);
var Hy = "add"
  , Wy = "keep"
  , Yy = "remove"
  , cp = "removed";
function C7(e) {
    var t;
    return e && Na(e) === "object" && "key"in e ? t = e : t = {
        key: e
    },
    _e(_e({}, t), {}, {
        key: String(t.key)
    })
}
function Jy() {
    var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
    return e.map(C7)
}
function S7() {
    var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : []
      , t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : []
      , r = []
      , a = 0
      , n = t.length
      , i = Jy(e)
      , o = Jy(t);
    i.forEach(function(u) {
        for (var c = !1, d = a; d < n; d += 1) {
            var v = o[d];
            if (v.key === u.key) {
                a < d && (r = r.concat(o.slice(a, d).map(function(h) {
                    return _e(_e({}, h), {}, {
                        status: Hy
                    })
                })),
                a = d),
                r.push(_e(_e({}, v), {}, {
                    status: Wy
                })),
                a += 1,
                c = !0;
                break
            }
        }
        c || r.push(_e(_e({}, u), {}, {
            status: Yy
        }))
    }),
    a < n && (r = r.concat(o.slice(a).map(function(u) {
        return _e(_e({}, u), {}, {
            status: Hy
        })
    })));
    var s = {};
    r.forEach(function(u) {
        var c = u.key;
        s[c] = (s[c] || 0) + 1
    });
    var l = Object.keys(s).filter(function(u) {
        return s[u] > 1
    });
    return l.forEach(function(u) {
        r = r.filter(function(c) {
            var d = c.key
              , v = c.status;
            return d !== u || v !== Yy
        }),
        r.forEach(function(c) {
            c.key === u && (c.status = Wy)
        })
    }),
    r
}
var x7 = ["component", "children", "onVisibleChanged", "onAllRemoved"]
  , A7 = ["status"]
  , E7 = ["eventProps", "visible", "children", "motionName", "motionAppear", "motionEnter", "motionLeave", "motionLeaveImmediately", "motionDeadline", "removeOnLeave", "leavedClassName", "onAppearPrepare", "onAppearStart", "onAppearActive", "onAppearEnd", "onEnterStart", "onEnterActive", "onEnterEnd", "onLeaveStart", "onLeaveActive", "onLeaveEnd"];
function k7(e) {
    var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Vg
      , r = function(a) {
        Bm(i, a);
        var n = Rm(i);
        function i() {
            var o;
            Om(this, i);
            for (var s = arguments.length, l = new Array(s), u = 0; u < s; u++)
                l[u] = arguments[u];
            return o = n.call.apply(n, [this].concat(l)),
            Ze($y(o), "state", {
                keyEntities: []
            }),
            Ze($y(o), "removeKey", function(c) {
                var d = o.state.keyEntities
                  , v = d.map(function(h) {
                    return h.key !== c ? h : _e(_e({}, h), {}, {
                        status: cp
                    })
                });
                return o.setState({
                    keyEntities: v
                }),
                v.filter(function(h) {
                    var p = h.status;
                    return p !== cp
                }).length
            }),
            o
        }
        return Pm(i, [{
            key: "render",
            value: function() {
                var s = this
                  , l = this.state.keyEntities
                  , u = this.props
                  , c = u.component
                  , d = u.children
                  , v = u.onVisibleChanged
                  , h = u.onAllRemoved
                  , p = Zr(u, x7)
                  , f = c || q.Fragment
                  , _ = {};
                return E7.forEach(function(y) {
                    _[y] = p[y],
                    delete p[y]
                }),
                delete p.keys,
                q.createElement(f, p, l.map(function(y, g) {
                    var m = y.status
                      , w = Zr(y, A7)
                      , C = m === Hy || m === Wy;
                    return q.createElement(t, Ie({}, _, {
                        key: w.key,
                        visible: C,
                        eventProps: w,
                        onVisibleChanged: function(x) {
                            if (v == null || v(x, {
                                key: w.key
                            }),
                            !x) {
                                var E = s.removeKey(w.key);
                                E === 0 && h && h()
                            }
                        }
                    }), function(b, x) {
                        return d(_e(_e({}, b), {}, {
                            index: g
                        }), x)
                    })
                }))
            }
        }], [{
            key: "getDerivedStateFromProps",
            value: function(s, l) {
                var u = s.keys
                  , c = l.keyEntities
                  , d = Jy(u)
                  , v = S7(c, d);
                return {
                    keyEntities: v.filter(function(h) {
                        var p = c.find(function(f) {
                            var _ = f.key;
                            return h.key === _
                        });
                        return !(p && p.status === cp && h.status === Yy)
                    })
                }
            }
        }]),
        i
    }(q.Component);
    return Ze(r, "defaultProps", {
        component: "div"
    }),
    r
}
k7(tA);
function T7(e) {
    var t = e.prefixCls
      , r = e.align
      , a = e.arrow
      , n = e.arrowPos
      , i = a || {}
      , o = i.className
      , s = i.content
      , l = n.x
      , u = l === void 0 ? 0 : l
      , c = n.y
      , d = c === void 0 ? 0 : c
      , v = q.useRef();
    if (!r || !r.points)
        return null;
    var h = {
        position: "absolute"
    };
    if (r.autoArrow !== !1) {
        var p = r.points[0]
          , f = r.points[1]
          , _ = p[0]
          , y = p[1]
          , g = f[0]
          , m = f[1];
        _ === g || !["t", "b"].includes(_) ? h.top = d : _ === "t" ? h.top = 0 : h.bottom = 0,
        y === m || !["l", "r"].includes(y) ? h.left = u : y === "l" ? h.left = 0 : h.right = 0
    }
    return q.createElement("div", {
        ref: v,
        className: sa("".concat(t, "-arrow"), o),
        style: h
    }, s)
}
function N7(e) {
    var t = e.prefixCls
      , r = e.open
      , a = e.zIndex
      , n = e.mask
      , i = e.motion;
    return n ? q.createElement(Vg, Ie({}, i, {
        motionAppear: !0,
        visible: r,
        removeOnLeave: !0
    }), function(o) {
        var s = o.className;
        return q.createElement("div", {
            style: {
                zIndex: a
            },
            className: sa("".concat(t, "-mask"), s)
        })
    }) : null
}
var M7 = q.memo(function(e) {
    var t = e.children;
    return t
}, function(e, t) {
    return t.cache
})
  , I7 = q.forwardRef(function(e, t) {
    var r = e.popup
      , a = e.className
      , n = e.prefixCls
      , i = e.style
      , o = e.target
      , s = e.onVisibleChanged
      , l = e.open
      , u = e.keepDom
      , c = e.fresh
      , d = e.onClick
      , v = e.mask
      , h = e.arrow
      , p = e.arrowPos
      , f = e.align
      , _ = e.motion
      , y = e.maskMotion
      , g = e.forceRender
      , m = e.getPopupContainer
      , w = e.autoDestroy
      , C = e.portal
      , b = e.zIndex
      , x = e.onMouseEnter
      , E = e.onMouseLeave
      , k = e.onPointerEnter
      , A = e.ready
      , I = e.offsetX
      , T = e.offsetY
      , F = e.offsetR
      , R = e.offsetB
      , O = e.onAlign
      , M = e.onPrepare
      , N = e.stretch
      , B = e.targetWidth
      , D = e.targetHeight
      , V = typeof r == "function" ? r() : r
      , J = l || u
      , Y = (m == null ? void 0 : m.length) > 0
      , G = q.useState(!m || !Y)
      , Z = qe(G, 2)
      , ie = Z[0]
      , re = Z[1];
    if (ba(function() {
        !ie && Y && o && re(!0)
    }, [ie, Y, o]),
    !ie)
        return null;
    var se = "auto"
      , ce = {
        left: "-1000vw",
        top: "-1000vh",
        right: se,
        bottom: se
    };
    if (A || !l) {
        var ue, oe = f.points, me = f.dynamicInset || ((ue = f._experimental) === null || ue === void 0 ? void 0 : ue.dynamicInset), xe = me && oe[0][1] === "r", pe = me && oe[0][0] === "b";
        xe ? (ce.right = F,
        ce.left = se) : (ce.left = I,
        ce.right = se),
        pe ? (ce.bottom = R,
        ce.top = se) : (ce.top = T,
        ce.bottom = se)
    }
    var be = {};
    return N && (N.includes("height") && D ? be.height = D : N.includes("minHeight") && D && (be.minHeight = D),
    N.includes("width") && B ? be.width = B : N.includes("minWidth") && B && (be.minWidth = B)),
    l || (be.pointerEvents = "none"),
    q.createElement(C, {
        open: g || J,
        getContainer: m && function() {
            return m(o)
        }
        ,
        autoDestroy: w
    }, q.createElement(N7, {
        prefixCls: n,
        open: l,
        zIndex: b,
        mask: v,
        motion: y
    }), q.createElement(Rg, {
        onResize: O,
        disabled: !l
    }, function(H) {
        return q.createElement(Vg, Ie({
            motionAppear: !0,
            motionEnter: !0,
            motionLeave: !0,
            removeOnLeave: !1,
            forceRender: g,
            leavedClassName: "".concat(n, "-hidden")
        }, _, {
            onAppearPrepare: M,
            onEnterPrepare: M,
            visible: l,
            onVisibleChanged: function(z) {
                var P;
                _ == null || (P = _.onVisibleChanged) === null || P === void 0 || P.call(_, z),
                s(z)
            }
        }), function(Q, z) {
            var P = Q.className
              , $ = Q.style
              , K = sa(n, P, a);
            return q.createElement("div", {
                ref: Bg(H, t, z),
                className: K,
                style: _e(_e(_e(_e({
                    "--arrow-x": "".concat(p.x || 0, "px"),
                    "--arrow-y": "".concat(p.y || 0, "px")
                }, ce), be), $), {}, {
                    boxSizing: "border-box",
                    zIndex: b
                }, i),
                onMouseEnter: x,
                onMouseLeave: E,
                onPointerEnter: k,
                onClick: d
            }, h && q.createElement(T7, {
                prefixCls: n,
                arrow: h,
                arrowPos: p,
                align: f
            }), q.createElement(M7, {
                cache: !l && !c
            }, V))
        })
    }))
})
  , D7 = q.forwardRef(function(e, t) {
    var r = e.children
      , a = e.getTriggerDOMNode
      , n = Dm(r)
      , i = q.useCallback(function(s) {
        Pg(t, a ? a(s) : s)
    }, [a])
      , o = U3(i, r.ref);
    return n ? q.cloneElement(r, {
        ref: o
    }) : r
})
  , U7 = ["prefixCls", "children", "action", "showAction", "hideAction", "popupVisible", "defaultPopupVisible", "onPopupVisibleChange", "afterPopupVisibleChange", "mouseEnterDelay", "mouseLeaveDelay", "focusDelay", "blurDelay", "mask", "maskClosable", "getPopupContainer", "forceRender", "autoDestroy", "destroyPopupOnHide", "popup", "popupClassName", "popupStyle", "popupPlacement", "builtinPlacements", "popupAlign", "zIndex", "stretch", "getPopupClassNameFromAlign", "fresh", "alignPoint", "onPopupClick", "onPopupAlign", "arrow", "popupMotion", "maskMotion", "popupTransitionName", "popupAnimation", "maskTransitionName", "maskAnimation", "className", "getTriggerDOMNode"];
function F7() {
    var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : L3
      , t = q.forwardRef(function(r, a) {
        var n = r.prefixCls
          , i = n === void 0 ? "rc-trigger-popup" : n
          , o = r.children
          , s = r.action
          , l = s === void 0 ? "hover" : s
          , u = r.showAction
          , c = r.hideAction
          , d = r.popupVisible
          , v = r.defaultPopupVisible
          , h = r.onPopupVisibleChange
          , p = r.afterPopupVisibleChange
          , f = r.mouseEnterDelay
          , _ = r.mouseLeaveDelay
          , y = _ === void 0 ? .1 : _
          , g = r.focusDelay
          , m = r.blurDelay
          , w = r.mask
          , C = r.maskClosable
          , b = C === void 0 ? !0 : C
          , x = r.getPopupContainer
          , E = r.forceRender
          , k = r.autoDestroy
          , A = r.destroyPopupOnHide
          , I = r.popup
          , T = r.popupClassName
          , F = r.popupStyle
          , R = r.popupPlacement
          , O = r.builtinPlacements
          , M = O === void 0 ? {} : O
          , N = r.popupAlign
          , B = r.zIndex
          , D = r.stretch
          , V = r.getPopupClassNameFromAlign
          , J = r.fresh
          , Y = r.alignPoint
          , G = r.onPopupClick
          , Z = r.onPopupAlign
          , ie = r.arrow
          , re = r.popupMotion
          , se = r.maskMotion
          , ce = r.popupTransitionName
          , ue = r.popupAnimation
          , oe = r.maskTransitionName
          , me = r.maskAnimation
          , xe = r.className
          , pe = r.getTriggerDOMNode
          , be = Zr(r, U7)
          , H = k || A || !1
          , Q = q.useState(!1)
          , z = qe(Q, 2)
          , P = z[0]
          , $ = z[1];
        ba(function() {
            $(e7())
        }, []);
        var K = q.useRef({})
          , ae = q.useContext(j_)
          , te = q.useMemo(function() {
            return {
                registerSubPopup: function(ot, Kt) {
                    K.current[ot] = Kt,
                    ae == null || ae.registerSubPopup(ot, Kt)
                }
            }
        }, [ae])
          , L = X8()
          , W = q.useState(null)
          , ne = qe(W, 2)
          , le = ne[0]
          , he = ne[1]
          , ve = Ti(function(Pe) {
            fh(Pe) && le !== Pe && he(Pe),
            ae == null || ae.registerSubPopup(L, Pe)
        })
          , we = q.useState(null)
          , ye = qe(we, 2)
          , Ce = ye[0]
          , ge = ye[1]
          , We = Ti(function(Pe) {
            fh(Pe) && Ce !== Pe && ge(Pe)
        })
          , He = q.Children.only(o)
          , $e = (He == null ? void 0 : He.props) || {}
          , Ge = {}
          , St = Ti(function(Pe) {
            var ot, Kt, yr = Ce;
            return (yr == null ? void 0 : yr.contains(Pe)) || ((ot = Gy(yr)) === null || ot === void 0 ? void 0 : ot.host) === Pe || Pe === yr || (le == null ? void 0 : le.contains(Pe)) || ((Kt = Gy(le)) === null || Kt === void 0 ? void 0 : Kt.host) === Pe || Pe === le || Object.values(K.current).some(function(ar) {
                return (ar == null ? void 0 : ar.contains(Pe)) || Pe === ar
            })
        })
          , U = W_(i, re, ue, ce)
          , X = W_(i, se, me, oe)
          , de = q.useState(v || !1)
          , Ae = qe(de, 2)
          , ze = Ae[0]
          , Oe = Ae[1]
          , Xe = d ?? ze
          , qr = Ti(function(Pe) {
            d === void 0 && Oe(Pe)
        });
        ba(function() {
            Oe(d || !1)
        }, [d]);
        var Mr = q.useRef(Xe);
        Mr.current = Xe;
        var Qn = Ti(function(Pe) {
            Gc.flushSync(function() {
                Xe !== Pe && (qr(Pe),
                h == null || h(Pe))
            })
        })
          , pi = q.useRef()
          , _n = function() {
            clearTimeout(pi.current)
        }
          , Vr = function(ot) {
            var Kt = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
            _n(),
            Kt === 0 ? Qn(ot) : pi.current = setTimeout(function() {
                Qn(ot)
            }, Kt * 1e3)
        };
        q.useEffect(function() {
            return _n
        }, []);
        var bn = q.useState(!1)
          , yi = qe(bn, 2)
          , wa = yi[0]
          , wi = yi[1];
        ba(function(Pe) {
            (!Pe || Xe) && wi(!0)
        }, [Xe]);
        var gi = q.useState(null)
          , Zn = qe(gi, 2)
          , ga = Zn[0]
          , Cn = Zn[1]
          , Ut = q.useState([0, 0])
          , ht = qe(Ut, 2)
          , et = ht[0]
          , Ht = ht[1]
          , wt = function(ot) {
            Ht([ot.clientX, ot.clientY])
        }
          , Da = i7(Xe, le, Y ? et : Ce, R, M, N, Z)
          , Xt = qe(Da, 11)
          , xr = Xt[0]
          , Qa = Xt[1]
          , Ji = Xt[2]
          , _i = Xt[3]
          , $r = Xt[4]
          , mt = Xt[5]
          , pr = Xt[6]
          , xu = Xt[7]
          , Za = Xt[8]
          , Ua = Xt[9]
          , Ko = Xt[10]
          , Qo = t7(P, l, u, c)
          , Ki = qe(Qo, 2)
          , Qi = Ki[0]
          , Zo = Ki[1]
          , $s = Qi.has("click")
          , zs = Zo.has("click") || Zo.has("contextMenu")
          , bi = Ti(function() {
            wa || Ko()
        })
          , gf = function() {
            Mr.current && Y && zs && Vr(!1)
        };
        o7(Xe, Ce, le, bi, gf),
        ba(function() {
            bi()
        }, [et, R]),
        ba(function() {
            Xe && !(M != null && M[R]) && bi()
        }, [JSON.stringify(N)]);
        var hd = q.useMemo(function() {
            var Pe = n7(M, i, Ua, Y);
            return sa(Pe, V == null ? void 0 : V(Ua))
        }, [Ua, V, M, i, Y]);
        q.useImperativeHandle(a, function() {
            return {
                forceAlign: bi
            }
        });
        var _f = q.useState(0)
          , md = qe(_f, 2)
          , bf = md[0]
          , Cf = md[1]
          , Sf = q.useState(0)
          , fd = qe(Sf, 2)
          , xf = fd[0]
          , Af = fd[1]
          , pd = function() {
            if (D && Ce) {
                var ot = Ce.getBoundingClientRect();
                Cf(ot.width),
                Af(ot.height)
            }
        }
          , Ef = function() {
            pd(),
            bi()
        }
          , kf = function(ot) {
            wi(!1),
            Ko(),
            p == null || p(ot)
        }
          , l0 = function() {
            return new Promise(function(ot) {
                pd(),
                Cn(function() {
                    return ot
                })
            }
            )
        };
        ba(function() {
            ga && (Ko(),
            ga(),
            Cn(null))
        }, [ga]);
        function Xo(Pe, ot, Kt, yr) {
            Ge[Pe] = function(ar) {
                var wd;
                yr == null || yr(ar),
                Vr(ot, Kt);
                for (var If = arguments.length, u0 = new Array(If > 1 ? If - 1 : 0), gd = 1; gd < If; gd++)
                    u0[gd - 1] = arguments[gd];
                (wd = $e[Pe]) === null || wd === void 0 || wd.call.apply(wd, [$e, ar].concat(u0))
            }
        }
        ($s || zs) && (Ge.onClick = function(Pe) {
            var ot;
            Mr.current && zs ? Vr(!1) : !Mr.current && $s && (wt(Pe),
            Vr(!0));
            for (var Kt = arguments.length, yr = new Array(Kt > 1 ? Kt - 1 : 0), ar = 1; ar < Kt; ar++)
                yr[ar - 1] = arguments[ar];
            (ot = $e.onClick) === null || ot === void 0 || ot.call.apply(ot, [$e, Pe].concat(yr))
        }
        ),
        l7(Xe, zs, Ce, le, w, b, St, Vr);
        var Fa = Qi.has("hover"), Au = Zo.has("hover"), Gs, Zi;
        Fa && (Xo("onMouseEnter", !0, f, function(Pe) {
            wt(Pe)
        }),
        Xo("onPointerEnter", !0, f, function(Pe) {
            wt(Pe)
        }),
        Gs = function() {
            (Xe || wa) && Vr(!0, f)
        }
        ,
        Y && (Ge.onMouseMove = function(Pe) {
            var ot;
            (ot = $e.onMouseMove) === null || ot === void 0 || ot.call($e, Pe)
        }
        )),
        Au && (Xo("onMouseLeave", !1, y),
        Xo("onPointerLeave", !1, y),
        Zi = function() {
            Vr(!1, y)
        }
        ),
        Qi.has("focus") && Xo("onFocus", !0, g),
        Zo.has("focus") && Xo("onBlur", !1, m),
        Qi.has("contextMenu") && (Ge.onContextMenu = function(Pe) {
            var ot;
            Mr.current && Zo.has("contextMenu") ? Vr(!1) : (wt(Pe),
            Vr(!0)),
            Pe.preventDefault();
            for (var Kt = arguments.length, yr = new Array(Kt > 1 ? Kt - 1 : 0), ar = 1; ar < Kt; ar++)
                yr[ar - 1] = arguments[ar];
            (ot = $e.onContextMenu) === null || ot === void 0 || ot.call.apply(ot, [$e, Pe].concat(yr))
        }
        ),
        xe && (Ge.className = sa($e.className, xe));
        var Xi = _e(_e({}, $e), Ge)
          , Eu = {}
          , yd = ["onContextMenu", "onClick", "onMouseDown", "onTouchStart", "onMouseEnter", "onMouseLeave", "onFocus", "onBlur"];
        yd.forEach(function(Pe) {
            be[Pe] && (Eu[Pe] = function() {
                for (var ot, Kt = arguments.length, yr = new Array(Kt), ar = 0; ar < Kt; ar++)
                    yr[ar] = arguments[ar];
                (ot = Xi[Pe]) === null || ot === void 0 || ot.call.apply(ot, [Xi].concat(yr)),
                be[Pe].apply(be, yr)
            }
            )
        });
        var Tf = q.cloneElement(He, _e(_e({}, Xi), Eu))
          , Nf = {
            x: mt,
            y: pr
        }
          , Mf = ie ? _e({}, ie !== !0 ? ie : {}) : null;
        return q.createElement(q.Fragment, null, q.createElement(Rg, {
            disabled: !Xe,
            ref: We,
            onResize: Ef
        }, q.createElement(D7, {
            getTriggerDOMNode: pe
        }, Tf)), q.createElement(j_.Provider, {
            value: te
        }, q.createElement(I7, {
            portal: e,
            ref: ve,
            prefixCls: i,
            popup: I,
            className: sa(T, hd),
            style: F,
            target: Ce,
            onMouseEnter: Gs,
            onMouseLeave: Zi,
            onPointerEnter: Gs,
            zIndex: B,
            open: Xe,
            keepDom: wa,
            fresh: J,
            onClick: G,
            mask: w,
            motion: U,
            maskMotion: X,
            onVisibleChanged: kf,
            onPrepare: l0,
            forceRender: E,
            autoDestroy: H,
            getPopupContainer: x,
            align: Ua,
            arrow: Mf,
            arrowPos: Nf,
            ready: xr,
            offsetX: Qa,
            offsetY: Ji,
            offsetR: _i,
            offsetB: $r,
            onAlign: bi,
            stretch: D,
            targetWidth: bf / xu,
            targetHeight: xf / Za
        })))
    });
    return t
}
const O7 = F7(L3);
var Ys = {
    shiftX: 64,
    adjustY: 1
}
  , Js = {
    adjustX: 1,
    shiftY: !0
}
  , Xa = [0, 0]
  , P7 = {
    left: {
        points: ["cr", "cl"],
        overflow: Js,
        offset: [-4, 0],
        targetOffset: Xa
    },
    right: {
        points: ["cl", "cr"],
        overflow: Js,
        offset: [4, 0],
        targetOffset: Xa
    },
    top: {
        points: ["bc", "tc"],
        overflow: Ys,
        offset: [0, -4],
        targetOffset: Xa
    },
    bottom: {
        points: ["tc", "bc"],
        overflow: Ys,
        offset: [0, 4],
        targetOffset: Xa
    },
    topLeft: {
        points: ["bl", "tl"],
        overflow: Ys,
        offset: [0, -4],
        targetOffset: Xa
    },
    leftTop: {
        points: ["tr", "tl"],
        overflow: Js,
        offset: [-4, 0],
        targetOffset: Xa
    },
    topRight: {
        points: ["br", "tr"],
        overflow: Ys,
        offset: [0, -4],
        targetOffset: Xa
    },
    rightTop: {
        points: ["tl", "tr"],
        overflow: Js,
        offset: [4, 0],
        targetOffset: Xa
    },
    bottomRight: {
        points: ["tr", "br"],
        overflow: Ys,
        offset: [0, 4],
        targetOffset: Xa
    },
    rightBottom: {
        points: ["bl", "br"],
        overflow: Js,
        offset: [4, 0],
        targetOffset: Xa
    },
    bottomLeft: {
        points: ["tl", "bl"],
        overflow: Ys,
        offset: [0, 4],
        targetOffset: Xa
    },
    leftBottom: {
        points: ["br", "bl"],
        overflow: Js,
        offset: [-4, 0],
        targetOffset: Xa
    }
}
  , B7 = ["overlayClassName", "trigger", "mouseEnterDelay", "mouseLeaveDelay", "overlayStyle", "prefixCls", "children", "onVisibleChange", "afterVisibleChange", "transitionName", "animation", "motion", "placement", "align", "destroyTooltipOnHide", "defaultVisible", "getTooltipContainer", "overlayInnerStyle", "arrowContent", "overlay", "id", "showArrow"]
  , R7 = function(t, r) {
    var a = t.overlayClassName
      , n = t.trigger
      , i = n === void 0 ? ["hover"] : n
      , o = t.mouseEnterDelay
      , s = o === void 0 ? 0 : o
      , l = t.mouseLeaveDelay
      , u = l === void 0 ? .1 : l
      , c = t.overlayStyle
      , d = t.prefixCls
      , v = d === void 0 ? "rc-tooltip" : d
      , h = t.children
      , p = t.onVisibleChange
      , f = t.afterVisibleChange
      , _ = t.transitionName
      , y = t.animation
      , g = t.motion
      , m = t.placement
      , w = m === void 0 ? "right" : m
      , C = t.align
      , b = C === void 0 ? {} : C
      , x = t.destroyTooltipOnHide
      , E = x === void 0 ? !1 : x
      , k = t.defaultVisible
      , A = t.getTooltipContainer
      , I = t.overlayInnerStyle;
    t.arrowContent;
    var T = t.overlay
      , F = t.id
      , R = t.showArrow
      , O = R === void 0 ? !0 : R
      , M = Zr(t, B7)
      , N = q.useRef(null);
    q.useImperativeHandle(r, function() {
        return N.current
    });
    var B = _e({}, M);
    "visible"in t && (B.popupVisible = t.visible);
    var D = function() {
        return q.createElement(GD, {
            key: "content",
            prefixCls: v,
            id: F,
            overlayInnerStyle: I
        }, T)
    };
    return q.createElement(O7, Ie({
        popupClassName: a,
        prefixCls: v,
        popup: D,
        action: i,
        builtinPlacements: P7,
        popupPlacement: w,
        ref: N,
        popupAlign: b,
        getPopupContainer: A,
        onPopupVisibleChange: p,
        afterPopupVisibleChange: f,
        popupTransitionName: _,
        popupAnimation: y,
        popupMotion: g,
        defaultPopupVisible: k,
        autoDestroy: E,
        mouseLeaveDelay: u,
        popupStyle: c,
        mouseEnterDelay: s,
        arrow: O
    }, B), h)
};
const iA = q.forwardRef(R7);
var $g = {};
Object.defineProperty($g, "__esModule", {
    value: !0
});
var Ic = $g.default = void 0
  , oA = function(t) {
    return +setTimeout(t, 16)
}
  , sA = function(t) {
    return clearTimeout(t)
};
typeof window < "u" && "requestAnimationFrame"in window && (oA = function(t) {
    return window.requestAnimationFrame(t)
}
,
sA = function(t) {
    return window.cancelAnimationFrame(t)
}
);
var n1 = 0
  , zg = new Map;
function lA(e) {
    zg.delete(e)
}
var uA = function(t) {
    var r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
    n1 += 1;
    var a = n1;
    function n(i) {
        if (i === 0)
            lA(a),
            t();
        else {
            var o = oA(function() {
                n(i - 1)
            });
            zg.set(a, o)
        }
    }
    return n(r),
    a
};
uA.cancel = function(e) {
    var t = zg.get(e);
    return lA(t),
    sA(t)
}
;
var L7 = uA;
Ic = $g.default = L7;
function As({children: e, anchorText: t}) {
    const [r,a] = q.useState(!1)
      , n = q.useRef()
      , i = q.useRef();
    function o() {
        Ic.cancel(i.current)
    }
    function s() {
        i.current = Ic( () => {
            var d;
            (d = n.current) == null || d.forceAlign()
        }
        )
    }
    q.useEffect( () => {
        r ? s() : o()
    }
    , [r]);
    const l = () => a(!0)
      , u = () => a(!1)
      , c = d => {
        ["Space", "Enter"].includes(d.code) && (d.preventDefault(),
        a(h => !h))
    }
    ;
    return S.jsxs("span", {
        className: "custom-tooltip__anchor-text",
        children: [t, S.jsx(iA, {
            overlayInnerStyle: {
                minHeight: "auto",
                width: "241px"
            },
            overlay: e,
            placement: "bottom",
            visible: r,
            ref: n,
            overlayClassName: "custom-tooltip",
            children: S.jsxs("svg", {
                tabIndex: 0,
                className: "custom-tooltip__svg",
                xmlns: "http://www.w3.org/2000/svg",
                width: "20",
                height: "20",
                viewBox: "0 0 20 20",
                fill: "none",
                onMouseOver: l,
                onMouseOut: u,
                onKeyDown: c,
                children: [S.jsx("g", {
                    "clip-path": "url(#clip0_1870_8863)",
                    children: S.jsx("path", {
                        d: "M10 0C4.47715 0 0 4.47715 0 10C0 15.5228 4.47715 20 10 20C15.5228 20 20 15.5228 20 10C19.9939 4.4797 15.5203 0.00613936 10 0ZM10 18C5.58172 18 2 14.4183 2 10C2 5.58172 5.58172 2 10 2C14.4183 2 18 5.58172 18 10C17.9949 14.4162 14.4162 17.9949 10 18ZM10 9.5C9.44771 9.5 9 9.94771 9 10.5V13.5C9 14.0523 9.44771 14.5 10 14.5C10.5523 14.5 11 14.0523 11 13.5V10.5C11 9.94771 10.5523 9.5 10 9.5ZM10 5.5C9.30964 5.5 8.75 6.05964 8.75 6.75C8.75 7.44036 9.30964 8 10 8C10.6904 8 11.25 7.44036 11.25 6.75C11.25 6.05964 10.6904 5.5 10 5.5Z",
                        fill: "#01326B"
                    })
                }), S.jsx("defs", {
                    children: S.jsx("clipPath", {
                        id: "clip0_1870_8863",
                        children: S.jsx("rect", {
                            width: "20",
                            height: "20",
                            fill: "white"
                        })
                    })
                })]
            })
        })]
    })
}
function Yc(e) {
    const {
        type: t, label: r, 
        name: a, value: n, options: i, inputMode: o, placeholder: s, maxLength: l, 
        message: u, isRequired: c, onFocus: d, onBlur: v, onChange: h, isValid: p, tooltipText: f} = e
      , _ = m => {
        const w = i != null && i.rawValueTrimPrefix ? m.target.rawValue : m.target.value;
        d && d(w)
    }
      , y = m => {
        const w = i != null && i.rawValueTrimPrefix ? m.target.rawValue : m.target.value;
        v && v(w)
    }
      , g = m => {
        const w = i != null && i.rawValueTrimPrefix ? m.target.rawValue : m.target.value;
        h && h(w)
    }
    ;
    return S.jsxs("div", {
        className: `form-field form-field__text-input${p ? "" : " form-field__error"}`,
        children: [S.jsxs("label", {
            className: "form-field__label-container",
            children: [S.jsx("p", {
                className: "form-field__label",
                children: r
            }), S.jsx("div", {
                className: "form-field__text-input-button-container",
                children: S.jsxs("div", {
                    className: `form-field__text-input-container${f ? " form-field__text-input-container--has-tooltip" : ""}`,
                    children: [i ? S.jsx(LD, {
                        type: t,
                        name: a,
                        value: n,
                        options: i,
                        inputMode: o,
                        placeholder: s,
                        maxLength: l,
                        isRequired: c,
                        onFocus: _,
                        onBlur: y,
                        onChange: g,
                        className: "form-field__input",
                        "aria-required": c,
                        "aria-describedby": u,
                        "aria-labelledby": r,
                        tabIndex: 0
                    }) : S.jsx("input", {
                        type: t,
                        name: a,
                        value: n,
                        options: i,
                        inputMode: o,
                        placeholder: s,
                        maxLength: l,
                        isRequired: c,
                        onFocus: _,
                        onBlur: y,
                        onChange: g,
                        className: "form-field__input",
                        "aria-required": c,
                        "aria-describedby": u,
                        "aria-labelledby": r,
                        tabIndex: 0
                    }), !!f && S.jsx(As, {
                        children: S.jsx("p", {
                            className: "p-xsmall",
                            children: f
                        })
                    })]
                })
            })]
        }), !!u && S.jsx("p", {
            className: "form-field__message",
            children: u
        })]
    })
}
function Es(e) {
    this._maxSize = e,
    this.clear()
}
Es.prototype.clear = function() {
    this._size = 0,
    this._values = Object.create(null)
}
;
Es.prototype.get = function(e) {
    return this._values[e]
}
;
Es.prototype.set = function(e, t) {
    return this._size >= this._maxSize && this.clear(),
    e in this._values || this._size++,
    this._values[e] = t
}
;
var q7 = /[^.^\]^[]+|(?=\[\]|\.\.)/g
  , cA = /^\d+$/
  , V7 = /^\d/
  , $7 = /[~`!#$%\^&*+=\-\[\]\\';,/{}|\\":<>\?]/g
  , z7 = /^\s*(['"]?)(.*?)(\1)\s*$/
  , Gg = 512
  , i1 = new Es(Gg)
  , o1 = new Es(Gg)
  , s1 = new Es(Gg)
  , dA = {
    Cache: Es,
    split: Ky,
    normalizePath: dp,
    setter: function(e) {
        var t = dp(e);
        return o1.get(e) || o1.set(e, function(a, n) {
            for (var i = 0, o = t.length, s = a; i < o - 1; ) {
                var l = t[i];
                if (l === "__proto__" || l === "constructor" || l === "prototype")
                    return a;
                s = s[t[i++]]
            }
            s[t[i]] = n
        })
    },
    getter: function(e, t) {
        var r = dp(e);
        return s1.get(e) || s1.set(e, function(n) {
            for (var i = 0, o = r.length; i < o; )
                if (n != null || !t)
                    n = n[r[i++]];
                else
                    return;
            return n
        })
    },
    join: function(e) {
        return e.reduce(function(t, r) {
            return t + (jg(r) || cA.test(r) ? "[" + r + "]" : (t ? "." : "") + r)
        }, "")
    },
    forEach: function(e, t, r) {
        G7(Array.isArray(e) ? e : Ky(e), t, r)
    }
};
function dp(e) {
    return i1.get(e) || i1.set(e, Ky(e).map(function(t) {
        return t.replace(z7, "$2")
    }))
}
function Ky(e) {
    return e.match(q7) || [""]
}
function G7(e, t, r) {
    var a = e.length, n, i, o, s;
    for (i = 0; i < a; i++)
        n = e[i],
        n && (W7(n) && (n = '"' + n + '"'),
        s = jg(n),
        o = !s && /^\d+$/.test(n),
        t.call(r, n, s, o, i, e))
}
function jg(e) {
    return typeof e == "string" && e && ["'", '"'].indexOf(e.charAt(0)) !== -1
}
function j7(e) {
    return e.match(V7) && !e.match(cA)
}
function H7(e) {
    return $7.test(e)
}
function W7(e) {
    return !jg(e) && (j7(e) || H7(e))
}
var vA = {
    exports: {}
};
vA.exports = function(e) {
    return hA(Y7(e), e)
}
;
vA.exports.array = hA;
function hA(e, t) {
    var r = e.length
      , a = new Array(r)
      , n = {}
      , i = r
      , o = J7(t)
      , s = K7(e);
    for (t.forEach(function(u) {
        if (!s.has(u[0]) || !s.has(u[1]))
            throw new Error("Unknown node. There is an unknown node in the supplied edges.")
    }); i--; )
        n[i] || l(e[i], i, new Set);
    return a;
    function l(u, c, d) {
        if (d.has(u)) {
            var v;
            try {
                v = ", node was:" + JSON.stringify(u)
            } catch {
                v = ""
            }
            throw new Error("Cyclic dependency" + v)
        }
        if (!s.has(u))
            throw new Error("Found unknown node. Make sure to provided all involved nodes. Unknown node: " + JSON.stringify(u));
        if (!n[c]) {
            n[c] = !0;
            var h = o.get(u) || new Set;
            if (h = Array.from(h),
            c = h.length) {
                d.add(u);
                do {
                    var p = h[--c];
                    l(p, s.get(p), d)
                } while (c);
                d.delete(u)
            }
            a[--r] = u
        }
    }
}
function Y7(e) {
    for (var t = new Set, r = 0, a = e.length; r < a; r++) {
        var n = e[r];
        t.add(n[0]),
        t.add(n[1])
    }
    return Array.from(t)
}
function J7(e) {
    for (var t = new Map, r = 0, a = e.length; r < a; r++) {
        var n = e[r];
        t.has(n[0]) || t.set(n[0], new Set),
        t.has(n[1]) || t.set(n[1], new Set),
        t.get(n[0]).add(n[1])
    }
    return t
}
function K7(e) {
    for (var t = new Map, r = 0, a = e.length; r < a; r++)
        t.set(e[r], r);
    return t
}
const Q7 = Object.prototype.toString
  , Z7 = Error.prototype.toString
  , X7 = RegExp.prototype.toString
  , eU = typeof Symbol < "u" ? Symbol.prototype.toString : () => ""
  , tU = /^Symbol\((.*)\)(.*)$/;
function rU(e) {
    return e != +e ? "NaN" : e === 0 && 1 / e < 0 ? "-0" : "" + e
}
function l1(e, t=!1) {
    if (e == null || e === !0 || e === !1)
        return "" + e;
    const r = typeof e;
    if (r === "number")
        return rU(e);
    if (r === "string")
        return t ? `"${e}"` : e;
    if (r === "function")
        return "[Function " + (e.name || "anonymous") + "]";
    if (r === "symbol")
        return eU.call(e).replace(tU, "Symbol($1)");
    const a = Q7.call(e).slice(8, -1);
    return a === "Date" ? isNaN(e.getTime()) ? "" + e : e.toISOString(e) : a === "Error" || e instanceof Error ? "[" + Z7.call(e) + "]" : a === "RegExp" ? X7.call(e) : null
}
function No(e, t) {
    let r = l1(e, t);
    return r !== null ? r : JSON.stringify(e, function(a, n) {
        let i = l1(this[a], t);
        return i !== null ? i : n
    }, 2)
}
function mA(e) {
    return e == null ? [] : [].concat(e)
}
let fA, aU = /\$\{\s*(\w+)\s*\}/g;
fA = Symbol.toStringTag;
class Ca extends Error {
    static formatError(t, r) {
        const a = r.label || r.path || "this";
        return a !== r.path && (r = Object.assign({}, r, {
            path: a
        })),
        typeof t == "string" ? t.replace(aU, (n, i) => No(r[i])) : typeof t == "function" ? t(r) : t
    }
    static isError(t) {
        return t && t.name === "ValidationError"
    }
    constructor(t, r, a, n, i) {
        super(),
        this.value = void 0,
        this.path = void 0,
        this.type = void 0,
        this.errors = void 0,
        this.params = void 0,
        this.inner = void 0,
        this[fA] = "Error",
        this.name = "ValidationError",
        this.value = r,
        this.path = a,
        this.type = n,
        this.errors = [],
        this.inner = [],
        mA(t).forEach(o => {
            if (Ca.isError(o)) {
                this.errors.push(...o.errors);
                const s = o.inner.length ? o.inner : [o];
                this.inner.push(...s)
            } else
                this.errors.push(o)
        }
        ),
        this.message = this.errors.length > 1 ? `${this.errors.length} errors occurred` : this.errors[0],
        !i && Error.captureStackTrace && Error.captureStackTrace(this, Ca)
    }
}
let ti = {
    default: "${path} is invalid",
    required: "${path} is a required field",
    defined: "${path} must be defined",
    notNull: "${path} cannot be null",
    oneOf: "${path} must be one of the following values: ${values}",
    notOneOf: "${path} must not be one of the following values: ${values}",
    notType: ({path: e, type: t, value: r, originalValue: a}) => {
        const n = a != null && a !== r ? ` (cast from the value \`${No(a, !0)}\`).` : ".";
        return t !== "mixed" ? `${e} must be a \`${t}\` type, but the final value was: \`${No(r, !0)}\`` + n : `${e} must match the configured type. The validated value was: \`${No(r, !0)}\`` + n
    }
}
  , En = {
    length: "${path} must be exactly ${length} characters",
    min: "${path} must be at least ${min} characters",
    max: "${path} must be at most ${max} characters",
    matches: '${path} must match the following: "${regex}"',
    email: "${path} must be a valid email",
    url: "${path} must be a valid URL",
    uuid: "${path} must be a valid UUID",
    trim: "${path} must be a trimmed string",
    lowercase: "${path} must be a lowercase string",
    uppercase: "${path} must be a upper case string"
}
  , nU = {
    min: "${path} must be greater than or equal to ${min}",
    max: "${path} must be less than or equal to ${max}",
    lessThan: "${path} must be less than ${less}",
    moreThan: "${path} must be greater than ${more}",
    positive: "${path} must be a positive number",
    negative: "${path} must be a negative number",
    integer: "${path} must be an integer"
}
  , Qy = {
    min: "${path} field must be later than ${min}",
    max: "${path} field must be at earlier than ${max}"
}
  , iU = {
    isValue: "${path} field must be ${value}"
}
  , oU = {
    noUnknown: "${path} field has unspecified keys: ${unknown}"
}
  , sU = {
    min: "${path} field must have at least ${min} items",
    max: "${path} field must have less than or equal to ${max} items",
    length: "${path} must have ${length} items"
}
  , lU = {
    notType: e => {
        const {path: t, value: r, spec: a} = e
          , n = a.types.length;
        if (Array.isArray(r)) {
            if (r.length < n)
                return `${t} tuple value has too few items, expected a length of ${n} but got ${r.length} for value: \`${No(r, !0)}\``;
            if (r.length > n)
                return `${t} tuple value has too many items, expected a length of ${n} but got ${r.length} for value: \`${No(r, !0)}\``
        }
        return Ca.formatError(ti.notType, e)
    }
};
Object.assign(Object.create(null), {
    mixed: ti,
    string: En,
    number: nU,
    date: Qy,
    object: oU,
    array: sU,
    boolean: iU,
    tuple: lU
});
const pA = e => e && e.__isYupSchema__;
class gh {
    static fromOptions(t, r) {
        if (!r.then && !r.otherwise)
            throw new TypeError("either `then:` or `otherwise:` is required for `when()` conditions");
        let {is: a, then: n, otherwise: i} = r
          , o = typeof a == "function" ? a : (...s) => s.every(l => l === a);
        return new gh(t, (s, l) => {
            var u;
            let c = o(...s) ? n : i;
            return (u = c == null ? void 0 : c(l)) != null ? u : l
        }
        )
    }
    constructor(t, r) {
        this.fn = void 0,
        this.refs = t,
        this.refs = t,
        this.fn = r
    }
    resolve(t, r) {
        let a = this.refs.map(i => i.getValue(r == null ? void 0 : r.value, r == null ? void 0 : r.parent, r == null ? void 0 : r.context))
          , n = this.fn(a, t, r);
        if (n === void 0 || n === t)
            return t;
        if (!pA(n))
            throw new TypeError("conditions must return a schema object");
        return n.resolve(r)
    }
}
const Vd = {
    context: "$",
    value: "."
};
class Jc {
    constructor(t, r={}) {
        if (this.key = void 0,
        this.isContext = void 0,
        this.isValue = void 0,
        this.isSibling = void 0,
        this.path = void 0,
        this.getter = void 0,
        this.map = void 0,
        typeof t != "string")
            throw new TypeError("ref must be a string, got: " + t);
        if (this.key = t.trim(),
        t === "")
            throw new TypeError("ref must be a non-empty string");
        this.isContext = this.key[0] === Vd.context,
        this.isValue = this.key[0] === Vd.value,
        this.isSibling = !this.isContext && !this.isValue;
        let a = this.isContext ? Vd.context : this.isValue ? Vd.value : "";
        this.path = this.key.slice(a.length),
        this.getter = this.path && dA.getter(this.path, !0),
        this.map = r.map
    }
    getValue(t, r, a) {
        let n = this.isContext ? a : this.isValue ? t : r;
        return this.getter && (n = this.getter(n || {})),
        this.map && (n = this.map(n)),
        n
    }
    cast(t, r) {
        return this.getValue(t, r == null ? void 0 : r.parent, r == null ? void 0 : r.context)
    }
    resolve() {
        return this
    }
    describe() {
        return {
            type: "ref",
            key: this.key
        }
    }
    toString() {
        return `Ref(${this.key})`
    }
    static isRef(t) {
        return t && t.__isYupRef
    }
}
Jc.prototype.__isYupRef = !0;
const cs = e => e == null;
function Ks(e) {
    function t({value: r, path: a="", options: n, originalValue: i, schema: o}, s, l) {
        const {name: u, test: c, params: d, message: v, skipAbsent: h} = e;
        let {parent: p, context: f, abortEarly: _=o.spec.abortEarly, disableStackTrace: y=o.spec.disableStackTrace} = n;
        function g(I) {
            return Jc.isRef(I) ? I.getValue(r, p, f) : I
        }
        function m(I={}) {
            var T;
            const F = Object.assign({
                value: r,
                originalValue: i,
                label: o.spec.label,
                path: I.path || a,
                spec: o.spec
            }, d, I.params);
            for (const O of Object.keys(F))
                F[O] = g(F[O]);
            const R = new Ca(Ca.formatError(I.message || v, F),r,F.path,I.type || u,(T = I.disableStackTrace) != null ? T : y);
            return R.params = F,
            R
        }
        const w = _ ? s : l;
        let C = {
            path: a,
            parent: p,
            type: u,
            from: n.from,
            createError: m,
            resolve: g,
            options: n,
            originalValue: i,
            schema: o
        };
        const b = I => {
            Ca.isError(I) ? w(I) : I ? l(null) : w(m())
        }
          , x = I => {
            Ca.isError(I) ? w(I) : s(I)
        }
        ;
        if (h && cs(r))
            return b(!0);
        let k;
        try {
            var A;
            if (k = c.call(C, r, C),
            typeof ((A = k) == null ? void 0 : A.then) == "function") {
                if (n.sync)
                    throw new Error(`Validation test of type: "${C.type}" returned a Promise during a synchronous validate. This test will finish after the validate call has returned`);
                return Promise.resolve(k).then(b, x)
            }
        } catch (I) {
            x(I);
            return
        }
        b(k)
    }
    return t.OPTIONS = e,
    t
}
function uU(e, t, r, a=r) {
    let n, i, o;
    return t ? (dA.forEach(t, (s, l, u) => {
        let c = l ? s.slice(1, s.length - 1) : s;
        e = e.resolve({
            context: a,
            parent: n,
            value: r
        });
        let d = e.type === "tuple"
          , v = u ? parseInt(c, 10) : 0;
        if (e.innerType || d) {
            if (d && !u)
                throw new Error(`Yup.reach cannot implicitly index into a tuple type. the path part "${o}" must contain an index to the tuple element, e.g. "${o}[0]"`);
            if (r && v >= r.length)
                throw new Error(`Yup.reach cannot resolve an array item at index: ${s}, in the path: ${t}. because there is no value at that index. `);
            n = r,
            r = r && r[v],
            e = d ? e.spec.types[v] : e.innerType
        }
        if (!u) {
            if (!e.fields || !e.fields[c])
                throw new Error(`The schema does not contain the path: ${t}. (failed at: ${o} which is a type: "${e.type}")`);
            n = r,
            r = r && r[c],
            e = e.fields[c]
        }
        i = c,
        o = l ? "[" + s + "]" : "." + s
    }
    ),
    {
        schema: e,
        parent: n,
        parentPath: i
    }) : {
        parent: n,
        parentPath: t,
        schema: e
    }
}
class _h extends Set {
    describe() {
        const t = [];
        for (const r of this.values())
            t.push(Jc.isRef(r) ? r.describe() : r);
        return t
    }
    resolveAll(t) {
        let r = [];
        for (const a of this.values())
            r.push(t(a));
        return r
    }
    clone() {
        return new _h(this.values())
    }
    merge(t, r) {
        const a = this.clone();
        return t.forEach(n => a.add(n)),
        r.forEach(n => a.delete(n)),
        a
    }
}
function gl(e, t=new Map) {
    if (pA(e) || !e || typeof e != "object")
        return e;
    if (t.has(e))
        return t.get(e);
    let r;
    if (e instanceof Date)
        r = new Date(e.getTime()),
        t.set(e, r);
    else if (e instanceof RegExp)
        r = new RegExp(e),
        t.set(e, r);
    else if (Array.isArray(e)) {
        r = new Array(e.length),
        t.set(e, r);
        for (let a = 0; a < e.length; a++)
            r[a] = gl(e[a], t)
    } else if (e instanceof Map) {
        r = new Map,
        t.set(e, r);
        for (const [a,n] of e.entries())
            r.set(a, gl(n, t))
    } else if (e instanceof Set) {
        r = new Set,
        t.set(e, r);
        for (const a of e)
            r.add(gl(a, t))
    } else if (e instanceof Object) {
        r = {},
        t.set(e, r);
        for (const [a,n] of Object.entries(e))
            r[a] = gl(n, t)
    } else
        throw Error(`Unable to clone ${e}`);
    return r
}
class Do {
    constructor(t) {
        this.type = void 0,
        this.deps = [],
        this.tests = void 0,
        this.transforms = void 0,
        this.conditions = [],
        this._mutate = void 0,
        this.internalTests = {},
        this._whitelist = new _h,
        this._blacklist = new _h,
        this.exclusiveTests = Object.create(null),
        this._typeCheck = void 0,
        this.spec = void 0,
        this.tests = [],
        this.transforms = [],
        this.withMutation( () => {
            this.typeError(ti.notType)
        }
        ),
        this.type = t.type,
        this._typeCheck = t.check,
        this.spec = Object.assign({
            strip: !1,
            strict: !1,
            abortEarly: !0,
            recursive: !0,
            disableStackTrace: !1,
            nullable: !1,
            optional: !0,
            coerce: !0
        }, t == null ? void 0 : t.spec),
        this.withMutation(r => {
            r.nonNullable()
        }
        )
    }
    get _type() {
        return this.type
    }
    clone(t) {
        if (this._mutate)
            return t && Object.assign(this.spec, t),
            this;
        const r = Object.create(Object.getPrototypeOf(this));
        return r.type = this.type,
        r._typeCheck = this._typeCheck,
        r._whitelist = this._whitelist.clone(),
        r._blacklist = this._blacklist.clone(),
        r.internalTests = Object.assign({}, this.internalTests),
        r.exclusiveTests = Object.assign({}, this.exclusiveTests),
        r.deps = [...this.deps],
        r.conditions = [...this.conditions],
        r.tests = [...this.tests],
        r.transforms = [...this.transforms],
        r.spec = gl(Object.assign({}, this.spec, t)),
        r
    }
    label(t) {
        let r = this.clone();
        return r.spec.label = t,
        r
    }
    meta(...t) {
        if (t.length === 0)
            return this.spec.meta;
        let r = this.clone();
        return r.spec.meta = Object.assign(r.spec.meta || {}, t[0]),
        r
    }
    withMutation(t) {
        let r = this._mutate;
        this._mutate = !0;
        let a = t(this);
        return this._mutate = r,
        a
    }
    concat(t) {
        if (!t || t === this)
            return this;
        if (t.type !== this.type && this.type !== "mixed")
            throw new TypeError(`You cannot \`concat()\` schema's of different types: ${this.type} and ${t.type}`);
        let r = this
          , a = t.clone();
        const n = Object.assign({}, r.spec, a.spec);
        return a.spec = n,
        a.internalTests = Object.assign({}, r.internalTests, a.internalTests),
        a._whitelist = r._whitelist.merge(t._whitelist, t._blacklist),
        a._blacklist = r._blacklist.merge(t._blacklist, t._whitelist),
        a.tests = r.tests,
        a.exclusiveTests = r.exclusiveTests,
        a.withMutation(i => {
            t.tests.forEach(o => {
                i.test(o.OPTIONS)
            }
            )
        }
        ),
        a.transforms = [...r.transforms, ...a.transforms],
        a
    }
    isType(t) {
        return t == null ? !!(this.spec.nullable && t === null || this.spec.optional && t === void 0) : this._typeCheck(t)
    }
    resolve(t) {
        let r = this;
        if (r.conditions.length) {
            let a = r.conditions;
            r = r.clone(),
            r.conditions = [],
            r = a.reduce( (n, i) => i.resolve(n, t), r),
            r = r.resolve(t)
        }
        return r
    }
    resolveOptions(t) {
        var r, a, n, i;
        return Object.assign({}, t, {
            from: t.from || [],
            strict: (r = t.strict) != null ? r : this.spec.strict,
            abortEarly: (a = t.abortEarly) != null ? a : this.spec.abortEarly,
            recursive: (n = t.recursive) != null ? n : this.spec.recursive,
            disableStackTrace: (i = t.disableStackTrace) != null ? i : this.spec.disableStackTrace
        })
    }
    cast(t, r={}) {
        let a = this.resolve(Object.assign({
            value: t
        }, r))
          , n = r.assert === "ignore-optionality"
          , i = a._cast(t, r);
        if (r.assert !== !1 && !a.isType(i)) {
            if (n && cs(i))
                return i;
            let o = No(t)
              , s = No(i);
            throw new TypeError(`The value of ${r.path || "field"} could not be cast to a value that satisfies the schema type: "${a.type}". 

attempted value: ${o} 
` + (s !== o ? `result of cast: ${s}` : ""))
        }
        return i
    }
    _cast(t, r) {
        let a = t === void 0 ? t : this.transforms.reduce( (n, i) => i.call(this, n, t, this), t);
        return a === void 0 && (a = this.getDefault(r)),
        a
    }
    _validate(t, r={}, a, n) {
        let {path: i, originalValue: o=t, strict: s=this.spec.strict} = r
          , l = t;
        s || (l = this._cast(l, Object.assign({
            assert: !1
        }, r)));
        let u = [];
        for (let c of Object.values(this.internalTests))
            c && u.push(c);
        this.runTests({
            path: i,
            value: l,
            originalValue: o,
            options: r,
            tests: u
        }, a, c => {
            if (c.length)
                return n(c, l);
            this.runTests({
                path: i,
                value: l,
                originalValue: o,
                options: r,
                tests: this.tests
            }, a, n)
        }
        )
    }
    runTests(t, r, a) {
        let n = !1
          , {tests: i, value: o, originalValue: s, path: l, options: u} = t
          , c = f => {
            n || (n = !0,
            r(f, o))
        }
          , d = f => {
            n || (n = !0,
            a(f, o))
        }
          , v = i.length
          , h = [];
        if (!v)
            return d([]);
        let p = {
            value: o,
            originalValue: s,
            path: l,
            options: u,
            schema: this
        };
        for (let f = 0; f < i.length; f++) {
            const _ = i[f];
            _(p, c, function(g) {
                g && (Array.isArray(g) ? h.push(...g) : h.push(g)),
                --v <= 0 && d(h)
            })
        }
    }
    asNestedTest({key: t, index: r, parent: a, parentPath: n, originalParent: i, options: o}) {
        const s = t ?? r;
        if (s == null)
            throw TypeError("Must include `key` or `index` for nested validations");
        const l = typeof s == "number";
        let u = a[s];
        const c = Object.assign({}, o, {
            strict: !0,
            parent: a,
            value: u,
            originalValue: i[s],
            key: void 0,
            [l ? "index" : "key"]: s,
            path: l || s.includes(".") ? `${n || ""}[${u ? s : `"${s}"`}]` : (n ? `${n}.` : "") + t
        });
        return (d, v, h) => this.resolve(c)._validate(u, c, v, h)
    }
    validate(t, r) {
        var a;
        let n = this.resolve(Object.assign({}, r, {
            value: t
        }))
          , i = (a = r == null ? void 0 : r.disableStackTrace) != null ? a : n.spec.disableStackTrace;
        return new Promise( (o, s) => n._validate(t, r, (l, u) => {
            Ca.isError(l) && (l.value = u),
            s(l)
        }
        , (l, u) => {
            l.length ? s(new Ca(l,u,void 0,void 0,i)) : o(u)
        }
        ))
    }
    validateSync(t, r) {
        var a;
        let n = this.resolve(Object.assign({}, r, {
            value: t
        })), i, o = (a = r == null ? void 0 : r.disableStackTrace) != null ? a : n.spec.disableStackTrace;
        return n._validate(t, Object.assign({}, r, {
            sync: !0
        }), (s, l) => {
            throw Ca.isError(s) && (s.value = l),
            s
        }
        , (s, l) => {
            if (s.length)
                throw new Ca(s,t,void 0,void 0,o);
            i = l
        }
        ),
        i
    }
    isValid(t, r) {
        return this.validate(t, r).then( () => !0, a => {
            if (Ca.isError(a))
                return !1;
            throw a
        }
        )
    }
    isValidSync(t, r) {
        try {
            return this.validateSync(t, r),
            !0
        } catch (a) {
            if (Ca.isError(a))
                return !1;
            throw a
        }
    }
    _getDefault(t) {
        let r = this.spec.default;
        return r == null ? r : typeof r == "function" ? r.call(this, t) : gl(r)
    }
    getDefault(t) {
        return this.resolve(t || {})._getDefault(t)
    }
    default(t) {
        return arguments.length === 0 ? this._getDefault() : this.clone({
            default: t
        })
    }
    strict(t=!0) {
        return this.clone({
            strict: t
        })
    }
    nullability(t, r) {
        const a = this.clone({
            nullable: t
        });
        return a.internalTests.nullable = Ks({
            message: r,
            name: "nullable",
            test(n) {
                return n === null ? this.schema.spec.nullable : !0
            }
        }),
        a
    }
    optionality(t, r) {
        const a = this.clone({
            optional: t
        });
        return a.internalTests.optionality = Ks({
            message: r,
            name: "optionality",
            test(n) {
                return n === void 0 ? this.schema.spec.optional : !0
            }
        }),
        a
    }
    optional() {
        return this.optionality(!0)
    }
    defined(t=ti.defined) {
        return this.optionality(!1, t)
    }
    nullable() {
        return this.nullability(!0)
    }
    nonNullable(t=ti.notNull) {
        return this.nullability(!1, t)
    }
    required(t=ti.required) {
        return this.clone().withMutation(r => r.nonNullable(t).defined(t))
    }
    notRequired() {
        return this.clone().withMutation(t => t.nullable().optional())
    }
    transform(t) {
        let r = this.clone();
        return r.transforms.push(t),
        r
    }
    test(...t) {
        let r;
        if (t.length === 1 ? typeof t[0] == "function" ? r = {
            test: t[0]
        } : r = t[0] : t.length === 2 ? r = {
            name: t[0],
            test: t[1]
        } : r = {
            name: t[0],
            message: t[1],
            test: t[2]
        },
        r.message === void 0 && (r.message = ti.default),
        typeof r.test != "function")
            throw new TypeError("`test` is a required parameters");
        let a = this.clone()
          , n = Ks(r)
          , i = r.exclusive || r.name && a.exclusiveTests[r.name] === !0;
        if (r.exclusive && !r.name)
            throw new TypeError("Exclusive tests must provide a unique `name` identifying the test");
        return r.name && (a.exclusiveTests[r.name] = !!r.exclusive),
        a.tests = a.tests.filter(o => !(o.OPTIONS.name === r.name && (i || o.OPTIONS.test === n.OPTIONS.test))),
        a.tests.push(n),
        a
    }
    when(t, r) {
        !Array.isArray(t) && typeof t != "string" && (r = t,
        t = ".");
        let a = this.clone()
          , n = mA(t).map(i => new Jc(i));
        return n.forEach(i => {
            i.isSibling && a.deps.push(i.key)
        }
        ),
        a.conditions.push(typeof r == "function" ? new gh(n,r) : gh.fromOptions(n, r)),
        a
    }
    typeError(t) {
        let r = this.clone();
        return r.internalTests.typeError = Ks({
            message: t,
            name: "typeError",
            skipAbsent: !0,
            test(a) {
                return this.schema._typeCheck(a) ? !0 : this.createError({
                    params: {
                        type: this.schema.type
                    }
                })
            }
        }),
        r
    }
    oneOf(t, r=ti.oneOf) {
        let a = this.clone();
        return t.forEach(n => {
            a._whitelist.add(n),
            a._blacklist.delete(n)
        }
        ),
        a.internalTests.whiteList = Ks({
            message: r,
            name: "oneOf",
            skipAbsent: !0,
            test(n) {
                let i = this.schema._whitelist
                  , o = i.resolveAll(this.resolve);
                return o.includes(n) ? !0 : this.createError({
                    params: {
                        values: Array.from(i).join(", "),
                        resolved: o
                    }
                })
            }
        }),
        a
    }
    notOneOf(t, r=ti.notOneOf) {
        let a = this.clone();
        return t.forEach(n => {
            a._blacklist.add(n),
            a._whitelist.delete(n)
        }
        ),
        a.internalTests.blacklist = Ks({
            message: r,
            name: "notOneOf",
            test(n) {
                let i = this.schema._blacklist
                  , o = i.resolveAll(this.resolve);
                return o.includes(n) ? this.createError({
                    params: {
                        values: Array.from(i).join(", "),
                        resolved: o
                    }
                }) : !0
            }
        }),
        a
    }
    strip(t=!0) {
        let r = this.clone();
        return r.spec.strip = t,
        r
    }
    describe(t) {
        const r = (t ? this.resolve(t) : this).clone()
          , {label: a, meta: n, optional: i, nullable: o} = r.spec;
        return {
            meta: n,
            label: a,
            optional: i,
            nullable: o,
            default: r.getDefault(t),
            type: r.type,
            oneOf: r._whitelist.describe(),
            notOneOf: r._blacklist.describe(),
            tests: r.tests.map(l => ({
                name: l.OPTIONS.name,
                params: l.OPTIONS.params
            })).filter( (l, u, c) => c.findIndex(d => d.name === l.name) === u)
        }
    }
}
Do.prototype.__isYupSchema__ = !0;
for (const e of ["validate", "validateSync"])
    Do.prototype[`${e}At`] = function(t, r, a={}) {
        const {parent: n, parentPath: i, schema: o} = uU(this, t, r, a.context);
        return o[e](n && n[i], Object.assign({}, a, {
            parent: n,
            path: t
        }))
    }
    ;
for (const e of ["equals", "is"])
    Do.prototype[e] = Do.prototype.oneOf;
for (const e of ["not", "nope"])
    Do.prototype[e] = Do.prototype.notOneOf;
let cU = /^[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/
  , dU = /^((https?|ftp):)?\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(\#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i
  , vU = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i
  , hU = e => cs(e) || e === e.trim()
  , mU = {}.toString();
function ks() {
    return new yA
}
class yA extends Do {
    constructor() {
        super({
            type: "string",
            check(t) {
                return t instanceof String && (t = t.valueOf()),
                typeof t == "string"
            }
        }),
        this.withMutation( () => {
            this.transform( (t, r, a) => {
                if (!a.spec.coerce || a.isType(t) || Array.isArray(t))
                    return t;
                const n = t != null && t.toString ? t.toString() : t;
                return n === mU ? t : n
            }
            )
        }
        )
    }
    required(t) {
        return super.required(t).withMutation(r => r.test({
            message: t || ti.required,
            name: "required",
            skipAbsent: !0,
            test: a => !!a.length
        }))
    }
    notRequired() {
        return super.notRequired().withMutation(t => (t.tests = t.tests.filter(r => r.OPTIONS.name !== "required"),
        t))
    }
    length(t, r=En.length) {
        return this.test({
            message: r,
            name: "length",
            exclusive: !0,
            params: {
                length: t
            },
            skipAbsent: !0,
            test(a) {
                return a.length === this.resolve(t)
            }
        })
    }
    min(t, r=En.min) {
        return this.test({
            message: r,
            name: "min",
            exclusive: !0,
            params: {
                min: t
            },
            skipAbsent: !0,
            test(a) {
                return a.length >= this.resolve(t)
            }
        })
    }
    max(t, r=En.max) {
        return this.test({
            name: "max",
            exclusive: !0,
            message: r,
            params: {
                max: t
            },
            skipAbsent: !0,
            test(a) {
                return a.length <= this.resolve(t)
            }
        })
    }
    matches(t, r) {
        let a = !1, n, i;
        return r && (typeof r == "object" ? {excludeEmptyString: a=!1, message: n, name: i} = r : n = r),
        this.test({
            name: i || "matches",
            message: n || En.matches,
            params: {
                regex: t
            },
            skipAbsent: !0,
            test: o => o === "" && a || o.search(t) !== -1
        })
    }
    email(t=En.email) {
        return this.matches(cU, {
            name: "email",
            message: t,
            excludeEmptyString: !0
        })
    }
    url(t=En.url) {
        return this.matches(dU, {
            name: "url",
            message: t,
            excludeEmptyString: !0
        })
    }
    uuid(t=En.uuid) {
        return this.matches(vU, {
            name: "uuid",
            message: t,
            excludeEmptyString: !1
        })
    }
    ensure() {
        return this.default("").transform(t => t === null ? "" : t)
    }
    trim(t=En.trim) {
        return this.transform(r => r != null ? r.trim() : r).test({
            message: t,
            name: "trim",
            test: hU
        })
    }
    lowercase(t=En.lowercase) {
        return this.transform(r => cs(r) ? r : r.toLowerCase()).test({
            message: t,
            name: "string_case",
            exclusive: !0,
            skipAbsent: !0,
            test: r => cs(r) || r === r.toLowerCase()
        })
    }
    uppercase(t=En.uppercase) {
        return this.transform(r => cs(r) ? r : r.toUpperCase()).test({
            message: t,
            name: "string_case",
            exclusive: !0,
            skipAbsent: !0,
            test: r => cs(r) || r === r.toUpperCase()
        })
    }
}
ks.prototype = yA.prototype;
const fU = /^(\d{4}|[+-]\d{6})(?:-?(\d{2})(?:-?(\d{2}))?)?(?:[ T]?(\d{2}):?(\d{2})(?::?(\d{2})(?:[,.](\d{1,}))?)?(?:(Z)|([+-])(\d{2})(?::?(\d{2}))?)?)?$/;
function Si(e, t=0) {
    return Number(e) || t
}
function pU(e) {
    const t = fU.exec(e);
    if (!t)
        return Date.parse ? Date.parse(e) : Number.NaN;
    const r = {
        year: Si(t[1]),
        month: Si(t[2], 1) - 1,
        day: Si(t[3], 1),
        hour: Si(t[4]),
        minute: Si(t[5]),
        second: Si(t[6]),
        millisecond: t[7] ? Si(t[7].substring(0, 3)) : 0,
        z: t[8] || void 0,
        plusMinus: t[9] || void 0,
        hourOffset: Si(t[10]),
        minuteOffset: Si(t[11])
    };
    if (r.z === void 0 && r.plusMinus === void 0)
        return new Date(r.year,r.month,r.day,r.hour,r.minute,r.second,r.millisecond).valueOf();
    let a = 0;
    return r.z !== "Z" && r.plusMinus !== void 0 && (a = r.hourOffset * 60 + r.minuteOffset,
    r.plusMinus === "+" && (a = 0 - a)),
    Date.UTC(r.year, r.month, r.day, r.hour, r.minute + a, r.second, r.millisecond)
}
let yU = new Date("")
  , wU = e => Object.prototype.toString.call(e) === "[object Date]";
class Hg extends Do {
    constructor() {
        super({
            type: "date",
            check(t) {
                return wU(t) && !isNaN(t.getTime())
            }
        }),
        this.withMutation( () => {
            this.transform( (t, r, a) => !a.spec.coerce || a.isType(t) || t === null ? t : (t = pU(t),
            isNaN(t) ? Hg.INVALID_DATE : new Date(t)))
        }
        )
    }
    prepareParam(t, r) {
        let a;
        if (Jc.isRef(t))
            a = t;
        else {
            let n = this.cast(t);
            if (!this._typeCheck(n))
                throw new TypeError(`\`${r}\` must be a Date or a value that can be \`cast()\` to a Date`);
            a = n
        }
        return a
    }
    min(t, r=Qy.min) {
        let a = this.prepareParam(t, "min");
        return this.test({
            message: r,
            name: "min",
            exclusive: !0,
            params: {
                min: t
            },
            skipAbsent: !0,
            test(n) {
                return n >= this.resolve(a)
            }
        })
    }
    max(t, r=Qy.max) {
        let a = this.prepareParam(t, "max");
        return this.test({
            message: r,
            name: "max",
            exclusive: !0,
            params: {
                max: t
            },
            skipAbsent: !0,
            test(n) {
                return n <= this.resolve(a)
            }
        })
    }
}
Hg.INVALID_DATE = yU;
class Ts extends Error {
}
class gU extends Ts {
    constructor(t) {
        super(`Invalid DateTime: ${t.toMessage()}`)
    }
}
class _U extends Ts {
    constructor(t) {
        super(`Invalid Interval: ${t.toMessage()}`)
    }
}
class bU extends Ts {
    constructor(t) {
        super(`Invalid Duration: ${t.toMessage()}`)
    }
}
class Yu extends Ts {
}
class wA extends Ts {
    constructor(t) {
        super(`Invalid unit ${t}`)
    }
}
class sn extends Ts {
}
class ro extends Ts {
    constructor() {
        super("Zone is an abstract class")
    }
}
const Me = "numeric"
  , $n = "short"
  , La = "long"
  , bh = {
    year: Me,
    month: Me,
    day: Me
}
  , gA = {
    year: Me,
    month: $n,
    day: Me
}
  , CU = {
    year: Me,
    month: $n,
    day: Me,
    weekday: $n
}
  , _A = {
    year: Me,
    month: La,
    day: Me
}
  , bA = {
    year: Me,
    month: La,
    day: Me,
    weekday: La
}
  , CA = {
    hour: Me,
    minute: Me
}
  , SA = {
    hour: Me,
    minute: Me,
    second: Me
}
  , xA = {
    hour: Me,
    minute: Me,
    second: Me,
    timeZoneName: $n
}
  , AA = {
    hour: Me,
    minute: Me,
    second: Me,
    timeZoneName: La
}
  , EA = {
    hour: Me,
    minute: Me,
    hourCycle: "h23"
}
  , kA = {
    hour: Me,
    minute: Me,
    second: Me,
    hourCycle: "h23"
}
  , TA = {
    hour: Me,
    minute: Me,
    second: Me,
    hourCycle: "h23",
    timeZoneName: $n
}
  , NA = {
    hour: Me,
    minute: Me,
    second: Me,
    hourCycle: "h23",
    timeZoneName: La
}
  , MA = {
    year: Me,
    month: Me,
    day: Me,
    hour: Me,
    minute: Me
}
  , IA = {
    year: Me,
    month: Me,
    day: Me,
    hour: Me,
    minute: Me,
    second: Me
}
  , DA = {
    year: Me,
    month: $n,
    day: Me,
    hour: Me,
    minute: Me
}
  , UA = {
    year: Me,
    month: $n,
    day: Me,
    hour: Me,
    minute: Me,
    second: Me
}
  , SU = {
    year: Me,
    month: $n,
    day: Me,
    weekday: $n,
    hour: Me,
    minute: Me
}
  , FA = {
    year: Me,
    month: La,
    day: Me,
    hour: Me,
    minute: Me,
    timeZoneName: $n
}
  , OA = {
    year: Me,
    month: La,
    day: Me,
    hour: Me,
    minute: Me,
    second: Me,
    timeZoneName: $n
}
  , PA = {
    year: Me,
    month: La,
    day: Me,
    weekday: La,
    hour: Me,
    minute: Me,
    timeZoneName: La
}
  , BA = {
    year: Me,
    month: La,
    day: Me,
    weekday: La,
    hour: Me,
    minute: Me,
    second: Me,
    timeZoneName: La
};
class Kc {
    get type() {
        throw new ro
    }
    get name() {
        throw new ro
    }
    get ianaName() {
        return this.name
    }
    get isUniversal() {
        throw new ro
    }
    offsetName(t, r) {
        throw new ro
    }
    formatOffset(t, r) {
        throw new ro
    }
    offset(t) {
        throw new ro
    }
    equals(t) {
        throw new ro
    }
    get isValid() {
        throw new ro
    }
}
let vp = null;
class Lm extends Kc {
    static get instance() {
        return vp === null && (vp = new Lm),
        vp
    }
    get type() {
        return "system"
    }
    get name() {
        return new Intl.DateTimeFormat().resolvedOptions().timeZone
    }
    get isUniversal() {
        return !1
    }
    offsetName(t, {format: r, locale: a}) {
        return LA(t, r, a)
    }
    formatOffset(t, r) {
        return cc(this.offset(t), r)
    }
    offset(t) {
        return -new Date(t).getTimezoneOffset()
    }
    equals(t) {
        return t.type === "system"
    }
    get isValid() {
        return !0
    }
}
let Uv = {};
function xU(e) {
    return Uv[e] || (Uv[e] = new Intl.DateTimeFormat("en-US",{
        hour12: !1,
        timeZone: e,
        year: "numeric",
        month: "2-digit",
        day: "2-digit",
        hour: "2-digit",
        minute: "2-digit",
        second: "2-digit",
        era: "short"
    })),
    Uv[e]
}
const AU = {
    year: 0,
    month: 1,
    day: 2,
    era: 3,
    hour: 4,
    minute: 5,
    second: 6
};
function EU(e, t) {
    const r = e.format(t).replace(/\u200E/g, "")
      , a = /(\d+)\/(\d+)\/(\d+) (AD|BC),? (\d+):(\d+):(\d+)/.exec(r)
      , [,n,i,o,s,l,u,c] = a;
    return [o, n, i, s, l, u, c]
}
function kU(e, t) {
    const r = e.formatToParts(t)
      , a = [];
    for (let n = 0; n < r.length; n++) {
        const {type: i, value: o} = r[n]
          , s = AU[i];
        i === "era" ? a[s] = o : Ct(s) || (a[s] = parseInt(o, 10))
    }
    return a
}
let $d = {};
class $i extends Kc {
    static create(t) {
        return $d[t] || ($d[t] = new $i(t)),
        $d[t]
    }
    static resetCache() {
        $d = {},
        Uv = {}
    }
    static isValidSpecifier(t) {
        return this.isValidZone(t)
    }
    static isValidZone(t) {
        if (!t)
            return !1;
        try {
            return new Intl.DateTimeFormat("en-US",{
                timeZone: t
            }).format(),
            !0
        } catch {
            return !1
        }
    }
    constructor(t) {
        super(),
        this.zoneName = t,
        this.valid = $i.isValidZone(t)
    }
    get type() {
        return "iana"
    }
    get name() {
        return this.zoneName
    }
    get isUniversal() {
        return !1
    }
    offsetName(t, {format: r, locale: a}) {
        return LA(t, r, a, this.name)
    }
    formatOffset(t, r) {
        return cc(this.offset(t), r)
    }
    offset(t) {
        const r = new Date(t);
        if (isNaN(r))
            return NaN;
        const a = xU(this.name);
        let[n,i,o,s,l,u,c] = a.formatToParts ? kU(a, r) : EU(a, r);
        s === "BC" && (n = -Math.abs(n) + 1);
        const v = Jg({
            year: n,
            month: i,
            day: o,
            hour: l === 24 ? 0 : l,
            minute: u,
            second: c,
            millisecond: 0
        });
        let h = +r;
        const p = h % 1e3;
        return h -= p >= 0 ? p : 1e3 + p,
        (v - h) / (60 * 1e3)
    }
    equals(t) {
        return t.type === "iana" && t.name === this.name
    }
    get isValid() {
        return this.valid
    }
}
let u1 = {};
function TU(e, t={}) {
    const r = JSON.stringify([e, t]);
    let a = u1[r];
    return a || (a = new Intl.ListFormat(e,t),
    u1[r] = a),
    a
}
let Zy = {};
function Xy(e, t={}) {
    const r = JSON.stringify([e, t]);
    let a = Zy[r];
    return a || (a = new Intl.DateTimeFormat(e,t),
    Zy[r] = a),
    a
}
let ew = {};
function NU(e, t={}) {
    const r = JSON.stringify([e, t]);
    let a = ew[r];
    return a || (a = new Intl.NumberFormat(e,t),
    ew[r] = a),
    a
}
let tw = {};
function MU(e, t={}) {
    const {base: r, ...a} = t
      , n = JSON.stringify([e, a]);
    let i = tw[n];
    return i || (i = new Intl.RelativeTimeFormat(e,t),
    tw[n] = i),
    i
}
let Ju = null;
function IU() {
    return Ju || (Ju = new Intl.DateTimeFormat().resolvedOptions().locale,
    Ju)
}
function DU(e) {
    const t = e.indexOf("-x-");
    t !== -1 && (e = e.substring(0, t));
    const r = e.indexOf("-u-");
    if (r === -1)
        return [e];
    {
        let a, n;
        try {
            a = Xy(e).resolvedOptions(),
            n = e
        } catch {
            const l = e.substring(0, r);
            a = Xy(l).resolvedOptions(),
            n = l
        }
        const {numberingSystem: i, calendar: o} = a;
        return [n, i, o]
    }
}
function UU(e, t, r) {
    return (r || t) && (e.includes("-u-") || (e += "-u"),
    r && (e += `-ca-${r}`),
    t && (e += `-nu-${t}`)),
    e
}
function FU(e) {
    const t = [];
    for (let r = 1; r <= 12; r++) {
        const a = tt.utc(2016, r, 1);
        t.push(e(a))
    }
    return t
}
function OU(e) {
    const t = [];
    for (let r = 1; r <= 7; r++) {
        const a = tt.utc(2016, 11, 13 + r);
        t.push(e(a))
    }
    return t
}
function zd(e, t, r, a, n) {
    const i = e.listingMode(r);
    return i === "error" ? null : i === "en" ? a(t) : n(t)
}
function PU(e) {
    return e.numberingSystem && e.numberingSystem !== "latn" ? !1 : e.numberingSystem === "latn" || !e.locale || e.locale.startsWith("en") || new Intl.DateTimeFormat(e.intl).resolvedOptions().numberingSystem === "latn"
}
class BU {
    constructor(t, r, a) {
        this.padTo = a.padTo || 0,
        this.floor = a.floor || !1;
        const {padTo: n, floor: i, ...o} = a;
        if (!r || Object.keys(o).length > 0) {
            const s = {
                useGrouping: !1,
                ...a
            };
            a.padTo > 0 && (s.minimumIntegerDigits = a.padTo),
            this.inf = NU(t, s)
        }
    }
    format(t) {
        if (this.inf) {
            const r = this.floor ? Math.floor(t) : t;
            return this.inf.format(r)
        } else {
            const r = this.floor ? Math.floor(t) : Yg(t, 3);
            return dr(r, this.padTo)
        }
    }
}
class RU {
    constructor(t, r, a) {
        this.opts = a,
        this.originalZone = void 0;
        let n;
        if (this.opts.timeZone)
            this.dt = t;
        else if (t.zone.type === "fixed") {
            const o = -1 * (t.offset / 60)
              , s = o >= 0 ? `Etc/GMT+${o}` : `Etc/GMT${o}`;
            t.offset !== 0 && $i.create(s).valid ? (n = s,
            this.dt = t) : (n = "UTC",
            this.dt = t.offset === 0 ? t : t.setZone("UTC").plus({
                minutes: t.offset
            }),
            this.originalZone = t.zone)
        } else
            t.zone.type === "system" ? this.dt = t : t.zone.type === "iana" ? (this.dt = t,
            n = t.zone.name) : (n = "UTC",
            this.dt = t.setZone("UTC").plus({
                minutes: t.offset
            }),
            this.originalZone = t.zone);
        const i = {
            ...this.opts
        };
        i.timeZone = i.timeZone || n,
        this.dtf = Xy(r, i)
    }
    format() {
        return this.originalZone ? this.formatToParts().map( ({value: t}) => t).join("") : this.dtf.format(this.dt.toJSDate())
    }
    formatToParts() {
        const t = this.dtf.formatToParts(this.dt.toJSDate());
        return this.originalZone ? t.map(r => {
            if (r.type === "timeZoneName") {
                const a = this.originalZone.offsetName(this.dt.ts, {
                    locale: this.dt.locale,
                    format: this.opts.timeZoneName
                });
                return {
                    ...r,
                    value: a
                }
            } else
                return r
        }
        ) : t
    }
    resolvedOptions() {
        return this.dtf.resolvedOptions()
    }
}
class LU {
    constructor(t, r, a) {
        this.opts = {
            style: "long",
            ...a
        },
        !r && RA() && (this.rtf = MU(t, a))
    }
    format(t, r) {
        return this.rtf ? this.rtf.format(t, r) : rF(r, t, this.opts.numeric, this.opts.style !== "long")
    }
    formatToParts(t, r) {
        return this.rtf ? this.rtf.formatToParts(t, r) : []
    }
}
class Yt {
    static fromOpts(t) {
        return Yt.create(t.locale, t.numberingSystem, t.outputCalendar, t.defaultToEN)
    }
    static create(t, r, a, n=!1) {
        const i = t || cr.defaultLocale
          , o = i || (n ? "en-US" : IU())
          , s = r || cr.defaultNumberingSystem
          , l = a || cr.defaultOutputCalendar;
        return new Yt(o,s,l,i)
    }
    static resetCache() {
        Ju = null,
        Zy = {},
        ew = {},
        tw = {}
    }
    static fromObject({locale: t, numberingSystem: r, outputCalendar: a}={}) {
        return Yt.create(t, r, a)
    }
    constructor(t, r, a, n) {
        const [i,o,s] = DU(t);
        this.locale = i,
        this.numberingSystem = r || o || null,
        this.outputCalendar = a || s || null,
        this.intl = UU(this.locale, this.numberingSystem, this.outputCalendar),
        this.weekdaysCache = {
            format: {},
            standalone: {}
        },
        this.monthsCache = {
            format: {},
            standalone: {}
        },
        this.meridiemCache = null,
        this.eraCache = {},
        this.specifiedLocale = n,
        this.fastNumbersCached = null
    }
    get fastNumbers() {
        return this.fastNumbersCached == null && (this.fastNumbersCached = PU(this)),
        this.fastNumbersCached
    }
    listingMode() {
        const t = this.isEnglish()
          , r = (this.numberingSystem === null || this.numberingSystem === "latn") && (this.outputCalendar === null || this.outputCalendar === "gregory");
        return t && r ? "en" : "intl"
    }
    clone(t) {
        return !t || Object.getOwnPropertyNames(t).length === 0 ? this : Yt.create(t.locale || this.specifiedLocale, t.numberingSystem || this.numberingSystem, t.outputCalendar || this.outputCalendar, t.defaultToEN || !1)
    }
    redefaultToEN(t={}) {
        return this.clone({
            ...t,
            defaultToEN: !0
        })
    }
    redefaultToSystem(t={}) {
        return this.clone({
            ...t,
            defaultToEN: !1
        })
    }
    months(t, r=!1, a=!0) {
        return zd(this, t, a, $A, () => {
            const n = r ? {
                month: t,
                day: "numeric"
            } : {
                month: t
            }
              , i = r ? "format" : "standalone";
            return this.monthsCache[i][t] || (this.monthsCache[i][t] = FU(o => this.extract(o, n, "month"))),
            this.monthsCache[i][t]
        }
        )
    }
    weekdays(t, r=!1, a=!0) {
        return zd(this, t, a, jA, () => {
            const n = r ? {
                weekday: t,
                year: "numeric",
                month: "long",
                day: "numeric"
            } : {
                weekday: t
            }
              , i = r ? "format" : "standalone";
            return this.weekdaysCache[i][t] || (this.weekdaysCache[i][t] = OU(o => this.extract(o, n, "weekday"))),
            this.weekdaysCache[i][t]
        }
        )
    }
    meridiems(t=!0) {
        return zd(this, void 0, t, () => HA, () => {
            if (!this.meridiemCache) {
                const r = {
                    hour: "numeric",
                    hourCycle: "h12"
                };
                this.meridiemCache = [tt.utc(2016, 11, 13, 9), tt.utc(2016, 11, 13, 19)].map(a => this.extract(a, r, "dayperiod"))
            }
            return this.meridiemCache
        }
        )
    }
    eras(t, r=!0) {
        return zd(this, t, r, WA, () => {
            const a = {
                era: t
            };
            return this.eraCache[t] || (this.eraCache[t] = [tt.utc(-40, 1, 1), tt.utc(2017, 1, 1)].map(n => this.extract(n, a, "era"))),
            this.eraCache[t]
        }
        )
    }
    extract(t, r, a) {
        const n = this.dtFormatter(t, r)
          , i = n.formatToParts()
          , o = i.find(s => s.type.toLowerCase() === a);
        return o ? o.value : null
    }
    numberFormatter(t={}) {
        return new BU(this.intl,t.forceSimple || this.fastNumbers,t)
    }
    dtFormatter(t, r={}) {
        return new RU(t,this.intl,r)
    }
    relFormatter(t={}) {
        return new LU(this.intl,this.isEnglish(),t)
    }
    listFormatter(t={}) {
        return TU(this.intl, t)
    }
    isEnglish() {
        return this.locale === "en" || this.locale.toLowerCase() === "en-us" || new Intl.DateTimeFormat(this.intl).resolvedOptions().locale.startsWith("en-us")
    }
    equals(t) {
        return this.locale === t.locale && this.numberingSystem === t.numberingSystem && this.outputCalendar === t.outputCalendar
    }
}
let hp = null;
class ia extends Kc {
    static get utcInstance() {
        return hp === null && (hp = new ia(0)),
        hp
    }
    static instance(t) {
        return t === 0 ? ia.utcInstance : new ia(t)
    }
    static parseSpecifier(t) {
        if (t) {
            const r = t.match(/^utc(?:([+-]\d{1,2})(?::(\d{2}))?)?$/i);
            if (r)
                return new ia(Vm(r[1], r[2]))
        }
        return null
    }
    constructor(t) {
        super(),
        this.fixed = t
    }
    get type() {
        return "fixed"
    }
    get name() {
        return this.fixed === 0 ? "UTC" : `UTC${cc(this.fixed, "narrow")}`
    }
    get ianaName() {
        return this.fixed === 0 ? "Etc/UTC" : `Etc/GMT${cc(-this.fixed, "narrow")}`
    }
    offsetName() {
        return this.name
    }
    formatOffset(t, r) {
        return cc(this.fixed, r)
    }
    get isUniversal() {
        return !0
    }
    offset() {
        return this.fixed
    }
    equals(t) {
        return t.type === "fixed" && t.fixed === this.fixed
    }
    get isValid() {
        return !0
    }
}
class qU extends Kc {
    constructor(t) {
        super(),
        this.zoneName = t
    }
    get type() {
        return "invalid"
    }
    get name() {
        return this.zoneName
    }
    get isUniversal() {
        return !1
    }
    offsetName() {
        return null
    }
    formatOffset() {
        return ""
    }
    offset() {
        return NaN
    }
    equals() {
        return !1
    }
    get isValid() {
        return !1
    }
}
function ho(e, t) {
    if (Ct(e) || e === null)
        return t;
    if (e instanceof Kc)
        return e;
    if (VU(e)) {
        const r = e.toLowerCase();
        return r === "default" ? t : r === "local" || r === "system" ? Lm.instance : r === "utc" || r === "gmt" ? ia.utcInstance : ia.parseSpecifier(r) || $i.create(e)
    } else
        return ms(e) ? ia.instance(e) : typeof e == "object" && e.offset && typeof e.offset == "number" ? e : new qU(e)
}
let c1 = () => Date.now(), d1 = "system", v1 = null, h1 = null, m1 = null, f1 = 60, p1;
class cr {
    static get now() {
        return c1
    }
    static set now(t) {
        c1 = t
    }
    static set defaultZone(t) {
        d1 = t
    }
    static get defaultZone() {
        return ho(d1, Lm.instance)
    }
    static get defaultLocale() {
        return v1
    }
    static set defaultLocale(t) {
        v1 = t
    }
    static get defaultNumberingSystem() {
        return h1
    }
    static set defaultNumberingSystem(t) {
        h1 = t
    }
    static get defaultOutputCalendar() {
        return m1
    }
    static set defaultOutputCalendar(t) {
        m1 = t
    }
    static get twoDigitCutoffYear() {
        return f1
    }
    static set twoDigitCutoffYear(t) {
        f1 = t % 100
    }
    static get throwOnInvalid() {
        return p1
    }
    static set throwOnInvalid(t) {
        p1 = t
    }
    static resetCaches() {
        Yt.resetCache(),
        $i.resetCache()
    }
}
function Ct(e) {
    return typeof e > "u"
}
function ms(e) {
    return typeof e == "number"
}
function qm(e) {
    return typeof e == "number" && e % 1 === 0
}
function VU(e) {
    return typeof e == "string"
}
function $U(e) {
    return Object.prototype.toString.call(e) === "[object Date]"
}
function RA() {
    try {
        return typeof Intl < "u" && !!Intl.RelativeTimeFormat
    } catch {
        return !1
    }
}
function zU(e) {
    return Array.isArray(e) ? e : [e]
}
function y1(e, t, r) {
    if (e.length !== 0)
        return e.reduce( (a, n) => {
            const i = [t(n), n];
            return a && r(a[0], i[0]) === a[0] ? a : i
        }
        , null)[1]
}
function GU(e, t) {
    return t.reduce( (r, a) => (r[a] = e[a],
    r), {})
}
function zl(e, t) {
    return Object.prototype.hasOwnProperty.call(e, t)
}
function Ii(e, t, r) {
    return qm(e) && e >= t && e <= r
}
function jU(e, t) {
    return e - t * Math.floor(e / t)
}
function dr(e, t=2) {
    const r = e < 0;
    let a;
    return r ? a = "-" + ("" + -e).padStart(t, "0") : a = ("" + e).padStart(t, "0"),
    a
}
function so(e) {
    if (!(Ct(e) || e === null || e === ""))
        return parseInt(e, 10)
}
function es(e) {
    if (!(Ct(e) || e === null || e === ""))
        return parseFloat(e)
}
function Wg(e) {
    if (!(Ct(e) || e === null || e === "")) {
        const t = parseFloat("0." + e) * 1e3;
        return Math.floor(t)
    }
}
function Yg(e, t, r=!1) {
    const a = 10 ** t;
    return (r ? Math.trunc : Math.round)(e * a) / a
}
function Qc(e) {
    return e % 4 === 0 && (e % 100 !== 0 || e % 400 === 0)
}
function uc(e) {
    return Qc(e) ? 366 : 365
}
function Ch(e, t) {
    const r = jU(t - 1, 12) + 1
      , a = e + (t - r) / 12;
    return r === 2 ? Qc(a) ? 29 : 28 : [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][r - 1]
}
function Jg(e) {
    let t = Date.UTC(e.year, e.month - 1, e.day, e.hour, e.minute, e.second, e.millisecond);
    return e.year < 100 && e.year >= 0 && (t = new Date(t),
    t.setUTCFullYear(e.year, e.month - 1, e.day)),
    +t
}
function Sh(e) {
    const t = (e + Math.floor(e / 4) - Math.floor(e / 100) + Math.floor(e / 400)) % 7
      , r = e - 1
      , a = (r + Math.floor(r / 4) - Math.floor(r / 100) + Math.floor(r / 400)) % 7;
    return t === 4 || a === 3 ? 53 : 52
}
function rw(e) {
    return e > 99 ? e : e > cr.twoDigitCutoffYear ? 1900 + e : 2e3 + e
}
function LA(e, t, r, a=null) {
    const n = new Date(e)
      , i = {
        hourCycle: "h23",
        year: "numeric",
        month: "2-digit",
        day: "2-digit",
        hour: "2-digit",
        minute: "2-digit"
    };
    a && (i.timeZone = a);
    const o = {
        timeZoneName: t,
        ...i
    }
      , s = new Intl.DateTimeFormat(r,o).formatToParts(n).find(l => l.type.toLowerCase() === "timezonename");
    return s ? s.value : null
}
function Vm(e, t) {
    let r = parseInt(e, 10);
    Number.isNaN(r) && (r = 0);
    const a = parseInt(t, 10) || 0
      , n = r < 0 || Object.is(r, -0) ? -a : a;
    return r * 60 + n
}
function qA(e) {
    const t = Number(e);
    if (typeof e == "boolean" || e === "" || Number.isNaN(t))
        throw new sn(`Invalid unit value ${e}`);
    return t
}
function xh(e, t) {
    const r = {};
    for (const a in e)
        if (zl(e, a)) {
            const n = e[a];
            if (n == null)
                continue;
            r[t(a)] = qA(n)
        }
    return r
}
function cc(e, t) {
    const r = Math.trunc(Math.abs(e / 60))
      , a = Math.trunc(Math.abs(e % 60))
      , n = e >= 0 ? "+" : "-";
    switch (t) {
    case "short":
        return `${n}${dr(r, 2)}:${dr(a, 2)}`;
    case "narrow":
        return `${n}${r}${a > 0 ? `:${a}` : ""}`;
    case "techie":
        return `${n}${dr(r, 2)}${dr(a, 2)}`;
    default:
        throw new RangeError(`Value format ${t} is out of range for property format`)
    }
}
function $m(e) {
    return GU(e, ["hour", "minute", "second", "millisecond"])
}
const HU = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
  , VA = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
  , WU = ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"];
function $A(e) {
    switch (e) {
    case "narrow":
        return [...WU];
    case "short":
        return [...VA];
    case "long":
        return [...HU];
    case "numeric":
        return ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"];
    case "2-digit":
        return ["01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12"];
    default:
        return null
    }
}
const zA = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"]
  , GA = ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"]
  , YU = ["M", "T", "W", "T", "F", "S", "S"];
function jA(e) {
    switch (e) {
    case "narrow":
        return [...YU];
    case "short":
        return [...GA];
    case "long":
        return [...zA];
    case "numeric":
        return ["1", "2", "3", "4", "5", "6", "7"];
    default:
        return null
    }
}
const HA = ["AM", "PM"]
  , JU = ["Before Christ", "Anno Domini"]
  , KU = ["BC", "AD"]
  , QU = ["B", "A"];
function WA(e) {
    switch (e) {
    case "narrow":
        return [...QU];
    case "short":
        return [...KU];
    case "long":
        return [...JU];
    default:
        return null
    }
}
function ZU(e) {
    return HA[e.hour < 12 ? 0 : 1]
}
function XU(e, t) {
    return jA(t)[e.weekday - 1]
}
function eF(e, t) {
    return $A(t)[e.month - 1]
}
function tF(e, t) {
    return WA(t)[e.year < 0 ? 0 : 1]
}
function rF(e, t, r="always", a=!1) {
    const n = {
        years: ["year", "yr."],
        quarters: ["quarter", "qtr."],
        months: ["month", "mo."],
        weeks: ["week", "wk."],
        days: ["day", "day", "days"],
        hours: ["hour", "hr."],
        minutes: ["minute", "min."],
        seconds: ["second", "sec."]
    }
      , i = ["hours", "minutes", "seconds"].indexOf(e) === -1;
    if (r === "auto" && i) {
        const d = e === "days";
        switch (t) {
        case 1:
            return d ? "tomorrow" : `next ${n[e][0]}`;
        case -1:
            return d ? "yesterday" : `last ${n[e][0]}`;
        case 0:
            return d ? "today" : `this ${n[e][0]}`
        }
    }
    const o = Object.is(t, -0) || t < 0
      , s = Math.abs(t)
      , l = s === 1
      , u = n[e]
      , c = a ? l ? u[1] : u[2] || u[1] : l ? n[e][0] : e;
    return o ? `${s} ${c} ago` : `in ${s} ${c}`
}
function w1(e, t) {
    let r = "";
    for (const a of e)
        a.literal ? r += a.val : r += t(a.val);
    return r
}
const aF = {
    D: bh,
    DD: gA,
    DDD: _A,
    DDDD: bA,
    t: CA,
    tt: SA,
    ttt: xA,
    tttt: AA,
    T: EA,
    TT: kA,
    TTT: TA,
    TTTT: NA,
    f: MA,
    ff: DA,
    fff: FA,
    ffff: PA,
    F: IA,
    FF: UA,
    FFF: OA,
    FFFF: BA
};
class Yr {
    static create(t, r={}) {
        return new Yr(t,r)
    }
    static parseFormat(t) {
        let r = null
          , a = ""
          , n = !1;
        const i = [];
        for (let o = 0; o < t.length; o++) {
            const s = t.charAt(o);
            s === "'" ? (a.length > 0 && i.push({
                literal: n || /^\s+$/.test(a),
                val: a
            }),
            r = null,
            a = "",
            n = !n) : n || s === r ? a += s : (a.length > 0 && i.push({
                literal: /^\s+$/.test(a),
                val: a
            }),
            a = s,
            r = s)
        }
        return a.length > 0 && i.push({
            literal: n || /^\s+$/.test(a),
            val: a
        }),
        i
    }
    static macroTokenToFormatOpts(t) {
        return aF[t]
    }
    constructor(t, r) {
        this.opts = r,
        this.loc = t,
        this.systemLoc = null
    }
    formatWithSystemDefault(t, r) {
        return this.systemLoc === null && (this.systemLoc = this.loc.redefaultToSystem()),
        this.systemLoc.dtFormatter(t, {
            ...this.opts,
            ...r
        }).format()
    }
    formatDateTime(t, r={}) {
        return this.loc.dtFormatter(t, {
            ...this.opts,
            ...r
        }).format()
    }
    formatDateTimeParts(t, r={}) {
        return this.loc.dtFormatter(t, {
            ...this.opts,
            ...r
        }).formatToParts()
    }
    formatInterval(t, r={}) {
        return this.loc.dtFormatter(t.start, {
            ...this.opts,
            ...r
        }).dtf.formatRange(t.start.toJSDate(), t.end.toJSDate())
    }
    resolvedOptions(t, r={}) {
        return this.loc.dtFormatter(t, {
            ...this.opts,
            ...r
        }).resolvedOptions()
    }
    num(t, r=0) {
        if (this.opts.forceSimple)
            return dr(t, r);
        const a = {
            ...this.opts
        };
        return r > 0 && (a.padTo = r),
        this.loc.numberFormatter(a).format(t)
    }
    formatDateTimeFromString(t, r) {
        const a = this.loc.listingMode() === "en"
          , n = this.loc.outputCalendar && this.loc.outputCalendar !== "gregory"
          , i = (h, p) => this.loc.extract(t, h, p)
          , o = h => t.isOffsetFixed && t.offset === 0 && h.allowZ ? "Z" : t.isValid ? t.zone.formatOffset(t.ts, h.format) : ""
          , s = () => a ? ZU(t) : i({
            hour: "numeric",
            hourCycle: "h12"
        }, "dayperiod")
          , l = (h, p) => a ? eF(t, h) : i(p ? {
            month: h
        } : {
            month: h,
            day: "numeric"
        }, "month")
          , u = (h, p) => a ? XU(t, h) : i(p ? {
            weekday: h
        } : {
            weekday: h,
            month: "long",
            day: "numeric"
        }, "weekday")
          , c = h => {
            const p = Yr.macroTokenToFormatOpts(h);
            return p ? this.formatWithSystemDefault(t, p) : h
        }
          , d = h => a ? tF(t, h) : i({
            era: h
        }, "era")
          , v = h => {
            switch (h) {
            case "S":
                return this.num(t.millisecond);
            case "u":
            case "SSS":
                return this.num(t.millisecond, 3);
            case "s":
                return this.num(t.second);
            case "ss":
                return this.num(t.second, 2);
            case "uu":
                return this.num(Math.floor(t.millisecond / 10), 2);
            case "uuu":
                return this.num(Math.floor(t.millisecond / 100));
            case "m":
                return this.num(t.minute);
            case "mm":
                return this.num(t.minute, 2);
            case "h":
                return this.num(t.hour % 12 === 0 ? 12 : t.hour % 12);
            case "hh":
                return this.num(t.hour % 12 === 0 ? 12 : t.hour % 12, 2);
            case "H":
                return this.num(t.hour);
            case "HH":
                return this.num(t.hour, 2);
            case "Z":
                return o({
                    format: "narrow",
                    allowZ: this.opts.allowZ
                });
            case "ZZ":
                return o({
                    format: "short",
                    allowZ: this.opts.allowZ
                });
            case "ZZZ":
                return o({
                    format: "techie",
                    allowZ: this.opts.allowZ
                });
            case "ZZZZ":
                return t.zone.offsetName(t.ts, {
                    format: "short",
                    locale: this.loc.locale
                });
            case "ZZZZZ":
                return t.zone.offsetName(t.ts, {
                    format: "long",
                    locale: this.loc.locale
                });
            case "z":
                return t.zoneName;
            case "a":
                return s();
            case "d":
                return n ? i({
                    day: "numeric"
                }, "day") : this.num(t.day);
            case "dd":
                return n ? i({
                    day: "2-digit"
                }, "day") : this.num(t.day, 2);
            case "c":
                return this.num(t.weekday);
            case "ccc":
                return u("short", !0);
            case "cccc":
                return u("long", !0);
            case "ccccc":
                return u("narrow", !0);
            case "E":
                return this.num(t.weekday);
            case "EEE":
                return u("short", !1);
            case "EEEE":
                return u("long", !1);
            case "EEEEE":
                return u("narrow", !1);
            case "L":
                return n ? i({
                    month: "numeric",
                    day: "numeric"
                }, "month") : this.num(t.month);
            case "LL":
                return n ? i({
                    month: "2-digit",
                    day: "numeric"
                }, "month") : this.num(t.month, 2);
            case "LLL":
                return l("short", !0);
            case "LLLL":
                return l("long", !0);
            case "LLLLL":
                return l("narrow", !0);
            case "M":
                return n ? i({
                    month: "numeric"
                }, "month") : this.num(t.month);
            case "MM":
                return n ? i({
                    month: "2-digit"
                }, "month") : this.num(t.month, 2);
            case "MMM":
                return l("short", !1);
            case "MMMM":
                return l("long", !1);
            case "MMMMM":
                return l("narrow", !1);
            case "y":
                return n ? i({
                    year: "numeric"
                }, "year") : this.num(t.year);
            case "yy":
                return n ? i({
                    year: "2-digit"
                }, "year") : this.num(t.year.toString().slice(-2), 2);
            case "yyyy":
                return n ? i({
                    year: "numeric"
                }, "year") : this.num(t.year, 4);
            case "yyyyyy":
                return n ? i({
                    year: "numeric"
                }, "year") : this.num(t.year, 6);
            case "G":
                return d("short");
            case "GG":
                return d("long");
            case "GGGGG":
                return d("narrow");
            case "kk":
                return this.num(t.weekYear.toString().slice(-2), 2);
            case "kkkk":
                return this.num(t.weekYear, 4);
            case "W":
                return this.num(t.weekNumber);
            case "WW":
                return this.num(t.weekNumber, 2);
            case "o":
                return this.num(t.ordinal);
            case "ooo":
                return this.num(t.ordinal, 3);
            case "q":
                return this.num(t.quarter);
            case "qq":
                return this.num(t.quarter, 2);
            case "X":
                return this.num(Math.floor(t.ts / 1e3));
            case "x":
                return this.num(t.ts);
            default:
                return c(h)
            }
        }
        ;
        return w1(Yr.parseFormat(r), v)
    }
    formatDurationFromString(t, r) {
        const a = l => {
            switch (l[0]) {
            case "S":
                return "millisecond";
            case "s":
                return "second";
            case "m":
                return "minute";
            case "h":
                return "hour";
            case "d":
                return "day";
            case "w":
                return "week";
            case "M":
                return "month";
            case "y":
                return "year";
            default:
                return null
            }
        }
          , n = l => u => {
            const c = a(u);
            return c ? this.num(l.get(c), u.length) : u
        }
          , i = Yr.parseFormat(r)
          , o = i.reduce( (l, {literal: u, val: c}) => u ? l : l.concat(c), [])
          , s = t.shiftTo(...o.map(a).filter(l => l));
        return w1(i, n(s))
    }
}
class Fn {
    constructor(t, r) {
        this.reason = t,
        this.explanation = r
    }
    toMessage() {
        return this.explanation ? `${this.reason}: ${this.explanation}` : this.reason
    }
}
const YA = /[A-Za-z_+-]{1,256}(?::?\/[A-Za-z0-9_+-]{1,256}(?:\/[A-Za-z0-9_+-]{1,256})?)?/;
function nu(...e) {
    const t = e.reduce( (r, a) => r + a.source, "");
    return RegExp(`^${t}$`)
}
function iu(...e) {
    return t => e.reduce( ([r,a,n], i) => {
        const [o,s,l] = i(t, n);
        return [{
            ...r,
            ...o
        }, s || a, l]
    }
    , [{}, null, 1]).slice(0, 2)
}
function ou(e, ...t) {
    if (e == null)
        return [null, null];
    for (const [r,a] of t) {
        const n = r.exec(e);
        if (n)
            return a(n)
    }
    return [null, null]
}
function JA(...e) {
    return (t, r) => {
        const a = {};
        let n;
        for (n = 0; n < e.length; n++)
            a[e[n]] = so(t[r + n]);
        return [a, null, r + n]
    }
}
const KA = /(?:(Z)|([+-]\d\d)(?::?(\d\d))?)/
  , nF = `(?:${KA.source}?(?:\\[(${YA.source})\\])?)?`
  , Kg = /(\d\d)(?::?(\d\d)(?::?(\d\d)(?:[.,](\d{1,30}))?)?)?/
  , QA = RegExp(`${Kg.source}${nF}`)
  , Qg = RegExp(`(?:T${QA.source})?`)
  , iF = /([+-]\d{6}|\d{4})(?:-?(\d\d)(?:-?(\d\d))?)?/
  , oF = /(\d{4})-?W(\d\d)(?:-?(\d))?/
  , sF = /(\d{4})-?(\d{3})/
  , lF = JA("weekYear", "weekNumber", "weekDay")
  , uF = JA("year", "ordinal")
  , cF = /(\d{4})-(\d\d)-(\d\d)/
  , ZA = RegExp(`${Kg.source} ?(?:${KA.source}|(${YA.source}))?`)
  , dF = RegExp(`(?: ${ZA.source})?`);
function Ml(e, t, r) {
    const a = e[t];
    return Ct(a) ? r : so(a)
}
function vF(e, t) {
    return [{
        year: Ml(e, t),
        month: Ml(e, t + 1, 1),
        day: Ml(e, t + 2, 1)
    }, null, t + 3]
}
function su(e, t) {
    return [{
        hours: Ml(e, t, 0),
        minutes: Ml(e, t + 1, 0),
        seconds: Ml(e, t + 2, 0),
        milliseconds: Wg(e[t + 3])
    }, null, t + 4]
}
function Zc(e, t) {
    const r = !e[t] && !e[t + 1]
      , a = Vm(e[t + 1], e[t + 2])
      , n = r ? null : ia.instance(a);
    return [{}, n, t + 3]
}
function Xc(e, t) {
    const r = e[t] ? $i.create(e[t]) : null;
    return [{}, r, t + 1]
}
const hF = RegExp(`^T?${Kg.source}$`)
  , mF = /^-?P(?:(?:(-?\d{1,20}(?:\.\d{1,20})?)Y)?(?:(-?\d{1,20}(?:\.\d{1,20})?)M)?(?:(-?\d{1,20}(?:\.\d{1,20})?)W)?(?:(-?\d{1,20}(?:\.\d{1,20})?)D)?(?:T(?:(-?\d{1,20}(?:\.\d{1,20})?)H)?(?:(-?\d{1,20}(?:\.\d{1,20})?)M)?(?:(-?\d{1,20})(?:[.,](-?\d{1,20}))?S)?)?)$/;
function fF(e) {
    const [t,r,a,n,i,o,s,l,u] = e
      , c = t[0] === "-"
      , d = l && l[0] === "-"
      , v = (h, p=!1) => h !== void 0 && (p || h && c) ? -h : h;
    return [{
        years: v(es(r)),
        months: v(es(a)),
        weeks: v(es(n)),
        days: v(es(i)),
        hours: v(es(o)),
        minutes: v(es(s)),
        seconds: v(es(l), l === "-0"),
        milliseconds: v(Wg(u), d)
    }]
}
const pF = {
    GMT: 0,
    EDT: -4 * 60,
    EST: -5 * 60,
    CDT: -5 * 60,
    CST: -6 * 60,
    MDT: -6 * 60,
    MST: -7 * 60,
    PDT: -7 * 60,
    PST: -8 * 60
};
function Zg(e, t, r, a, n, i, o) {
    const s = {
        year: t.length === 2 ? rw(so(t)) : so(t),
        month: VA.indexOf(r) + 1,
        day: so(a),
        hour: so(n),
        minute: so(i)
    };
    return o && (s.second = so(o)),
    e && (s.weekday = e.length > 3 ? zA.indexOf(e) + 1 : GA.indexOf(e) + 1),
    s
}
const yF = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|(?:([+-]\d\d)(\d\d)))$/;
function wF(e) {
    const [,t,r,a,n,i,o,s,l,u,c,d] = e
      , v = Zg(t, n, a, r, i, o, s);
    let h;
    return l ? h = pF[l] : u ? h = 0 : h = Vm(c, d),
    [v, new ia(h)]
}
function gF(e) {
    return e.replace(/\([^()]*\)|[\n\t]/g, " ").replace(/(\s\s+)/g, " ").trim()
}
const _F = /^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), (\d\d) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\d{4}) (\d\d):(\d\d):(\d\d) GMT$/
  , bF = /^(Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday), (\d\d)-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-(\d\d) (\d\d):(\d\d):(\d\d) GMT$/
  , CF = /^(Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ( \d|\d\d) (\d\d):(\d\d):(\d\d) (\d{4})$/;
function g1(e) {
    const [,t,r,a,n,i,o,s] = e;
    return [Zg(t, n, a, r, i, o, s), ia.utcInstance]
}
function SF(e) {
    const [,t,r,a,n,i,o,s] = e;
    return [Zg(t, s, r, a, n, i, o), ia.utcInstance]
}
const xF = nu(iF, Qg)
  , AF = nu(oF, Qg)
  , EF = nu(sF, Qg)
  , kF = nu(QA)
  , XA = iu(vF, su, Zc, Xc)
  , TF = iu(lF, su, Zc, Xc)
  , NF = iu(uF, su, Zc, Xc)
  , MF = iu(su, Zc, Xc);
function IF(e) {
    return ou(e, [xF, XA], [AF, TF], [EF, NF], [kF, MF])
}
function DF(e) {
    return ou(gF(e), [yF, wF])
}
function UF(e) {
    return ou(e, [_F, g1], [bF, g1], [CF, SF])
}
function FF(e) {
    return ou(e, [mF, fF])
}
const OF = iu(su);
function PF(e) {
    return ou(e, [hF, OF])
}
const BF = nu(cF, dF)
  , RF = nu(ZA)
  , LF = iu(su, Zc, Xc);
function qF(e) {
    return ou(e, [BF, XA], [RF, LF])
}
const VF = "Invalid Duration"
  , eE = {
    weeks: {
        days: 7,
        hours: 7 * 24,
        minutes: 7 * 24 * 60,
        seconds: 7 * 24 * 60 * 60,
        milliseconds: 7 * 24 * 60 * 60 * 1e3
    },
    days: {
        hours: 24,
        minutes: 24 * 60,
        seconds: 24 * 60 * 60,
        milliseconds: 24 * 60 * 60 * 1e3
    },
    hours: {
        minutes: 60,
        seconds: 60 * 60,
        milliseconds: 60 * 60 * 1e3
    },
    minutes: {
        seconds: 60,
        milliseconds: 60 * 1e3
    },
    seconds: {
        milliseconds: 1e3
    }
}
  , $F = {
    years: {
        quarters: 4,
        months: 12,
        weeks: 52,
        days: 365,
        hours: 365 * 24,
        minutes: 365 * 24 * 60,
        seconds: 365 * 24 * 60 * 60,
        milliseconds: 365 * 24 * 60 * 60 * 1e3
    },
    quarters: {
        months: 3,
        weeks: 13,
        days: 91,
        hours: 91 * 24,
        minutes: 91 * 24 * 60,
        seconds: 91 * 24 * 60 * 60,
        milliseconds: 91 * 24 * 60 * 60 * 1e3
    },
    months: {
        weeks: 4,
        days: 30,
        hours: 30 * 24,
        minutes: 30 * 24 * 60,
        seconds: 30 * 24 * 60 * 60,
        milliseconds: 30 * 24 * 60 * 60 * 1e3
    },
    ...eE
}
  , en = 146097 / 400
  , Qs = 146097 / 4800
  , zF = {
    years: {
        quarters: 4,
        months: 12,
        weeks: en / 7,
        days: en,
        hours: en * 24,
        minutes: en * 24 * 60,
        seconds: en * 24 * 60 * 60,
        milliseconds: en * 24 * 60 * 60 * 1e3
    },
    quarters: {
        months: 3,
        weeks: en / 28,
        days: en / 4,
        hours: en * 24 / 4,
        minutes: en * 24 * 60 / 4,
        seconds: en * 24 * 60 * 60 / 4,
        milliseconds: en * 24 * 60 * 60 * 1e3 / 4
    },
    months: {
        weeks: Qs / 7,
        days: Qs,
        hours: Qs * 24,
        minutes: Qs * 24 * 60,
        seconds: Qs * 24 * 60 * 60,
        milliseconds: Qs * 24 * 60 * 60 * 1e3
    },
    ...eE
}
  , ns = ["years", "quarters", "months", "weeks", "days", "hours", "minutes", "seconds", "milliseconds"]
  , GF = ns.slice(0).reverse();
function ao(e, t, r=!1) {
    const a = {
        values: r ? t.values : {
            ...e.values,
            ...t.values || {}
        },
        loc: e.loc.clone(t.loc),
        conversionAccuracy: t.conversionAccuracy || e.conversionAccuracy,
        matrix: t.matrix || e.matrix
    };
    return new xt(a)
}
function jF(e) {
    return e < 0 ? Math.floor(e) : Math.ceil(e)
}
function tE(e, t, r, a, n) {
    const i = e[n][r]
      , o = t[r] / i
      , s = Math.sign(o) === Math.sign(a[n])
      , l = !s && a[n] !== 0 && Math.abs(o) <= 1 ? jF(o) : Math.trunc(o);
    a[n] += l,
    t[r] -= l * i
}
function HF(e, t) {
    GF.reduce( (r, a) => Ct(t[a]) ? r : (r && tE(e, t, r, t, a),
    a), null)
}
function WF(e) {
    const t = {};
    for (const [r,a] of Object.entries(e))
        a !== 0 && (t[r] = a);
    return t
}
class xt {
    constructor(t) {
        const r = t.conversionAccuracy === "longterm" || !1;
        let a = r ? zF : $F;
        t.matrix && (a = t.matrix),
        this.values = t.values,
        this.loc = t.loc || Yt.create(),
        this.conversionAccuracy = r ? "longterm" : "casual",
        this.invalid = t.invalid || null,
        this.matrix = a,
        this.isLuxonDuration = !0
    }
    static fromMillis(t, r) {
        return xt.fromObject({
            milliseconds: t
        }, r)
    }
    static fromObject(t, r={}) {
        if (t == null || typeof t != "object")
            throw new sn(`Duration.fromObject: argument expected to be an object, got ${t === null ? "null" : typeof t}`);
        return new xt({
            values: xh(t, xt.normalizeUnit),
            loc: Yt.fromObject(r),
            conversionAccuracy: r.conversionAccuracy,
            matrix: r.matrix
        })
    }
    static fromDurationLike(t) {
        if (ms(t))
            return xt.fromMillis(t);
        if (xt.isDuration(t))
            return t;
        if (typeof t == "object")
            return xt.fromObject(t);
        throw new sn(`Unknown duration argument ${t} of type ${typeof t}`)
    }
    static fromISO(t, r) {
        const [a] = FF(t);
        return a ? xt.fromObject(a, r) : xt.invalid("unparsable", `the input "${t}" can't be parsed as ISO 8601`)
    }
    static fromISOTime(t, r) {
        const [a] = PF(t);
        return a ? xt.fromObject(a, r) : xt.invalid("unparsable", `the input "${t}" can't be parsed as ISO 8601`)
    }
    static invalid(t, r=null) {
        if (!t)
            throw new sn("need to specify a reason the Duration is invalid");
        const a = t instanceof Fn ? t : new Fn(t,r);
        if (cr.throwOnInvalid)
            throw new bU(a);
        return new xt({
            invalid: a
        })
    }
    static normalizeUnit(t) {
        const r = {
            year: "years",
            years: "years",
            quarter: "quarters",
            quarters: "quarters",
            month: "months",
            months: "months",
            week: "weeks",
            weeks: "weeks",
            day: "days",
            days: "days",
            hour: "hours",
            hours: "hours",
            minute: "minutes",
            minutes: "minutes",
            second: "seconds",
            seconds: "seconds",
            millisecond: "milliseconds",
            milliseconds: "milliseconds"
        }[t && t.toLowerCase()];
        if (!r)
            throw new wA(t);
        return r
    }
    static isDuration(t) {
        return t && t.isLuxonDuration || !1
    }
    get locale() {
        return this.isValid ? this.loc.locale : null
    }
    get numberingSystem() {
        return this.isValid ? this.loc.numberingSystem : null
    }
    toFormat(t, r={}) {
        const a = {
            ...r,
            floor: r.round !== !1 && r.floor !== !1
        };
        return this.isValid ? Yr.create(this.loc, a).formatDurationFromString(this, t) : VF
    }
    toHuman(t={}) {
        const r = ns.map(a => {
            const n = this.values[a];
            return Ct(n) ? null : this.loc.numberFormatter({
                style: "unit",
                unitDisplay: "long",
                ...t,
                unit: a.slice(0, -1)
            }).format(n)
        }
        ).filter(a => a);
        return this.loc.listFormatter({
            type: "conjunction",
            style: t.listStyle || "narrow",
            ...t
        }).format(r)
    }
    toObject() {
        return this.isValid ? {
            ...this.values
        } : {}
    }
    toISO() {
        if (!this.isValid)
            return null;
        let t = "P";
        return this.years !== 0 && (t += this.years + "Y"),
        (this.months !== 0 || this.quarters !== 0) && (t += this.months + this.quarters * 3 + "M"),
        this.weeks !== 0 && (t += this.weeks + "W"),
        this.days !== 0 && (t += this.days + "D"),
        (this.hours !== 0 || this.minutes !== 0 || this.seconds !== 0 || this.milliseconds !== 0) && (t += "T"),
        this.hours !== 0 && (t += this.hours + "H"),
        this.minutes !== 0 && (t += this.minutes + "M"),
        (this.seconds !== 0 || this.milliseconds !== 0) && (t += Yg(this.seconds + this.milliseconds / 1e3, 3) + "S"),
        t === "P" && (t += "T0S"),
        t
    }
    toISOTime(t={}) {
        if (!this.isValid)
            return null;
        const r = this.toMillis();
        if (r < 0 || r >= 864e5)
            return null;
        t = {
            suppressMilliseconds: !1,
            suppressSeconds: !1,
            includePrefix: !1,
            format: "extended",
            ...t
        };
        const a = this.shiftTo("hours", "minutes", "seconds", "milliseconds");
        let n = t.format === "basic" ? "hhmm" : "hh:mm";
        (!t.suppressSeconds || a.seconds !== 0 || a.milliseconds !== 0) && (n += t.format === "basic" ? "ss" : ":ss",
        (!t.suppressMilliseconds || a.milliseconds !== 0) && (n += ".SSS"));
        let i = a.toFormat(n);
        return t.includePrefix && (i = "T" + i),
        i
    }
    toJSON() {
        return this.toISO()
    }
    toString() {
        return this.toISO()
    }
    toMillis() {
        return this.as("milliseconds")
    }
    valueOf() {
        return this.toMillis()
    }
    plus(t) {
        if (!this.isValid)
            return this;
        const r = xt.fromDurationLike(t)
          , a = {};
        for (const n of ns)
            (zl(r.values, n) || zl(this.values, n)) && (a[n] = r.get(n) + this.get(n));
        return ao(this, {
            values: a
        }, !0)
    }
    minus(t) {
        if (!this.isValid)
            return this;
        const r = xt.fromDurationLike(t);
        return this.plus(r.negate())
    }
    mapUnits(t) {
        if (!this.isValid)
            return this;
        const r = {};
        for (const a of Object.keys(this.values))
            r[a] = qA(t(this.values[a], a));
        return ao(this, {
            values: r
        }, !0)
    }
    get(t) {
        return this[xt.normalizeUnit(t)]
    }
    set(t) {
        if (!this.isValid)
            return this;
        const r = {
            ...this.values,
            ...xh(t, xt.normalizeUnit)
        };
        return ao(this, {
            values: r
        })
    }
    reconfigure({locale: t, numberingSystem: r, conversionAccuracy: a, matrix: n}={}) {
        const o = {
            loc: this.loc.clone({
                locale: t,
                numberingSystem: r
            }),
            matrix: n,
            conversionAccuracy: a
        };
        return ao(this, o)
    }
    as(t) {
        return this.isValid ? this.shiftTo(t).get(t) : NaN
    }
    normalize() {
        if (!this.isValid)
            return this;
        const t = this.toObject();
        return HF(this.matrix, t),
        ao(this, {
            values: t
        }, !0)
    }
    rescale() {
        if (!this.isValid)
            return this;
        const t = WF(this.normalize().shiftToAll().toObject());
        return ao(this, {
            values: t
        }, !0)
    }
    shiftTo(...t) {
        if (!this.isValid)
            return this;
        if (t.length === 0)
            return this;
        t = t.map(o => xt.normalizeUnit(o));
        const r = {}
          , a = {}
          , n = this.toObject();
        let i;
        for (const o of ns)
            if (t.indexOf(o) >= 0) {
                i = o;
                let s = 0;
                for (const u in a)
                    s += this.matrix[u][o] * a[u],
                    a[u] = 0;
                ms(n[o]) && (s += n[o]);
                const l = Math.trunc(s);
                r[o] = l,
                a[o] = (s * 1e3 - l * 1e3) / 1e3;
                for (const u in n)
                    ns.indexOf(u) > ns.indexOf(o) && tE(this.matrix, n, u, r, o)
            } else
                ms(n[o]) && (a[o] = n[o]);
        for (const o in a)
            a[o] !== 0 && (r[i] += o === i ? a[o] : a[o] / this.matrix[i][o]);
        return ao(this, {
            values: r
        }, !0).normalize()
    }
    shiftToAll() {
        return this.isValid ? this.shiftTo("years", "months", "weeks", "days", "hours", "minutes", "seconds", "milliseconds") : this
    }
    negate() {
        if (!this.isValid)
            return this;
        const t = {};
        for (const r of Object.keys(this.values))
            t[r] = this.values[r] === 0 ? 0 : -this.values[r];
        return ao(this, {
            values: t
        }, !0)
    }
    get years() {
        return this.isValid ? this.values.years || 0 : NaN
    }
    get quarters() {
        return this.isValid ? this.values.quarters || 0 : NaN
    }
    get months() {
        return this.isValid ? this.values.months || 0 : NaN
    }
    get weeks() {
        return this.isValid ? this.values.weeks || 0 : NaN
    }
    get days() {
        return this.isValid ? this.values.days || 0 : NaN
    }
    get hours() {
        return this.isValid ? this.values.hours || 0 : NaN
    }
    get minutes() {
        return this.isValid ? this.values.minutes || 0 : NaN
    }
    get seconds() {
        return this.isValid ? this.values.seconds || 0 : NaN
    }
    get milliseconds() {
        return this.isValid ? this.values.milliseconds || 0 : NaN
    }
    get isValid() {
        return this.invalid === null
    }
    get invalidReason() {
        return this.invalid ? this.invalid.reason : null
    }
    get invalidExplanation() {
        return this.invalid ? this.invalid.explanation : null
    }
    equals(t) {
        if (!this.isValid || !t.isValid || !this.loc.equals(t.loc))
            return !1;
        function r(a, n) {
            return a === void 0 || a === 0 ? n === void 0 || n === 0 : a === n
        }
        for (const a of ns)
            if (!r(this.values[a], t.values[a]))
                return !1;
        return !0
    }
}
const Zs = "Invalid Interval";
function YF(e, t) {
    return !e || !e.isValid ? nr.invalid("missing or invalid start") : !t || !t.isValid ? nr.invalid("missing or invalid end") : t < e ? nr.invalid("end before start", `The end of an interval must be after its start, but you had start=${e.toISO()} and end=${t.toISO()}`) : null
}
class nr {
    constructor(t) {
        this.s = t.start,
        this.e = t.end,
        this.invalid = t.invalid || null,
        this.isLuxonInterval = !0
    }
    static invalid(t, r=null) {
        if (!t)
            throw new sn("need to specify a reason the Interval is invalid");
        const a = t instanceof Fn ? t : new Fn(t,r);
        if (cr.throwOnInvalid)
            throw new _U(a);
        return new nr({
            invalid: a
        })
    }
    static fromDateTimes(t, r) {
        const a = Lu(t)
          , n = Lu(r)
          , i = YF(a, n);
        return i ?? new nr({
            start: a,
            end: n
        })
    }
    static after(t, r) {
        const a = xt.fromDurationLike(r)
          , n = Lu(t);
        return nr.fromDateTimes(n, n.plus(a))
    }
    static before(t, r) {
        const a = xt.fromDurationLike(r)
          , n = Lu(t);
        return nr.fromDateTimes(n.minus(a), n)
    }
    static fromISO(t, r) {
        const [a,n] = (t || "").split("/", 2);
        if (a && n) {
            let i, o;
            try {
                i = tt.fromISO(a, r),
                o = i.isValid
            } catch {
                o = !1
            }
            let s, l;
            try {
                s = tt.fromISO(n, r),
                l = s.isValid
            } catch {
                l = !1
            }
            if (o && l)
                return nr.fromDateTimes(i, s);
            if (o) {
                const u = xt.fromISO(n, r);
                if (u.isValid)
                    return nr.after(i, u)
            } else if (l) {
                const u = xt.fromISO(a, r);
                if (u.isValid)
                    return nr.before(s, u)
            }
        }
        return nr.invalid("unparsable", `the input "${t}" can't be parsed as ISO 8601`)
    }
    static isInterval(t) {
        return t && t.isLuxonInterval || !1
    }
    get start() {
        return this.isValid ? this.s : null
    }
    get end() {
        return this.isValid ? this.e : null
    }
    get isValid() {
        return this.invalidReason === null
    }
    get invalidReason() {
        return this.invalid ? this.invalid.reason : null
    }
    get invalidExplanation() {
        return this.invalid ? this.invalid.explanation : null
    }
    length(t="milliseconds") {
        return this.isValid ? this.toDuration(t).get(t) : NaN
    }
    count(t="milliseconds") {
        if (!this.isValid)
            return NaN;
        const r = this.start.startOf(t)
          , a = this.end.startOf(t);
        return Math.floor(a.diff(r, t).get(t)) + (a.valueOf() !== this.end.valueOf())
    }
    hasSame(t) {
        return this.isValid ? this.isEmpty() || this.e.minus(1).hasSame(this.s, t) : !1
    }
    isEmpty() {
        return this.s.valueOf() === this.e.valueOf()
    }
    isAfter(t) {
        return this.isValid ? this.s > t : !1
    }
    isBefore(t) {
        return this.isValid ? this.e <= t : !1
    }
    contains(t) {
        return this.isValid ? this.s <= t && this.e > t : !1
    }
    set({start: t, end: r}={}) {
        return this.isValid ? nr.fromDateTimes(t || this.s, r || this.e) : this
    }
    splitAt(...t) {
        if (!this.isValid)
            return [];
        const r = t.map(Lu).filter(o => this.contains(o)).sort()
          , a = [];
        let {s: n} = this
          , i = 0;
        for (; n < this.e; ) {
            const o = r[i] || this.e
              , s = +o > +this.e ? this.e : o;
            a.push(nr.fromDateTimes(n, s)),
            n = s,
            i += 1
        }
        return a
    }
    splitBy(t) {
        const r = xt.fromDurationLike(t);
        if (!this.isValid || !r.isValid || r.as("milliseconds") === 0)
            return [];
        let {s: a} = this, n = 1, i;
        const o = [];
        for (; a < this.e; ) {
            const s = this.start.plus(r.mapUnits(l => l * n));
            i = +s > +this.e ? this.e : s,
            o.push(nr.fromDateTimes(a, i)),
            a = i,
            n += 1
        }
        return o
    }
    divideEqually(t) {
        return this.isValid ? this.splitBy(this.length() / t).slice(0, t) : []
    }
    overlaps(t) {
        return this.e > t.s && this.s < t.e
    }
    abutsStart(t) {
        return this.isValid ? +this.e == +t.s : !1
    }
    abutsEnd(t) {
        return this.isValid ? +t.e == +this.s : !1
    }
    engulfs(t) {
        return this.isValid ? this.s <= t.s && this.e >= t.e : !1
    }
    equals(t) {
        return !this.isValid || !t.isValid ? !1 : this.s.equals(t.s) && this.e.equals(t.e)
    }
    intersection(t) {
        if (!this.isValid)
            return this;
        const r = this.s > t.s ? this.s : t.s
          , a = this.e < t.e ? this.e : t.e;
        return r >= a ? null : nr.fromDateTimes(r, a)
    }
    union(t) {
        if (!this.isValid)
            return this;
        const r = this.s < t.s ? this.s : t.s
          , a = this.e > t.e ? this.e : t.e;
        return nr.fromDateTimes(r, a)
    }
    static merge(t) {
        const [r,a] = t.sort( (n, i) => n.s - i.s).reduce( ([n,i], o) => i ? i.overlaps(o) || i.abutsStart(o) ? [n, i.union(o)] : [n.concat([i]), o] : [n, o], [[], null]);
        return a && r.push(a),
        r
    }
    static xor(t) {
        let r = null
          , a = 0;
        const n = []
          , i = t.map(l => [{
            time: l.s,
            type: "s"
        }, {
            time: l.e,
            type: "e"
        }])
          , o = Array.prototype.concat(...i)
          , s = o.sort( (l, u) => l.time - u.time);
        for (const l of s)
            a += l.type === "s" ? 1 : -1,
            a === 1 ? r = l.time : (r && +r != +l.time && n.push(nr.fromDateTimes(r, l.time)),
            r = null);
        return nr.merge(n)
    }
    difference(...t) {
        return nr.xor([this].concat(t)).map(r => this.intersection(r)).filter(r => r && !r.isEmpty())
    }
    toString() {
        return this.isValid ? `[${this.s.toISO()} – ${this.e.toISO()})` : Zs
    }
    toLocaleString(t=bh, r={}) {
        return this.isValid ? Yr.create(this.s.loc.clone(r), t).formatInterval(this) : Zs
    }
    toISO(t) {
        return this.isValid ? `${this.s.toISO(t)}/${this.e.toISO(t)}` : Zs
    }
    toISODate() {
        return this.isValid ? `${this.s.toISODate()}/${this.e.toISODate()}` : Zs
    }
    toISOTime(t) {
        return this.isValid ? `${this.s.toISOTime(t)}/${this.e.toISOTime(t)}` : Zs
    }
    toFormat(t, {separator: r=" – "}={}) {
        return this.isValid ? `${this.s.toFormat(t)}${r}${this.e.toFormat(t)}` : Zs
    }
    toDuration(t, r) {
        return this.isValid ? this.e.diff(this.s, t, r) : xt.invalid(this.invalidReason)
    }
    mapEndpoints(t) {
        return nr.fromDateTimes(t(this.s), t(this.e))
    }
}
class Gd {
    static hasDST(t=cr.defaultZone) {
        const r = tt.now().setZone(t).set({
            month: 12
        });
        return !t.isUniversal && r.offset !== r.set({
            month: 6
        }).offset
    }
    static isValidIANAZone(t) {
        return $i.isValidZone(t)
    }
    static normalizeZone(t) {
        return ho(t, cr.defaultZone)
    }
    static months(t="long", {locale: r=null, numberingSystem: a=null, locObj: n=null, outputCalendar: i="gregory"}={}) {
        return (n || Yt.create(r, a, i)).months(t)
    }
    static monthsFormat(t="long", {locale: r=null, numberingSystem: a=null, locObj: n=null, outputCalendar: i="gregory"}={}) {
        return (n || Yt.create(r, a, i)).months(t, !0)
    }
    static weekdays(t="long", {locale: r=null, numberingSystem: a=null, locObj: n=null}={}) {
        return (n || Yt.create(r, a, null)).weekdays(t)
    }
    static weekdaysFormat(t="long", {locale: r=null, numberingSystem: a=null, locObj: n=null}={}) {
        return (n || Yt.create(r, a, null)).weekdays(t, !0)
    }
    static meridiems({locale: t=null}={}) {
        return Yt.create(t).meridiems()
    }
    static eras(t="short", {locale: r=null}={}) {
        return Yt.create(r, null, "gregory").eras(t)
    }
    static features() {
        return {
            relative: RA()
        }
    }
}
function _1(e, t) {
    const r = n => n.toUTC(0, {
        keepLocalTime: !0
    }).startOf("day").valueOf()
      , a = r(t) - r(e);
    return Math.floor(xt.fromMillis(a).as("days"))
}
function JF(e, t, r) {
    const a = [["years", (l, u) => u.year - l.year], ["quarters", (l, u) => u.quarter - l.quarter + (u.year - l.year) * 4], ["months", (l, u) => u.month - l.month + (u.year - l.year) * 12], ["weeks", (l, u) => {
        const c = _1(l, u);
        return (c - c % 7) / 7
    }
    ], ["days", _1]]
      , n = {}
      , i = e;
    let o, s;
    for (const [l,u] of a)
        r.indexOf(l) >= 0 && (o = l,
        n[l] = u(e, t),
        s = i.plus(n),
        s > t ? (n[l]--,
        e = i.plus(n)) : e = s);
    return [e, n, s, o]
}
function KF(e, t, r, a) {
    let[n,i,o,s] = JF(e, t, r);
    const l = t - n
      , u = r.filter(d => ["hours", "minutes", "seconds", "milliseconds"].indexOf(d) >= 0);
    u.length === 0 && (o < t && (o = n.plus({
        [s]: 1
    })),
    o !== n && (i[s] = (i[s] || 0) + l / (o - n)));
    const c = xt.fromObject(i, a);
    return u.length > 0 ? xt.fromMillis(l, a).shiftTo(...u).plus(c) : c
}
const Xg = {
    arab: "[٠-٩]",
    arabext: "[۰-۹]",
    bali: "[᭐-᭙]",
    beng: "[০-৯]",
    deva: "[०-९]",
    fullwide: "[０-９]",
    gujr: "[૦-૯]",
    hanidec: "[〇|一|二|三|四|五|六|七|八|九]",
    khmr: "[០-៩]",
    knda: "[೦-೯]",
    laoo: "[໐-໙]",
    limb: "[᥆-᥏]",
    mlym: "[൦-൯]",
    mong: "[᠐-᠙]",
    mymr: "[၀-၉]",
    orya: "[୦-୯]",
    tamldec: "[௦-௯]",
    telu: "[౦-౯]",
    thai: "[๐-๙]",
    tibt: "[༠-༩]",
    latn: "\\d"
}
  , b1 = {
    arab: [1632, 1641],
    arabext: [1776, 1785],
    bali: [6992, 7001],
    beng: [2534, 2543],
    deva: [2406, 2415],
    fullwide: [65296, 65303],
    gujr: [2790, 2799],
    khmr: [6112, 6121],
    knda: [3302, 3311],
    laoo: [3792, 3801],
    limb: [6470, 6479],
    mlym: [3430, 3439],
    mong: [6160, 6169],
    mymr: [4160, 4169],
    orya: [2918, 2927],
    tamldec: [3046, 3055],
    telu: [3174, 3183],
    thai: [3664, 3673],
    tibt: [3872, 3881]
}
  , QF = Xg.hanidec.replace(/[\[|\]]/g, "").split("");
function ZF(e) {
    let t = parseInt(e, 10);
    if (isNaN(t)) {
        t = "";
        for (let r = 0; r < e.length; r++) {
            const a = e.charCodeAt(r);
            if (e[r].search(Xg.hanidec) !== -1)
                t += QF.indexOf(e[r]);
            else
                for (const n in b1) {
                    const [i,o] = b1[n];
                    a >= i && a <= o && (t += a - i)
                }
        }
        return parseInt(t, 10)
    } else
        return t
}
function xn({numberingSystem: e}, t="") {
    return new RegExp(`${Xg[e || "latn"]}${t}`)
}
const XF = "missing Intl.DateTimeFormat.formatToParts support";
function Mt(e, t=r => r) {
    return {
        regex: e,
        deser: ([r]) => t(ZF(r))
    }
}
const eO = String.fromCharCode(160)
  , rE = `[ ${eO}]`
  , aE = new RegExp(rE,"g");
function tO(e) {
    return e.replace(/\./g, "\\.?").replace(aE, rE)
}
function C1(e) {
    return e.replace(/\./g, "").replace(aE, " ").toLowerCase()
}
function An(e, t) {
    return e === null ? null : {
        regex: RegExp(e.map(tO).join("|")),
        deser: ([r]) => e.findIndex(a => C1(r) === C1(a)) + t
    }
}
function S1(e, t) {
    return {
        regex: e,
        deser: ([,r,a]) => Vm(r, a),
        groups: t
    }
}
function jd(e) {
    return {
        regex: e,
        deser: ([t]) => t
    }
}
function rO(e) {
    return e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&")
}
function aO(e, t) {
    const r = xn(t)
      , a = xn(t, "{2}")
      , n = xn(t, "{3}")
      , i = xn(t, "{4}")
      , o = xn(t, "{6}")
      , s = xn(t, "{1,2}")
      , l = xn(t, "{1,3}")
      , u = xn(t, "{1,6}")
      , c = xn(t, "{1,9}")
      , d = xn(t, "{2,4}")
      , v = xn(t, "{4,6}")
      , h = _ => ({
        regex: RegExp(rO(_.val)),
        deser: ([y]) => y,
        literal: !0
    })
      , f = (_ => {
        if (e.literal)
            return h(_);
        switch (_.val) {
        case "G":
            return An(t.eras("short", !1), 0);
        case "GG":
            return An(t.eras("long", !1), 0);
        case "y":
            return Mt(u);
        case "yy":
            return Mt(d, rw);
        case "yyyy":
            return Mt(i);
        case "yyyyy":
            return Mt(v);
        case "yyyyyy":
            return Mt(o);
        case "M":
            return Mt(s);
        case "MM":
            return Mt(a);
        case "MMM":
            return An(t.months("short", !0, !1), 1);
        case "MMMM":
            return An(t.months("long", !0, !1), 1);
        case "L":
            return Mt(s);
        case "LL":
            return Mt(a);
        case "LLL":
            return An(t.months("short", !1, !1), 1);
        case "LLLL":
            return An(t.months("long", !1, !1), 1);
        case "d":
            return Mt(s);
        case "dd":
            return Mt(a);
        case "o":
            return Mt(l);
        case "ooo":
            return Mt(n);
        case "HH":
            return Mt(a);
        case "H":
            return Mt(s);
        case "hh":
            return Mt(a);
        case "h":
            return Mt(s);
        case "mm":
            return Mt(a);
        case "m":
            return Mt(s);
        case "q":
            return Mt(s);
        case "qq":
            return Mt(a);
        case "s":
            return Mt(s);
        case "ss":
            return Mt(a);
        case "S":
            return Mt(l);
        case "SSS":
            return Mt(n);
        case "u":
            return jd(c);
        case "uu":
            return jd(s);
        case "uuu":
            return Mt(r);
        case "a":
            return An(t.meridiems(), 0);
        case "kkkk":
            return Mt(i);
        case "kk":
            return Mt(d, rw);
        case "W":
            return Mt(s);
        case "WW":
            return Mt(a);
        case "E":
        case "c":
            return Mt(r);
        case "EEE":
            return An(t.weekdays("short", !1, !1), 1);
        case "EEEE":
            return An(t.weekdays("long", !1, !1), 1);
        case "ccc":
            return An(t.weekdays("short", !0, !1), 1);
        case "cccc":
            return An(t.weekdays("long", !0, !1), 1);
        case "Z":
        case "ZZ":
            return S1(new RegExp(`([+-]${s.source})(?::(${a.source}))?`), 2);
        case "ZZZ":
            return S1(new RegExp(`([+-]${s.source})(${a.source})?`), 2);
        case "z":
            return jd(/[a-z_+-/]{1,256}?/i);
        case " ":
            return jd(/[^\S\n\r]/);
        default:
            return h(_)
        }
    }
    )(e) || {
        invalidReason: XF
    };
    return f.token = e,
    f
}
const nO = {
    year: {
        "2-digit": "yy",
        numeric: "yyyyy"
    },
    month: {
        numeric: "M",
        "2-digit": "MM",
        short: "MMM",
        long: "MMMM"
    },
    day: {
        numeric: "d",
        "2-digit": "dd"
    },
    weekday: {
        short: "EEE",
        long: "EEEE"
    },
    dayperiod: "a",
    dayPeriod: "a",
    hour: {
        numeric: "h",
        "2-digit": "hh"
    },
    minute: {
        numeric: "m",
        "2-digit": "mm"
    },
    second: {
        numeric: "s",
        "2-digit": "ss"
    },
    timeZoneName: {
        long: "ZZZZZ",
        short: "ZZZ"
    }
};
function iO(e, t) {
    const {type: r, value: a} = e;
    if (r === "literal") {
        const o = /^\s+$/.test(a);
        return {
            literal: !o,
            val: o ? " " : a
        }
    }
    const n = t[r];
    let i = nO[r];
    if (typeof i == "object" && (i = i[n]),
    i)
        return {
            literal: !1,
            val: i
        }
}
function oO(e) {
    return [`^${e.map(r => r.regex).reduce( (r, a) => `${r}(${a.source})`, "")}$`, e]
}
function sO(e, t, r) {
    const a = e.match(t);
    if (a) {
        const n = {};
        let i = 1;
        for (const o in r)
            if (zl(r, o)) {
                const s = r[o]
                  , l = s.groups ? s.groups + 1 : 1;
                !s.literal && s.token && (n[s.token.val[0]] = s.deser(a.slice(i, i + l))),
                i += l
            }
        return [a, n]
    } else
        return [a, {}]
}
function lO(e) {
    const t = i => {
        switch (i) {
        case "S":
            return "millisecond";
        case "s":
            return "second";
        case "m":
            return "minute";
        case "h":
        case "H":
            return "hour";
        case "d":
            return "day";
        case "o":
            return "ordinal";
        case "L":
        case "M":
            return "month";
        case "y":
            return "year";
        case "E":
        case "c":
            return "weekday";
        case "W":
            return "weekNumber";
        case "k":
            return "weekYear";
        case "q":
            return "quarter";
        default:
            return null
        }
    }
    ;
    let r = null, a;
    return Ct(e.z) || (r = $i.create(e.z)),
    Ct(e.Z) || (r || (r = new ia(e.Z)),
    a = e.Z),
    Ct(e.q) || (e.M = (e.q - 1) * 3 + 1),
    Ct(e.h) || (e.h < 12 && e.a === 1 ? e.h += 12 : e.h === 12 && e.a === 0 && (e.h = 0)),
    e.G === 0 && e.y && (e.y = -e.y),
    Ct(e.u) || (e.S = Wg(e.u)),
    [Object.keys(e).reduce( (i, o) => {
        const s = t(o);
        return s && (i[s] = e[o]),
        i
    }
    , {}), r, a]
}
let mp = null;
function uO() {
    return mp || (mp = tt.fromMillis(1555555555555)),
    mp
}
function cO(e, t) {
    if (e.literal)
        return e;
    const r = Yr.macroTokenToFormatOpts(e.val)
      , a = oE(r, t);
    return a == null || a.includes(void 0) ? e : a
}
function nE(e, t) {
    return Array.prototype.concat(...e.map(r => cO(r, t)))
}
function iE(e, t, r) {
    const a = nE(Yr.parseFormat(r), e)
      , n = a.map(o => aO(o, e))
      , i = n.find(o => o.invalidReason);
    if (i)
        return {
            input: t,
            tokens: a,
            invalidReason: i.invalidReason
        };
    {
        const [o,s] = oO(n)
          , l = RegExp(o, "i")
          , [u,c] = sO(t, l, s)
          , [d,v,h] = c ? lO(c) : [null, null, void 0];
        if (zl(c, "a") && zl(c, "H"))
            throw new Yu("Can't include meridiem when specifying 24-hour format");
        return {
            input: t,
            tokens: a,
            regex: l,
            rawMatches: u,
            matches: c,
            result: d,
            zone: v,
            specificOffset: h
        }
    }
}
function dO(e, t, r) {
    const {result: a, zone: n, specificOffset: i, invalidReason: o} = iE(e, t, r);
    return [a, n, i, o]
}
function oE(e, t) {
    return e ? Yr.create(t, e).formatDateTimeParts(uO()).map(n => iO(n, e)) : null
}
const sE = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334]
  , lE = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335];
function vn(e, t) {
    return new Fn("unit out of range",`you specified ${t} (of type ${typeof t}) as a ${e}, which is invalid`)
}
function uE(e, t, r) {
    const a = new Date(Date.UTC(e, t - 1, r));
    e < 100 && e >= 0 && a.setUTCFullYear(a.getUTCFullYear() - 1900);
    const n = a.getUTCDay();
    return n === 0 ? 7 : n
}
function cE(e, t, r) {
    return r + (Qc(e) ? lE : sE)[t - 1]
}
function dE(e, t) {
    const r = Qc(e) ? lE : sE
      , a = r.findIndex(i => i < t)
      , n = t - r[a];
    return {
        month: a + 1,
        day: n
    }
}
function aw(e) {
    const {year: t, month: r, day: a} = e
      , n = cE(t, r, a)
      , i = uE(t, r, a);
    let o = Math.floor((n - i + 10) / 7), s;
    return o < 1 ? (s = t - 1,
    o = Sh(s)) : o > Sh(t) ? (s = t + 1,
    o = 1) : s = t,
    {
        weekYear: s,
        weekNumber: o,
        weekday: i,
        ...$m(e)
    }
}
function x1(e) {
    const {weekYear: t, weekNumber: r, weekday: a} = e
      , n = uE(t, 1, 4)
      , i = uc(t);
    let o = r * 7 + a - n - 3, s;
    o < 1 ? (s = t - 1,
    o += uc(s)) : o > i ? (s = t + 1,
    o -= uc(t)) : s = t;
    const {month: l, day: u} = dE(s, o);
    return {
        year: s,
        month: l,
        day: u,
        ...$m(e)
    }
}
function fp(e) {
    const {year: t, month: r, day: a} = e
      , n = cE(t, r, a);
    return {
        year: t,
        ordinal: n,
        ...$m(e)
    }
}
function A1(e) {
    const {year: t, ordinal: r} = e
      , {month: a, day: n} = dE(t, r);
    return {
        year: t,
        month: a,
        day: n,
        ...$m(e)
    }
}
function vO(e) {
    const t = qm(e.weekYear)
      , r = Ii(e.weekNumber, 1, Sh(e.weekYear))
      , a = Ii(e.weekday, 1, 7);
    return t ? r ? a ? !1 : vn("weekday", e.weekday) : vn("week", e.week) : vn("weekYear", e.weekYear)
}
function hO(e) {
    const t = qm(e.year)
      , r = Ii(e.ordinal, 1, uc(e.year));
    return t ? r ? !1 : vn("ordinal", e.ordinal) : vn("year", e.year)
}
function vE(e) {
    const t = qm(e.year)
      , r = Ii(e.month, 1, 12)
      , a = Ii(e.day, 1, Ch(e.year, e.month));
    return t ? r ? a ? !1 : vn("day", e.day) : vn("month", e.month) : vn("year", e.year)
}
function hE(e) {
    const {hour: t, minute: r, second: a, millisecond: n} = e
      , i = Ii(t, 0, 23) || t === 24 && r === 0 && a === 0 && n === 0
      , o = Ii(r, 0, 59)
      , s = Ii(a, 0, 59)
      , l = Ii(n, 0, 999);
    return i ? o ? s ? l ? !1 : vn("millisecond", n) : vn("second", a) : vn("minute", r) : vn("hour", t)
}
const pp = "Invalid DateTime"
  , E1 = 864e13;
function Hd(e) {
    return new Fn("unsupported zone",`the zone "${e.name}" is not supported`)
}
function yp(e) {
    return e.weekData === null && (e.weekData = aw(e.c)),
    e.weekData
}
function Bu(e, t) {
    const r = {
        ts: e.ts,
        zone: e.zone,
        c: e.c,
        o: e.o,
        loc: e.loc,
        invalid: e.invalid
    };
    return new tt({
        ...r,
        ...t,
        old: r
    })
}
function mE(e, t, r) {
    let a = e - t * 60 * 1e3;
    const n = r.offset(a);
    if (t === n)
        return [a, t];
    a -= (n - t) * 60 * 1e3;
    const i = r.offset(a);
    return n === i ? [a, n] : [e - Math.min(n, i) * 60 * 1e3, Math.max(n, i)]
}
function k1(e, t) {
    e += t * 60 * 1e3;
    const r = new Date(e);
    return {
        year: r.getUTCFullYear(),
        month: r.getUTCMonth() + 1,
        day: r.getUTCDate(),
        hour: r.getUTCHours(),
        minute: r.getUTCMinutes(),
        second: r.getUTCSeconds(),
        millisecond: r.getUTCMilliseconds()
    }
}
function Fv(e, t, r) {
    return mE(Jg(e), t, r)
}
function T1(e, t) {
    const r = e.o
      , a = e.c.year + Math.trunc(t.years)
      , n = e.c.month + Math.trunc(t.months) + Math.trunc(t.quarters) * 3
      , i = {
        ...e.c,
        year: a,
        month: n,
        day: Math.min(e.c.day, Ch(a, n)) + Math.trunc(t.days) + Math.trunc(t.weeks) * 7
    }
      , o = xt.fromObject({
        years: t.years - Math.trunc(t.years),
        quarters: t.quarters - Math.trunc(t.quarters),
        months: t.months - Math.trunc(t.months),
        weeks: t.weeks - Math.trunc(t.weeks),
        days: t.days - Math.trunc(t.days),
        hours: t.hours,
        minutes: t.minutes,
        seconds: t.seconds,
        milliseconds: t.milliseconds
    }).as("milliseconds")
      , s = Jg(i);
    let[l,u] = mE(s, r, e.zone);
    return o !== 0 && (l += o,
    u = e.zone.offset(l)),
    {
        ts: l,
        o: u
    }
}
function Ru(e, t, r, a, n, i) {
    const {setZone: o, zone: s} = r;
    if (e && Object.keys(e).length !== 0 || t) {
        const l = t || s
          , u = tt.fromObject(e, {
            ...r,
            zone: l,
            specificOffset: i
        });
        return o ? u : u.setZone(s)
    } else
        return tt.invalid(new Fn("unparsable",`the input "${n}" can't be parsed as ${a}`))
}
function Wd(e, t, r=!0) {
    return e.isValid ? Yr.create(Yt.create("en-US"), {
        allowZ: r,
        forceSimple: !0
    }).formatDateTimeFromString(e, t) : null
}
function wp(e, t) {
    const r = e.c.year > 9999 || e.c.year < 0;
    let a = "";
    return r && e.c.year >= 0 && (a += "+"),
    a += dr(e.c.year, r ? 6 : 4),
    t ? (a += "-",
    a += dr(e.c.month),
    a += "-",
    a += dr(e.c.day)) : (a += dr(e.c.month),
    a += dr(e.c.day)),
    a
}
function N1(e, t, r, a, n, i) {
    let o = dr(e.c.hour);
    return t ? (o += ":",
    o += dr(e.c.minute),
    (e.c.second !== 0 || !r) && (o += ":")) : o += dr(e.c.minute),
    (e.c.second !== 0 || !r) && (o += dr(e.c.second),
    (e.c.millisecond !== 0 || !a) && (o += ".",
    o += dr(e.c.millisecond, 3))),
    n && (e.isOffsetFixed && e.offset === 0 && !i ? o += "Z" : e.o < 0 ? (o += "-",
    o += dr(Math.trunc(-e.o / 60)),
    o += ":",
    o += dr(Math.trunc(-e.o % 60))) : (o += "+",
    o += dr(Math.trunc(e.o / 60)),
    o += ":",
    o += dr(Math.trunc(e.o % 60)))),
    i && (o += "[" + e.zone.ianaName + "]"),
    o
}
const fE = {
    month: 1,
    day: 1,
    hour: 0,
    minute: 0,
    second: 0,
    millisecond: 0
}
  , mO = {
    weekNumber: 1,
    weekday: 1,
    hour: 0,
    minute: 0,
    second: 0,
    millisecond: 0
}
  , fO = {
    ordinal: 1,
    hour: 0,
    minute: 0,
    second: 0,
    millisecond: 0
}
  , pE = ["year", "month", "day", "hour", "minute", "second", "millisecond"]
  , pO = ["weekYear", "weekNumber", "weekday", "hour", "minute", "second", "millisecond"]
  , yO = ["year", "ordinal", "hour", "minute", "second", "millisecond"];
function M1(e) {
    const t = {
        year: "year",
        years: "year",
        month: "month",
        months: "month",
        day: "day",
        days: "day",
        hour: "hour",
        hours: "hour",
        minute: "minute",
        minutes: "minute",
        quarter: "quarter",
        quarters: "quarter",
        second: "second",
        seconds: "second",
        millisecond: "millisecond",
        milliseconds: "millisecond",
        weekday: "weekday",
        weekdays: "weekday",
        weeknumber: "weekNumber",
        weeksnumber: "weekNumber",
        weeknumbers: "weekNumber",
        weekyear: "weekYear",
        weekyears: "weekYear",
        ordinal: "ordinal"
    }[e.toLowerCase()];
    if (!t)
        throw new wA(e);
    return t
}
function I1(e, t) {
    const r = ho(t.zone, cr.defaultZone)
      , a = Yt.fromObject(t)
      , n = cr.now();
    let i, o;
    if (Ct(e.year))
        i = n;
    else {
        for (const u of pE)
            Ct(e[u]) && (e[u] = fE[u]);
        const s = vE(e) || hE(e);
        if (s)
            return tt.invalid(s);
        const l = r.offset(n);
        [i,o] = Fv(e, l, r)
    }
    return new tt({
        ts: i,
        zone: r,
        loc: a,
        o
    })
}
function D1(e, t, r) {
    const a = Ct(r.round) ? !0 : r.round
      , n = (o, s) => (o = Yg(o, a || r.calendary ? 0 : 2, !0),
    t.loc.clone(r).relFormatter(r).format(o, s))
      , i = o => r.calendary ? t.hasSame(e, o) ? 0 : t.startOf(o).diff(e.startOf(o), o).get(o) : t.diff(e, o).get(o);
    if (r.unit)
        return n(i(r.unit), r.unit);
    for (const o of r.units) {
        const s = i(o);
        if (Math.abs(s) >= 1)
            return n(s, o)
    }
    return n(e > t ? -0 : 0, r.units[r.units.length - 1])
}
function U1(e) {
    let t = {}, r;
    return e.length > 0 && typeof e[e.length - 1] == "object" ? (t = e[e.length - 1],
    r = Array.from(e).slice(0, e.length - 1)) : r = Array.from(e),
    [t, r]
}
class tt {
    constructor(t) {
        const r = t.zone || cr.defaultZone;
        let a = t.invalid || (Number.isNaN(t.ts) ? new Fn("invalid input") : null) || (r.isValid ? null : Hd(r));
        this.ts = Ct(t.ts) ? cr.now() : t.ts;
        let n = null
          , i = null;
        if (!a)
            if (t.old && t.old.ts === this.ts && t.old.zone.equals(r))
                [n,i] = [t.old.c, t.old.o];
            else {
                const s = r.offset(this.ts);
                n = k1(this.ts, s),
                a = Number.isNaN(n.year) ? new Fn("invalid input") : null,
                n = a ? null : n,
                i = a ? null : s
            }
        this._zone = r,
        this.loc = t.loc || Yt.create(),
        this.invalid = a,
        this.weekData = null,
        this.c = n,
        this.o = i,
        this.isLuxonDateTime = !0
    }
    static now() {
        return new tt({})
    }
    static local() {
        const [t,r] = U1(arguments)
          , [a,n,i,o,s,l,u] = r;
        return I1({
            year: a,
            month: n,
            day: i,
            hour: o,
            minute: s,
            second: l,
            millisecond: u
        }, t)
    }
    static utc() {
        const [t,r] = U1(arguments)
          , [a,n,i,o,s,l,u] = r;
        return t.zone = ia.utcInstance,
        I1({
            year: a,
            month: n,
            day: i,
            hour: o,
            minute: s,
            second: l,
            millisecond: u
        }, t)
    }
    static fromJSDate(t, r={}) {
        const a = $U(t) ? t.valueOf() : NaN;
        if (Number.isNaN(a))
            return tt.invalid("invalid input");
        const n = ho(r.zone, cr.defaultZone);
        return n.isValid ? new tt({
            ts: a,
            zone: n,
            loc: Yt.fromObject(r)
        }) : tt.invalid(Hd(n))
    }
    static fromMillis(t, r={}) {
        if (ms(t))
            return t < -E1 || t > E1 ? tt.invalid("Timestamp out of range") : new tt({
                ts: t,
                zone: ho(r.zone, cr.defaultZone),
                loc: Yt.fromObject(r)
            });
        throw new sn(`fromMillis requires a numerical input, but received a ${typeof t} with value ${t}`)
    }
    static fromSeconds(t, r={}) {
        if (ms(t))
            return new tt({
                ts: t * 1e3,
                zone: ho(r.zone, cr.defaultZone),
                loc: Yt.fromObject(r)
            });
        throw new sn("fromSeconds requires a numerical input")
    }
    static fromObject(t, r={}) {
        t = t || {};
        const a = ho(r.zone, cr.defaultZone);
        if (!a.isValid)
            return tt.invalid(Hd(a));
        const n = cr.now()
          , i = Ct(r.specificOffset) ? a.offset(n) : r.specificOffset
          , o = xh(t, M1)
          , s = !Ct(o.ordinal)
          , l = !Ct(o.year)
          , u = !Ct(o.month) || !Ct(o.day)
          , c = l || u
          , d = o.weekYear || o.weekNumber
          , v = Yt.fromObject(r);
        if ((c || s) && d)
            throw new Yu("Can't mix weekYear/weekNumber units with year/month/day or ordinals");
        if (u && s)
            throw new Yu("Can't mix ordinal dates with month/day");
        const h = d || o.weekday && !c;
        let p, f, _ = k1(n, i);
        h ? (p = pO,
        f = mO,
        _ = aw(_)) : s ? (p = yO,
        f = fO,
        _ = fp(_)) : (p = pE,
        f = fE);
        let y = !1;
        for (const E of p) {
            const k = o[E];
            Ct(k) ? y ? o[E] = f[E] : o[E] = _[E] : y = !0
        }
        const g = h ? vO(o) : s ? hO(o) : vE(o)
          , m = g || hE(o);
        if (m)
            return tt.invalid(m);
        const w = h ? x1(o) : s ? A1(o) : o
          , [C,b] = Fv(w, i, a)
          , x = new tt({
            ts: C,
            zone: a,
            o: b,
            loc: v
        });
        return o.weekday && c && t.weekday !== x.weekday ? tt.invalid("mismatched weekday", `you can't specify both a weekday of ${o.weekday} and a date of ${x.toISO()}`) : x
    }
    static fromISO(t, r={}) {
        const [a,n] = IF(t);
        return Ru(a, n, r, "ISO 8601", t)
    }
    static fromRFC2822(t, r={}) {
        const [a,n] = DF(t);
        return Ru(a, n, r, "RFC 2822", t)
    }
    static fromHTTP(t, r={}) {
        const [a,n] = UF(t);
        return Ru(a, n, r, "HTTP", r)
    }
    static fromFormat(t, r, a={}) {
        if (Ct(t) || Ct(r))
            throw new sn("fromFormat requires an input string and a format");
        const {locale: n=null, numberingSystem: i=null} = a
          , o = Yt.fromOpts({
            locale: n,
            numberingSystem: i,
            defaultToEN: !0
        })
          , [s,l,u,c] = dO(o, t, r);
        return c ? tt.invalid(c) : Ru(s, l, a, `format ${r}`, t, u)
    }
    static fromString(t, r, a={}) {
        return tt.fromFormat(t, r, a)
    }
    static fromSQL(t, r={}) {
        const [a,n] = qF(t);
        return Ru(a, n, r, "SQL", t)
    }
    static invalid(t, r=null) {
        if (!t)
            throw new sn("need to specify a reason the DateTime is invalid");
        const a = t instanceof Fn ? t : new Fn(t,r);
        if (cr.throwOnInvalid)
            throw new gU(a);
        return new tt({
            invalid: a
        })
    }
    static isDateTime(t) {
        return t && t.isLuxonDateTime || !1
    }
    static parseFormatForOpts(t, r={}) {
        const a = oE(t, Yt.fromObject(r));
        return a ? a.map(n => n ? n.val : null).join("") : null
    }
    static expandFormat(t, r={}) {
        return nE(Yr.parseFormat(t), Yt.fromObject(r)).map(n => n.val).join("")
    }
    get(t) {
        return this[t]
    }
    get isValid() {
        return this.invalid === null
    }
    get invalidReason() {
        return this.invalid ? this.invalid.reason : null
    }
    get invalidExplanation() {
        return this.invalid ? this.invalid.explanation : null
    }
    get locale() {
        return this.isValid ? this.loc.locale : null
    }
    get numberingSystem() {
        return this.isValid ? this.loc.numberingSystem : null
    }
    get outputCalendar() {
        return this.isValid ? this.loc.outputCalendar : null
    }
    get zone() {
        return this._zone
    }
    get zoneName() {
        return this.isValid ? this.zone.name : null
    }
    get year() {
        return this.isValid ? this.c.year : NaN
    }
    get quarter() {
        return this.isValid ? Math.ceil(this.c.month / 3) : NaN
    }
    get month() {
        return this.isValid ? this.c.month : NaN
    }
    get day() {
        return this.isValid ? this.c.day : NaN
    }
    get hour() {
        return this.isValid ? this.c.hour : NaN
    }
    get minute() {
        return this.isValid ? this.c.minute : NaN
    }
    get second() {
        return this.isValid ? this.c.second : NaN
    }
    get millisecond() {
        return this.isValid ? this.c.millisecond : NaN
    }
    get weekYear() {
        return this.isValid ? yp(this).weekYear : NaN
    }
    get weekNumber() {
        return this.isValid ? yp(this).weekNumber : NaN
    }
    get weekday() {
        return this.isValid ? yp(this).weekday : NaN
    }
    get ordinal() {
        return this.isValid ? fp(this.c).ordinal : NaN
    }
    get monthShort() {
        return this.isValid ? Gd.months("short", {
            locObj: this.loc
        })[this.month - 1] : null
    }
    get monthLong() {
        return this.isValid ? Gd.months("long", {
            locObj: this.loc
        })[this.month - 1] : null
    }
    get weekdayShort() {
        return this.isValid ? Gd.weekdays("short", {
            locObj: this.loc
        })[this.weekday - 1] : null
    }
    get weekdayLong() {
        return this.isValid ? Gd.weekdays("long", {
            locObj: this.loc
        })[this.weekday - 1] : null
    }
    get offset() {
        return this.isValid ? +this.o : NaN
    }
    get offsetNameShort() {
        return this.isValid ? this.zone.offsetName(this.ts, {
            format: "short",
            locale: this.locale
        }) : null
    }
    get offsetNameLong() {
        return this.isValid ? this.zone.offsetName(this.ts, {
            format: "long",
            locale: this.locale
        }) : null
    }
    get isOffsetFixed() {
        return this.isValid ? this.zone.isUniversal : null
    }
    get isInDST() {
        return this.isOffsetFixed ? !1 : this.offset > this.set({
            month: 1,
            day: 1
        }).offset || this.offset > this.set({
            month: 5
        }).offset
    }
    get isInLeapYear() {
        return Qc(this.year)
    }
    get daysInMonth() {
        return Ch(this.year, this.month)
    }
    get daysInYear() {
        return this.isValid ? uc(this.year) : NaN
    }
    get weeksInWeekYear() {
        return this.isValid ? Sh(this.weekYear) : NaN
    }
    resolvedLocaleOptions(t={}) {
        const {locale: r, numberingSystem: a, calendar: n} = Yr.create(this.loc.clone(t), t).resolvedOptions(this);
        return {
            locale: r,
            numberingSystem: a,
            outputCalendar: n
        }
    }
    toUTC(t=0, r={}) {
        return this.setZone(ia.instance(t), r)
    }
    toLocal() {
        return this.setZone(cr.defaultZone)
    }
    setZone(t, {keepLocalTime: r=!1, keepCalendarTime: a=!1}={}) {
        if (t = ho(t, cr.defaultZone),
        t.equals(this.zone))
            return this;
        if (t.isValid) {
            let n = this.ts;
            if (r || a) {
                const i = t.offset(this.ts)
                  , o = this.toObject();
                [n] = Fv(o, i, t)
            }
            return Bu(this, {
                ts: n,
                zone: t
            })
        } else
            return tt.invalid(Hd(t))
    }
    reconfigure({locale: t, numberingSystem: r, outputCalendar: a}={}) {
        const n = this.loc.clone({
            locale: t,
            numberingSystem: r,
            outputCalendar: a
        });
        return Bu(this, {
            loc: n
        })
    }
    setLocale(t) {
        return this.reconfigure({
            locale: t
        })
    }
    set(t) {
        if (!this.isValid)
            return this;
        const r = xh(t, M1)
          , a = !Ct(r.weekYear) || !Ct(r.weekNumber) || !Ct(r.weekday)
          , n = !Ct(r.ordinal)
          , i = !Ct(r.year)
          , o = !Ct(r.month) || !Ct(r.day)
          , s = i || o
          , l = r.weekYear || r.weekNumber;
        if ((s || n) && l)
            throw new Yu("Can't mix weekYear/weekNumber units with year/month/day or ordinals");
        if (o && n)
            throw new Yu("Can't mix ordinal dates with month/day");
        let u;
        a ? u = x1({
            ...aw(this.c),
            ...r
        }) : Ct(r.ordinal) ? (u = {
            ...this.toObject(),
            ...r
        },
        Ct(r.day) && (u.day = Math.min(Ch(u.year, u.month), u.day))) : u = A1({
            ...fp(this.c),
            ...r
        });
        const [c,d] = Fv(u, this.o, this.zone);
        return Bu(this, {
            ts: c,
            o: d
        })
    }
    plus(t) {
        if (!this.isValid)
            return this;
        const r = xt.fromDurationLike(t);
        return Bu(this, T1(this, r))
    }
    minus(t) {
        if (!this.isValid)
            return this;
        const r = xt.fromDurationLike(t).negate();
        return Bu(this, T1(this, r))
    }
    startOf(t) {
        if (!this.isValid)
            return this;
        const r = {}
          , a = xt.normalizeUnit(t);
        switch (a) {
        case "years":
            r.month = 1;
        case "quarters":
        case "months":
            r.day = 1;
        case "weeks":
        case "days":
            r.hour = 0;
        case "hours":
            r.minute = 0;
        case "minutes":
            r.second = 0;
        case "seconds":
            r.millisecond = 0;
            break
        }
        if (a === "weeks" && (r.weekday = 1),
        a === "quarters") {
            const n = Math.ceil(this.month / 3);
            r.month = (n - 1) * 3 + 1
        }
        return this.set(r)
    }
    endOf(t) {
        return this.isValid ? this.plus({
            [t]: 1
        }).startOf(t).minus(1) : this
    }
    toFormat(t, r={}) {
        return this.isValid ? Yr.create(this.loc.redefaultToEN(r)).formatDateTimeFromString(this, t) : pp
    }
    toLocaleString(t=bh, r={}) {
        return this.isValid ? Yr.create(this.loc.clone(r), t).formatDateTime(this) : pp
    }
    toLocaleParts(t={}) {
        return this.isValid ? Yr.create(this.loc.clone(t), t).formatDateTimeParts(this) : []
    }
    toISO({format: t="extended", suppressSeconds: r=!1, suppressMilliseconds: a=!1, includeOffset: n=!0, extendedZone: i=!1}={}) {
        if (!this.isValid)
            return null;
        const o = t === "extended";
        let s = wp(this, o);
        return s += "T",
        s += N1(this, o, r, a, n, i),
        s
    }
    toISODate({format: t="extended"}={}) {
        return this.isValid ? wp(this, t === "extended") : null
    }
    toISOWeekDate() {
        return Wd(this, "kkkk-'W'WW-c")
    }
    toISOTime({suppressMilliseconds: t=!1, suppressSeconds: r=!1, includeOffset: a=!0, includePrefix: n=!1, extendedZone: i=!1, format: o="extended"}={}) {
        return this.isValid ? (n ? "T" : "") + N1(this, o === "extended", r, t, a, i) : null
    }
    toRFC2822() {
        return Wd(this, "EEE, dd LLL yyyy HH:mm:ss ZZZ", !1)
    }
    toHTTP() {
        return Wd(this.toUTC(), "EEE, dd LLL yyyy HH:mm:ss 'GMT'")
    }
    toSQLDate() {
        return this.isValid ? wp(this, !0) : null
    }
    toSQLTime({includeOffset: t=!0, includeZone: r=!1, includeOffsetSpace: a=!0}={}) {
        let n = "HH:mm:ss.SSS";
        return (r || t) && (a && (n += " "),
        r ? n += "z" : t && (n += "ZZ")),
        Wd(this, n, !0)
    }
    toSQL(t={}) {
        return this.isValid ? `${this.toSQLDate()} ${this.toSQLTime(t)}` : null
    }
    toString() {
        return this.isValid ? this.toISO() : pp
    }
    valueOf() {
        return this.toMillis()
    }
    toMillis() {
        return this.isValid ? this.ts : NaN
    }
    toSeconds() {
        return this.isValid ? this.ts / 1e3 : NaN
    }
    toUnixInteger() {
        return this.isValid ? Math.floor(this.ts / 1e3) : NaN
    }
    toJSON() {
        return this.toISO()
    }
    toBSON() {
        return this.toJSDate()
    }
    toObject(t={}) {
        if (!this.isValid)
            return {};
        const r = {
            ...this.c
        };
        return t.includeConfig && (r.outputCalendar = this.outputCalendar,
        r.numberingSystem = this.loc.numberingSystem,
        r.locale = this.loc.locale),
        r
    }
    toJSDate() {
        return new Date(this.isValid ? this.ts : NaN)
    }
    diff(t, r="milliseconds", a={}) {
        if (!this.isValid || !t.isValid)
            return xt.invalid("created by diffing an invalid DateTime");
        const n = {
            locale: this.locale,
            numberingSystem: this.numberingSystem,
            ...a
        }
          , i = zU(r).map(xt.normalizeUnit)
          , o = t.valueOf() > this.valueOf()
          , s = o ? this : t
          , l = o ? t : this
          , u = KF(s, l, i, n);
        return o ? u.negate() : u
    }
    diffNow(t="milliseconds", r={}) {
        return this.diff(tt.now(), t, r)
    }
    until(t) {
        return this.isValid ? nr.fromDateTimes(this, t) : this
    }
    hasSame(t, r) {
        if (!this.isValid)
            return !1;
        const a = t.valueOf()
          , n = this.setZone(t.zone, {
            keepLocalTime: !0
        });
        return n.startOf(r) <= a && a <= n.endOf(r)
    }
    equals(t) {
        return this.isValid && t.isValid && this.valueOf() === t.valueOf() && this.zone.equals(t.zone) && this.loc.equals(t.loc)
    }
    toRelative(t={}) {
        if (!this.isValid)
            return null;
        const r = t.base || tt.fromObject({}, {
            zone: this.zone
        })
          , a = t.padding ? this < r ? -t.padding : t.padding : 0;
        let n = ["years", "months", "days", "hours", "minutes", "seconds"]
          , i = t.unit;
        return Array.isArray(t.unit) && (n = t.unit,
        i = void 0),
        D1(r, this.plus(a), {
            ...t,
            numeric: "always",
            units: n,
            unit: i
        })
    }
    toRelativeCalendar(t={}) {
        return this.isValid ? D1(t.base || tt.fromObject({}, {
            zone: this.zone
        }), this, {
            ...t,
            numeric: "auto",
            units: ["years", "months", "days"],
            calendary: !0
        }) : null
    }
    static min(...t) {
        if (!t.every(tt.isDateTime))
            throw new sn("min requires all arguments be DateTimes");
        return y1(t, r => r.valueOf(), Math.min)
    }
    static max(...t) {
        if (!t.every(tt.isDateTime))
            throw new sn("max requires all arguments be DateTimes");
        return y1(t, r => r.valueOf(), Math.max)
    }
    static fromFormatExplain(t, r, a={}) {
        const {locale: n=null, numberingSystem: i=null} = a
          , o = Yt.fromOpts({
            locale: n,
            numberingSystem: i,
            defaultToEN: !0
        });
        return iE(o, t, r)
    }
    static fromStringExplain(t, r, a={}) {
        return tt.fromFormatExplain(t, r, a)
    }
    static get DATE_SHORT() {
        return bh
    }
    static get DATE_MED() {
        return gA
    }
    static get DATE_MED_WITH_WEEKDAY() {
        return CU
    }
    static get DATE_FULL() {
        return _A
    }
    static get DATE_HUGE() {
        return bA
    }
    static get TIME_SIMPLE() {
        return CA
    }
    static get TIME_WITH_SECONDS() {
        return SA
    }
    static get TIME_WITH_SHORT_OFFSET() {
        return xA
    }
    static get TIME_WITH_LONG_OFFSET() {
        return AA
    }
    static get TIME_24_SIMPLE() {
        return EA
    }
    static get TIME_24_WITH_SECONDS() {
        return kA
    }
    static get TIME_24_WITH_SHORT_OFFSET() {
        return TA
    }
    static get TIME_24_WITH_LONG_OFFSET() {
        return NA
    }
    static get DATETIME_SHORT() {
        return MA
    }
    static get DATETIME_SHORT_WITH_SECONDS() {
        return IA
    }
    static get DATETIME_MED() {
        return DA
    }
    static get DATETIME_MED_WITH_SECONDS() {
        return UA
    }
    static get DATETIME_MED_WITH_WEEKDAY() {
        return SU
    }
    static get DATETIME_FULL() {
        return FA
    }
    static get DATETIME_FULL_WITH_SECONDS() {
        return OA
    }
    static get DATETIME_HUGE() {
        return PA
    }
    static get DATETIME_HUGE_WITH_SECONDS() {
        return BA
    }
}
function Lu(e) {
    if (tt.isDateTime(e))
        return e;
    if (e && e.valueOf && ms(e.valueOf()))
        return tt.fromJSDate(e);
    if (e && typeof e == "object")
        return tt.fromObject(e);
    throw new sn(`Unknown datetime argument: ${e}, of type ${typeof e}`)
}
const Dc = e => {
    if (!e)
        throw new Error("Missing Date");
    const o = {
        MonthYearShort: {
            to: s => s.toFormat("MM/yy"),
            from: s => tt.fromFormat(s, "MM/yy")
        },
        MonthDayYear: {
            to: s => s.toFormat("MM/dd/yyyy"),
            from: s => tt.fromFormat(s, "MM/dd/yyyy")
        },
        YearMonthDay: {
            to: s => s.toFormat("yyyy-MM-dd"),
            from: s => tt.fromFormat(s, "yyyy-MM-dd")
        },
        ISO: {
            to: s => s.toISO(),
            from: s => tt.fromISO(s)
        },
        UNIX: {
            to: s => s.toUnixInteger(),
            from: s => tt.fromSeconds(s)
        }
    };
    return {
        from: s => {
            const l = o[s];
            if (!l)
                throw new Error(`Invalid Date Format: ${s}`);
            return l.from(e)
        }
        ,
        to: s => {
            const l = o[s];
            if (!l)
                throw new Error(`Invalid Date Format: ${s}`);
            return l.to(e)
        }
    }
}
  , e2 = (e, t="MonthDayYear") => t !== "ISO" && e.length !== 10 && t !== "MonthYearShort" && e.length !== 5 ? !1 : Dc(e).from(t).isValid
  , wO = (e, {minAge: t, maxAge: r, format: a}) => {
    const i = -Dc(e).from(a).diffNow("years").years;
    return i >= t && i <= r
}
  , F1 = (e, t=null) => {
    const r = Dc(e.date).from(e.format)
      , a = t ? Dc(t.date).from(t.format) : tt.local();
    return a.startOf("day").toMillis() === r.startOf("day").toMillis() ? "same" : r < a ? "before" : "after"
}
  , t2 = (e, t="MonthDayYear") => {
    const r = Dc(e).from(t)
      , a = tt.now();
    return parseInt(r.diff(a, "months").toObject().months)
}
  , gO = /^[a-zA-Z0-9\s\.\(\)\/\-#]{3,50}$/
  , _O = new RegExp(/^ *((#\d+)|((box|bin)[-. \/\\]?\d+)|(.*p[ \.]? ?(o|0)[-. \/\\]? *-?((box|bin)|(#|num)?\d+))|(p(ost)? *(o(ff(ice)?)?)? *((box|bin)|b)? *\d+)|(p *-?\/?(o)? *-?box)|post office box|post-office box|((box|bin)|b) *(number|num|#)? *\d+|(num|number|#) *\d+)/,"i")
  , bO = ks().matches(gO, "Please enter a valid address").test("No PO Box", "We do not allow PO Boxes", e => !_O.test(e))
  , CO = async e => {
    try {
        return await ks().matches(/^[A-Za-z0-9\.'\-\s]{2,50}$/).validate(e),
        !0
    } catch {
        return !1
    }
}
  , SO = async e => {
    try {
        return await ks().matches(/[A-z]/).validate(e),
        !0
    } catch {
        return !1
    }
}
  , xO = async e => {
    try {
        const t = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
        return await ks().matches(t).validate(e),
        !0
    } catch {
        return !1
    }
}
  , AO = async e => {
    try {
        const t = /^[0-9]{10}$/;
        return await ks().matches(t).validate(e),
        !0
    } catch {
        return !1
    }
}
  , EO = async e => {
    try {
        return e ? (await bO.validate(e),
        {
            isValid: !0
        }) : !0
    } catch (t) {
        return {
            isValid: !1,
            message: t.message
        }
    }
}
  , kO = e => e2(e) ? {
    isValid: !0
} : {
    isValid: !1,
    message: "Please enter a valid date."
}
  , TO = (e, {minAge: t=18, maxAge: r=102, format: a="MonthDayYear"}) => e2(e) ? wO(e, {
    minAge: t,
    maxAge: r,
    format: a
}) ? {
    isValid: !0
} : {
    isValid: !1,
    message: `You must be between the ages of ${t} and ${r}.`
} : {
    isValid: !1,
    message: "Please enter a valid date."
}
  , NO = async (e, t=1) => {
    try {
        return await ks().min(t).validate(e),
        !0
    } catch {
        return !1
    }
}
  , Vo = {
    name: CO,
    middleInitial: SO,
    email: xO,
    phone: AO,
    streetAddress: EO,
    date: kO,
    dateOfBirth: TO,
    number: NO
}
  , MO = async e => await Vo.name(e) || "We only accept letters, dashes, apostrophes and spaces."
  , IO = async e => await Vo.middleInitial(e) || "Please enter a letter for midding initial."
  , DO = async e => await Vo.email(e) || "Please enter a valid email address."
  , UO = async e => await Vo.phone(e) || "Please enter a valid phone number."
  , FO = async e => {
    const t = await Vo.streetAddress(e);
    return t.isValid || t.message
}
  , OO = async e => {
    const t = Vo.date(e);
    return t.isValid || t.message
}
  , PO = async (e, t) => {
    const r = Vo.dateOfBirth(e, t);
    return r.isValid || r.message
}
  , BO = async e => await Vo.number(e, 5) || "Please enter a valid zip."
  , RO = {
    text: {
        type: "text",
        keyboardType: "text"
    },
    number: {
        type: "tel",
        keyboardType: "numeric"
    },
    name: {
        type: "text",
        keyboardType: "text",
        validate: e => MO(e)
    },
    middle: {
        type: "text",
        keyboardType: "text",
        validate: e => IO(e)
    },
    email: {
        type: "text",
        keyboardType: "email",
        validate: e => DO(e)
    },
    date: {
        type: "tel",
        keyboardType: "numeric",
        options: N_,
        validate: e => OO(e)
    },
    dateOfBirth: {
        type: "tel",
        keyboardType: "numeric",
        options: N_,
        validate: (e, t) => PO(e, t)
    },
    phone: {
        type: "tel",
        keyboardType: "numeric",
        options: VD,
        validate: e => UO(e)
    },
    address: {
        type: "text",
        keyboardType: "text",
        validate: e => FO(e)
    },
    zip: {
        type: "tel",
        keyboardType: "numeric",
        validate: e => BO(e)
    }
}
  , LO = ({type: e, name: t}) => {
    const r = RO[e];
    if (!r)
        throw new Error(`Invalid input type for: ${t}`);
    return r
}
;
function Ee(e) {
    const {type: t, name: r, control: a, errors: n, label: i, placeholder: o, message: s, maxLength: l, isRequired: u, onFocus: c, onBlur: d, onChange: v, customValidate: h, mask: p, tooltipText: f} = e
      , _ = q.useMemo( () => LO({
        type: t,
        name: r
    }), [t, r])
      , y = (m, w) => (m && m(w),
    w)
      , g = q.useCallback( (m, w) => h ? h(m) : _.validate ? _.validate(m, w) : null, [h, _]);
    return S.jsx(au, {
        name: r,
        control: a,
        defaultValue: e.value || "",
        rules: {
            required: u ? "This field is required" : !1,
            validate: m => !g || !u && !m ? !0 : g(m, e)
        },
        render: ({field: m}) => S.jsx(Yc, {
            name: r,
            value: m.value,
            type: _.type,
            inputMode: _.keyboardType,
            options: p ?? _.options,
            onFocus: c,
            onBlur: d,
            onChange: w => m.onChange(y(v, w)),
            label: i,
            placeholder: o,
            isValid: !n || Object.keys(n).length === 0,
            message: s,
            maxLength: l,
            tooltipText: f,
            isRequired: u
        })
    })
}
Ee.propTypes = {
    name: Pa.string.isRequired,
    control: Pa.object.isRequired,
    label: Pa.string.isRequired,
    value: Pa.string,
    placeholder: Pa.string,
    message: Pa.string,
    maxLength: Pa.number
};
function zm(e) {
    const {control: t, name: r, checked: a, isRequired: n, onChange: i, setValue: o, children: s, message: l} = e
      , u = c => {
        i && i(c),
        o(r, c)
    }
    ;
    return S.jsx(au, {
        name: r,
        control: t,
        defaultValue: a,
        rules: {
            required: n ? "You must accept the above terms" : !1,
            validate: c => c
        },
        render: ({field: c}) => S.jsxs("label", {
            className: "checkbox__container",
            children: [S.jsx("input", {
                className: "checkbox__checkmark-input",
                type: "checkbox",
                checked: c.value,
                "aria-checked": c.value,
                onChange: () => u(!c.value)
            }), S.jsx("div", {
                className: "checkbox__checkmark-container",
                children: c.value && S.jsx("div", {
                    className: "checkbox__checked",
                    children: S.jsx("div", {
                        className: "checkbox__checkmark"
                    })
                })
            }), S.jsxs("div", {
                className: "checkbox__label-container",
                children: [S.jsx("div", {
                    className: "checkbox__label",
                    children: s
                }), !!l && S.jsx("div", {
                    className: "checkbox__error-message-container",
                    children: S.jsxs("div", {
                        className: "checkbox__error-message-content",
                        children: [S.jsx("img", {
                            src: "/static/assets/images/icons/input-error.svg"
                        }), S.jsx("p", {
                            className: "checkbox__error-message",
                            children: l
                        })]
                    })
                })]
            })]
        })
    })
}
const qO = {
    API_BASE_URL: "https://api-testing.collegeavestudentloans.com",
    PREQUAL_DE: "6C1F2B30-95C6-4ED0-A074-0ADA1F7AEE9D",
    RATES_URL: "https://casl-web-data-storage.s3.amazonaws.com/development/rates",
    ENCRYPT_KEY: "b226558d90684728c6c8dd9bc57e2e99"
}
  , VO = {
    API_BASE_URL: "https://api-staging.collegeavestudentloans.com",
    PREQUAL_DE: "6C1F2B30-95C6-4ED0-A074-0ADA1F7AEE9D",
    RATES_URL: "https://casl-web-data-storage.s3.amazonaws.com/development/rates",
    ENCRYPT_KEY: "b226558d90684728c6c8dd9bc57e2e99"
}
  , $O = {
    API_BASE_URL: "https://api.collegeavestudentloans.com",
    PREQUAL_DE: "DE_PreQual_2018",
    RATES_URL: "https://casl-web-data-storage.s3.amazonaws.com/production/rates",
    ENCRYPT_KEY: "b226558d90684728c6c8dd9bc57e2e99"
}
  , zO = {
    testing: qO,
    development: VO,
    production: $O
}
  , yE = "production"
  , {API_BASE_URL: Uo, PREQUAL_DE: GO, RATES_URL: wE} = zO[yE]
  , jO = {
    student: "I am a student",
    graduate: "I am a graduate student"
};
function HO({applicantType: e, sourceCode: t}) {
    return t === "CAPA01" ? "I am a parent" : e === "cosigner" ? "I am a cosigner" : t === "CAIS03" ? jO[e] : t === "CAIS01" ? "I am an undergraduate student" : "I am a graduate student"
}
async function WO(e) {
    return await za.post(`${Uo}/v1/prequalify/result`, e)
}
async function YO(e) {
    const t = await za.get("/wp-json/rates-api/advertised-date/");
    e({
        type: "SET_ADVERTISED_DATE",
        payload: t
    })
}
async function gE(e) {
    try {
        const {applicantType: t, sourceCode: r, userData: a, result: n} = e
          , i = {
            dataExtensionType: "prequalify",
            dataExtensionKey: GO,
            userType: t,
            email: a.email,
            firstName: a.firstname,
            lastName: a.lastname,
            address: a.address,
            zipCode: a.zip,
            sourceCode: r,
            productType: r.substring(2, 4),
            result: n
        };
        za.put(`${Uo}/v1/crm/record`, i)
    } catch {
        return
    }
}
function JO({sendEvent: e, onSuccess: t, onError: r, state: a}) {
    var c, d, v, h, p, f, _, y;
    const {control: n, formState: {errors: i, isSubmitting: o}, setValue: s, handleSubmit: l} = Cr()
      , u = HO(a);
    return S.jsxs(S.Fragment, {
        children: [S.jsxs("div", {
            className: "prequalify-screen__text-container",
            children: [S.jsx("h2", {
                className: "h2",
                children: u
            }), S.jsx("div", {
                className: "prequalify-screen__text-container--paragraphs",
                children: S.jsx("p", {
                    className: "p-large",
                    children: "We'll tell you whether your credit pre-qualifies for a loan, and what interest rates you can personally expect before you apply, without impacting your credit score."
                })
            })]
        }), S.jsxs("form", {
            className: "prequalify-form",
            onSubmit: g => g.preventDefault(),
            children: [S.jsxs("div", {
                className: "prequalify-form__inputs-container",
                children: [S.jsxs("p", {
                    className: "p-xsmall",
                    children: ["Required fields", S.jsx("sup", {
                        children: "*"
                    })]
                }), S.jsx("div", {
                    className: "prequalify-form__row",
                    children: S.jsx(Ee, {
                        name: "firstname",
                        type: "name",
                        control: n,
                        label: "First Name",
                        errors: i.firstname,
                        onBlur: () => e("First Name"),
                        message: ((c = i.firstname) == null ? void 0 : c.message) || "",
                        isRequired: !0
                    })
                }), S.jsx("div", {
                    className: "prequalify-form__row",
                    children: S.jsx(Ee, {
                        name: "lastname",
                        type: "name",
                        control: n,
                        label: "Last Name*",
                        errors: i.lastname,
                        onBlur: () => e("Last Name"),
                        message: ((d = i.lastname) == null ? void 0 : d.message) || "",
                        isRequired: !0
                    })
                }), S.jsxs("div", {
                    className: "prequalify-form__row",
                    children: [S.jsx(Ee, {
                        name: "middle",
                        type: "middle",
                        control: n,
                        label: "MI",
                        maxLength: 1,
                        errors: i.middle,
                        onBlur: () => e("MI"),
                        message: ((v = i.middle) == null ? void 0 : v.message) || ""
                    }), S.jsx(Ee, {
                        name: "dob",
                        type: "dateOfBirth",
                        control: n,
                        label: "DOB(mm/dd/yyyy)*",
                        errors: i.dob,
                        onBlur: () => e("DOB MM/DD/YYYY"),
                        message: ((h = i.dob) == null ? void 0 : h.message) || "",
                        minAge: 16,
                        isRequired: !0
                    })]
                }), S.jsx("div", {
                    className: "prequalify-form__row",
                    children: S.jsx(Ee, {
                        name: "address",
                        type: "address",
                        control: n,
                        label: "Street Address*",
                        errors: i.address,
                        onBlur: () => e("Street Address"),
                        message: ((p = i.address) == null ? void 0 : p.message) || "",
                        isRequired: !0
                    })
                }), S.jsxs("div", {
                    className: "prequalify-form__row",
                    children: [S.jsx(Ee, {
                        name: "zip",
                        type: "zip",
                        control: n,
                        label: "Zip Code*",
                        maxLength: 5,
                        errors: i.zip,
                        onBlur: () => e("Zip Code"),
                        message: ((f = i.zip) == null ? void 0 : f.message) || "",
                        isRequired: !0
                    }), S.jsx(Ee, {
                        name: "email",
                        type: "email",
                        control: n,
                        label: "Email Address*",
                        errors: i.email,
                        onBlur: () => e("Email Address"),
                        message: ((_ = i.email) == null ? void 0 : _.message) || "",
                        isRequired: !0
                    })]
                }), S.jsx("div", {
                    className: "prequalify-form__row",
                    children: S.jsxs(zm, {
                        name: "terms",
                        control: n,
                        setValue: s,
                        errors: i.terms,
                        onChange: () => e("Terms & Conditions Checkbox"),
                        message: ((y = i.terms) == null ? void 0 : y.message) || "",
                        isRequired: !0,
                        children: [S.jsx("p", {
                            className: "p-xsmall",
                            children: "*By checking here, I understand and agree that I am providing 'written instructions' to Afri Fund Universty Lender under the Fair Credit Reporting Act authorizing Afri Fund Universty Lender to obtain information from my personal credit profile or other information from Experian, solely to conduct a pre-qualification for credit, I know that this is not an application and will not impact my credit score."
                        }), S.jsx("p", {
                            className: "p-xsmall",
                            children: "By providing your email address, you agree to our Privacy Policy, and you give Afri Fund Universty Lender permission to contact you. Afri Fund Universty Lender respects your inbox and will only send periodic emails."
                        })]
                    })
                })]
            }), S.jsx(Re, {
                className: "button button__dark-teal button__width-203 dropshadow dropshadow__hover-off",
                onClick: l(t, r),
                isLoading: o,
                children: "Prequalify"
            })]
        })]
    })
}
const KO = () => S.jsx("p", {
    className: "p-large",
    children: "Based on your information, you are pre-qualified to cosign an undergraduate loan with your student instead. You're not pre-qualified to apply for our parent loan at this time."
})
  , QO = () => S.jsxs("p", {
    className: "p-large",
    children: ["You are not pre-qualified to apply for a loan at this time. You may want to consider the federal Direct Parent PLUS loan. Visit ", S.jsx("a", {
        href: "https://hef.co.ke",
        target: "_blank",
        children: "https://hef.co.ke"
    }), " for more details."]
})
  , ZO = () => S.jsx("p", {
    className: "p-large",
    children: "Based on the information you entered, we couldn't find a match to pre-qualify you. You're still eligible to apply for this loan."
})
  , XO = () => S.jsx("p", {
    className: "p-large",
    children: "Our pre-qualification tool is temporarily down for maintenance. But don't worry, we'll have it back up shortly. If you're ready to get started, apply online in 3 minutes and get an instant credit decision."
})
  , eP = ({status: e}) => {
    const r = {
        withCosigner: KO,
        noOffer: QO,
        noMatch: ZO,
        MaintenanceMode: XO
    }[e];
    return S.jsx(r, {})
}
  , tP = {
    withCosigner: ["You're not pre-qualified for this loan on your own, but we recommend applying with a cosigner who has good credit. Don't worry - it's common for students with limited credit history to need a cosigner for a private student loan.", "You can apply today, and we'll give you the option during the application to invite your cosigner. Your cosigner can finish applying now or whenever it's convenient; you don't have to be together."],
    noOffer: ["You are not pre-qualified to apply for a loan at this time."],
    noMatch: ["Based on the information you entered, we couldn't find a match to pre-qualify you. You're still eligible to apply for this loan. If your student is with you, you can apply now!"],
    MaintenanceMode: ["Our pre-qualification tool is temporarily down for maintenance. But don't worry, we'll have it back up shortly. If you're ready to get started, apply online in 3 minutes and get an instant credit decision."]
};
function rP({state: e}) {
    const {sourceCode: t, result: r} = e;
    return q.useEffect( () => {
        gE(e)
    }
    , []),
    S.jsxs("div", {
        className: "prequalify-screen__results-view",
        children: [S.jsxs("div", {
            className: "prequalify-screen__text-container",
            children: [S.jsx("h2", {
                className: "h2",
                children: "Sorry,"
            }), S.jsxs("div", {
                className: "prequalify-screen__text-container--paragraphs",
                children: [t === "CAPA01" && S.jsx(eP, {
                    status: r.status
                }), t !== "CAPA01" && S.jsx(S.Fragment, {
                    children: tP[r.status].map( (a, n) => S.jsx("p", {
                        className: "p-large",
                        children: a
                    }, n))
                })]
            })]
        }), S.jsxs("div", {
            className: "prequalify-screen__decline-buttons-container",
            children: [S.jsx(Ga, {
                href: `/application/?ACT=US&SC=${t}`,
                className: "button button__dark-teal button__width-205 button__mobile-full-width",
                label: "Apply Now"
            }), S.jsxs(Ga, {
                href: "/articles/private-student-loan-cosigner/",
                className: "arrow-link",
                children: ["Learn About Getting A ", S.jsxs("span", {
                    class: "arrow-link__anchor",
                    children: ["Cosigner", S.jsx("svg", {
                        width: "16",
                        height: "14",
                        viewBox: "0 0 16 14",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: S.jsx("path", {
                            d: "M7.47332 10.7722L3.21807 6.3278C2.92731 6.02398 2.92731 5.53155 3.21807 5.22786C3.50884 4.92405 3.98043 4.92405 4.27119 5.22786L8 9.12246L11.7288 5.22786C12.0196 4.92405 12.4912 4.92405 12.7819 5.22786C13.0727 5.53156 13.0727 6.02399 12.7819 6.3278L8.52668 10.7722C8.23591 11.0759 7.76408 11.0759 7.47332 10.7722Z",
                            fill: "#002769"
                        })
                    })]
                })]
            })]
        })]
    })
}
function aP({state: e}) {
    const {result: t, sourceCode: r, advertisedDate: a} = e;
    return q.useEffect( () => {
        gE(e)
    }
    , []),
    S.jsxs("div", {
        className: "prequalify-screen__results-view",
        children: [S.jsxs("div", {
            className: "prequalify-screen__text-container",
            children: [S.jsx("h2", {
                className: "h2",
                children: "Congratulations, you're pre-qualified!"
            }), S.jsxs("div", {
                className: "prequalify-screen__text-container--paragraphs",
                children: [S.jsxs("p", {
                    className: "p-large",
                    children: ["Based on your pre-qualification, your starting variable interest rate will likely be between ", S.jsx("strong", {
                        style: {
                            display: "inline-block"
                        },
                        children: t.variableRange
                    }), " and your fixed interest rate will likely be between ", S.jsx("strong", {
                        style: {
                            display: "inline-block"
                        },
                        children: t.fixedRange
                    }), " depending on your final application information and repayment plan that you select."]
                }), S.jsx("p", {
                    className: "p-large",
                    children: "You can apply now, or use the calculator to explore your options. You won't make your final repayment plan choices until after you're approved, and we'll give you all the details you need to make that decision when its time."
                })]
            })]
        }), S.jsxs("div", {
            className: "prequalify-screen__approve-buttons-container",
            children: [S.jsx(Ga, {
                href: `/application/?ACT=US&SC=${r}`,
                className: "button button__dark-teal button__width-205",
                label: "Apply Now"
            }), S.jsx(Ga, {
                href: "/articles/private-student-loan-cosigner/",
                className: "button button__dark-blue button__width-205",
                label: "Learn More"
            })]
        }), S.jsx("p", {
            className: "p-small",
            children: `Information advertised valid as of ${a}. Variable interest rates may increase after consummation. Approved interest rate will depend on creditworthiness of the applicant(s), lowest advertised rates only available to the most creditworthy applicants and require selection of full principal and interest payment with the shortest available loan term.`
        })]
    })
}
function nP({state: e}) {
    return S.jsxs("div", {
        className: "prequalify-screen__results-view",
        children: [S.jsx("div", {
            className: "prequalify-screen__text-container",
            children: S.jsxs("div", {
                className: "prequalify-screen__text-container--paragraphs",
                children: [S.jsx("p", {
                    className: "p-large",
                    children: "Most undergraduate students have limited credit history and income, so they likely need a cosigner who has good, established credit in order to be eligible for a private student loan."
                }), S.jsx("p", {
                    className: "p-large",
                    children: `Since 97% of undergraduate loans are cosigned, it's best to have your cosigner complete the pre-qualification form to find out if their credit pre-qualifies for a loan, and to see what interest rates they can expect. Don't worry, pre-qualifying uses a "soft inquiry" and won't impact their credit score.`
                })]
            })
        }), S.jsx("div", {
            className: "prequalify-screen__decline-buttons-container",
            children: S.jsxs(Ga, {
                href: "/articles/private-student-loan-cosigner/",
                className: "arrow-link",
                children: ["Learn About Getting A ", S.jsxs("span", {
                    class: "arrow-link__anchor",
                    children: ["Cosigner", S.jsx("svg", {
                        width: "16",
                        height: "14",
                        viewBox: "0 0 16 14",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: S.jsx("path", {
                            d: "M7.47332 10.7722L3.21807 6.3278C2.92731 6.02398 2.92731 5.53155 3.21807 5.22786C3.50884 4.92405 3.98043 4.92405 4.27119 5.22786L8 9.12246L11.7288 5.22786C12.0196 4.92405 12.4912 4.92405 12.7819 5.22786C13.0727 5.53156 13.0727 6.02399 12.7819 6.3278L8.52668 10.7722C8.23591 11.0759 7.76408 11.0759 7.47332 10.7722Z",
                            fill: "#002769"
                        })
                    })]
                })]
            })
        })]
    })
}
const iP = ["CAIS01", "CAIS02", "CAIS03", "CAPA01", "CAISMB", "CAISSM", "CAISMD", "CAISDE", "CAISLW", "CAISGH", "CAISCH"];
function oP(e) {
    if (!e)
        return null;
    const r = new URLSearchParams(window.location.search).get("SC");
    return r && iP.includes(r) ? r : null
}
function sP(e) {
    return e ? e === "CAPA01" ? 3 : 2 : 1
}
const nw = oP(window.location.search)
  , O1 = sP(nw)
  , lP = {
    stepNumber: O1,
    minStep: O1,
    sourceCode: nw,
    applicantType: nw === "CAPA01" ? "student" : null,
    result: null
};
function uP(e, t) {
    const {type: r, payload: a} = t;
    switch (r) {
    case "SET_ADVERTISED_DATE":
        return {
            ...e,
            advertisedDate: a
        };
    case "GO_BACK":
        return e.stepNumber === e.minStep ? history.back() : {
            ...e,
            stepNumber: e.prevStepNumber,
            prevStepNumber: e.prevStepNumber - 1
        };
    case "SET_SOURCE_CODE":
        {
            const n = a === "CAPA01";
            return {
                ...e,
                sourceCode: a,
                prevStepNumber: e.stepNumber,
                stepNumber: n ? 3 : 2,
                applicantType: n ? "student" : null
            }
        }
    case "SET_APPLICANT_TYPE":
        return e.sourceCode === "CAIS01" && a === "student" ? {
            ...e,
            applicantType: a,
            prevStepNumber: e.stepNumber,
            stepNumber: 5
        } : {
            ...e,
            applicantType: a,
            prevStepNumber: e.stepNumber,
            stepNumber: 3
        };
    case "SET_USER_DATA":
        return {
            ...e,
            userData: a
        };
    case "SET_RESULTS":
        {
            const {prequalStatus: n, variableRange: i, fixedRange: o} = a;
            return {
                ...e,
                result: {
                    status: n,
                    variableRange: i,
                    fixedRange: o
                },
                prevStepNumber: e.stepNumber,
                stepNumber: 4
            }
        }
    default:
        return e
    }
}
const _E = {
    GENERIC: "SEO",
    CAIS01: "Undergraduate Loan",
    CAIS02: "Graduate Loan",
    CAIS03: "Career Loan",
    CARF01: "Refinance Loan",
    CAISDE: "Graduate Loan",
    CAISMD: "Graduate Loan",
    CAISLW: "Graduate Loan",
    CAISMB: "Graduate Loan",
    CAISGH: "Graduate Loan",
    CAPA01: "Parent Loan"
}
  , cP = {
    noMatch: "No Match",
    noOffer: "No Offer",
    withCosigner: "With Cosigner",
    prequalified: "Prequalified"
}
  , gp = {
    CAIS01: "undergraduate",
    CAIS02: "graduate",
    CARF01: "refinance",
    CAPA01: "parent",
    CAIS03: "career",
    CAISDE: "dental",
    CAISLW: "law",
    CAISMB: "mba",
    CAISMD: "medical",
    CAISSM: "select-mba",
    CAISGH: "health-profession",
    CAISCH: "health-career"
}
  , dP = e => Object.keys(e).reduce( (r, a) => e[a] ? {
    ...r,
    [a]: e[a]
} : r, {})
  , iw = e => _E[e.sourceCode] ?? "Unset"
  , P1 = e => {
    if (!e)
        return {};
    const t = e.split(" - ")
      , r = parseFloat(t[0]).toString()
      , a = parseFloat(t[1]).toString();
    return {
        min: r,
        max: a
    }
}
  , vP = e => {
    if (!e)
        return {};
    const t = cP[e.status]
      , r = P1(e.variableRange)
      , a = P1(e.fixedRange);
    return {
        prequal_results_decision: t,
        prequal_variable_rate_low_end: r.min,
        prequal_variable_rate_high_end: r.max,
        prequal_fixed_rate_low_end: a.min,
        prequal_fixed_rate_high_end: a.max
    }
}
  , hP = e => {
    const t = iw(e)
      , r = vP(e.result)
      , a = {
        source_code: e.sourceCode,
        product_type: t,
        user_segment: e.applicantType,
        ...r
    };
    return dP(a)
}
  , mP = e => {
    const [t,r] = q.useState(null)
      , {stepNumber: a} = e
      , n = c => {
        const d = hP(e)
          , v = {
            ...c,
            eventDimensions: d
        };
        return mn(v)
    }
    ;
    q.useEffect( () => {
        t && (n(t),
        r(null))
    }
    , [t]);
    const i = c => c ? r({
        type: "pageview",
        pagePath: c,
        pageTitle: "Prequalify | Afri Fund Universty Lender"
    }) : void 0;
    q.useEffect( () => {
        const d = {
            1: "/prequalify/product-select/",
            2: `/prequalify/${gp[e.sourceCode]}/user-select/`,
            3: `/prequalify/${gp[e.sourceCode]}/form/`,
            4: `/prequalify/${gp[e.sourceCode]}/results/`
        }[a];
        i(d)
    }
    , [a]);
    const o = c => {
        const v = {
            type: "event",
            eventAction: "Form Field - interaction",
            eventLabel: `${iw(e)} Prequalify > ${c}`
        };
        return r(v)
    }
      , s = c => {
        const d = iw(e)
          , v = {
            type: "event",
            eventAction: `Prequalify Form - ${c}`,
            eventLabel: `${d} Prequalify`
        };
        return r(v)
    }
      , l = c => n({
        type: "event",
        eventAction: "Form Field - error",
        eventLabel: c
    });
    return {
        sendEvent: o,
        sendFormEvent: s,
        handleFormErrors: c => {
            const d = {
                address: "Street Address",
                dob: "DOB MM/DD/YYYY",
                email: "Email Address",
                firstname: "First Name",
                lastname: "Last Name",
                terms: "Terms & Conditions Checkbox",
                zip: "Zip Code"
            };
            Object.keys(c).map(h => (d[h] || `${h}${c[h].message}`,
            `Prequalify > ${d[h]} > ${c[h].message}`)).forEach(l)
        }
    }
}
;
function fP() {
    var c, d;
    const [e,t] = q.useReducer(uP, lP)
      , r = q.useRef(null)
      , {sendEvent: a, sendFormEvent: n, handleFormErrors: i} = mP(e);
    q.useEffect( () => {
        e.advertisedDate || YO(t)
    }
    , []);
    const o = () => {
        ii(r.current),
        t({
            type: "GO_BACK"
        }),
        a("Go Back")
    }
      , s = v => {
        ii(r.current),
        t({
            type: "SET_SOURCE_CODE",
            payload: v
        }),
        a("Product Type")
    }
      , l = v => {
        ii(r.current),
        t({
            type: "SET_APPLICANT_TYPE",
            payload: v
        }),
        a("User Type")
    }
      , u = async v => {
        try {
            t({
                type: "SET_USER_DATA",
                payload: v
            });
            const {dob: h, email: p, terms: f, ..._} = v
              , {applicantType: y, sourceCode: g} = e
              , m = {
                ..._,
                yob: h.slice(-4),
                applicantType: y,
                sourceCode: g
            };
            n("submit");
            const w = await WO(m);
            ii(r.current),
            t({
                type: "SET_RESULTS",
                payload: w
            }),
            n("submit success")
        } catch (h) {
            const f = {
                prequalStatus: h.message === "MaintenanceMode" ? "MaintenanceMode" : "noMatch"
            };
            ii(r.current),
            t({
                type: "SET_RESULTS",
                payload: f
            })
        }
    }
    ;
    return S.jsxs("main", {
        className: "prequalify-screen",
        ref: r,
        children: [S.jsx(lD, {
            percent: e.stepNumber / 4 * 100
        }), S.jsxs("section", {
            className: "prequalify-screen__section-container",
            "data-section-name": "Prequalify",
            children: [S.jsx(o3, {
                onClick: o,
                direction: "left",
                label: "Go Back"
            }), S.jsxs(uD, {
                children: [e.stepNumber === 1 && S.jsx(cD, {
                    handleSelection: s
                }), e.stepNumber === 2 && S.jsx(mD, {
                    handleSelection: l,
                    sourceCode: e.sourceCode
                }), e.stepNumber === 3 && S.jsx(JO, {
                    sendEvent: a,
                    onSuccess: u,
                    onError: i,
                    state: e
                }), e.stepNumber === 4 && ((c = e.result) == null ? void 0 : c.status) === "prequalified" && S.jsx(aP, {
                    state: e
                }), e.stepNumber === 4 && ((d = e.result) == null ? void 0 : d.status) !== "prequalified" && S.jsx(rP, {
                    state: e
                }), e.stepNumber === 5 && S.jsx(nP, {
                    state: e
                })]
            })]
        })]
    })
}
function pP({year: e, isActive: t, onClick: r}) {
    return S.jsxs(Re, {
        className: "year-selector-button background-color__white",
        "aria-selected": t,
        onClick: () => r(t ? null : e),
        children: [S.jsx("div", {
            className: "year-selector-button__checkbox-container background-color__gray",
            children: t && S.jsx("div", {
                className: "year-selector-button__checkbox background-color__dark-teal",
                children: S.jsx("div", {
                    className: "year-selector-button__checkmark"
                })
            })
        }), S.jsx("p", {
            className: "year-selector-button__label",
            children: e
        })]
    })
}
function yP({years: e, currentYear: t, onYearChange: r}) {
    const [a,n] = q.useState(t)
      , i = "Year";
    return S.jsxs("div", {
        class: "year-selector-list background-color__white",
        children: [S.jsx("div", {
            class: "year-selector-list__marker background-color__white"
        }), S.jsxs("div", {
            class: "year-selector-list__content-container",
            children: [S.jsx("p", {
                className: "year-selector-list__header-text",
                children: i
            }), S.jsx("div", {
                class: "year-selector-list__button-container",
                children: e.map(o => S.jsx(pP, {
                    year: o,
                    isActive: o === a,
                    onClick: n
                }, o))
            })]
        }), S.jsx(Re, {
            className: "year-selector-list__apply-button dropshadow dropshadow__hover-off button button__dark-teal",
            onClick: () => r(a),
            children: "Apply"
        })]
    })
}
function wP({years: e, currentYear: t, onYearChange: r}) {
    const [a,n] = q.useState(!1)
      , i = "Select Year";
    return handleOnYearChange = o => {
        r && r(o),
        n(!1)
    }
    ,
    S.jsxs("div", {
        class: "press-year-filter",
        children: [S.jsx(Re, {
            className: "press-year-filter__select-button background-color__light-gray",
            onClick: () => n(!a),
            children: t || i
        }), a && S.jsx(yP, {
            years: e,
            currentYear: t,
            onYearChange: handleOnYearChange
        })]
    })
}
function gP({release: e}) {
    return S.jsx("a", {
        href: e.url,
        className: "press-release-card background-color__white dropshadow dropshadow__hover-on",
        "data-link-name": e.title,
        children: S.jsx("div", {
            className: "press-release-card__container",
            children: S.jsxs("div", {
                className: "press-release-card__content",
                children: [S.jsx("p", {
                    className: "press-release-card__date",
                    children: e.date
                }), S.jsxs("div", {
                    className: "press-release-card__row",
                    children: [S.jsx("h4", {
                        className: "h4",
                        children: e.title
                    }), S.jsxs("span", {
                        className: "press-release-card__arrow-link arrow-link",
                        children: ["Read More", S.jsx("svg", {
                            width: "16",
                            height: "14",
                            viewBox: "0 0 16 14",
                            fill: "#01326B",
                            xmlns: "http://www.w3.org/2000/svg",
                            children: S.jsx("path", {
                                d: "M7.47332 10.7722L3.21807 6.3278C2.92731 6.02398 2.92731 5.53155 3.21807 5.22786C3.50884 4.92405 3.98043 4.92405 4.27119 5.22786L8 9.12246L11.7288 5.22786C12.0196 4.92405 12.4912 4.92405 12.7819 5.22786C13.0727 5.53156 13.0727 6.02399 12.7819 6.3278L8.52668 10.7722C8.23591 11.0759 7.76408 11.0759 7.47332 10.7722Z",
                                fill: "#002769"
                            })
                        })]
                    })]
                })]
            })
        })
    })
}
const B1 = 10
  , Yd = window.allPressReleases;
function _P() {
    const e = Array.from(new Set(Yd.map(d => parseInt(d.date.slice(-4))))).sort( (d, v) => v - d)
      , [t,r] = q.useState(null)
      , [a,n] = q.useState(1)
      , [i,o] = q.useState(Yd)
      , s = q.useRef()
      , l = q.useCallback(d => {
        ii(s.current),
        n(d)
    }
    , [s]);
    q.useEffect( () => {
        n(1)
    }
    , [i]),
    q.useEffect( () => {
        if (t || o(Yd),
        t) {
            const d = Yd.filter(v => parseInt(v.date.slice(-4)) === t);
            o(d)
        }
    }
    , [t]);
    const u = q.useMemo( () => {
        const d = gm(i, B1);
        return d[a - 1] ?? d[0]
    }
    , [i, a])
      , c = Math.ceil(i.length / B1);
    return S.jsx("main", {
        ref: s,
        className: "press-release-main",
        children: S.jsx("div", {
            className: "section-container",
            children: S.jsxs("div", {
                className: "press-release__section-container",
                children: [S.jsxs("div", {
                    className: "press-release__header-container",
                    children: [S.jsx("h2", {
                        className: "h2",
                        children: "Press Releases"
                    }), S.jsxs("div", {
                        className: "press-release__filter-container",
                        children: [S.jsx("p", {
                            className: "press-release__filter-label",
                            children: "Sort by:"
                        }), S.jsx(wP, {
                            years: e,
                            currentYear: t,
                            onYearChange: r
                        })]
                    })]
                }), S.jsx("div", {
                    className: "press-release__card-section",
                    "data-section-name": "Press Release",
                    children: u.map(d => S.jsx(gP, {
                        release: d
                    }))
                }), S.jsx(xg, {
                    currentPage: a,
                    totalPages: c,
                    setPageNumber: l
                })]
            })
        })
    })
}
const is = Stars = ({rating: e}) => {
    const t = `-${100 - e * 100 / 5}%`;
    return S.jsxs("div", {
        className: "review-stars-component",
        children: [S.jsxs("svg", {
            className: "review-stars",
            width: "164",
            height: "27",
            viewBox: "0 0 164 27",
            children: [S.jsx("defs", {
                children: S.jsx("mask", {
                    id: "start-mask",
                    children: S.jsx("use", {
                        xlinkHref: "#average-star"
                    })
                })
            }), S.jsx("use", {
                xlinkHref: "#average-star"
            }), S.jsx("rect", {
                x: t,
                y: "0",
                fill: "#00A4B3",
                width: "164",
                height: "27",
                mask: "url(#start-mask)"
            })]
        }), S.jsx("svg", {
            className: "review-stars__mask",
            width: "164",
            height: "27",
            viewBox: "0 0 164 27",
            children: S.jsx("symbol", {
                id: "average-star",
                xmlns: "http://www.w3.org/2000/svg",
                children: S.jsx("path", {
                    fill: "#d2d6e1",
                    d: "M27.3392 9.10786L19.3279 7.95653L15.7443 0.793885C15.2172 -0.264628 13.4588 -0.264628 12.935 0.793885L9.35141 7.95653L1.34349 9.10786C0.754063 9.19094 0.261968 9.59988 0.0771745 10.1599C-0.107619 10.7199 0.0454625 11.3328 0.471958 11.7439L6.26661 17.316L4.90186 25.193C4.80125 25.7746 5.04293 26.3594 5.52629 26.7026C6.01183 27.0489 6.65154 27.0986 7.17862 26.8202L14.3436 23.104L21.5086 26.8202C21.7372 26.941 21.9887 26.9993 22.2391 26.9993C22.565 26.9993 22.8887 26.9 23.161 26.7026C23.6443 26.3594 23.8849 25.7714 23.7854 25.193L22.4185 17.3194L28.2154 11.7472C28.6418 11.3361 28.7949 10.72 28.6101 10.16C28.4242 9.6 27.9308 9.19418 27.3392 9.10786ZM61.089 9.10786L53.0777 7.95653L49.4941 0.793885C48.967 -0.264628 47.2086 -0.264628 46.6848 0.793885L43.1012 7.95653L35.0933 9.10786C34.5039 9.19094 34.0118 9.59988 33.827 10.1599C33.6422 10.7199 33.7953 11.3328 34.2217 11.7439L40.0164 17.316L38.6516 25.193C38.551 25.7746 38.7927 26.3594 39.2761 26.7026C39.7616 27.0489 40.4013 27.0986 40.9284 26.8202L48.0934 23.104L55.2584 26.8202C55.487 26.941 55.7385 26.9993 55.9889 26.9993C56.3148 26.9993 56.6385 26.9 56.9108 26.7026C57.3941 26.3594 57.6347 25.7714 57.5352 25.193L56.1683 17.3194L61.9652 11.7472C62.3916 11.3361 62.5447 10.72 62.3599 10.16C62.174 9.6 61.6806 9.19418 61.089 9.10786ZM86.8275 7.95653L94.8388 9.10786C95.4304 9.19418 95.9238 9.6 96.1097 10.16C96.2945 10.72 96.1414 11.3361 95.715 11.7472L89.9181 17.3194L91.285 25.193C91.3845 25.7714 91.1439 26.3594 90.6606 26.7026C90.3883 26.9 90.0646 26.9993 89.7387 26.9993C89.4883 26.9993 89.2367 26.941 89.0082 26.8202L81.8432 23.104L74.6782 26.8202C74.1511 27.0986 73.5114 27.0489 73.0259 26.7026C72.5425 26.3594 72.3008 25.7746 72.4014 25.193L73.7662 17.316L67.9715 11.7439C67.545 11.3328 67.392 10.7199 67.5768 10.1599C67.7616 9.59988 68.2536 9.19094 68.8431 9.10786L76.851 7.95653L80.4346 0.793885C80.9584 -0.264628 82.7168 -0.264628 83.2439 0.793885L86.8275 7.95653ZM128.589 9.10786L120.577 7.95653L116.994 0.793885C116.467 -0.264628 114.708 -0.264628 114.184 0.793885L110.601 7.95653L102.593 9.10786C102.003 9.19094 101.511 9.59988 101.327 10.1599C101.142 10.7199 101.295 11.3328 101.721 11.7439L107.516 17.316L106.151 25.193C106.051 25.7746 106.292 26.3594 106.776 26.7026C107.261 27.0489 107.901 27.0986 108.428 26.8202L115.593 23.104L122.758 26.8202C122.987 26.941 123.238 26.9993 123.488 26.9993C123.814 26.9993 124.138 26.9 124.41 26.7026C124.894 26.3594 125.134 25.7714 125.035 25.193L123.668 17.3194L129.465 11.7472C129.891 11.3361 130.044 10.72 129.86 10.16C129.674 9.6 129.18 9.19418 128.589 9.10786ZM154.327 7.95653L162.338 9.10786C162.93 9.19418 163.423 9.6 163.609 10.16C163.794 10.72 163.641 11.3361 163.215 11.7472L157.418 17.3194L158.785 25.193C158.884 25.7714 158.644 26.3594 158.16 26.7026C157.888 26.9 157.564 26.9993 157.238 26.9993C156.988 26.9993 156.736 26.941 156.508 26.8202L149.343 23.104L142.178 26.8202C141.651 27.0986 141.011 27.0489 140.525 26.7026C140.042 26.3594 139.8 25.7746 139.901 25.193L141.266 17.316L135.471 11.7439C135.045 11.3328 134.892 10.7199 135.076 10.1599C135.261 9.59988 135.753 9.19094 136.343 9.10786L144.351 7.95653L147.934 0.793885C148.458 -0.264628 150.216 -0.264628 150.743 0.793885L154.327 7.95653Z"
                })
            })
        })]
    })
}
  , bP = VerifiedCheck = () => S.jsxs("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "21",
    height: "21",
    viewBox: "0 0 21 21",
    fill: "none",
    children: [S.jsx("path", {
        d: "M20.5655 9.45133L18.7931 7.67905C18.515 7.40109 18.3588 7.02399 18.3588 6.6308V4.12356C18.3591 3.73031 18.2029 3.3531 17.9248 3.07503C17.6468 2.79696 17.2695 2.64084 16.8763 2.64106H14.3689C13.9758 2.64136 13.5988 2.48545 13.3206 2.20765L11.5483 0.434526C11.2704 0.15632 10.8933 0 10.5 0C10.1067 0 9.72963 0.15632 9.45171 0.434526L7.67935 2.20681C7.40139 2.48491 7.02427 2.64113 6.63106 2.64106H4.12373C3.73031 2.64084 3.35296 2.79707 3.07485 3.07533C2.79675 3.35358 2.64072 3.731 2.64117 4.1244V6.63164C2.64146 7.02471 2.48555 7.40179 2.20774 7.67989L0.434544 9.45217C0.156326 9.73008 0 10.1072 0 10.5004C0 10.8937 0.156326 11.2708 0.434544 11.5487L2.2069 13.321C2.48501 13.5989 2.64124 13.976 2.64117 14.3692V16.8764C2.64094 17.2697 2.79707 17.6469 3.07515 17.925C3.35323 18.203 3.73046 18.3592 4.12373 18.3589H6.63106C7.02415 18.3586 7.40125 18.5146 7.67935 18.7924L9.45171 20.5655C9.72963 20.8437 10.1067 21 10.5 21C10.8933 21 11.2704 20.8437 11.5483 20.5655L13.3206 18.7932C13.5986 18.5151 13.9757 18.3589 14.3689 18.3589H16.8763C17.2695 18.3592 17.6468 18.203 17.9248 17.925C18.2029 17.6469 18.3591 17.2697 18.3588 16.8764V14.3692C18.3585 13.9761 18.5145 13.599 18.7923 13.321L20.5655 11.5487C20.8437 11.2708 21 10.8937 21 10.5004C21 10.1072 20.8437 9.72924 20.5655 9.45133Z",
        fill: "#00A4B3"
    }), S.jsx("path", {
        d: "M13.2961 8.1895L9.1147 12.3682L7.30455 10.5548C7.10116 10.381 6.82314 10.3218 6.56628 10.3976C6.30943 10.4734 6.10841 10.6737 6.03246 10.93C5.9565 11.1862 6.01579 11.4635 6.19006 11.6664L8.56141 14.0316C8.70949 14.1785 8.90983 14.2609 9.11864 14.2609C9.32746 14.2609 9.5278 14.1785 9.67588 14.0316L14.4186 9.30118C14.5929 9.09831 14.6523 8.82101 14.5762 8.56482C14.5002 8.3085 14.2993 8.10813 14.0424 8.03238C13.7855 7.95661 13.5076 8.01574 13.3041 8.18957L13.2961 8.1895Z",
        fill: "white"
    })]
})
  , R1 = 210
  , CP = ReviewCard = ({review: e}) => {
    const {date: t, display_name: r, review_content: a, review_score: n, review_title: i} = e
      , [o,s] = q.useState(!1)
      , l = a.length > R1
      , u = l ? `${a.slice(0, R1)} . . .` : a
      , c = () => {
        s(d => !d)
    }
    ;
    return S.jsx("div", {
        className: "review-card",
        children: S.jsxs("div", {
            className: "review-card__container",
            children: [S.jsx("div", {
                className: "review-card__title-container",
                children: S.jsx("h4", {
                    className: "review-card__title",
                    children: i
                })
            }), S.jsxs("div", {
                className: "review-card__content",
                children: [S.jsx(is, {
                    rating: n
                }), S.jsx("p", {
                    className: "review-card__review p-large",
                    children: o ? a : u
                }), l && S.jsxs("button", {
                    className: "review-card__read-more-button",
                    onClick: c,
                    "aria-label": "Read More",
                    children: [S.jsx("p", {
                        className: "review-card__read-more-button--label",
                        children: o ? "Read Less" : "Read More"
                    }), S.jsx("span", {
                        className: "review-card__read-more-button--plus",
                        style: {
                            rotate: o ? "45deg" : "0deg"
                        },
                        children: "╋"
                    })]
                })]
            }), S.jsx("div", {
                className: "review-card__author-details-container",
                children: S.jsxs("div", {
                    className: "review-card__author-details",
                    children: [S.jsx("div", {
                        className: "review-card__checkmark",
                        children: S.jsx(bP, {})
                    }), S.jsxs("div", {
                        className: "review-card__author-details-right",
                        children: [S.jsx("p", {
                            className: "review-card__reviewer",
                            children: e.display_name
                        }), S.jsx("span", {
                            className: "review-card__author-details-divider"
                        }), S.jsx("p", {
                            className: "review-card__date",
                            children: e.date
                        })]
                    })]
                })
            })]
        })
    })
}
  , L1 = 12;
function SP({reviews: e}) {
    const [t,r] = q.useState(1)
      , a = q.useRef()
      , n = q.useCallback(s => {
        ii(a.current),
        r(s)
    }
    , [a]);
    q.useEffect( () => {
        r(1)
    }
    , [e]);
    const i = q.useMemo( () => {
        const s = gm(e, L1);
        return s[t - 1] ?? s[0]
    }
    , [e, t])
      , o = Math.ceil(e.length / L1);
    return S.jsx("section", {
        ref: a,
        class: "reviews-grid",
        children: S.jsx("div", {
            className: "section-container",
            children: S.jsxs("div", {
                class: "reviews-grid__container",
                children: [S.jsx("div", {
                    className: "reviews-grid__cards-container",
                    children: i.map(s => S.jsx(CP, {
                        review: s
                    }, s.id))
                }), S.jsx(xg, {
                    currentPage: t,
                    totalPages: o,
                    setPageNumber: n
                })]
            })
        })
    })
}
const xP = ReviewOverviewCard = ({onFilter: e, stats: t}) => {
    const r = a => {
        e(a)
    }
    ;
    return S.jsxs("div", {
        className: "review-overview-card__container",
        children: [S.jsxs("div", {
            className: "review-overview-card__header-container",
            children: [S.jsx("h3", {
                className: "h3",
                children: "Average Customer Rating"
            }), S.jsxs("div", {
                className: "review-overview-card__average-container",
                children: [S.jsx("p", {
                    className: "review-overview-card__review-average",
                    children: t.average
                }), S.jsxs("div", {
                    className: "review-overview-card__review-average-star-container",
                    children: [S.jsx(is, {
                        rating: t.average
                    }), S.jsx("p", {
                        className: "p-small",
                        children: `${t.total} Reviews`
                    })]
                })]
            })]
        }), S.jsxs("div", {
            className: "review-overview-card__average-row-container",
            children: [S.jsxs(Re, {
                "data-link-name": "Review Filter - 5 stars",
                className: "review-overview-card__average-row",
                onClick: () => r(5),
                children: [S.jsx(is, {
                    rating: 5
                }), S.jsx("p", {
                    className: "p-small",
                    children: `${t.counts[5]} Reviews`
                })]
            }), S.jsxs(Re, {
                "data-link-name": "Review Filter - 4 stars",
                className: "review-overview-card__average-row",
                onClick: () => r(4),
                children: [S.jsx(is, {
                    rating: 4
                }), S.jsx("p", {
                    className: "p-small",
                    children: `${t.counts[4]} Reviews`
                })]
            }), S.jsxs(Re, {
                "data-link-name": "Review Filter - 3 stars",
                className: "review-overview-card__average-row",
                onClick: () => r(3),
                children: [S.jsx(is, {
                    rating: 3
                }), S.jsx("p", {
                    className: "p-small",
                    children: `${t.counts[3]} Reviews`
                })]
            }), S.jsxs(Re, {
                "data-link-name": "Review Filter - 2 stars",
                className: "review-overview-card__average-row",
                onClick: () => r(2),
                children: [S.jsx(is, {
                    rating: 2
                }), S.jsx("p", {
                    className: "p-small",
                    children: `${t.counts[2]} Reviews`
                })]
            }), S.jsxs(Re, {
                "data-link-name": "Review Filter - 1 star",
                className: "review-overview-card__average-row",
                onClick: () => r(1),
                children: [S.jsx(is, {
                    rating: 1
                }), S.jsx("p", {
                    className: "p-small",
                    children: `${t.counts[1]} Reviews`
                })]
            })]
        })]
    })
}
;
document.querySelectorAll("[data-open-modal]");
document.querySelectorAll("[data-close-modal]");
const bE = "lock-body"
  , CE = document.querySelector("body");
function AP(e) {
    e && (i3({
        type: "event",
        eventAction: "Modal - close",
        eventLabel: e.dataset.sectionName
    }),
    e.close())
}
function EP(e) {
    const t = e.target.getBoundingClientRect();
    (e.clientX < t.left || e.clientX > t.right || e.clientY < t.top || e.clientY > t.bottom) && e.target.close && (AP(e.target),
    CE.classList.remove(bE))
}
function kP(e) {
    !e || typeof e.showModal != "function" || (e.showModal(),
    i3({
        type: "event",
        eventAction: "Modal - open",
        eventLabel: e.dataset.sectionName
    }),
    CE.classList.add(bE),
    e.addEventListener("click", EP))
}
function TP({onFilter: e, stats: t}) {
    const r = q.useCallback( () => {
        const a = document.querySelector('[data-modal="apply"]');
        a && kP(a)
    }
    , []);
    return S.jsx("div", {
        className: "review-overview-section background-color__gray",
        children: S.jsx("div", {
            className: "section-container",
            children: S.jsx("div", {
                className: "review-overview-section__container",
                children: S.jsxs("div", {
                    className: "review-overview-section__columns",
                    children: [S.jsx("div", {
                        className: "review-overview-section__card-column",
                        children: S.jsx(xP, {
                            onFilter: e,
                            stats: t
                        })
                    }), S.jsx("div", {
                        className: "review-overview-section__content-column",
                        children: S.jsxs("div", {
                            className: "review-overview-section__content",
                            children: [S.jsx("p", {
                                className: "review-overview-section__paragraph",
                                children: "A college loan is one of the biggest financial decisions you can make, so we don’t take our role in it lightly. That’s why we use a third-party service to collect authentic reviews from real Afri Fund Universty Lender customers. So we encourage you to do your research; and we promise to take any criticism to make our process better."
                            }), S.jsx(Re, {
                                "data-link-name": "Apply Now",
                                onClick: r,
                                className: "button button__dark-teal button__width-210",
                                children: "Apply Now"
                            })]
                        })
                    })]
                })
            })
        })
    })
}
// window.NP=[],
MP = () => window.NP.sort( (t, r) => parseInt(t.review_score) > parseInt(r.review_score) ? -1 : parseInt(t.review_score) < parseInt(r.review_score) ? 1 : Date.parse(t.date) > Date.parse(r.date) ? -1 : Date.parse(t.date) < Date.parse(r.date) ? 1 : 0),
IP = e => {
    const t = e.reduce( (s, l) => {
        const u = l.review_score
          , c = s[u] + 1
          , d = s.sum + l.review_score;
        return {
            ...s,
            [u]: c,
            sum: d
        }
    }
    , {
        5: 0,
        4: 0,
        3: 0,
        2: 0,
        1: 0,
        sum: 0
    })
      , {sum: r, ...a} = t
      , n = e.length
      , i = (r / n).toFixed(1);
    return {
        counts: a,
        average: i,
        total: n
    }
}
;
function DP() {
    const [e,t] = q.useState(null)
      , r = MP()
      , a = IP(r)
      , n = q.useMemo( () => e ? r.filter(o => o.review_score === e) : r, [r, e]);
    return S.jsxs(S.Fragment, {
        children: [S.jsx(TP, {
            onFilter: t,
            stats: a
        }), S.jsx(SP, {
            reviews: n
        })]
    })
}
var SE = {
    epsilon: 1e-12,
    matrix: "Matrix",
    number: "number",
    precision: 64,
    predictable: !1,
    randomSeed: null
};
function lt(e) {
    return typeof e == "number"
}
function vt(e) {
    return !e || typeof e != "object" || typeof e.constructor != "function" ? !1 : e.isBigNumber === !0 && typeof e.constructor.prototype == "object" && e.constructor.prototype.isBigNumber === !0 || typeof e.constructor.isDecimal == "function" && e.constructor.isDecimal(e) === !0
}
function Oi(e) {
    return e && typeof e == "object" && Object.getPrototypeOf(e).isComplex === !0 || !1
}
function ed(e) {
    return e && typeof e == "object" && Object.getPrototypeOf(e).isFraction === !0 || !1
}
function ln(e) {
    return e && e.constructor.prototype.isUnit === !0 || !1
}
function Wr(e) {
    return typeof e == "string"
}
var At = Array.isArray;
function je(e) {
    return e && e.constructor.prototype.isMatrix === !0 || !1
}
function Fo(e) {
    return Array.isArray(e) || je(e)
}
function Ah(e) {
    return e && e.isDenseMatrix && e.constructor.prototype.isMatrix === !0 || !1
}
function ds(e) {
    return e && e.isSparseMatrix && e.constructor.prototype.isMatrix === !0 || !1
}
function r2(e) {
    return e && e.constructor.prototype.isRange === !0 || !1
}
function Gm(e) {
    return e && e.constructor.prototype.isIndex === !0 || !1
}
function UP(e) {
    return typeof e == "boolean"
}
function FP(e) {
    return e && e.constructor.prototype.isResultSet === !0 || !1
}
function xE(e) {
    return e && e.constructor.prototype.isHelp === !0 || !1
}
function OP(e) {
    return typeof e == "function"
}
function PP(e) {
    return e instanceof Date
}
function BP(e) {
    return e instanceof RegExp
}
function a2(e) {
    return !!(e && typeof e == "object" && e.constructor === Object && !Oi(e) && !ed(e))
}
function RP(e) {
    return e === null
}
function LP(e) {
    return e === void 0
}
function bs(e) {
    return e && e.isAccessorNode === !0 && e.constructor.prototype.isNode === !0 || !1
}
function an(e) {
    return e && e.isArrayNode === !0 && e.constructor.prototype.isNode === !0 || !1
}
function qP(e) {
    return e && e.isAssignmentNode === !0 && e.constructor.prototype.isNode === !0 || !1
}
function VP(e) {
    return e && e.isBlockNode === !0 && e.constructor.prototype.isNode === !0 || !1
}
function $P(e) {
    return e && e.isConditionalNode === !0 && e.constructor.prototype.isNode === !0 || !1
}
function _t(e) {
    return e && e.isConstantNode === !0 && e.constructor.prototype.isNode === !0 || !1
}
function ow(e) {
    return _t(e) || vr(e) && e.args.length === 1 && _t(e.args[0]) && "-+~".includes(e.op)
}
function td(e) {
    return e && e.isFunctionAssignmentNode === !0 && e.constructor.prototype.isNode === !0 || !1
}
function Oo(e) {
    return e && e.isFunctionNode === !0 && e.constructor.prototype.isNode === !0 || !1
}
function lu(e) {
    return e && e.isIndexNode === !0 && e.constructor.prototype.isNode === !0 || !1
}
function Ft(e) {
    return e && e.isNode === !0 && e.constructor.prototype.isNode === !0 || !1
}
function jm(e) {
    return e && e.isObjectNode === !0 && e.constructor.prototype.isNode === !0 || !1
}
function vr(e) {
    return e && e.isOperatorNode === !0 && e.constructor.prototype.isNode === !0 || !1
}
function zi(e) {
    return e && e.isParenthesisNode === !0 && e.constructor.prototype.isNode === !0 || !1
}
function zP(e) {
    return e && e.isRangeNode === !0 && e.constructor.prototype.isNode === !0 || !1
}
function GP(e) {
    return e && e.isRelationalNode === !0 && e.constructor.prototype.isNode === !0 || !1
}
function Er(e) {
    return e && e.isSymbolNode === !0 && e.constructor.prototype.isNode === !0 || !1
}
function AE(e) {
    return e && e.constructor.prototype.isChain === !0 || !1
}
function Bt(e) {
    var t = typeof e;
    return t === "object" ? e === null ? "null" : vt(e) ? "BigNumber" : e.constructor && e.constructor.name ? e.constructor.name : "Object" : t
}
function Qe(e) {
    var t = typeof e;
    if (t === "number" || t === "string" || t === "boolean" || e === null || e === void 0)
        return e;
    if (typeof e.clone == "function")
        return e.clone();
    if (Array.isArray(e))
        return e.map(function(r) {
            return Qe(r)
        });
    if (e instanceof Date)
        return new Date(e.valueOf());
    if (vt(e))
        return e;
    if (e instanceof RegExp)
        throw new TypeError("Cannot clone " + e);
    return jP(e, Qe)
}
function jP(e, t) {
    var r = {};
    for (var a in e)
        Ue(e, a) && (r[a] = t(e[a]));
    return r
}
function EE(e, t) {
    for (var r in t)
        Ue(t, r) && (e[r] = t[r]);
    return e
}
function Cs(e, t) {
    var r, a, n;
    if (Array.isArray(e)) {
        if (!Array.isArray(t) || e.length !== t.length)
            return !1;
        for (a = 0,
        n = e.length; a < n; a++)
            if (!Cs(e[a], t[a]))
                return !1;
        return !0
    } else {
        if (typeof e == "function")
            return e === t;
        if (e instanceof Object) {
            if (Array.isArray(t) || !(t instanceof Object))
                return !1;
            for (r in e)
                if (!(r in t) || !Cs(e[r], t[r]))
                    return !1;
            for (r in t)
                if (!(r in e))
                    return !1;
            return !0
        } else
            return e === t
    }
}
function HP(e, t, r) {
    var a = !0, n;
    Object.defineProperty(e, t, {
        get: function() {
            return a && (n = r(),
            a = !1),
            n
        },
        set: function(o) {
            n = o,
            a = !1
        },
        configurable: !0,
        enumerable: !0
    })
}
function Ue(e, t) {
    return e && Object.hasOwnProperty.call(e, t)
}
function WP(e, t) {
    for (var r = {}, a = 0; a < t.length; a++) {
        var n = t[a]
          , i = e[n];
        i !== void 0 && (r[n] = i)
    }
    return r
}
var YP = ["Matrix", "Array"]
  , JP = ["number", "BigNumber", "Fraction"]
  , fe = function(t) {
    if (t)
        throw new Error(`The global config is readonly. 
Please create a mathjs instance if you want to change the default configuration. 
Example:

  import { create, all } from 'mathjs';
  const mathjs = create(all);
  mathjs.config({ number: 'BigNumber' });
`);
    return Object.freeze(SE)
};
Ie(fe, SE, {
    MATRIX_OPTIONS: YP,
    NUMBER_OPTIONS: JP
});
function q1() {
    return !0
}
function tn() {
    return !1
}
function Xs() {}
const V1 = "Argument is not a typed-function.";
function kE() {
    function e(L) {
        return typeof L == "object" && L !== null && L.constructor === Object
    }
    const t = [{
        name: "number",
        test: function(L) {
            return typeof L == "number"
        }
    }, {
        name: "string",
        test: function(L) {
            return typeof L == "string"
        }
    }, {
        name: "boolean",
        test: function(L) {
            return typeof L == "boolean"
        }
    }, {
        name: "Function",
        test: function(L) {
            return typeof L == "function"
        }
    }, {
        name: "Array",
        test: Array.isArray
    }, {
        name: "Date",
        test: function(L) {
            return L instanceof Date
        }
    }, {
        name: "RegExp",
        test: function(L) {
            return L instanceof RegExp
        }
    }, {
        name: "Object",
        test: e
    }, {
        name: "null",
        test: function(L) {
            return L === null
        }
    }, {
        name: "undefined",
        test: function(L) {
            return L === void 0
        }
    }]
      , r = {
        name: "any",
        test: q1,
        isAny: !0
    };
    let a, n, i = 0, o = {
        createCount: 0
    };
    function s(L) {
        const W = a.get(L);
        if (W)
            return W;
        let ne = 'Unknown type "' + L + '"';
        const le = L.toLowerCase();
        let he;
        for (he of n)
            if (he.toLowerCase() === le) {
                ne += '. Did you mean "' + he + '" ?';
                break
            }
        throw new TypeError(ne)
    }
    function l(L) {
        let W = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "any";
        const ne = W ? s(W).index : n.length
          , le = [];
        for (let ve = 0; ve < L.length; ++ve) {
            if (!L[ve] || typeof L[ve].name != "string" || typeof L[ve].test != "function")
                throw new TypeError("Object with properties {name: string, test: function} expected");
            const we = L[ve].name;
            if (a.has(we))
                throw new TypeError('Duplicate type name "' + we + '"');
            le.push(we),
            a.set(we, {
                name: we,
                test: L[ve].test,
                isAny: L[ve].isAny,
                index: ne + ve,
                conversionsTo: []
            })
        }
        const he = n.slice(ne);
        n = n.slice(0, ne).concat(le).concat(he);
        for (let ve = ne + le.length; ve < n.length; ++ve)
            a.get(n[ve]).index = ve
    }
    function u() {
        a = new Map,
        n = [],
        i = 0,
        l([r], !1)
    }
    u(),
    l(t);
    function c() {
        let L;
        for (L of n)
            a.get(L).conversionsTo = [];
        i = 0
    }
    function d(L) {
        const W = n.filter(ne => {
            const le = a.get(ne);
            return !le.isAny && le.test(L)
        }
        );
        return W.length ? W : ["any"]
    }
    function v(L) {
        return L && typeof L == "function" && "_typedFunctionData"in L
    }
    function h(L, W, ne) {
        if (!v(L))
            throw new TypeError(V1);
        const le = ne && ne.exact
          , he = Array.isArray(W) ? W.join(",") : W
          , ve = w(he)
          , we = _(ve);
        if (!le || we in L.signatures) {
            const We = L._typedFunctionData.signatureMap.get(we);
            if (We)
                return We
        }
        const ye = ve.length;
        let Ce;
        if (le) {
            Ce = [];
            let We;
            for (We in L.signatures)
                Ce.push(L._typedFunctionData.signatureMap.get(We))
        } else
            Ce = L._typedFunctionData.signatures;
        for (let We = 0; We < ye; ++We) {
            const He = ve[We]
              , $e = [];
            let Ge;
            for (Ge of Ce) {
                const St = E(Ge.params, We);
                if (!(!St || He.restParam && !St.restParam)) {
                    if (!St.hasAny) {
                        const U = m(St);
                        if (He.types.some(X => !U.has(X.name)))
                            continue
                    }
                    $e.push(Ge)
                }
            }
            if (Ce = $e,
            Ce.length === 0)
                break
        }
        let ge;
        for (ge of Ce)
            if (ge.params.length <= ye)
                return ge;
        throw new TypeError("Signature not found (signature: " + (L.name || "unnamed") + "(" + _(ve, ", ") + "))")
    }
    function p(L, W, ne) {
        return h(L, W, ne).implementation
    }
    function f(L, W) {
        const ne = s(W);
        if (ne.test(L))
            return L;
        const le = ne.conversionsTo;
        if (le.length === 0)
            throw new Error("There are no conversions to " + W + " defined.");
        for (let he = 0; he < le.length; he++)
            if (s(le[he].from).test(L))
                return le[he].convert(L);
        throw new Error("Cannot convert " + L + " to " + W)
    }
    function _(L) {
        let W = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : ",";
        return L.map(ne => ne.name).join(W)
    }
    function y(L) {
        const W = L.indexOf("...") === 0
          , le = (W ? L.length > 3 ? L.slice(3) : "any" : L).split("|").map(ye => s(ye.trim()));
        let he = !1
          , ve = W ? "..." : "";
        return {
            types: le.map(function(ye) {
                return he = ye.isAny || he,
                ve += ye.name + "|",
                {
                    name: ye.name,
                    typeIndex: ye.index,
                    test: ye.test,
                    isAny: ye.isAny,
                    conversion: null,
                    conversionIndex: -1
                }
            }),
            name: ve.slice(0, -1),
            hasAny: he,
            hasConversion: !1,
            restParam: W
        }
    }
    function g(L) {
        const W = L.types.map(we => we.name)
          , ne = N(W);
        let le = L.hasAny
          , he = L.name;
        const ve = ne.map(function(we) {
            const ye = s(we.from);
            return le = ye.isAny || le,
            he += "|" + we.from,
            {
                name: we.from,
                typeIndex: ye.index,
                test: ye.test,
                isAny: ye.isAny,
                conversion: we,
                conversionIndex: we.index
            }
        });
        return {
            types: L.types.concat(ve),
            name: he,
            hasAny: le,
            hasConversion: ve.length > 0,
            restParam: L.restParam
        }
    }
    function m(L) {
        return L.typeSet || (L.typeSet = new Set,
        L.types.forEach(W => L.typeSet.add(W.name))),
        L.typeSet
    }
    function w(L) {
        const W = [];
        if (typeof L != "string")
            throw new TypeError("Signatures must be strings");
        const ne = L.trim();
        if (ne === "")
            return W;
        const le = ne.split(",");
        for (let he = 0; he < le.length; ++he) {
            const ve = y(le[he].trim());
            if (ve.restParam && he !== le.length - 1)
                throw new SyntaxError('Unexpected rest parameter "' + le[he] + '": only allowed for the last parameter');
            if (ve.types.length === 0)
                return null;
            W.push(ve)
        }
        return W
    }
    function C(L) {
        const W = ue(L);
        return W ? W.restParam : !1
    }
    function b(L) {
        if (!L || L.types.length === 0)
            return q1;
        if (L.types.length === 1)
            return s(L.types[0].name).test;
        if (L.types.length === 2) {
            const W = s(L.types[0].name).test
              , ne = s(L.types[1].name).test;
            return function(he) {
                return W(he) || ne(he)
            }
        } else {
            const W = L.types.map(function(ne) {
                return s(ne.name).test
            });
            return function(le) {
                for (let he = 0; he < W.length; he++)
                    if (W[he](le))
                        return !0;
                return !1
            }
        }
    }
    function x(L) {
        let W, ne, le;
        if (C(L)) {
            W = ce(L).map(b);
            const he = W.length
              , ve = b(ue(L))
              , we = function(ye) {
                for (let Ce = he; Ce < ye.length; Ce++)
                    if (!ve(ye[Ce]))
                        return !1;
                return !0
            };
            return function(Ce) {
                for (let ge = 0; ge < W.length; ge++)
                    if (!W[ge](Ce[ge]))
                        return !1;
                return we(Ce) && Ce.length >= he + 1
            }
        } else
            return L.length === 0 ? function(ve) {
                return ve.length === 0
            }
            : L.length === 1 ? (ne = b(L[0]),
            function(ve) {
                return ne(ve[0]) && ve.length === 1
            }
            ) : L.length === 2 ? (ne = b(L[0]),
            le = b(L[1]),
            function(ve) {
                return ne(ve[0]) && le(ve[1]) && ve.length === 2
            }
            ) : (W = L.map(b),
            function(ve) {
                for (let we = 0; we < W.length; we++)
                    if (!W[we](ve[we]))
                        return !1;
                return ve.length === W.length
            }
            )
    }
    function E(L, W) {
        return W < L.length ? L[W] : C(L) ? ue(L) : null
    }
    function k(L, W) {
        const ne = E(L, W);
        return ne ? m(ne) : new Set
    }
    function A(L) {
        return L.conversion === null || L.conversion === void 0
    }
    function I(L, W) {
        const ne = new Set;
        return L.forEach(le => {
            const he = k(le.params, W);
            let ve;
            for (ve of he)
                ne.add(ve)
        }
        ),
        ne.has("any") ? ["any"] : Array.from(ne)
    }
    function T(L, W, ne) {
        let le, he;
        const ve = L || "unnamed";
        let we = ne, ye;
        for (ye = 0; ye < W.length; ye++) {
            const He = [];
            if (we.forEach($e => {
                const Ge = E($e.params, ye)
                  , St = b(Ge);
                (ye < $e.params.length || C($e.params)) && St(W[ye]) && He.push($e)
            }
            ),
            He.length === 0) {
                if (he = I(we, ye),
                he.length > 0) {
                    const $e = d(W[ye]);
                    return le = new TypeError("Unexpected type of argument in function " + ve + " (expected: " + he.join(" or ") + ", actual: " + $e.join(" | ") + ", index: " + ye + ")"),
                    le.data = {
                        category: "wrongType",
                        fn: ve,
                        index: ye,
                        actual: $e,
                        expected: he
                    },
                    le
                }
            } else
                we = He
        }
        const Ce = we.map(function(He) {
            return C(He.params) ? 1 / 0 : He.params.length
        });
        if (W.length < Math.min.apply(null, Ce))
            return he = I(we, ye),
            le = new TypeError("Too few arguments in function " + ve + " (expected: " + he.join(" or ") + ", index: " + W.length + ")"),
            le.data = {
                category: "tooFewArgs",
                fn: ve,
                index: W.length,
                expected: he
            },
            le;
        const ge = Math.max.apply(null, Ce);
        if (W.length > ge)
            return le = new TypeError("Too many arguments in function " + ve + " (expected: " + ge + ", actual: " + W.length + ")"),
            le.data = {
                category: "tooManyArgs",
                fn: ve,
                index: W.length,
                expectedLength: ge
            },
            le;
        const We = [];
        for (let He = 0; He < W.length; ++He)
            We.push(d(W[He]).join("|"));
        return le = new TypeError('Arguments of type "' + We.join(", ") + '" do not match any of the defined signatures of function ' + ve + "."),
        le.data = {
            category: "mismatch",
            actual: We
        },
        le
    }
    function F(L) {
        let W = n.length + 1;
        for (let ne = 0; ne < L.types.length; ne++)
            A(L.types[ne]) && (W = Math.min(W, L.types[ne].typeIndex));
        return W
    }
    function R(L) {
        let W = i + 1;
        for (let ne = 0; ne < L.types.length; ne++)
            A(L.types[ne]) || (W = Math.min(W, L.types[ne].conversionIndex));
        return W
    }
    function O(L, W) {
        if (L.hasAny) {
            if (!W.hasAny)
                return 1
        } else if (W.hasAny)
            return -1;
        if (L.restParam) {
            if (!W.restParam)
                return 1
        } else if (W.restParam)
            return -1;
        if (L.hasConversion) {
            if (!W.hasConversion)
                return 1
        } else if (W.hasConversion)
            return -1;
        const ne = F(L) - F(W);
        if (ne < 0)
            return -1;
        if (ne > 0)
            return 1;
        const le = R(L) - R(W);
        return le < 0 ? -1 : le > 0 ? 1 : 0
    }
    function M(L, W) {
        const ne = L.params
          , le = W.params
          , he = ue(ne)
          , ve = ue(le)
          , we = C(ne)
          , ye = C(le);
        if (we && he.hasAny) {
            if (!ye || !ve.hasAny)
                return 1
        } else if (ye && ve.hasAny)
            return -1;
        let Ce = 0, ge = 0, We;
        for (We of ne)
            We.hasAny && ++Ce,
            We.hasConversion && ++ge;
        let He = 0
          , $e = 0;
        for (We of le)
            We.hasAny && ++He,
            We.hasConversion && ++$e;
        if (Ce !== He)
            return Ce - He;
        if (we && he.hasConversion) {
            if (!ye || !ve.hasConversion)
                return 1
        } else if (ye && ve.hasConversion)
            return -1;
        if (ge !== $e)
            return ge - $e;
        if (we) {
            if (!ye)
                return 1
        } else if (ye)
            return -1;
        const Ge = (ne.length - le.length) * (we ? -1 : 1);
        if (Ge !== 0)
            return Ge;
        const St = [];
        let U = 0;
        for (let de = 0; de < ne.length; ++de) {
            const Ae = O(ne[de], le[de]);
            St.push(Ae),
            U += Ae
        }
        if (U !== 0)
            return U;
        let X;
        for (X of St)
            if (X !== 0)
                return X;
        return 0
    }
    function N(L) {
        if (L.length === 0)
            return [];
        const W = L.map(s);
        L.length > 1 && W.sort( (he, ve) => he.index - ve.index);
        let ne = W[0].conversionsTo;
        if (L.length === 1)
            return ne;
        ne = ne.concat([]);
        const le = new Set(L);
        for (let he = 1; he < W.length; ++he) {
            let ve;
            for (ve of W[he].conversionsTo)
                le.has(ve.from) || (ne.push(ve),
                le.add(ve.from))
        }
        return ne
    }
    function B(L, W) {
        let ne = W;
        if (L.some(he => he.hasConversion)) {
            const he = C(L)
              , ve = L.map(D);
            ne = function() {
                const ye = []
                  , Ce = he ? arguments.length - 1 : arguments.length;
                for (let ge = 0; ge < Ce; ge++)
                    ye[ge] = ve[ge](arguments[ge]);
                return he && (ye[Ce] = arguments[Ce].map(ve[Ce])),
                W.apply(this, ye)
            }
        }
        let le = ne;
        if (C(L)) {
            const he = L.length - 1;
            le = function() {
                return ne.apply(this, oe(arguments, 0, he).concat([oe(arguments, he)]))
            }
        }
        return le
    }
    function D(L) {
        let W, ne, le, he;
        const ve = []
          , we = [];
        switch (L.types.forEach(function(ye) {
            ye.conversion && (ve.push(s(ye.conversion.from).test),
            we.push(ye.conversion.convert))
        }),
        we.length) {
        case 0:
            return function(Ce) {
                return Ce
            }
            ;
        case 1:
            return W = ve[0],
            le = we[0],
            function(Ce) {
                return W(Ce) ? le(Ce) : Ce
            }
            ;
        case 2:
            return W = ve[0],
            ne = ve[1],
            le = we[0],
            he = we[1],
            function(Ce) {
                return W(Ce) ? le(Ce) : ne(Ce) ? he(Ce) : Ce
            }
            ;
        default:
            return function(Ce) {
                for (let ge = 0; ge < we.length; ge++)
                    if (ve[ge](Ce))
                        return we[ge](Ce);
                return Ce
            }
        }
    }
    function V(L) {
        function W(ne, le, he) {
            if (le < ne.length) {
                const ve = ne[le];
                let we = [];
                if (ve.restParam) {
                    const ye = ve.types.filter(A);
                    ye.length < ve.types.length && we.push({
                        types: ye,
                        name: "..." + ye.map(Ce => Ce.name).join("|"),
                        hasAny: ye.some(Ce => Ce.isAny),
                        hasConversion: !1,
                        restParam: !0
                    }),
                    we.push(ve)
                } else
                    we = ve.types.map(function(ye) {
                        return {
                            types: [ye],
                            name: ye.name,
                            hasAny: ye.isAny,
                            hasConversion: ye.conversion,
                            restParam: !1
                        }
                    });
                return xe(we, function(ye) {
                    return W(ne, le + 1, he.concat([ye]))
                })
            } else
                return [he]
        }
        return W(L, 0, [])
    }
    function J(L, W) {
        const ne = Math.max(L.length, W.length);
        for (let ye = 0; ye < ne; ye++) {
            const Ce = k(L, ye)
              , ge = k(W, ye);
            let We = !1, He;
            for (He of ge)
                if (Ce.has(He)) {
                    We = !0;
                    break
                }
            if (!We)
                return !1
        }
        const le = L.length
          , he = W.length
          , ve = C(L)
          , we = C(W);
        return ve ? we ? le === he : he >= le : we ? le >= he : le === he
    }
    function Y(L) {
        return L.map(W => z(W) ? H(W.referToSelf.callback) : Q(W) ? be(W.referTo.references, W.referTo.callback) : W)
    }
    function G(L, W, ne) {
        const le = [];
        let he;
        for (he of L) {
            let ve = ne[he];
            if (typeof ve != "number")
                throw new TypeError('No definition for referenced signature "' + he + '"');
            if (ve = W[ve],
            typeof ve != "function")
                return !1;
            le.push(ve)
        }
        return le
    }
    function Z(L, W, ne) {
        const le = Y(L)
          , he = new Array(le.length).fill(!1);
        let ve = !0;
        for (; ve; ) {
            ve = !1;
            let we = !0;
            for (let ye = 0; ye < le.length; ++ye) {
                if (he[ye])
                    continue;
                const Ce = le[ye];
                if (z(Ce))
                    le[ye] = Ce.referToSelf.callback(ne),
                    le[ye].referToSelf = Ce.referToSelf,
                    he[ye] = !0,
                    we = !1;
                else if (Q(Ce)) {
                    const ge = G(Ce.referTo.references, le, W);
                    ge ? (le[ye] = Ce.referTo.callback.apply(this, ge),
                    le[ye].referTo = Ce.referTo,
                    he[ye] = !0,
                    we = !1) : ve = !0
                }
            }
            if (we && ve)
                throw new SyntaxError("Circular reference detected in resolving typed.referTo")
        }
        return le
    }
    function ie(L) {
        const W = /\bthis(\(|\.signatures\b)/;
        Object.keys(L).forEach(ne => {
            const le = L[ne];
            if (W.test(le.toString()))
                throw new SyntaxError("Using `this` to self-reference a function is deprecated since typed-function@3. Use typed.referTo and typed.referToSelf instead.")
        }
        )
    }
    function re(L, W) {
        if (o.createCount++,
        Object.keys(W).length === 0)
            throw new SyntaxError("No signatures provided");
        o.warnAgainstDeprecatedThis && ie(W);
        const ne = []
          , le = []
          , he = {}
          , ve = [];
        let we;
        for (we in W) {
            if (!Object.prototype.hasOwnProperty.call(W, we))
                continue;
            const mt = w(we);
            if (!mt)
                continue;
            ne.forEach(function(Ua) {
                if (J(Ua, mt))
                    throw new TypeError('Conflicting signatures "' + _(Ua) + '" and "' + _(mt) + '".')
            }),
            ne.push(mt);
            const pr = le.length;
            le.push(W[we]);
            const xu = mt.map(g);
            let Za;
            for (Za of V(xu)) {
                const Ua = _(Za);
                ve.push({
                    params: Za,
                    name: Ua,
                    fn: pr
                }),
                Za.every(Ko => !Ko.hasConversion) && (he[Ua] = pr)
            }
        }
        ve.sort(M);
        const ye = Z(le, he, $r);
        let Ce;
        for (Ce in he)
            Object.prototype.hasOwnProperty.call(he, Ce) && (he[Ce] = ye[he[Ce]]);
        const ge = []
          , We = new Map;
        for (Ce of ve)
            We.has(Ce.name) || (Ce.fn = ye[Ce.fn],
            ge.push(Ce),
            We.set(Ce.name, Ce));
        const He = ge[0] && ge[0].params.length <= 2 && !C(ge[0].params)
          , $e = ge[1] && ge[1].params.length <= 2 && !C(ge[1].params)
          , Ge = ge[2] && ge[2].params.length <= 2 && !C(ge[2].params)
          , St = ge[3] && ge[3].params.length <= 2 && !C(ge[3].params)
          , U = ge[4] && ge[4].params.length <= 2 && !C(ge[4].params)
          , X = ge[5] && ge[5].params.length <= 2 && !C(ge[5].params)
          , de = He && $e && Ge && St && U && X;
        for (let mt = 0; mt < ge.length; ++mt)
            ge[mt].test = x(ge[mt].params);
        const Ae = He ? b(ge[0].params[0]) : tn
          , ze = $e ? b(ge[1].params[0]) : tn
          , Oe = Ge ? b(ge[2].params[0]) : tn
          , Xe = St ? b(ge[3].params[0]) : tn
          , qr = U ? b(ge[4].params[0]) : tn
          , Mr = X ? b(ge[5].params[0]) : tn
          , Qn = He ? b(ge[0].params[1]) : tn
          , pi = $e ? b(ge[1].params[1]) : tn
          , _n = Ge ? b(ge[2].params[1]) : tn
          , Vr = St ? b(ge[3].params[1]) : tn
          , bn = U ? b(ge[4].params[1]) : tn
          , yi = X ? b(ge[5].params[1]) : tn;
        for (let mt = 0; mt < ge.length; ++mt)
            ge[mt].implementation = B(ge[mt].params, ge[mt].fn);
        const wa = He ? ge[0].implementation : Xs
          , wi = $e ? ge[1].implementation : Xs
          , gi = Ge ? ge[2].implementation : Xs
          , Zn = St ? ge[3].implementation : Xs
          , ga = U ? ge[4].implementation : Xs
          , Cn = X ? ge[5].implementation : Xs
          , Ut = He ? ge[0].params.length : -1
          , ht = $e ? ge[1].params.length : -1
          , et = Ge ? ge[2].params.length : -1
          , Ht = St ? ge[3].params.length : -1
          , wt = U ? ge[4].params.length : -1
          , Da = X ? ge[5].params.length : -1
          , Xt = de ? 6 : 0
          , xr = ge.length
          , Qa = ge.map(mt => mt.test)
          , Ji = ge.map(mt => mt.implementation)
          , _i = function() {
            for (let pr = Xt; pr < xr; pr++)
                if (Qa[pr](arguments))
                    return Ji[pr].apply(this, arguments);
            return o.onMismatch(L, arguments, ge)
        };
        function $r(mt, pr) {
            return arguments.length === Ut && Ae(mt) && Qn(pr) ? wa.apply(this, arguments) : arguments.length === ht && ze(mt) && pi(pr) ? wi.apply(this, arguments) : arguments.length === et && Oe(mt) && _n(pr) ? gi.apply(this, arguments) : arguments.length === Ht && Xe(mt) && Vr(pr) ? Zn.apply(this, arguments) : arguments.length === wt && qr(mt) && bn(pr) ? ga.apply(this, arguments) : arguments.length === Da && Mr(mt) && yi(pr) ? Cn.apply(this, arguments) : _i.apply(this, arguments)
        }
        try {
            Object.defineProperty($r, "name", {
                value: L
            })
        } catch {}
        return $r.signatures = he,
        $r._typedFunctionData = {
            signatures: ge,
            signatureMap: We
        },
        $r
    }
    function se(L, W, ne) {
        throw T(L, W, ne)
    }
    function ce(L) {
        return oe(L, 0, L.length - 1)
    }
    function ue(L) {
        return L[L.length - 1]
    }
    function oe(L, W, ne) {
        return Array.prototype.slice.call(L, W, ne)
    }
    function me(L, W) {
        for (let ne = 0; ne < L.length; ne++)
            if (W(L[ne]))
                return L[ne]
    }
    function xe(L, W) {
        return Array.prototype.concat.apply([], L.map(W))
    }
    function pe() {
        const L = ce(arguments).map(ne => _(w(ne)))
          , W = ue(arguments);
        if (typeof W != "function")
            throw new TypeError("Callback function expected as last argument");
        return be(L, W)
    }
    function be(L, W) {
        return {
            referTo: {
                references: L,
                callback: W
            }
        }
    }
    function H(L) {
        if (typeof L != "function")
            throw new TypeError("Callback function expected as first argument");
        return {
            referToSelf: {
                callback: L
            }
        }
    }
    function Q(L) {
        return L && typeof L.referTo == "object" && Array.isArray(L.referTo.references) && typeof L.referTo.callback == "function"
    }
    function z(L) {
        return L && typeof L.referToSelf == "object" && typeof L.referToSelf.callback == "function"
    }
    function P(L, W) {
        if (!L)
            return W;
        if (W && W !== L) {
            const ne = new Error("Function names do not match (expected: " + L + ", actual: " + W + ")");
            throw ne.data = {
                actual: W,
                expected: L
            },
            ne
        }
        return L
    }
    function $(L) {
        let W;
        for (const ne in L)
            Object.prototype.hasOwnProperty.call(L, ne) && (v(L[ne]) || typeof L[ne].signature == "string") && (W = P(W, L[ne].name));
        return W
    }
    function K(L, W) {
        let ne;
        for (ne in W)
            if (Object.prototype.hasOwnProperty.call(W, ne)) {
                if (ne in L && W[ne] !== L[ne]) {
                    const le = new Error('Signature "' + ne + '" is defined twice');
                    throw le.data = {
                        signature: ne,
                        sourceFunction: W[ne],
                        destFunction: L[ne]
                    },
                    le
                }
                L[ne] = W[ne]
            }
    }
    const ae = o;
    o = function(L) {
        const W = typeof L == "string"
          , ne = W ? 1 : 0;
        let le = W ? L : "";
        const he = {};
        for (let ve = ne; ve < arguments.length; ++ve) {
            const we = arguments[ve];
            let ye = {}, Ce;
            if (typeof we == "function" ? (Ce = we.name,
            typeof we.signature == "string" ? ye[we.signature] = we : v(we) && (ye = we.signatures)) : e(we) && (ye = we,
            W || (Ce = $(we))),
            Object.keys(ye).length === 0) {
                const ge = new TypeError("Argument to 'typed' at index " + ve + " is not a (typed) function, nor an object with signatures as keys and functions as values.");
                throw ge.data = {
                    index: ve,
                    argument: we
                },
                ge
            }
            W || (le = P(le, Ce)),
            K(he, ye)
        }
        return re(le || "", he)
    }
    ,
    o.create = kE,
    o.createCount = ae.createCount,
    o.onMismatch = se,
    o.throwMismatchError = se,
    o.createError = T,
    o.clear = u,
    o.clearConversions = c,
    o.addTypes = l,
    o._findType = s,
    o.referTo = pe,
    o.referToSelf = H,
    o.convert = f,
    o.findSignature = h,
    o.find = p,
    o.isTypedFunction = v,
    o.warnAgainstDeprecatedThis = !0,
    o.addType = function(L, W) {
        let ne = "any";
        W !== !1 && a.has("Object") && (ne = "Object"),
        o.addTypes([L], ne)
    }
    ;
    function te(L) {
        if (!L || typeof L.from != "string" || typeof L.to != "string" || typeof L.convert != "function")
            throw new TypeError("Object with properties {from: string, to: string, convert: function} expected");
        if (L.to === L.from)
            throw new SyntaxError('Illegal to define conversion from "' + L.from + '" to itself.')
    }
    return o.addConversion = function(L) {
        te(L);
        const W = s(L.to);
        if (W.conversionsTo.every(function(ne) {
            return ne.from !== L.from
        }))
            W.conversionsTo.push({
                from: L.from,
                convert: L.convert,
                index: i++
            });
        else
            throw new Error('There is already a conversion from "' + L.from + '" to "' + W.name + '"')
    }
    ,
    o.addConversions = function(L) {
        L.forEach(o.addConversion)
    }
    ,
    o.removeConversion = function(L) {
        te(L);
        const W = s(L.to)
          , ne = me(W.conversionsTo, he => he.from === L.from);
        if (!ne)
            throw new Error("Attempt to remove nonexistent conversion from " + L.from + " to " + L.to);
        if (ne.convert !== L.convert)
            throw new Error("Conversion to remove does not match existing conversion");
        const le = W.conversionsTo.indexOf(ne);
        W.conversionsTo.splice(le, 1)
    }
    ,
    o.resolve = function(L, W) {
        if (!v(L))
            throw new TypeError(V1);
        const ne = L._typedFunctionData.signatures;
        for (let le = 0; le < ne.length; ++le)
            if (ne[le].test(W))
                return ne[le];
        return null
    }
    ,
    o
}
const _l = kE();
function Be(e) {
    return typeof e == "boolean" ? !0 : isFinite(e) ? e === Math.round(e) : !1
}
var go = Math.sign || function(e) {
    return e > 0 ? 1 : e < 0 ? -1 : 0
}
  , KP = Math.log2 || function(t) {
    return Math.log(t) / Math.LN2
}
  , QP = Math.log10 || function(t) {
    return Math.log(t) / Math.LN10
}
  , ZP = Math.log1p || function(e) {
    return Math.log(e + 1)
}
  , XP = Math.cbrt || function(t) {
    if (t === 0)
        return t;
    var r = t < 0, a;
    return r && (t = -t),
    isFinite(t) ? (a = Math.exp(Math.log(t) / 3),
    a = (t / (a * a) + 2 * a) / 3) : a = t,
    r ? -a : a
}
  , eB = Math.expm1 || function(t) {
    return t >= 2e-4 || t <= -2e-4 ? Math.exp(t) - 1 : t + t * t / 2 + t * t * t / 6
}
;
function _p(e, t, r) {
    var a = {
        2: "0b",
        8: "0o",
        16: "0x"
    }
      , n = a[t]
      , i = "";
    if (r) {
        if (r < 1)
            throw new Error("size must be in greater than 0");
        if (!Be(r))
            throw new Error("size must be an integer");
        if (e > 2 ** (r - 1) - 1 || e < -(2 ** (r - 1)))
            throw new Error("Value must be in range [-2^".concat(r - 1, ", 2^").concat(r - 1, "-1]"));
        if (!Be(e))
            throw new Error("Value must be an integer");
        e < 0 && (e = e + 2 ** r),
        i = "i".concat(r)
    }
    var o = "";
    return e < 0 && (e = -e,
    o = "-"),
    "".concat(o).concat(n).concat(e.toString(t)).concat(i)
}
function fs(e, t) {
    if (typeof t == "function")
        return t(e);
    if (e === 1 / 0)
        return "Infinity";
    if (e === -1 / 0)
        return "-Infinity";
    if (isNaN(e))
        return "NaN";
    var r = "auto", a, n;
    if (t && (t.notation && (r = t.notation),
    lt(t) ? a = t : lt(t.precision) && (a = t.precision),
    t.wordSize && (n = t.wordSize,
    typeof n != "number")))
        throw new Error('Option "wordSize" must be a number');
    switch (r) {
    case "fixed":
        return TE(e, a);
    case "exponential":
        return NE(e, a);
    case "engineering":
        return tB(e, a);
    case "bin":
        return _p(e, 2, n);
    case "oct":
        return _p(e, 8, n);
    case "hex":
        return _p(e, 16, n);
    case "auto":
        return rB(e, a, t && t).replace(/((\.\d*?)(0+))($|e)/, function() {
            var i = arguments[2]
              , o = arguments[4];
            return i !== "." ? i + o : o
        });
    default:
        throw new Error('Unknown notation "' + r + '". Choose "auto", "exponential", "fixed", "bin", "oct", or "hex.')
    }
}
function Hm(e) {
    var t = String(e).toLowerCase().match(/^(-?)(\d+\.?\d*)(e([+-]?\d+))?$/);
    if (!t)
        throw new SyntaxError("Invalid number " + e);
    var r = t[1]
      , a = t[2]
      , n = parseFloat(t[4] || "0")
      , i = a.indexOf(".");
    n += i !== -1 ? i - 1 : a.length - 1;
    var o = a.replace(".", "").replace(/^0*/, function(s) {
        return n -= s.length,
        ""
    }).replace(/0*$/, "").split("").map(function(s) {
        return parseInt(s)
    });
    return o.length === 0 && (o.push(0),
    n++),
    {
        sign: r,
        coefficients: o,
        exponent: n
    }
}
function tB(e, t) {
    if (isNaN(e) || !isFinite(e))
        return String(e);
    var r = Hm(e)
      , a = Wm(r, t)
      , n = a.exponent
      , i = a.coefficients
      , o = n % 3 === 0 ? n : n < 0 ? n - 3 - n % 3 : n - n % 3;
    if (lt(t))
        for (; t > i.length || n - o + 1 > i.length; )
            i.push(0);
    else
        for (var s = Math.abs(n - o) - (i.length - 1), l = 0; l < s; l++)
            i.push(0);
    for (var u = Math.abs(n - o), c = 1; u > 0; )
        c++,
        u--;
    var d = i.slice(c).join("")
      , v = lt(t) && d.length || d.match(/[1-9]/) ? "." + d : ""
      , h = i.slice(0, c).join("") + v + "e" + (n >= 0 ? "+" : "") + o.toString();
    return a.sign + h
}
function TE(e, t) {
    if (isNaN(e) || !isFinite(e))
        return String(e);
    var r = Hm(e)
      , a = typeof t == "number" ? Wm(r, r.exponent + 1 + t) : r
      , n = a.coefficients
      , i = a.exponent + 1
      , o = i + (t || 0);
    return n.length < o && (n = n.concat(Il(o - n.length))),
    i < 0 && (n = Il(-i + 1).concat(n),
    i = 1),
    i < n.length && n.splice(i, 0, i === 0 ? "0." : "."),
    a.sign + n.join("")
}
function NE(e, t) {
    if (isNaN(e) || !isFinite(e))
        return String(e);
    var r = Hm(e)
      , a = t ? Wm(r, t) : r
      , n = a.coefficients
      , i = a.exponent;
    n.length < t && (n = n.concat(Il(t - n.length)));
    var o = n.shift();
    return a.sign + o + (n.length > 0 ? "." + n.join("") : "") + "e" + (i >= 0 ? "+" : "") + i
}
function rB(e, t, r) {
    if (isNaN(e) || !isFinite(e))
        return String(e);
    var a = r && r.lowerExp !== void 0 ? r.lowerExp : -3
      , n = r && r.upperExp !== void 0 ? r.upperExp : 5
      , i = Hm(e)
      , o = t ? Wm(i, t) : i;
    if (o.exponent < a || o.exponent >= n)
        return NE(e, t);
    var s = o.coefficients
      , l = o.exponent;
    s.length < t && (s = s.concat(Il(t - s.length))),
    s = s.concat(Il(l - s.length + 1 + (s.length < t ? t - s.length : 0))),
    s = Il(-l).concat(s);
    var u = l > 0 ? l : 0;
    return u < s.length - 1 && s.splice(u + 1, 0, "."),
    o.sign + s.join("")
}
function Wm(e, t) {
    for (var r = {
        sign: e.sign,
        coefficients: e.coefficients,
        exponent: e.exponent
    }, a = r.coefficients; t <= 0; )
        a.unshift(0),
        r.exponent++,
        t++;
    if (a.length > t) {
        var n = a.splice(t, a.length - t);
        if (n[0] >= 5) {
            var i = t - 1;
            for (a[i]++; a[i] === 10; )
                a.pop(),
                i === 0 && (a.unshift(0),
                r.exponent++,
                i++),
                i--,
                a[i]++
        }
    }
    return r
}
function Il(e) {
    for (var t = [], r = 0; r < e; r++)
        t.push(0);
    return t
}
function aB(e) {
    return e.toExponential().replace(/e.*$/, "").replace(/^0\.?0*|\./, "").length
}
var nB = Number.EPSILON || 2220446049250313e-31;
function ja(e, t, r) {
    if (r == null)
        return e === t;
    if (e === t)
        return !0;
    if (isNaN(e) || isNaN(t))
        return !1;
    if (isFinite(e) && isFinite(t)) {
        var a = Math.abs(e - t);
        return a < nB ? !0 : a <= Math.max(Math.abs(e), Math.abs(t)) * r
    }
    return !1
}
var iB = Math.acosh || function(e) {
    return Math.log(Math.sqrt(e * e - 1) + e)
}
  , oB = Math.asinh || function(e) {
    return Math.log(Math.sqrt(e * e + 1) + e)
}
  , sB = Math.atanh || function(e) {
    return Math.log((1 + e) / (1 - e)) / 2
}
  , lB = Math.cosh || function(e) {
    return (Math.exp(e) + Math.exp(-e)) / 2
}
  , uB = Math.sinh || function(e) {
    return (Math.exp(e) - Math.exp(-e)) / 2
}
  , cB = Math.tanh || function(e) {
    var t = Math.exp(2 * e);
    return (t - 1) / (t + 1)
}
;
function dB(e, t) {
    var r = e > 0 ? !0 : e < 0 ? !1 : 1 / e === 1 / 0
      , a = t > 0 ? !0 : t < 0 ? !1 : 1 / t === 1 / 0;
    return r ^ a ? -e : e
}
function bp(e, t, r) {
    var a = e.constructor
      , n = new a(2)
      , i = "";
    if (r) {
        if (r < 1)
            throw new Error("size must be in greater than 0");
        if (!Be(r))
            throw new Error("size must be an integer");
        if (e.greaterThan(n.pow(r - 1).sub(1)) || e.lessThan(n.pow(r - 1).mul(-1)))
            throw new Error("Value must be in range [-2^".concat(r - 1, ", 2^").concat(r - 1, "-1]"));
        if (!e.isInteger())
            throw new Error("Value must be an integer");
        e.lessThan(0) && (e = e.add(n.pow(r))),
        i = "i".concat(r)
    }
    switch (t) {
    case 2:
        return "".concat(e.toBinary()).concat(i);
    case 8:
        return "".concat(e.toOctal()).concat(i);
    case 16:
        return "".concat(e.toHexadecimal()).concat(i);
    default:
        throw new Error("Base ".concat(t, " not supported "))
    }
}
function vB(e, t) {
    if (typeof t == "function")
        return t(e);
    if (!e.isFinite())
        return e.isNaN() ? "NaN" : e.gt(0) ? "Infinity" : "-Infinity";
    var r = "auto", a, n;
    if (t !== void 0 && (t.notation && (r = t.notation),
    typeof t == "number" ? a = t : t.precision !== void 0 && (a = t.precision),
    t.wordSize && (n = t.wordSize,
    typeof n != "number")))
        throw new Error('Option "wordSize" must be a number');
    switch (r) {
    case "fixed":
        return mB(e, a);
    case "exponential":
        return $1(e, a);
    case "engineering":
        return hB(e, a);
    case "bin":
        return bp(e, 2, n);
    case "oct":
        return bp(e, 8, n);
    case "hex":
        return bp(e, 16, n);
    case "auto":
        {
            var i = t && t.lowerExp !== void 0 ? t.lowerExp : -3
              , o = t && t.upperExp !== void 0 ? t.upperExp : 5;
            if (e.isZero())
                return "0";
            var s, l = e.toSignificantDigits(a), u = l.e;
            return u >= i && u < o ? s = l.toFixed() : s = $1(e, a),
            s.replace(/((\.\d*?)(0+))($|e)/, function() {
                var c = arguments[2]
                  , d = arguments[4];
                return c !== "." ? c + d : d
            })
        }
    default:
        throw new Error('Unknown notation "' + r + '". Choose "auto", "exponential", "fixed", "bin", "oct", or "hex.')
    }
}
function hB(e, t) {
    var r = e.e
      , a = r % 3 === 0 ? r : r < 0 ? r - 3 - r % 3 : r - r % 3
      , n = e.mul(Math.pow(10, -a))
      , i = n.toPrecision(t);
    if (i.indexOf("e") !== -1) {
        var o = e.constructor;
        i = new o(i).toFixed()
    }
    return i + "e" + (r >= 0 ? "+" : "") + a.toString()
}
function $1(e, t) {
    return t !== void 0 ? e.toExponential(t - 1) : e.toExponential()
}
function mB(e, t) {
    return e.toFixed(t)
}
function fB(e, t) {
    var r = e.length - t.length
      , a = e.length;
    return e.substring(r, a) === t
}
function st(e, t) {
    var r = pB(e, t);
    return t && typeof t == "object" && "truncate"in t && r.length > t.truncate ? r.substring(0, t.truncate - 3) + "..." : r
}
function pB(e, t) {
    if (typeof e == "number")
        return fs(e, t);
    if (vt(e))
        return vB(e, t);
    if (yB(e))
        return !t || t.fraction !== "decimal" ? e.s * e.n + "/" + e.d : e.toString();
    if (Array.isArray(e))
        return ME(e, t);
    if (Wr(e))
        return '"' + e + '"';
    if (typeof e == "function")
        return e.syntax ? String(e.syntax) : "function";
    if (e && typeof e == "object") {
        if (typeof e.format == "function")
            return e.format(t);
        if (e && e.toString(t) !== {}.toString())
            return e.toString(t);
        var r = Object.keys(e).map(a => '"' + a + '": ' + st(e[a], t));
        return "{" + r.join(", ") + "}"
    }
    return String(e)
}
function Jd(e) {
    for (var t = String(e), r = "", a = 0; a < t.length; ) {
        var n = t.charAt(a);
        n === "\\" ? (r += n,
        a++,
        n = t.charAt(a),
        (n === "" || '"\\/bfnrtu'.indexOf(n) === -1) && (r += "\\"),
        r += n) : n === '"' ? r += '\\"' : r += n,
        a++
    }
    return '"' + r + '"'
}
function cn(e) {
    var t = String(e);
    return t = t.replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/'/g, "&#39;").replace(/</g, "&lt;").replace(/>/g, "&gt;"),
    t
}
function ME(e, t) {
    if (Array.isArray(e)) {
        for (var r = "[", a = e.length, n = 0; n < a; n++)
            n !== 0 && (r += ", "),
            r += ME(e[n], t);
        return r += "]",
        r
    } else
        return st(e, t)
}
function yB(e) {
    return e && typeof e == "object" && typeof e.s == "number" && typeof e.n == "number" && typeof e.d == "number" || !1
}
function sw(e, t) {
    if (!Wr(e))
        throw new TypeError("Unexpected type of argument in function compareText (expected: string or Array or Matrix, actual: " + Bt(e) + ", index: 0)");
    if (!Wr(t))
        throw new TypeError("Unexpected type of argument in function compareText (expected: string or Array or Matrix, actual: " + Bt(t) + ", index: 1)");
    return e === t ? 0 : e > t ? 1 : -1
}
function ut(e, t, r) {
    if (!(this instanceof ut))
        throw new SyntaxError("Constructor must be called with the new operator");
    this.actual = e,
    this.expected = t,
    this.relation = r,
    this.message = "Dimension mismatch (" + (Array.isArray(e) ? "[" + e.join(", ") + "]" : e) + " " + (this.relation || "!=") + " " + (Array.isArray(t) ? "[" + t.join(", ") + "]" : t) + ")",
    this.stack = new Error().stack
}
ut.prototype = new RangeError;
ut.prototype.constructor = RangeError;
ut.prototype.name = "DimensionError";
ut.prototype.isDimensionError = !0;
function zn(e, t, r) {
    if (!(this instanceof zn))
        throw new SyntaxError("Constructor must be called with the new operator");
    this.index = e,
    arguments.length < 3 ? (this.min = 0,
    this.max = t) : (this.min = t,
    this.max = r),
    this.min !== void 0 && this.index < this.min ? this.message = "Index out of range (" + this.index + " < " + this.min + ")" : this.max !== void 0 && this.index >= this.max ? this.message = "Index out of range (" + this.index + " > " + (this.max - 1) + ")" : this.message = "Index out of range (" + this.index + ")",
    this.stack = new Error().stack
}
zn.prototype = new RangeError;
zn.prototype.constructor = RangeError;
zn.prototype.name = "IndexError";
zn.prototype.isIndexError = !0;
function it(e) {
    for (var t = []; Array.isArray(e); )
        t.push(e.length),
        e = e[0];
    return t
}
function IE(e, t, r) {
    var a, n = e.length;
    if (n !== t[r])
        throw new ut(n,t[r]);
    if (r < t.length - 1) {
        var i = r + 1;
        for (a = 0; a < n; a++) {
            var o = e[a];
            if (!Array.isArray(o))
                throw new ut(t.length - 1,t.length,"<");
            IE(e[a], t, i)
        }
    } else
        for (a = 0; a < n; a++)
            if (Array.isArray(e[a]))
                throw new ut(t.length + 1,t.length,">")
}
function z1(e, t) {
    var r = t.length === 0;
    if (r) {
        if (Array.isArray(e))
            throw new ut(e.length,0)
    } else
        IE(e, t, 0)
}
function Eh(e, t) {
    var r = e.isMatrix ? e._size : it(e)
      , a = t._sourceSize;
    a.forEach( (n, i) => {
        if (n !== null && n !== r[i])
            throw new ut(n,r[i])
    }
    )
}
function Ot(e, t) {
    if (e !== void 0) {
        if (!lt(e) || !Be(e))
            throw new TypeError("Index must be an integer (value: " + e + ")");
        if (e < 0 || typeof t == "number" && e >= t)
            throw new zn(e,t)
    }
}
function Gl(e) {
    for (var t = 0; t < e._dimensions.length; ++t) {
        var r = e._dimensions[t];
        if (r._data && At(r._data)) {
            if (r._size[0] === 0)
                return !0
        } else if (r.isRange) {
            if (r.start === r.end)
                return !0
        } else if (Wr(r) && r.length === 0)
            return !0
    }
    return !1
}
function jl(e, t, r) {
    if (!Array.isArray(t))
        throw new TypeError("Array expected");
    if (t.length === 0)
        throw new Error("Resizing to scalar is not supported");
    t.forEach(function(n) {
        if (!lt(n) || !Be(n) || n < 0)
            throw new TypeError("Invalid size, must contain positive integers (size: " + st(t) + ")")
    }),
    (lt(e) || vt(e)) && (e = [e]);
    var a = r !== void 0 ? r : 0;
    return lw(e, t, 0, a),
    e
}
function lw(e, t, r, a) {
    var n, i, o = e.length, s = t[r], l = Math.min(o, s);
    if (e.length = s,
    r < t.length - 1) {
        var u = r + 1;
        for (n = 0; n < l; n++)
            i = e[n],
            Array.isArray(i) || (i = [i],
            e[n] = i),
            lw(i, t, u, a);
        for (n = l; n < s; n++)
            i = [],
            e[n] = i,
            lw(i, t, u, a)
    } else {
        for (n = 0; n < l; n++)
            for (; Array.isArray(e[n]); )
                e[n] = e[n][0];
        for (n = l; n < s; n++)
            e[n] = a
    }
}
function n2(e, t) {
    var r = bt(e)
      , a = r.length;
    if (!Array.isArray(e) || !Array.isArray(t))
        throw new TypeError("Array expected");
    if (t.length === 0)
        throw new ut(0,a,"!=");
    t = i2(t, a);
    var n = DE(t);
    if (a !== n)
        throw new ut(n,a,"!=");
    try {
        return wB(r, t)
    } catch (i) {
        throw i instanceof ut ? new ut(n,a,"!=") : i
    }
}
function i2(e, t) {
    var r = DE(e)
      , a = e.slice()
      , n = -1
      , i = e.indexOf(n)
      , o = e.indexOf(n, i + 1) >= 0;
    if (o)
        throw new Error("More than one wildcard in sizes");
    var s = i >= 0
      , l = t % r === 0;
    if (s)
        if (l)
            a[i] = -t / r;
        else
            throw new Error("Could not replace wildcard, since " + t + " is no multiple of " + -r);
    return a
}
function DE(e) {
    return e.reduce( (t, r) => t * r, 1)
}
function wB(e, t) {
    for (var r = e, a, n = t.length - 1; n > 0; n--) {
        var i = t[n];
        a = [];
        for (var o = r.length / i, s = 0; s < o; s++)
            a.push(r.slice(s * i, (s + 1) * i));
        r = a
    }
    return r
}
function kh(e, t) {
    for (var r = t || it(e); Array.isArray(e) && e.length === 1; )
        e = e[0],
        r.shift();
    for (var a = r.length; r[a - 1] === 1; )
        a--;
    return a < r.length && (e = UE(e, a, 0),
    r.length = a),
    e
}
function UE(e, t, r) {
    var a, n;
    if (r < t) {
        var i = r + 1;
        for (a = 0,
        n = e.length; a < n; a++)
            e[a] = UE(e[a], t, i)
    } else
        for (; Array.isArray(e); )
            e = e[0];
    return e
}
function FE(e, t, r, a) {
    var n = a || it(e);
    if (r)
        for (var i = 0; i < r; i++)
            e = [e],
            n.unshift(1);
    for (e = OE(e, t, 0); n.length < t; )
        n.push(1);
    return e
}
function OE(e, t, r) {
    var a, n;
    if (Array.isArray(e)) {
        var i = r + 1;
        for (a = 0,
        n = e.length; a < n; a++)
            e[a] = OE(e[a], t, i)
    } else
        for (var o = r; o < t; o++)
            e = [e];
    return e
}
function bt(e) {
    if (!Array.isArray(e))
        return e;
    var t = [];
    return e.forEach(function r(a) {
        Array.isArray(a) ? a.forEach(r) : t.push(a)
    }),
    t
}
function Pi(e, t) {
    return Array.prototype.map.call(e, t)
}
function Ym(e, t) {
    Array.prototype.forEach.call(e, t)
}
function PE(e, t) {
    if (it(e).length !== 1)
        throw new Error("Only one dimensional matrices supported");
    return Array.prototype.filter.call(e, t)
}
function Th(e, t) {
    if (it(e).length !== 1)
        throw new Error("Only one dimensional matrices supported");
    return Array.prototype.filter.call(e, r => t.test(r))
}
function G1(e, t) {
    return Array.prototype.join.call(e, t)
}
function Hl(e) {
    if (!Array.isArray(e))
        throw new TypeError("Array input expected");
    if (e.length === 0)
        return e;
    var t = []
      , r = 0;
    t[0] = {
        value: e[0],
        identifier: 0
    };
    for (var a = 1; a < e.length; a++)
        e[a] === e[a - 1] ? r++ : r = 0,
        t.push({
            value: e[a],
            identifier: r
        });
    return t
}
function Nh(e) {
    if (!Array.isArray(e))
        throw new TypeError("Array input expected");
    if (e.length === 0)
        return e;
    for (var t = [], r = 0; r < e.length; r++)
        t.push(e[r].value);
    return t
}
function Uc(e, t) {
    for (var r, a = 0, n = 0; n < e.length; n++) {
        var i = e[n]
          , o = Array.isArray(i);
        if (n === 0 && o && (a = i.length),
        o && i.length !== a)
            return;
        var s = o ? Uc(i, t) : t(i);
        if (r === void 0)
            r = s;
        else if (r !== s)
            return "mixed"
    }
    return r
}
function BE(e, t, r, a) {
    if (a < r) {
        if (e.length !== t.length)
            throw new ut(e.length,t.length);
        for (var n = [], i = 0; i < e.length; i++)
            n[i] = BE(e[i], t[i], r, a + 1);
        return n
    } else
        return e.concat(t)
}
function RE() {
    var e = Array.prototype.slice.call(arguments, 0, -1)
      , t = Array.prototype.slice.call(arguments, -1);
    if (e.length === 1)
        return e[0];
    if (e.length > 1)
        return e.slice(1).reduce(function(r, a) {
            return BE(r, a, t, 0)
        }, e[0]);
    throw new Error("Wrong number of arguments in function concat")
}
function gB() {
    for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++)
        t[r] = arguments[r];
    for (var a = t.map(v => v.length), n = Math.max(...a), i = new Array(n).fill(null), o = 0; o < t.length; o++)
        for (var s = t[o], l = a[o], u = 0; u < l; u++) {
            var c = n - l + u;
            s[u] > i[c] && (i[c] = s[u])
        }
    for (var d = 0; d < t.length; d++)
        Mh(t[d], i);
    return i
}
function Mh(e, t) {
    for (var r = t.length, a = e.length, n = 0; n < a; n++) {
        var i = r - a + n;
        if (e[n] < t[i] && e[n] > 1 || e[n] > t[i])
            throw new Error("shape missmatch: missmatch is found in arg with shape (".concat(e, ") not possible to broadcast dimension ").concat(a, " with size ").concat(e[n], " to size ").concat(t[i]))
    }
}
function j1(e, t) {
    var r = it(e);
    if (Cs(r, t))
        return e;
    Mh(r, t);
    var a = gB(r, t)
      , n = a.length
      , i = [...Array(n - r.length).fill(1), ...r]
      , o = bB(e);
    r.length < n && (o = n2(o, i),
    r = it(o));
    for (var s = 0; s < n; s++)
        r[s] < a[s] && (o = _B(o, a[s], s),
        r = it(o));
    return o
}
function _B(e, t, r) {
    return RE(...Array(t).fill(e), r)
}
function bB(e) {
    return Ie([], e)
}
function j(e, t, r, a) {
    function n(i) {
        var o = WP(i, t.map(xB));
        return CB(e, t, i),
        r(o)
    }
    return n.isFactory = !0,
    n.fn = e,
    n.dependencies = t.slice().sort(),
    a && (n.meta = a),
    n
}
function CB(e, t, r) {
    var a = t.filter(i => !SB(i)).every(i => r[i] !== void 0);
    if (!a) {
        var n = t.filter(i => r[i] === void 0);
        throw new Error('Cannot create function "'.concat(e, '", ') + "some dependencies are missing: ".concat(n.map(i => '"'.concat(i, '"')).join(", "), "."))
    }
}
function SB(e) {
    return e && e[0] === "?"
}
function xB(e) {
    return e && e[0] === "?" ? e.slice(1) : e
}
function la(e, t) {
    if (qE(e) && LE(e, t))
        return e[t];
    throw typeof e[t] == "function" && o2(e, t) ? new Error('Cannot access method "' + t + '" as a property') : new Error('No access to property "' + t + '"')
}
function Wl(e, t, r) {
    if (qE(e) && LE(e, t))
        return e[t] = r,
        r;
    throw new Error('No access to property "' + t + '"')
}
function AB(e, t) {
    return t in e
}
function LE(e, t) {
    return !e || typeof e != "object" ? !1 : Ue(kB, t) ? !0 : !(t in Object.prototype || t in Function.prototype)
}
function EB(e, t) {
    if (!o2(e, t))
        throw new Error('No access to method "' + t + '"');
    return e[t]
}
function o2(e, t) {
    return e == null || typeof e[t] != "function" || Ue(e, t) && Object.getPrototypeOf && t in Object.getPrototypeOf(e) ? !1 : Ue(TB, t) ? !0 : !(t in Object.prototype || t in Function.prototype)
}
function qE(e) {
    return typeof e == "object" && e && e.constructor === Object
}
var kB = {
    length: !0,
    name: !0
}
  , TB = {
    toString: !0,
    valueOf: !0,
    toLocaleString: !0
};
class s2 {
    constructor(t) {
        this.wrappedObject = t
    }
    keys() {
        return Object.keys(this.wrappedObject)
    }
    get(t) {
        return la(this.wrappedObject, t)
    }
    set(t, r) {
        return Wl(this.wrappedObject, t, r),
        this
    }
    has(t) {
        return AB(this.wrappedObject, t)
    }
}
function Yl() {
    return new Map
}
function Dl(e) {
    if (!e)
        return Yl();
    if (l2(e))
        return e;
    if (a2(e))
        return new s2(e);
    throw new Error("createMap can create maps from objects or Maps")
}
function NB(e) {
    if (e instanceof s2)
        return e.wrappedObject;
    var t = {};
    for (var r of e.keys()) {
        var a = e.get(r);
        Wl(t, r, a)
    }
    return t
}
function l2(e) {
    return e ? e instanceof Map || e instanceof s2 || typeof e.set == "function" && typeof e.get == "function" && typeof e.keys == "function" && typeof e.has == "function" : !1
}
function H1(e) {
    for (var t = arguments.length, r = new Array(t > 1 ? t - 1 : 0), a = 1; a < t; a++)
        r[a - 1] = arguments[a];
    for (var n of r)
        if (n) {
            if (l2(n))
                for (var i of n.keys())
                    e.set(i, n.get(i));
            else if (a2(n))
                for (var o of Object.keys(n))
                    e.set(o, n[o])
        }
    return e
}
var VE = function() {
    return VE = _l.create,
    _l
}
  , MB = ["?BigNumber", "?Complex", "?DenseMatrix", "?Fraction"]
  , IB = j("typed", MB, function(t) {
    var {BigNumber: r, Complex: a, DenseMatrix: n, Fraction: i} = t
      , o = VE();
    return o.clear(),
    o.addTypes([{
        name: "number",
        test: lt
    }, {
        name: "Complex",
        test: Oi
    }, {
        name: "BigNumber",
        test: vt
    }, {
        name: "Fraction",
        test: ed
    }, {
        name: "Unit",
        test: ln
    }, {
        name: "identifier",
        test: s => Wr && /^(?:[A-Za-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u0870-\u0887\u0889-\u088E\u08A0-\u08C9\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C5D\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u1711\u171F-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4C\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BF\u31F0-\u31FF\u3400-\u4DBF\u4E00-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7CA\uA7D0\uA7D1\uA7D3\uA7D5-\uA7D9\uA7F2-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF40\uDF42-\uDF49\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDD70-\uDD7A\uDD7C-\uDD8A\uDD8C-\uDD92\uDD94\uDD95\uDD97-\uDDA1\uDDA3-\uDDB1\uDDB3-\uDDB9\uDDBB\uDDBC\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67\uDF80-\uDF85\uDF87-\uDFB0\uDFB2-\uDFBA]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE35\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2\uDD00-\uDD23\uDE80-\uDEA9\uDEB0\uDEB1\uDF00-\uDF1C\uDF27\uDF30-\uDF45\uDF70-\uDF81\uDFB0-\uDFC4\uDFE0-\uDFF6]|\uD804[\uDC03-\uDC37\uDC71\uDC72\uDC75\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD44\uDD47\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE3F\uDE40\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC5F-\uDC61\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDEB8\uDF00-\uDF1A\uDF40-\uDF46]|\uD806[\uDC00-\uDC2B\uDCA0-\uDCDF\uDCFF-\uDD06\uDD09\uDD0C-\uDD13\uDD15\uDD16\uDD18-\uDD2F\uDD3F\uDD41\uDDA0-\uDDA7\uDDAA-\uDDD0\uDDE1\uDDE3\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE89\uDE9D\uDEB0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46\uDD60-\uDD65\uDD67\uDD68\uDD6A-\uDD89\uDD98\uDEE0-\uDEF2\uDF02\uDF04-\uDF10\uDF12-\uDF33\uDFB0]|\uD808[\uDC00-\uDF99]|\uD809[\uDC80-\uDD43]|\uD80B[\uDF90-\uDFF0]|[\uD80C\uD81C-\uD820\uD822\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879\uD880-\uD883\uD885-\uD887][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2F\uDC41-\uDC46]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE70-\uDEBE\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDE40-\uDE7F\uDF00-\uDF4A\uDF50\uDF93-\uDF9F\uDFE0\uDFE1\uDFE3]|\uD821[\uDC00-\uDFF7]|\uD823[\uDC00-\uDCD5\uDD00-\uDD08]|\uD82B[\uDFF0-\uDFF3\uDFF5-\uDFFB\uDFFD\uDFFE]|\uD82C[\uDC00-\uDD22\uDD32\uDD50-\uDD52\uDD55\uDD64-\uDD67\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD837[\uDF00-\uDF1E\uDF25-\uDF2A]|\uD838[\uDC30-\uDC6D\uDD00-\uDD2C\uDD37-\uDD3D\uDD4E\uDE90-\uDEAD\uDEC0-\uDEEB]|\uD839[\uDCD0-\uDCEB\uDFE0-\uDFE6\uDFE8-\uDFEB\uDFED\uDFEE\uDFF0-\uDFFE]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43\uDD4B]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDEDF\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF39\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]|\uD884[\uDC00-\uDF4A\uDF50-\uDFFF]|\uD888[\uDC00-\uDFAF])(?:[0-9A-Za-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u0870-\u0887\u0889-\u088E\u08A0-\u08C9\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C5D\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u1711\u171F-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4C\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BF\u31F0-\u31FF\u3400-\u4DBF\u4E00-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7CA\uA7D0\uA7D1\uA7D3\uA7D5-\uA7D9\uA7F2-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF40\uDF42-\uDF49\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDD70-\uDD7A\uDD7C-\uDD8A\uDD8C-\uDD92\uDD94\uDD95\uDD97-\uDDA1\uDDA3-\uDDB1\uDDB3-\uDDB9\uDDBB\uDDBC\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67\uDF80-\uDF85\uDF87-\uDFB0\uDFB2-\uDFBA]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE35\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2\uDD00-\uDD23\uDE80-\uDEA9\uDEB0\uDEB1\uDF00-\uDF1C\uDF27\uDF30-\uDF45\uDF70-\uDF81\uDFB0-\uDFC4\uDFE0-\uDFF6]|\uD804[\uDC03-\uDC37\uDC71\uDC72\uDC75\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD44\uDD47\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE3F\uDE40\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC5F-\uDC61\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDEB8\uDF00-\uDF1A\uDF40-\uDF46]|\uD806[\uDC00-\uDC2B\uDCA0-\uDCDF\uDCFF-\uDD06\uDD09\uDD0C-\uDD13\uDD15\uDD16\uDD18-\uDD2F\uDD3F\uDD41\uDDA0-\uDDA7\uDDAA-\uDDD0\uDDE1\uDDE3\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE89\uDE9D\uDEB0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46\uDD60-\uDD65\uDD67\uDD68\uDD6A-\uDD89\uDD98\uDEE0-\uDEF2\uDF02\uDF04-\uDF10\uDF12-\uDF33\uDFB0]|\uD808[\uDC00-\uDF99]|\uD809[\uDC80-\uDD43]|\uD80B[\uDF90-\uDFF0]|[\uD80C\uD81C-\uD820\uD822\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879\uD880-\uD883\uD885-\uD887][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2F\uDC41-\uDC46]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE70-\uDEBE\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDE40-\uDE7F\uDF00-\uDF4A\uDF50\uDF93-\uDF9F\uDFE0\uDFE1\uDFE3]|\uD821[\uDC00-\uDFF7]|\uD823[\uDC00-\uDCD5\uDD00-\uDD08]|\uD82B[\uDFF0-\uDFF3\uDFF5-\uDFFB\uDFFD\uDFFE]|\uD82C[\uDC00-\uDD22\uDD32\uDD50-\uDD52\uDD55\uDD64-\uDD67\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD837[\uDF00-\uDF1E\uDF25-\uDF2A]|\uD838[\uDC30-\uDC6D\uDD00-\uDD2C\uDD37-\uDD3D\uDD4E\uDE90-\uDEAD\uDEC0-\uDEEB]|\uD839[\uDCD0-\uDCEB\uDFE0-\uDFE6\uDFE8-\uDFEB\uDFED\uDFEE\uDFF0-\uDFFE]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43\uDD4B]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDEDF\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF39\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]|\uD884[\uDC00-\uDF4A\uDF50-\uDFFF]|\uD888[\uDC00-\uDFAF])*$/.test(s)
    }, {
        name: "string",
        test: Wr
    }, {
        name: "Chain",
        test: AE
    }, {
        name: "Array",
        test: At
    }, {
        name: "Matrix",
        test: je
    }, {
        name: "DenseMatrix",
        test: Ah
    }, {
        name: "SparseMatrix",
        test: ds
    }, {
        name: "Range",
        test: r2
    }, {
        name: "Index",
        test: Gm
    }, {
        name: "boolean",
        test: UP
    }, {
        name: "ResultSet",
        test: FP
    }, {
        name: "Help",
        test: xE
    }, {
        name: "function",
        test: OP
    }, {
        name: "Date",
        test: PP
    }, {
        name: "RegExp",
        test: BP
    }, {
        name: "null",
        test: RP
    }, {
        name: "undefined",
        test: LP
    }, {
        name: "AccessorNode",
        test: bs
    }, {
        name: "ArrayNode",
        test: an
    }, {
        name: "AssignmentNode",
        test: qP
    }, {
        name: "BlockNode",
        test: VP
    }, {
        name: "ConditionalNode",
        test: $P
    }, {
        name: "ConstantNode",
        test: _t
    }, {
        name: "FunctionNode",
        test: Oo
    }, {
        name: "FunctionAssignmentNode",
        test: td
    }, {
        name: "IndexNode",
        test: lu
    }, {
        name: "Node",
        test: Ft
    }, {
        name: "ObjectNode",
        test: jm
    }, {
        name: "OperatorNode",
        test: vr
    }, {
        name: "ParenthesisNode",
        test: zi
    }, {
        name: "RangeNode",
        test: zP
    }, {
        name: "RelationalNode",
        test: GP
    }, {
        name: "SymbolNode",
        test: Er
    }, {
        name: "Map",
        test: l2
    }, {
        name: "Object",
        test: a2
    }]),
    o.addConversions([{
        from: "number",
        to: "BigNumber",
        convert: function(l) {
            if (r || Cp(l),
            aB(l) > 15)
                throw new TypeError("Cannot implicitly convert a number with >15 significant digits to BigNumber (value: " + l + "). Use function bignumber(x) to convert to BigNumber.");
            return new r(l)
        }
    }, {
        from: "number",
        to: "Complex",
        convert: function(l) {
            return a || Kd(l),
            new a(l,0)
        }
    }, {
        from: "BigNumber",
        to: "Complex",
        convert: function(l) {
            return a || Kd(l),
            new a(l.toNumber(),0)
        }
    }, {
        from: "Fraction",
        to: "BigNumber",
        convert: function(l) {
            throw new TypeError("Cannot implicitly convert a Fraction to BigNumber or vice versa. Use function bignumber(x) to convert to BigNumber or fraction(x) to convert to Fraction.")
        }
    }, {
        from: "Fraction",
        to: "Complex",
        convert: function(l) {
            return a || Kd(l),
            new a(l.valueOf(),0)
        }
    }, {
        from: "number",
        to: "Fraction",
        convert: function(l) {
            i || Sp(l);
            var u = new i(l);
            if (u.valueOf() !== l)
                throw new TypeError("Cannot implicitly convert a number to a Fraction when there will be a loss of precision (value: " + l + "). Use function fraction(x) to convert to Fraction.");
            return u
        }
    }, {
        from: "string",
        to: "number",
        convert: function(l) {
            var u = Number(l);
            if (isNaN(u))
                throw new Error('Cannot convert "' + l + '" to a number');
            return u
        }
    }, {
        from: "string",
        to: "BigNumber",
        convert: function(l) {
            r || Cp(l);
            try {
                return new r(l)
            } catch {
                throw new Error('Cannot convert "' + l + '" to BigNumber')
            }
        }
    }, {
        from: "string",
        to: "Fraction",
        convert: function(l) {
            i || Sp(l);
            try {
                return new i(l)
            } catch {
                throw new Error('Cannot convert "' + l + '" to Fraction')
            }
        }
    }, {
        from: "string",
        to: "Complex",
        convert: function(l) {
            a || Kd(l);
            try {
                return new a(l)
            } catch {
                throw new Error('Cannot convert "' + l + '" to Complex')
            }
        }
    }, {
        from: "boolean",
        to: "number",
        convert: function(l) {
            return +l
        }
    }, {
        from: "boolean",
        to: "BigNumber",
        convert: function(l) {
            return r || Cp(l),
            new r(+l)
        }
    }, {
        from: "boolean",
        to: "Fraction",
        convert: function(l) {
            return i || Sp(l),
            new i(+l)
        }
    }, {
        from: "boolean",
        to: "string",
        convert: function(l) {
            return String(l)
        }
    }, {
        from: "Array",
        to: "Matrix",
        convert: function(l) {
            return n || DB(),
            new n(l)
        }
    }, {
        from: "Matrix",
        to: "Array",
        convert: function(l) {
            return l.valueOf()
        }
    }]),
    o.onMismatch = (s, l, u) => {
        var c = o.createError(s, l, u);
        if (["wrongType", "mismatch"].includes(c.data.category) && l.length === 1 && Fo(l[0]) && u.some(v => !v.params.includes(","))) {
            var d = new TypeError("Function '".concat(s, "' doesn't apply to matrices. To call it ") + "elementwise on a matrix 'M', try 'map(M, ".concat(s, ")'."));
            throw d.data = c.data,
            d
        }
        throw c
    }
    ,
    o.onMismatch = (s, l, u) => {
        var c = o.createError(s, l, u);
        if (["wrongType", "mismatch"].includes(c.data.category) && l.length === 1 && Fo(l[0]) && u.some(v => !v.params.includes(","))) {
            var d = new TypeError("Function '".concat(s, "' doesn't apply to matrices. To call it ") + "elementwise on a matrix 'M', try 'map(M, ".concat(s, ")'."));
            throw d.data = c.data,
            d
        }
        throw c
    }
    ,
    o
});
function Cp(e) {
    throw new Error("Cannot convert value ".concat(e, " into a BigNumber: no class 'BigNumber' provided"))
}
function Kd(e) {
    throw new Error("Cannot convert value ".concat(e, " into a Complex number: no class 'Complex' provided"))
}
function DB() {
    throw new Error("Cannot convert array into a Matrix: no class 'DenseMatrix' provided")
}
function Sp(e) {
    throw new Error("Cannot convert value ".concat(e, " into a Fraction, no class 'Fraction' provided."))
}
var UB = "ResultSet"
  , FB = []
  , OB = j(UB, FB, () => {
    function e(t) {
        if (!(this instanceof e))
            throw new SyntaxError("Constructor must be called with the new operator");
        this.entries = t || []
    }
    return e.prototype.type = "ResultSet",
    e.prototype.isResultSet = !0,
    e.prototype.valueOf = function() {
        return this.entries
    }
    ,
    e.prototype.toString = function() {
        return "[" + this.entries.join(", ") + "]"
    }
    ,
    e.prototype.toJSON = function() {
        return {
            mathjs: "ResultSet",
            entries: this.entries
        }
    }
    ,
    e.fromJSON = function(t) {
        return new e(t.entries)
    }
    ,
    e
}
, {
    isClass: !0
});
/*!
 *  decimal.js v10.4.3
 *  An arbitrary-precision Decimal type for JavaScript.
 *  https://github.com/MikeMcl/decimal.js
 *  Copyright (c) 2022 Michael Mclaughlin <M8ch88l@gmail.com>
 *  MIT Licence
 */
var bl = 9e15, $o = 1e9, uw = "0123456789abcdef", Ih = "2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058", Dh = "3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789", cw = {
    precision: 20,
    rounding: 4,
    modulo: 1,
    toExpNeg: -7,
    toExpPos: 21,
    minE: -bl,
    maxE: bl,
    crypto: !1
}, $E, Di, at = !0, Jm = "[DecimalError] ", Po = Jm + "Invalid argument: ", zE = Jm + "Precision limit exceeded", GE = Jm + "crypto unavailable", jE = "[object Decimal]", Xr = Math.floor, gr = Math.pow, PB = /^0b([01]+(\.[01]*)?|\.[01]+)(p[+-]?\d+)?$/i, BB = /^0x([0-9a-f]+(\.[0-9a-f]*)?|\.[0-9a-f]+)(p[+-]?\d+)?$/i, RB = /^0o([0-7]+(\.[0-7]*)?|\.[0-7]+)(p[+-]?\d+)?$/i, HE = /^(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i, Rn = 1e7, Ye = 7, LB = 9007199254740991, qB = Ih.length - 1, dw = Dh.length - 1, Se = {
    toStringTag: jE
};
Se.absoluteValue = Se.abs = function() {
    var e = new this.constructor(this);
    return e.s < 0 && (e.s = 1),
    Ve(e)
}
;
Se.ceil = function() {
    return Ve(new this.constructor(this), this.e + 1, 2)
}
;
Se.clampedTo = Se.clamp = function(e, t) {
    var r, a = this, n = a.constructor;
    if (e = new n(e),
    t = new n(t),
    !e.s || !t.s)
        return new n(NaN);
    if (e.gt(t))
        throw Error(Po + t);
    return r = a.cmp(e),
    r < 0 ? e : a.cmp(t) > 0 ? t : new n(a)
}
;
Se.comparedTo = Se.cmp = function(e) {
    var t, r, a, n, i = this, o = i.d, s = (e = new i.constructor(e)).d, l = i.s, u = e.s;
    if (!o || !s)
        return !l || !u ? NaN : l !== u ? l : o === s ? 0 : !o ^ l < 0 ? 1 : -1;
    if (!o[0] || !s[0])
        return o[0] ? l : s[0] ? -u : 0;
    if (l !== u)
        return l;
    if (i.e !== e.e)
        return i.e > e.e ^ l < 0 ? 1 : -1;
    for (a = o.length,
    n = s.length,
    t = 0,
    r = a < n ? a : n; t < r; ++t)
        if (o[t] !== s[t])
            return o[t] > s[t] ^ l < 0 ? 1 : -1;
    return a === n ? 0 : a > n ^ l < 0 ? 1 : -1
}
;
Se.cosine = Se.cos = function() {
    var e, t, r = this, a = r.constructor;
    return r.d ? r.d[0] ? (e = a.precision,
    t = a.rounding,
    a.precision = e + Math.max(r.e, r.sd()) + Ye,
    a.rounding = 1,
    r = VB(a, QE(a, r)),
    a.precision = e,
    a.rounding = t,
    Ve(Di == 2 || Di == 3 ? r.neg() : r, e, t, !0)) : new a(1) : new a(NaN)
}
;
Se.cubeRoot = Se.cbrt = function() {
    var e, t, r, a, n, i, o, s, l, u, c = this, d = c.constructor;
    if (!c.isFinite() || c.isZero())
        return new d(c);
    for (at = !1,
    i = c.s * gr(c.s * c, 1 / 3),
    !i || Math.abs(i) == 1 / 0 ? (r = Pr(c.d),
    e = c.e,
    (i = (e - r.length + 1) % 3) && (r += i == 1 || i == -2 ? "0" : "00"),
    i = gr(r, 1 / 3),
    e = Xr((e + 1) / 3) - (e % 3 == (e < 0 ? -1 : 2)),
    i == 1 / 0 ? r = "5e" + e : (r = i.toExponential(),
    r = r.slice(0, r.indexOf("e") + 1) + e),
    a = new d(r),
    a.s = c.s) : a = new d(i.toString()),
    o = (e = d.precision) + 3; ; )
        if (s = a,
        l = s.times(s).times(s),
        u = l.plus(c),
        a = $t(u.plus(c).times(s), u.plus(l), o + 2, 1),
        Pr(s.d).slice(0, o) === (r = Pr(a.d)).slice(0, o))
            if (r = r.slice(o - 3, o + 1),
            r == "9999" || !n && r == "4999") {
                if (!n && (Ve(s, e + 1, 0),
                s.times(s).times(s).eq(c))) {
                    a = s;
                    break
                }
                o += 4,
                n = 1
            } else {
                (!+r || !+r.slice(1) && r.charAt(0) == "5") && (Ve(a, e + 1, 1),
                t = !a.times(a).times(a).eq(c));
                break
            }
    return at = !0,
    Ve(a, e, d.rounding, t)
}
;
Se.decimalPlaces = Se.dp = function() {
    var e, t = this.d, r = NaN;
    if (t) {
        if (e = t.length - 1,
        r = (e - Xr(this.e / Ye)) * Ye,
        e = t[e],
        e)
            for (; e % 10 == 0; e /= 10)
                r--;
        r < 0 && (r = 0)
    }
    return r
}
;
Se.dividedBy = Se.div = function(e) {
    return $t(this, new this.constructor(e))
}
;
Se.dividedToIntegerBy = Se.divToInt = function(e) {
    var t = this
      , r = t.constructor;
    return Ve($t(t, new r(e), 0, 1, 1), r.precision, r.rounding)
}
;
Se.equals = Se.eq = function(e) {
    return this.cmp(e) === 0
}
;
Se.floor = function() {
    return Ve(new this.constructor(this), this.e + 1, 3)
}
;
Se.greaterThan = Se.gt = function(e) {
    return this.cmp(e) > 0
}
;
Se.greaterThanOrEqualTo = Se.gte = function(e) {
    var t = this.cmp(e);
    return t == 1 || t === 0
}
;
Se.hyperbolicCosine = Se.cosh = function() {
    var e, t, r, a, n, i = this, o = i.constructor, s = new o(1);
    if (!i.isFinite())
        return new o(i.s ? 1 / 0 : NaN);
    if (i.isZero())
        return s;
    r = o.precision,
    a = o.rounding,
    o.precision = r + Math.max(i.e, i.sd()) + 4,
    o.rounding = 1,
    n = i.d.length,
    n < 32 ? (e = Math.ceil(n / 3),
    t = (1 / Qm(4, e)).toString()) : (e = 16,
    t = "2.3283064365386962890625e-10"),
    i = Jl(o, 1, i.times(t), new o(1), !0);
    for (var l, u = e, c = new o(8); u--; )
        l = i.times(i),
        i = s.minus(l.times(c.minus(l.times(c))));
    return Ve(i, o.precision = r, o.rounding = a, !0)
}
;
Se.hyperbolicSine = Se.sinh = function() {
    var e, t, r, a, n = this, i = n.constructor;
    if (!n.isFinite() || n.isZero())
        return new i(n);
    if (t = i.precision,
    r = i.rounding,
    i.precision = t + Math.max(n.e, n.sd()) + 4,
    i.rounding = 1,
    a = n.d.length,
    a < 3)
        n = Jl(i, 2, n, n, !0);
    else {
        e = 1.4 * Math.sqrt(a),
        e = e > 16 ? 16 : e | 0,
        n = n.times(1 / Qm(5, e)),
        n = Jl(i, 2, n, n, !0);
        for (var o, s = new i(5), l = new i(16), u = new i(20); e--; )
            o = n.times(n),
            n = n.times(s.plus(o.times(l.times(o).plus(u))))
    }
    return i.precision = t,
    i.rounding = r,
    Ve(n, t, r, !0)
}
;
Se.hyperbolicTangent = Se.tanh = function() {
    var e, t, r = this, a = r.constructor;
    return r.isFinite() ? r.isZero() ? new a(r) : (e = a.precision,
    t = a.rounding,
    a.precision = e + 7,
    a.rounding = 1,
    $t(r.sinh(), r.cosh(), a.precision = e, a.rounding = t)) : new a(r.s)
}
;
Se.inverseCosine = Se.acos = function() {
    var e, t = this, r = t.constructor, a = t.abs().cmp(1), n = r.precision, i = r.rounding;
    return a !== -1 ? a === 0 ? t.isNeg() ? On(r, n, i) : new r(0) : new r(NaN) : t.isZero() ? On(r, n + 4, i).times(.5) : (r.precision = n + 6,
    r.rounding = 1,
    t = t.asin(),
    e = On(r, n + 4, i).times(.5),
    r.precision = n,
    r.rounding = i,
    e.minus(t))
}
;
Se.inverseHyperbolicCosine = Se.acosh = function() {
    var e, t, r = this, a = r.constructor;
    return r.lte(1) ? new a(r.eq(1) ? 0 : NaN) : r.isFinite() ? (e = a.precision,
    t = a.rounding,
    a.precision = e + Math.max(Math.abs(r.e), r.sd()) + 4,
    a.rounding = 1,
    at = !1,
    r = r.times(r).minus(1).sqrt().plus(r),
    at = !0,
    a.precision = e,
    a.rounding = t,
    r.ln()) : new a(r)
}
;
Se.inverseHyperbolicSine = Se.asinh = function() {
    var e, t, r = this, a = r.constructor;
    return !r.isFinite() || r.isZero() ? new a(r) : (e = a.precision,
    t = a.rounding,
    a.precision = e + 2 * Math.max(Math.abs(r.e), r.sd()) + 6,
    a.rounding = 1,
    at = !1,
    r = r.times(r).plus(1).sqrt().plus(r),
    at = !0,
    a.precision = e,
    a.rounding = t,
    r.ln())
}
;
Se.inverseHyperbolicTangent = Se.atanh = function() {
    var e, t, r, a, n = this, i = n.constructor;
    return n.isFinite() ? n.e >= 0 ? new i(n.abs().eq(1) ? n.s / 0 : n.isZero() ? n : NaN) : (e = i.precision,
    t = i.rounding,
    a = n.sd(),
    Math.max(a, e) < 2 * -n.e - 1 ? Ve(new i(n), e, t, !0) : (i.precision = r = a - n.e,
    n = $t(n.plus(1), new i(1).minus(n), r + e, 1),
    i.precision = e + 4,
    i.rounding = 1,
    n = n.ln(),
    i.precision = e,
    i.rounding = t,
    n.times(.5))) : new i(NaN)
}
;
Se.inverseSine = Se.asin = function() {
    var e, t, r, a, n = this, i = n.constructor;
    return n.isZero() ? new i(n) : (t = n.abs().cmp(1),
    r = i.precision,
    a = i.rounding,
    t !== -1 ? t === 0 ? (e = On(i, r + 4, a).times(.5),
    e.s = n.s,
    e) : new i(NaN) : (i.precision = r + 6,
    i.rounding = 1,
    n = n.div(new i(1).minus(n.times(n)).sqrt().plus(1)).atan(),
    i.precision = r,
    i.rounding = a,
    n.times(2)))
}
;
Se.inverseTangent = Se.atan = function() {
    var e, t, r, a, n, i, o, s, l, u = this, c = u.constructor, d = c.precision, v = c.rounding;
    if (u.isFinite()) {
        if (u.isZero())
            return new c(u);
        if (u.abs().eq(1) && d + 4 <= dw)
            return o = On(c, d + 4, v).times(.25),
            o.s = u.s,
            o
    } else {
        if (!u.s)
            return new c(NaN);
        if (d + 4 <= dw)
            return o = On(c, d + 4, v).times(.5),
            o.s = u.s,
            o
    }
    for (c.precision = s = d + 10,
    c.rounding = 1,
    r = Math.min(28, s / Ye + 2 | 0),
    e = r; e; --e)
        u = u.div(u.times(u).plus(1).sqrt().plus(1));
    for (at = !1,
    t = Math.ceil(s / Ye),
    a = 1,
    l = u.times(u),
    o = new c(u),
    n = u; e !== -1; )
        if (n = n.times(l),
        i = o.minus(n.div(a += 2)),
        n = n.times(l),
        o = i.plus(n.div(a += 2)),
        o.d[t] !== void 0)
            for (e = t; o.d[e] === i.d[e] && e--; )
                ;
    return r && (o = o.times(2 << r - 1)),
    at = !0,
    Ve(o, c.precision = d, c.rounding = v, !0)
}
;
Se.isFinite = function() {
    return !!this.d
}
;
Se.isInteger = Se.isInt = function() {
    return !!this.d && Xr(this.e / Ye) > this.d.length - 2
}
;
Se.isNaN = function() {
    return !this.s
}
;
Se.isNegative = Se.isNeg = function() {
    return this.s < 0
}
;
Se.isPositive = Se.isPos = function() {
    return this.s > 0
}
;
Se.isZero = function() {
    return !!this.d && this.d[0] === 0
}
;
Se.lessThan = Se.lt = function(e) {
    return this.cmp(e) < 0
}
;
Se.lessThanOrEqualTo = Se.lte = function(e) {
    return this.cmp(e) < 1
}
;
Se.logarithm = Se.log = function(e) {
    var t, r, a, n, i, o, s, l, u = this, c = u.constructor, d = c.precision, v = c.rounding, h = 5;
    if (e == null)
        e = new c(10),
        t = !0;
    else {
        if (e = new c(e),
        r = e.d,
        e.s < 0 || !r || !r[0] || e.eq(1))
            return new c(NaN);
        t = e.eq(10)
    }
    if (r = u.d,
    u.s < 0 || !r || !r[0] || u.eq(1))
        return new c(r && !r[0] ? -1 / 0 : u.s != 1 ? NaN : r ? 0 : 1 / 0);
    if (t)
        if (r.length > 1)
            i = !0;
        else {
            for (n = r[0]; n % 10 === 0; )
                n /= 10;
            i = n !== 1
        }
    if (at = !1,
    s = d + h,
    o = _o(u, s),
    a = t ? Uh(c, s + 10) : _o(e, s),
    l = $t(o, a, s, 1),
    Fc(l.d, n = d, v))
        do
            if (s += 10,
            o = _o(u, s),
            a = t ? Uh(c, s + 10) : _o(e, s),
            l = $t(o, a, s, 1),
            !i) {
                +Pr(l.d).slice(n + 1, n + 15) + 1 == 1e14 && (l = Ve(l, d + 1, 0));
                break
            }
        while (Fc(l.d, n += 10, v));
    return at = !0,
    Ve(l, d, v)
}
;
Se.minus = Se.sub = function(e) {
    var t, r, a, n, i, o, s, l, u, c, d, v, h = this, p = h.constructor;
    if (e = new p(e),
    !h.d || !e.d)
        return !h.s || !e.s ? e = new p(NaN) : h.d ? e.s = -e.s : e = new p(e.d || h.s !== e.s ? h : NaN),
        e;
    if (h.s != e.s)
        return e.s = -e.s,
        h.plus(e);
    if (u = h.d,
    v = e.d,
    s = p.precision,
    l = p.rounding,
    !u[0] || !v[0]) {
        if (v[0])
            e.s = -e.s;
        else if (u[0])
            e = new p(h);
        else
            return new p(l === 3 ? -0 : 0);
        return at ? Ve(e, s, l) : e
    }
    if (r = Xr(e.e / Ye),
    c = Xr(h.e / Ye),
    u = u.slice(),
    i = c - r,
    i) {
        for (d = i < 0,
        d ? (t = u,
        i = -i,
        o = v.length) : (t = v,
        r = c,
        o = u.length),
        a = Math.max(Math.ceil(s / Ye), o) + 2,
        i > a && (i = a,
        t.length = 1),
        t.reverse(),
        a = i; a--; )
            t.push(0);
        t.reverse()
    } else {
        for (a = u.length,
        o = v.length,
        d = a < o,
        d && (o = a),
        a = 0; a < o; a++)
            if (u[a] != v[a]) {
                d = u[a] < v[a];
                break
            }
        i = 0
    }
    for (d && (t = u,
    u = v,
    v = t,
    e.s = -e.s),
    o = u.length,
    a = v.length - o; a > 0; --a)
        u[o++] = 0;
    for (a = v.length; a > i; ) {
        if (u[--a] < v[a]) {
            for (n = a; n && u[--n] === 0; )
                u[n] = Rn - 1;
            --u[n],
            u[a] += Rn
        }
        u[a] -= v[a]
    }
    for (; u[--o] === 0; )
        u.pop();
    for (; u[0] === 0; u.shift())
        --r;
    return u[0] ? (e.d = u,
    e.e = Km(u, r),
    at ? Ve(e, s, l) : e) : new p(l === 3 ? -0 : 0)
}
;
Se.modulo = Se.mod = function(e) {
    var t, r = this, a = r.constructor;
    return e = new a(e),
    !r.d || !e.s || e.d && !e.d[0] ? new a(NaN) : !e.d || r.d && !r.d[0] ? Ve(new a(r), a.precision, a.rounding) : (at = !1,
    a.modulo == 9 ? (t = $t(r, e.abs(), 0, 3, 1),
    t.s *= e.s) : t = $t(r, e, 0, a.modulo, 1),
    t = t.times(e),
    at = !0,
    r.minus(t))
}
;
Se.naturalExponential = Se.exp = function() {
    return vw(this)
}
;
Se.naturalLogarithm = Se.ln = function() {
    return _o(this)
}
;
Se.negated = Se.neg = function() {
    var e = new this.constructor(this);
    return e.s = -e.s,
    Ve(e)
}
;
Se.plus = Se.add = function(e) {
    var t, r, a, n, i, o, s, l, u, c, d = this, v = d.constructor;
    if (e = new v(e),
    !d.d || !e.d)
        return !d.s || !e.s ? e = new v(NaN) : d.d || (e = new v(e.d || d.s === e.s ? d : NaN)),
        e;
    if (d.s != e.s)
        return e.s = -e.s,
        d.minus(e);
    if (u = d.d,
    c = e.d,
    s = v.precision,
    l = v.rounding,
    !u[0] || !c[0])
        return c[0] || (e = new v(d)),
        at ? Ve(e, s, l) : e;
    if (i = Xr(d.e / Ye),
    a = Xr(e.e / Ye),
    u = u.slice(),
    n = i - a,
    n) {
        for (n < 0 ? (r = u,
        n = -n,
        o = c.length) : (r = c,
        a = i,
        o = u.length),
        i = Math.ceil(s / Ye),
        o = i > o ? i + 1 : o + 1,
        n > o && (n = o,
        r.length = 1),
        r.reverse(); n--; )
            r.push(0);
        r.reverse()
    }
    for (o = u.length,
    n = c.length,
    o - n < 0 && (n = o,
    r = c,
    c = u,
    u = r),
    t = 0; n; )
        t = (u[--n] = u[n] + c[n] + t) / Rn | 0,
        u[n] %= Rn;
    for (t && (u.unshift(t),
    ++a),
    o = u.length; u[--o] == 0; )
        u.pop();
    return e.d = u,
    e.e = Km(u, a),
    at ? Ve(e, s, l) : e
}
;
Se.precision = Se.sd = function(e) {
    var t, r = this;
    if (e !== void 0 && e !== !!e && e !== 1 && e !== 0)
        throw Error(Po + e);
    return r.d ? (t = WE(r.d),
    e && r.e + 1 > t && (t = r.e + 1)) : t = NaN,
    t
}
;
Se.round = function() {
    var e = this
      , t = e.constructor;
    return Ve(new t(e), e.e + 1, t.rounding)
}
;
Se.sine = Se.sin = function() {
    var e, t, r = this, a = r.constructor;
    return r.isFinite() ? r.isZero() ? new a(r) : (e = a.precision,
    t = a.rounding,
    a.precision = e + Math.max(r.e, r.sd()) + Ye,
    a.rounding = 1,
    r = zB(a, QE(a, r)),
    a.precision = e,
    a.rounding = t,
    Ve(Di > 2 ? r.neg() : r, e, t, !0)) : new a(NaN)
}
;
Se.squareRoot = Se.sqrt = function() {
    var e, t, r, a, n, i, o = this, s = o.d, l = o.e, u = o.s, c = o.constructor;
    if (u !== 1 || !s || !s[0])
        return new c(!u || u < 0 && (!s || s[0]) ? NaN : s ? o : 1 / 0);
    for (at = !1,
    u = Math.sqrt(+o),
    u == 0 || u == 1 / 0 ? (t = Pr(s),
    (t.length + l) % 2 == 0 && (t += "0"),
    u = Math.sqrt(t),
    l = Xr((l + 1) / 2) - (l < 0 || l % 2),
    u == 1 / 0 ? t = "5e" + l : (t = u.toExponential(),
    t = t.slice(0, t.indexOf("e") + 1) + l),
    a = new c(t)) : a = new c(u.toString()),
    r = (l = c.precision) + 3; ; )
        if (i = a,
        a = i.plus($t(o, i, r + 2, 1)).times(.5),
        Pr(i.d).slice(0, r) === (t = Pr(a.d)).slice(0, r))
            if (t = t.slice(r - 3, r + 1),
            t == "9999" || !n && t == "4999") {
                if (!n && (Ve(i, l + 1, 0),
                i.times(i).eq(o))) {
                    a = i;
                    break
                }
                r += 4,
                n = 1
            } else {
                (!+t || !+t.slice(1) && t.charAt(0) == "5") && (Ve(a, l + 1, 1),
                e = !a.times(a).eq(o));
                break
            }
    return at = !0,
    Ve(a, l, c.rounding, e)
}
;
Se.tangent = Se.tan = function() {
    var e, t, r = this, a = r.constructor;
    return r.isFinite() ? r.isZero() ? new a(r) : (e = a.precision,
    t = a.rounding,
    a.precision = e + 10,
    a.rounding = 1,
    r = r.sin(),
    r.s = 1,
    r = $t(r, new a(1).minus(r.times(r)).sqrt(), e + 10, 0),
    a.precision = e,
    a.rounding = t,
    Ve(Di == 2 || Di == 4 ? r.neg() : r, e, t, !0)) : new a(NaN)
}
;
Se.times = Se.mul = function(e) {
    var t, r, a, n, i, o, s, l, u, c = this, d = c.constructor, v = c.d, h = (e = new d(e)).d;
    if (e.s *= c.s,
    !v || !v[0] || !h || !h[0])
        return new d(!e.s || v && !v[0] && !h || h && !h[0] && !v ? NaN : !v || !h ? e.s / 0 : e.s * 0);
    for (r = Xr(c.e / Ye) + Xr(e.e / Ye),
    l = v.length,
    u = h.length,
    l < u && (i = v,
    v = h,
    h = i,
    o = l,
    l = u,
    u = o),
    i = [],
    o = l + u,
    a = o; a--; )
        i.push(0);
    for (a = u; --a >= 0; ) {
        for (t = 0,
        n = l + a; n > a; )
            s = i[n] + h[a] * v[n - a - 1] + t,
            i[n--] = s % Rn | 0,
            t = s / Rn | 0;
        i[n] = (i[n] + t) % Rn | 0
    }
    for (; !i[--o]; )
        i.pop();
    return t ? ++r : i.shift(),
    e.d = i,
    e.e = Km(i, r),
    at ? Ve(e, d.precision, d.rounding) : e
}
;
Se.toBinary = function(e, t) {
    return u2(this, 2, e, t)
}
;
Se.toDecimalPlaces = Se.toDP = function(e, t) {
    var r = this
      , a = r.constructor;
    return r = new a(r),
    e === void 0 ? r : (Ma(e, 0, $o),
    t === void 0 ? t = a.rounding : Ma(t, 0, 8),
    Ve(r, e + r.e + 1, t))
}
;
Se.toExponential = function(e, t) {
    var r, a = this, n = a.constructor;
    return e === void 0 ? r = ci(a, !0) : (Ma(e, 0, $o),
    t === void 0 ? t = n.rounding : Ma(t, 0, 8),
    a = Ve(new n(a), e + 1, t),
    r = ci(a, !0, e + 1)),
    a.isNeg() && !a.isZero() ? "-" + r : r
}
;
Se.toFixed = function(e, t) {
    var r, a, n = this, i = n.constructor;
    return e === void 0 ? r = ci(n) : (Ma(e, 0, $o),
    t === void 0 ? t = i.rounding : Ma(t, 0, 8),
    a = Ve(new i(n), e + n.e + 1, t),
    r = ci(a, !1, e + a.e + 1)),
    n.isNeg() && !n.isZero() ? "-" + r : r
}
;
Se.toFraction = function(e) {
    var t, r, a, n, i, o, s, l, u, c, d, v, h = this, p = h.d, f = h.constructor;
    if (!p)
        return new f(h);
    if (u = r = new f(1),
    a = l = new f(0),
    t = new f(a),
    i = t.e = WE(p) - h.e - 1,
    o = i % Ye,
    t.d[0] = gr(10, o < 0 ? Ye + o : o),
    e == null)
        e = i > 0 ? t : u;
    else {
        if (s = new f(e),
        !s.isInt() || s.lt(u))
            throw Error(Po + s);
        e = s.gt(t) ? i > 0 ? t : u : s
    }
    for (at = !1,
    s = new f(Pr(p)),
    c = f.precision,
    f.precision = i = p.length * Ye * 2; d = $t(s, t, 0, 1, 1),
    n = r.plus(d.times(a)),
    n.cmp(e) != 1; )
        r = a,
        a = n,
        n = u,
        u = l.plus(d.times(n)),
        l = n,
        n = t,
        t = s.minus(d.times(n)),
        s = n;
    return n = $t(e.minus(r), a, 0, 1, 1),
    l = l.plus(n.times(u)),
    r = r.plus(n.times(a)),
    l.s = u.s = h.s,
    v = $t(u, a, i, 1).minus(h).abs().cmp($t(l, r, i, 1).minus(h).abs()) < 1 ? [u, a] : [l, r],
    f.precision = c,
    at = !0,
    v
}
;
Se.toHexadecimal = Se.toHex = function(e, t) {
    return u2(this, 16, e, t)
}
;
Se.toNearest = function(e, t) {
    var r = this
      , a = r.constructor;
    if (r = new a(r),
    e == null) {
        if (!r.d)
            return r;
        e = new a(1),
        t = a.rounding
    } else {
        if (e = new a(e),
        t === void 0 ? t = a.rounding : Ma(t, 0, 8),
        !r.d)
            return e.s ? r : e;
        if (!e.d)
            return e.s && (e.s = r.s),
            e
    }
    return e.d[0] ? (at = !1,
    r = $t(r, e, 0, t, 1).times(e),
    at = !0,
    Ve(r)) : (e.s = r.s,
    r = e),
    r
}
;
Se.toNumber = function() {
    return +this
}
;
Se.toOctal = function(e, t) {
    return u2(this, 8, e, t)
}
;
Se.toPower = Se.pow = function(e) {
    var t, r, a, n, i, o, s = this, l = s.constructor, u = +(e = new l(e));
    if (!s.d || !e.d || !s.d[0] || !e.d[0])
        return new l(gr(+s, u));
    if (s = new l(s),
    s.eq(1))
        return s;
    if (a = l.precision,
    i = l.rounding,
    e.eq(1))
        return Ve(s, a, i);
    if (t = Xr(e.e / Ye),
    t >= e.d.length - 1 && (r = u < 0 ? -u : u) <= LB)
        return n = YE(l, s, r, a),
        e.s < 0 ? new l(1).div(n) : Ve(n, a, i);
    if (o = s.s,
    o < 0) {
        if (t < e.d.length - 1)
            return new l(NaN);
        if (e.d[t] & 1 || (o = 1),
        s.e == 0 && s.d[0] == 1 && s.d.length == 1)
            return s.s = o,
            s
    }
    return r = gr(+s, u),
    t = r == 0 || !isFinite(r) ? Xr(u * (Math.log("0." + Pr(s.d)) / Math.LN10 + s.e + 1)) : new l(r + "").e,
    t > l.maxE + 1 || t < l.minE - 1 ? new l(t > 0 ? o / 0 : 0) : (at = !1,
    l.rounding = s.s = 1,
    r = Math.min(12, (t + "").length),
    n = vw(e.times(_o(s, a + r)), a),
    n.d && (n = Ve(n, a + 5, 1),
    Fc(n.d, a, i) && (t = a + 10,
    n = Ve(vw(e.times(_o(s, t + r)), t), t + 5, 1),
    +Pr(n.d).slice(a + 1, a + 15) + 1 == 1e14 && (n = Ve(n, a + 1, 0)))),
    n.s = o,
    at = !0,
    l.rounding = i,
    Ve(n, a, i))
}
;
Se.toPrecision = function(e, t) {
    var r, a = this, n = a.constructor;
    return e === void 0 ? r = ci(a, a.e <= n.toExpNeg || a.e >= n.toExpPos) : (Ma(e, 1, $o),
    t === void 0 ? t = n.rounding : Ma(t, 0, 8),
    a = Ve(new n(a), e, t),
    r = ci(a, e <= a.e || a.e <= n.toExpNeg, e)),
    a.isNeg() && !a.isZero() ? "-" + r : r
}
;
Se.toSignificantDigits = Se.toSD = function(e, t) {
    var r = this
      , a = r.constructor;
    return e === void 0 ? (e = a.precision,
    t = a.rounding) : (Ma(e, 1, $o),
    t === void 0 ? t = a.rounding : Ma(t, 0, 8)),
    Ve(new a(r), e, t)
}
;
Se.toString = function() {
    var e = this
      , t = e.constructor
      , r = ci(e, e.e <= t.toExpNeg || e.e >= t.toExpPos);
    return e.isNeg() && !e.isZero() ? "-" + r : r
}
;
Se.truncated = Se.trunc = function() {
    return Ve(new this.constructor(this), this.e + 1, 1)
}
;
Se.valueOf = Se.toJSON = function() {
    var e = this
      , t = e.constructor
      , r = ci(e, e.e <= t.toExpNeg || e.e >= t.toExpPos);
    return e.isNeg() ? "-" + r : r
}
;
function Pr(e) {
    var t, r, a, n = e.length - 1, i = "", o = e[0];
    if (n > 0) {
        for (i += o,
        t = 1; t < n; t++)
            a = e[t] + "",
            r = Ye - a.length,
            r && (i += lo(r)),
            i += a;
        o = e[t],
        a = o + "",
        r = Ye - a.length,
        r && (i += lo(r))
    } else if (o === 0)
        return "0";
    for (; o % 10 === 0; )
        o /= 10;
    return i + o
}
function Ma(e, t, r) {
    if (e !== ~~e || e < t || e > r)
        throw Error(Po + e)
}
function Fc(e, t, r, a) {
    var n, i, o, s;
    for (i = e[0]; i >= 10; i /= 10)
        --t;
    return --t < 0 ? (t += Ye,
    n = 0) : (n = Math.ceil((t + 1) / Ye),
    t %= Ye),
    i = gr(10, Ye - t),
    s = e[n] % i | 0,
    a == null ? t < 3 ? (t == 0 ? s = s / 100 | 0 : t == 1 && (s = s / 10 | 0),
    o = r < 4 && s == 99999 || r > 3 && s == 49999 || s == 5e4 || s == 0) : o = (r < 4 && s + 1 == i || r > 3 && s + 1 == i / 2) && (e[n + 1] / i / 100 | 0) == gr(10, t - 2) - 1 || (s == i / 2 || s == 0) && (e[n + 1] / i / 100 | 0) == 0 : t < 4 ? (t == 0 ? s = s / 1e3 | 0 : t == 1 ? s = s / 100 | 0 : t == 2 && (s = s / 10 | 0),
    o = (a || r < 4) && s == 9999 || !a && r > 3 && s == 4999) : o = ((a || r < 4) && s + 1 == i || !a && r > 3 && s + 1 == i / 2) && (e[n + 1] / i / 1e3 | 0) == gr(10, t - 3) - 1,
    o
}
function Ov(e, t, r) {
    for (var a, n = [0], i, o = 0, s = e.length; o < s; ) {
        for (i = n.length; i--; )
            n[i] *= t;
        for (n[0] += uw.indexOf(e.charAt(o++)),
        a = 0; a < n.length; a++)
            n[a] > r - 1 && (n[a + 1] === void 0 && (n[a + 1] = 0),
            n[a + 1] += n[a] / r | 0,
            n[a] %= r)
    }
    return n.reverse()
}
function VB(e, t) {
    var r, a, n;
    if (t.isZero())
        return t;
    a = t.d.length,
    a < 32 ? (r = Math.ceil(a / 3),
    n = (1 / Qm(4, r)).toString()) : (r = 16,
    n = "2.3283064365386962890625e-10"),
    e.precision += r,
    t = Jl(e, 1, t.times(n), new e(1));
    for (var i = r; i--; ) {
        var o = t.times(t);
        t = o.times(o).minus(o).times(8).plus(1)
    }
    return e.precision -= r,
    t
}
var $t = function() {
    function e(a, n, i) {
        var o, s = 0, l = a.length;
        for (a = a.slice(); l--; )
            o = a[l] * n + s,
            a[l] = o % i | 0,
            s = o / i | 0;
        return s && a.unshift(s),
        a
    }
    function t(a, n, i, o) {
        var s, l;
        if (i != o)
            l = i > o ? 1 : -1;
        else
            for (s = l = 0; s < i; s++)
                if (a[s] != n[s]) {
                    l = a[s] > n[s] ? 1 : -1;
                    break
                }
        return l
    }
    function r(a, n, i, o) {
        for (var s = 0; i--; )
            a[i] -= s,
            s = a[i] < n[i] ? 1 : 0,
            a[i] = s * o + a[i] - n[i];
        for (; !a[0] && a.length > 1; )
            a.shift()
    }
    return function(a, n, i, o, s, l) {
        var u, c, d, v, h, p, f, _, y, g, m, w, C, b, x, E, k, A, I, T, F = a.constructor, R = a.s == n.s ? 1 : -1, O = a.d, M = n.d;
        if (!O || !O[0] || !M || !M[0])
            return new F(!a.s || !n.s || (O ? M && O[0] == M[0] : !M) ? NaN : O && O[0] == 0 || !M ? R * 0 : R / 0);
        for (l ? (h = 1,
        c = a.e - n.e) : (l = Rn,
        h = Ye,
        c = Xr(a.e / h) - Xr(n.e / h)),
        I = M.length,
        k = O.length,
        y = new F(R),
        g = y.d = [],
        d = 0; M[d] == (O[d] || 0); d++)
            ;
        if (M[d] > (O[d] || 0) && c--,
        i == null ? (b = i = F.precision,
        o = F.rounding) : s ? b = i + (a.e - n.e) + 1 : b = i,
        b < 0)
            g.push(1),
            p = !0;
        else {
            if (b = b / h + 2 | 0,
            d = 0,
            I == 1) {
                for (v = 0,
                M = M[0],
                b++; (d < k || v) && b--; d++)
                    x = v * l + (O[d] || 0),
                    g[d] = x / M | 0,
                    v = x % M | 0;
                p = v || d < k
            } else {
                for (v = l / (M[0] + 1) | 0,
                v > 1 && (M = e(M, v, l),
                O = e(O, v, l),
                I = M.length,
                k = O.length),
                E = I,
                m = O.slice(0, I),
                w = m.length; w < I; )
                    m[w++] = 0;
                T = M.slice(),
                T.unshift(0),
                A = M[0],
                M[1] >= l / 2 && ++A;
                do
                    v = 0,
                    u = t(M, m, I, w),
                    u < 0 ? (C = m[0],
                    I != w && (C = C * l + (m[1] || 0)),
                    v = C / A | 0,
                    v > 1 ? (v >= l && (v = l - 1),
                    f = e(M, v, l),
                    _ = f.length,
                    w = m.length,
                    u = t(f, m, _, w),
                    u == 1 && (v--,
                    r(f, I < _ ? T : M, _, l))) : (v == 0 && (u = v = 1),
                    f = M.slice()),
                    _ = f.length,
                    _ < w && f.unshift(0),
                    r(m, f, w, l),
                    u == -1 && (w = m.length,
                    u = t(M, m, I, w),
                    u < 1 && (v++,
                    r(m, I < w ? T : M, w, l))),
                    w = m.length) : u === 0 && (v++,
                    m = [0]),
                    g[d++] = v,
                    u && m[0] ? m[w++] = O[E] || 0 : (m = [O[E]],
                    w = 1);
                while ((E++ < k || m[0] !== void 0) && b--);
                p = m[0] !== void 0
            }
            g[0] || g.shift()
        }
        if (h == 1)
            y.e = c,
            $E = p;
        else {
            for (d = 1,
            v = g[0]; v >= 10; v /= 10)
                d++;
            y.e = d + c * h - 1,
            Ve(y, s ? i + y.e + 1 : i, o, p)
        }
        return y
    }
}();
function Ve(e, t, r, a) {
    var n, i, o, s, l, u, c, d, v, h = e.constructor;
    e: if (t != null) {
        if (d = e.d,
        !d)
            return e;
        for (n = 1,
        s = d[0]; s >= 10; s /= 10)
            n++;
        if (i = t - n,
        i < 0)
            i += Ye,
            o = t,
            c = d[v = 0],
            l = c / gr(10, n - o - 1) % 10 | 0;
        else if (v = Math.ceil((i + 1) / Ye),
        s = d.length,
        v >= s)
            if (a) {
                for (; s++ <= v; )
                    d.push(0);
                c = l = 0,
                n = 1,
                i %= Ye,
                o = i - Ye + 1
            } else
                break e;
        else {
            for (c = s = d[v],
            n = 1; s >= 10; s /= 10)
                n++;
            i %= Ye,
            o = i - Ye + n,
            l = o < 0 ? 0 : c / gr(10, n - o - 1) % 10 | 0
        }
        if (a = a || t < 0 || d[v + 1] !== void 0 || (o < 0 ? c : c % gr(10, n - o - 1)),
        u = r < 4 ? (l || a) && (r == 0 || r == (e.s < 0 ? 3 : 2)) : l > 5 || l == 5 && (r == 4 || a || r == 6 && (i > 0 ? o > 0 ? c / gr(10, n - o) : 0 : d[v - 1]) % 10 & 1 || r == (e.s < 0 ? 8 : 7)),
        t < 1 || !d[0])
            return d.length = 0,
            u ? (t -= e.e + 1,
            d[0] = gr(10, (Ye - t % Ye) % Ye),
            e.e = -t || 0) : d[0] = e.e = 0,
            e;
        if (i == 0 ? (d.length = v,
        s = 1,
        v--) : (d.length = v + 1,
        s = gr(10, Ye - i),
        d[v] = o > 0 ? (c / gr(10, n - o) % gr(10, o) | 0) * s : 0),
        u)
            for (; ; )
                if (v == 0) {
                    for (i = 1,
                    o = d[0]; o >= 10; o /= 10)
                        i++;
                    for (o = d[0] += s,
                    s = 1; o >= 10; o /= 10)
                        s++;
                    i != s && (e.e++,
                    d[0] == Rn && (d[0] = 1));
                    break
                } else {
                    if (d[v] += s,
                    d[v] != Rn)
                        break;
                    d[v--] = 0,
                    s = 1
                }
        for (i = d.length; d[--i] === 0; )
            d.pop()
    }
    return at && (e.e > h.maxE ? (e.d = null,
    e.e = NaN) : e.e < h.minE && (e.e = 0,
    e.d = [0])),
    e
}
function ci(e, t, r) {
    if (!e.isFinite())
        return KE(e);
    var a, n = e.e, i = Pr(e.d), o = i.length;
    return t ? (r && (a = r - o) > 0 ? i = i.charAt(0) + "." + i.slice(1) + lo(a) : o > 1 && (i = i.charAt(0) + "." + i.slice(1)),
    i = i + (e.e < 0 ? "e" : "e+") + e.e) : n < 0 ? (i = "0." + lo(-n - 1) + i,
    r && (a = r - o) > 0 && (i += lo(a))) : n >= o ? (i += lo(n + 1 - o),
    r && (a = r - n - 1) > 0 && (i = i + "." + lo(a))) : ((a = n + 1) < o && (i = i.slice(0, a) + "." + i.slice(a)),
    r && (a = r - o) > 0 && (n + 1 === o && (i += "."),
    i += lo(a))),
    i
}
function Km(e, t) {
    var r = e[0];
    for (t *= Ye; r >= 10; r /= 10)
        t++;
    return t
}
function Uh(e, t, r) {
    if (t > qB)
        throw at = !0,
        r && (e.precision = r),
        Error(zE);
    return Ve(new e(Ih), t, 1, !0)
}
function On(e, t, r) {
    if (t > dw)
        throw Error(zE);
    return Ve(new e(Dh), t, r, !0)
}
function WE(e) {
    var t = e.length - 1
      , r = t * Ye + 1;
    if (t = e[t],
    t) {
        for (; t % 10 == 0; t /= 10)
            r--;
        for (t = e[0]; t >= 10; t /= 10)
            r++
    }
    return r
}
function lo(e) {
    for (var t = ""; e--; )
        t += "0";
    return t
}
function YE(e, t, r, a) {
    var n, i = new e(1), o = Math.ceil(a / Ye + 4);
    for (at = !1; ; ) {
        if (r % 2 && (i = i.times(t),
        Y1(i.d, o) && (n = !0)),
        r = Xr(r / 2),
        r === 0) {
            r = i.d.length - 1,
            n && i.d[r] === 0 && ++i.d[r];
            break
        }
        t = t.times(t),
        Y1(t.d, o)
    }
    return at = !0,
    i
}
function W1(e) {
    return e.d[e.d.length - 1] & 1
}
function JE(e, t, r) {
    for (var a, n = new e(t[0]), i = 0; ++i < t.length; )
        if (a = new e(t[i]),
        a.s)
            n[r](a) && (n = a);
        else {
            n = a;
            break
        }
    return n
}
function vw(e, t) {
    var r, a, n, i, o, s, l, u = 0, c = 0, d = 0, v = e.constructor, h = v.rounding, p = v.precision;
    if (!e.d || !e.d[0] || e.e > 17)
        return new v(e.d ? e.d[0] ? e.s < 0 ? 0 : 1 / 0 : 1 : e.s ? e.s < 0 ? 0 : e : 0 / 0);
    for (t == null ? (at = !1,
    l = p) : l = t,
    s = new v(.03125); e.e > -2; )
        e = e.times(s),
        d += 5;
    for (a = Math.log(gr(2, d)) / Math.LN10 * 2 + 5 | 0,
    l += a,
    r = i = o = new v(1),
    v.precision = l; ; ) {
        if (i = Ve(i.times(e), l, 1),
        r = r.times(++c),
        s = o.plus($t(i, r, l, 1)),
        Pr(s.d).slice(0, l) === Pr(o.d).slice(0, l)) {
            for (n = d; n--; )
                o = Ve(o.times(o), l, 1);
            if (t == null)
                if (u < 3 && Fc(o.d, l - a, h, u))
                    v.precision = l += 10,
                    r = i = s = new v(1),
                    c = 0,
                    u++;
                else
                    return Ve(o, v.precision = p, h, at = !0);
            else
                return v.precision = p,
                o
        }
        o = s
    }
}
function _o(e, t) {
    var r, a, n, i, o, s, l, u, c, d, v, h = 1, p = 10, f = e, _ = f.d, y = f.constructor, g = y.rounding, m = y.precision;
    if (f.s < 0 || !_ || !_[0] || !f.e && _[0] == 1 && _.length == 1)
        return new y(_ && !_[0] ? -1 / 0 : f.s != 1 ? NaN : _ ? 0 : f);
    if (t == null ? (at = !1,
    c = m) : c = t,
    y.precision = c += p,
    r = Pr(_),
    a = r.charAt(0),
    Math.abs(i = f.e) < 15e14) {
        for (; a < 7 && a != 1 || a == 1 && r.charAt(1) > 3; )
            f = f.times(e),
            r = Pr(f.d),
            a = r.charAt(0),
            h++;
        i = f.e,
        a > 1 ? (f = new y("0." + r),
        i++) : f = new y(a + "." + r.slice(1))
    } else
        return u = Uh(y, c + 2, m).times(i + ""),
        f = _o(new y(a + "." + r.slice(1)), c - p).plus(u),
        y.precision = m,
        t == null ? Ve(f, m, g, at = !0) : f;
    for (d = f,
    l = o = f = $t(f.minus(1), f.plus(1), c, 1),
    v = Ve(f.times(f), c, 1),
    n = 3; ; ) {
        if (o = Ve(o.times(v), c, 1),
        u = l.plus($t(o, new y(n), c, 1)),
        Pr(u.d).slice(0, c) === Pr(l.d).slice(0, c))
            if (l = l.times(2),
            i !== 0 && (l = l.plus(Uh(y, c + 2, m).times(i + ""))),
            l = $t(l, new y(h), c, 1),
            t == null)
                if (Fc(l.d, c - p, g, s))
                    y.precision = c += p,
                    u = o = f = $t(d.minus(1), d.plus(1), c, 1),
                    v = Ve(f.times(f), c, 1),
                    n = s = 1;
                else
                    return Ve(l, y.precision = m, g, at = !0);
            else
                return y.precision = m,
                l;
        l = u,
        n += 2
    }
}
function KE(e) {
    return String(e.s * e.s / 0)
}
function hw(e, t) {
    var r, a, n;
    for ((r = t.indexOf(".")) > -1 && (t = t.replace(".", "")),
    (a = t.search(/e/i)) > 0 ? (r < 0 && (r = a),
    r += +t.slice(a + 1),
    t = t.substring(0, a)) : r < 0 && (r = t.length),
    a = 0; t.charCodeAt(a) === 48; a++)
        ;
    for (n = t.length; t.charCodeAt(n - 1) === 48; --n)
        ;
    if (t = t.slice(a, n),
    t) {
        if (n -= a,
        e.e = r = r - a - 1,
        e.d = [],
        a = (r + 1) % Ye,
        r < 0 && (a += Ye),
        a < n) {
            for (a && e.d.push(+t.slice(0, a)),
            n -= Ye; a < n; )
                e.d.push(+t.slice(a, a += Ye));
            t = t.slice(a),
            a = Ye - t.length
        } else
            a -= n;
        for (; a--; )
            t += "0";
        e.d.push(+t),
        at && (e.e > e.constructor.maxE ? (e.d = null,
        e.e = NaN) : e.e < e.constructor.minE && (e.e = 0,
        e.d = [0]))
    } else
        e.e = 0,
        e.d = [0];
    return e
}
function $B(e, t) {
    var r, a, n, i, o, s, l, u, c;
    if (t.indexOf("_") > -1) {
        if (t = t.replace(/(\d)_(?=\d)/g, "$1"),
        HE.test(t))
            return hw(e, t)
    } else if (t === "Infinity" || t === "NaN")
        return +t || (e.s = NaN),
        e.e = NaN,
        e.d = null,
        e;
    if (BB.test(t))
        r = 16,
        t = t.toLowerCase();
    else if (PB.test(t))
        r = 2;
    else if (RB.test(t))
        r = 8;
    else
        throw Error(Po + t);
    for (i = t.search(/p/i),
    i > 0 ? (l = +t.slice(i + 1),
    t = t.substring(2, i)) : t = t.slice(2),
    i = t.indexOf("."),
    o = i >= 0,
    a = e.constructor,
    o && (t = t.replace(".", ""),
    s = t.length,
    i = s - i,
    n = YE(a, new a(r), i, i * 2)),
    u = Ov(t, r, Rn),
    c = u.length - 1,
    i = c; u[i] === 0; --i)
        u.pop();
    return i < 0 ? new a(e.s * 0) : (e.e = Km(u, c),
    e.d = u,
    at = !1,
    o && (e = $t(e, n, s * 4)),
    l && (e = e.times(Math.abs(l) < 54 ? gr(2, l) : Bo.pow(2, l))),
    at = !0,
    e)
}
function zB(e, t) {
    var r, a = t.d.length;
    if (a < 3)
        return t.isZero() ? t : Jl(e, 2, t, t);
    r = 1.4 * Math.sqrt(a),
    r = r > 16 ? 16 : r | 0,
    t = t.times(1 / Qm(5, r)),
    t = Jl(e, 2, t, t);
    for (var n, i = new e(5), o = new e(16), s = new e(20); r--; )
        n = t.times(t),
        t = t.times(i.plus(n.times(o.times(n).minus(s))));
    return t
}
function Jl(e, t, r, a, n) {
    var i, o, s, l, u = e.precision, c = Math.ceil(u / Ye);
    for (at = !1,
    l = r.times(r),
    s = new e(a); ; ) {
        if (o = $t(s.times(l), new e(t++ * t++), u, 1),
        s = n ? a.plus(o) : a.minus(o),
        a = $t(o.times(l), new e(t++ * t++), u, 1),
        o = s.plus(a),
        o.d[c] !== void 0) {
            for (i = c; o.d[i] === s.d[i] && i--; )
                ;
            if (i == -1)
                break
        }
        i = s,
        s = a,
        a = o,
        o = i
    }
    return at = !0,
    o.d.length = c + 1,
    o
}
function Qm(e, t) {
    for (var r = e; --t; )
        r *= e;
    return r
}
function QE(e, t) {
    var r, a = t.s < 0, n = On(e, e.precision, 1), i = n.times(.5);
    if (t = t.abs(),
    t.lte(i))
        return Di = a ? 4 : 1,
        t;
    if (r = t.divToInt(n),
    r.isZero())
        Di = a ? 3 : 2;
    else {
        if (t = t.minus(r.times(n)),
        t.lte(i))
            return Di = W1(r) ? a ? 2 : 3 : a ? 4 : 1,
            t;
        Di = W1(r) ? a ? 1 : 4 : a ? 3 : 2
    }
    return t.minus(n).abs()
}
function u2(e, t, r, a) {
    var n, i, o, s, l, u, c, d, v, h = e.constructor, p = r !== void 0;
    if (p ? (Ma(r, 1, $o),
    a === void 0 ? a = h.rounding : Ma(a, 0, 8)) : (r = h.precision,
    a = h.rounding),
    !e.isFinite())
        c = KE(e);
    else {
        for (c = ci(e),
        o = c.indexOf("."),
        p ? (n = 2,
        t == 16 ? r = r * 4 - 3 : t == 8 && (r = r * 3 - 2)) : n = t,
        o >= 0 && (c = c.replace(".", ""),
        v = new h(1),
        v.e = c.length - o,
        v.d = Ov(ci(v), 10, n),
        v.e = v.d.length),
        d = Ov(c, 10, n),
        i = l = d.length; d[--l] == 0; )
            d.pop();
        if (!d[0])
            c = p ? "0p+0" : "0";
        else {
            if (o < 0 ? i-- : (e = new h(e),
            e.d = d,
            e.e = i,
            e = $t(e, v, r, a, 0, n),
            d = e.d,
            i = e.e,
            u = $E),
            o = d[r],
            s = n / 2,
            u = u || d[r + 1] !== void 0,
            u = a < 4 ? (o !== void 0 || u) && (a === 0 || a === (e.s < 0 ? 3 : 2)) : o > s || o === s && (a === 4 || u || a === 6 && d[r - 1] & 1 || a === (e.s < 0 ? 8 : 7)),
            d.length = r,
            u)
                for (; ++d[--r] > n - 1; )
                    d[r] = 0,
                    r || (++i,
                    d.unshift(1));
            for (l = d.length; !d[l - 1]; --l)
                ;
            for (o = 0,
            c = ""; o < l; o++)
                c += uw.charAt(d[o]);
            if (p) {
                if (l > 1)
                    if (t == 16 || t == 8) {
                        for (o = t == 16 ? 4 : 3,
                        --l; l % o; l++)
                            c += "0";
                        for (d = Ov(c, n, t),
                        l = d.length; !d[l - 1]; --l)
                            ;
                        for (o = 1,
                        c = "1."; o < l; o++)
                            c += uw.charAt(d[o])
                    } else
                        c = c.charAt(0) + "." + c.slice(1);
                c = c + (i < 0 ? "p" : "p+") + i
            } else if (i < 0) {
                for (; ++i; )
                    c = "0" + c;
                c = "0." + c
            } else if (++i > l)
                for (i -= l; i--; )
                    c += "0";
            else
                i < l && (c = c.slice(0, i) + "." + c.slice(i))
        }
        c = (t == 16 ? "0x" : t == 2 ? "0b" : t == 8 ? "0o" : "") + c
    }
    return e.s < 0 ? "-" + c : c
}
function Y1(e, t) {
    if (e.length > t)
        return e.length = t,
        !0
}
function GB(e) {
    return new this(e).abs()
}
function jB(e) {
    return new this(e).acos()
}
function HB(e) {
    return new this(e).acosh()
}
function WB(e, t) {
    return new this(e).plus(t)
}
function YB(e) {
    return new this(e).asin()
}
function JB(e) {
    return new this(e).asinh()
}
function KB(e) {
    return new this(e).atan()
}
function QB(e) {
    return new this(e).atanh()
}
function ZB(e, t) {
    e = new this(e),
    t = new this(t);
    var r, a = this.precision, n = this.rounding, i = a + 4;
    return !e.s || !t.s ? r = new this(NaN) : !e.d && !t.d ? (r = On(this, i, 1).times(t.s > 0 ? .25 : .75),
    r.s = e.s) : !t.d || e.isZero() ? (r = t.s < 0 ? On(this, a, n) : new this(0),
    r.s = e.s) : !e.d || t.isZero() ? (r = On(this, i, 1).times(.5),
    r.s = e.s) : t.s < 0 ? (this.precision = i,
    this.rounding = 1,
    r = this.atan($t(e, t, i, 1)),
    t = On(this, i, 1),
    this.precision = a,
    this.rounding = n,
    r = e.s < 0 ? r.minus(t) : r.plus(t)) : r = this.atan($t(e, t, i, 1)),
    r
}
function XB(e) {
    return new this(e).cbrt()
}
function eR(e) {
    return Ve(e = new this(e), e.e + 1, 2)
}
function tR(e, t, r) {
    return new this(e).clamp(t, r)
}
function rR(e) {
    if (!e || typeof e != "object")
        throw Error(Jm + "Object expected");
    var t, r, a, n = e.defaults === !0, i = ["precision", 1, $o, "rounding", 0, 8, "toExpNeg", -bl, 0, "toExpPos", 0, bl, "maxE", 0, bl, "minE", -bl, 0, "modulo", 0, 9];
    for (t = 0; t < i.length; t += 3)
        if (r = i[t],
        n && (this[r] = cw[r]),
        (a = e[r]) !== void 0)
            if (Xr(a) === a && a >= i[t + 1] && a <= i[t + 2])
                this[r] = a;
            else
                throw Error(Po + r + ": " + a);
    if (r = "crypto",
    n && (this[r] = cw[r]),
    (a = e[r]) !== void 0)
        if (a === !0 || a === !1 || a === 0 || a === 1)
            if (a)
                if (typeof crypto < "u" && crypto && (crypto.getRandomValues || crypto.randomBytes))
                    this[r] = !0;
                else
                    throw Error(GE);
            else
                this[r] = !1;
        else
            throw Error(Po + r + ": " + a);
    return this
}
function aR(e) {
    return new this(e).cos()
}
function nR(e) {
    return new this(e).cosh()
}
function ZE(e) {
    var t, r, a;
    function n(i) {
        var o, s, l, u = this;
        if (!(u instanceof n))
            return new n(i);
        if (u.constructor = n,
        J1(i)) {
            u.s = i.s,
            at ? !i.d || i.e > n.maxE ? (u.e = NaN,
            u.d = null) : i.e < n.minE ? (u.e = 0,
            u.d = [0]) : (u.e = i.e,
            u.d = i.d.slice()) : (u.e = i.e,
            u.d = i.d ? i.d.slice() : i.d);
            return
        }
        if (l = typeof i,
        l === "number") {
            if (i === 0) {
                u.s = 1 / i < 0 ? -1 : 1,
                u.e = 0,
                u.d = [0];
                return
            }
            if (i < 0 ? (i = -i,
            u.s = -1) : u.s = 1,
            i === ~~i && i < 1e7) {
                for (o = 0,
                s = i; s >= 10; s /= 10)
                    o++;
                at ? o > n.maxE ? (u.e = NaN,
                u.d = null) : o < n.minE ? (u.e = 0,
                u.d = [0]) : (u.e = o,
                u.d = [i]) : (u.e = o,
                u.d = [i]);
                return
            } else if (i * 0 !== 0) {
                i || (u.s = NaN),
                u.e = NaN,
                u.d = null;
                return
            }
            return hw(u, i.toString())
        } else if (l !== "string")
            throw Error(Po + i);
        return (s = i.charCodeAt(0)) === 45 ? (i = i.slice(1),
        u.s = -1) : (s === 43 && (i = i.slice(1)),
        u.s = 1),
        HE.test(i) ? hw(u, i) : $B(u, i)
    }
    if (n.prototype = Se,
    n.ROUND_UP = 0,
    n.ROUND_DOWN = 1,
    n.ROUND_CEIL = 2,
    n.ROUND_FLOOR = 3,
    n.ROUND_HALF_UP = 4,
    n.ROUND_HALF_DOWN = 5,
    n.ROUND_HALF_EVEN = 6,
    n.ROUND_HALF_CEIL = 7,
    n.ROUND_HALF_FLOOR = 8,
    n.EUCLID = 9,
    n.config = n.set = rR,
    n.clone = ZE,
    n.isDecimal = J1,
    n.abs = GB,
    n.acos = jB,
    n.acosh = HB,
    n.add = WB,
    n.asin = YB,
    n.asinh = JB,
    n.atan = KB,
    n.atanh = QB,
    n.atan2 = ZB,
    n.cbrt = XB,
    n.ceil = eR,
    n.clamp = tR,
    n.cos = aR,
    n.cosh = nR,
    n.div = iR,
    n.exp = oR,
    n.floor = sR,
    n.hypot = lR,
    n.ln = uR,
    n.log = cR,
    n.log10 = vR,
    n.log2 = dR,
    n.max = hR,
    n.min = mR,
    n.mod = fR,
    n.mul = pR,
    n.pow = yR,
    n.random = wR,
    n.round = gR,
    n.sign = _R,
    n.sin = bR,
    n.sinh = CR,
    n.sqrt = SR,
    n.sub = xR,
    n.sum = AR,
    n.tan = ER,
    n.tanh = kR,
    n.trunc = TR,
    e === void 0 && (e = {}),
    e && e.defaults !== !0)
        for (a = ["precision", "rounding", "toExpNeg", "toExpPos", "maxE", "minE", "modulo", "crypto"],
        t = 0; t < a.length; )
            e.hasOwnProperty(r = a[t++]) || (e[r] = this[r]);
    return n.config(e),
    n
}
function iR(e, t) {
    return new this(e).div(t)
}
function oR(e) {
    return new this(e).exp()
}
function sR(e) {
    return Ve(e = new this(e), e.e + 1, 3)
}
function lR() {
    var e, t, r = new this(0);
    for (at = !1,
    e = 0; e < arguments.length; )
        if (t = new this(arguments[e++]),
        t.d)
            r.d && (r = r.plus(t.times(t)));
        else {
            if (t.s)
                return at = !0,
                new this(1 / 0);
            r = t
        }
    return at = !0,
    r.sqrt()
}
function J1(e) {
    return e instanceof Bo || e && e.toStringTag === jE || !1
}
function uR(e) {
    return new this(e).ln()
}
function cR(e, t) {
    return new this(e).log(t)
}
function dR(e) {
    return new this(e).log(2)
}
function vR(e) {
    return new this(e).log(10)
}
function hR() {
    return JE(this, arguments, "lt")
}
function mR() {
    return JE(this, arguments, "gt")
}
function fR(e, t) {
    return new this(e).mod(t)
}
function pR(e, t) {
    return new this(e).mul(t)
}
function yR(e, t) {
    return new this(e).pow(t)
}
function wR(e) {
    var t, r, a, n, i = 0, o = new this(1), s = [];
    if (e === void 0 ? e = this.precision : Ma(e, 1, $o),
    a = Math.ceil(e / Ye),
    this.crypto)
        if (crypto.getRandomValues)
            for (t = crypto.getRandomValues(new Uint32Array(a)); i < a; )
                n = t[i],
                n >= 429e7 ? t[i] = crypto.getRandomValues(new Uint32Array(1))[0] : s[i++] = n % 1e7;
        else if (crypto.randomBytes) {
            for (t = crypto.randomBytes(a *= 4); i < a; )
                n = t[i] + (t[i + 1] << 8) + (t[i + 2] << 16) + ((t[i + 3] & 127) << 24),
                n >= 214e7 ? crypto.randomBytes(4).copy(t, i) : (s.push(n % 1e7),
                i += 4);
            i = a / 4
        } else
            throw Error(GE);
    else
        for (; i < a; )
            s[i++] = Math.random() * 1e7 | 0;
    for (a = s[--i],
    e %= Ye,
    a && e && (n = gr(10, Ye - e),
    s[i] = (a / n | 0) * n); s[i] === 0; i--)
        s.pop();
    if (i < 0)
        r = 0,
        s = [0];
    else {
        for (r = -1; s[0] === 0; r -= Ye)
            s.shift();
        for (a = 1,
        n = s[0]; n >= 10; n /= 10)
            a++;
        a < Ye && (r -= Ye - a)
    }
    return o.e = r,
    o.d = s,
    o
}
function gR(e) {
    return Ve(e = new this(e), e.e + 1, this.rounding)
}
function _R(e) {
    return e = new this(e),
    e.d ? e.d[0] ? e.s : 0 * e.s : e.s || NaN
}
function bR(e) {
    return new this(e).sin()
}
function CR(e) {
    return new this(e).sinh()
}
function SR(e) {
    return new this(e).sqrt()
}
function xR(e, t) {
    return new this(e).sub(t)
}
function AR() {
    var e = 0
      , t = arguments
      , r = new this(t[e]);
    for (at = !1; r.s && ++e < t.length; )
        r = r.plus(t[e]);
    return at = !0,
    Ve(r, this.precision, this.rounding)
}
function ER(e) {
    return new this(e).tan()
}
function kR(e) {
    return new this(e).tanh()
}
function TR(e) {
    return Ve(e = new this(e), e.e + 1, 1)
}
Se[Symbol.for("nodejs.util.inspect.custom")] = Se.toString;
Se[Symbol.toStringTag] = "Decimal";
var Bo = Se.constructor = ZE(cw);
Ih = new Bo(Ih);
Dh = new Bo(Dh);
var NR = "BigNumber"
  , MR = ["?on", "config"]
  , IR = j(NR, MR, e => {
    var {on: t, config: r} = e
      , a = Bo.clone({
        precision: r.precision,
        modulo: Bo.EUCLID
    });
    return a.prototype = Object.create(a.prototype),
    a.prototype.type = "BigNumber",
    a.prototype.isBigNumber = !0,
    a.prototype.toJSON = function() {
        return {
            mathjs: "BigNumber",
            value: this.toString()
        }
    }
    ,
    a.fromJSON = function(n) {
        return new a(n.value)
    }
    ,
    t && t("config", function(n, i) {
        n.precision !== i.precision && a.config({
            precision: n.precision
        })
    }),
    a
}
, {
    isClass: !0
})
  , XE = {
    exports: {}
};
/**
 * @license Complex.js v2.1.1 12/05/2020
 *
 * Copyright (c) 2020, Robert Eisele (robert@xarg.org)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 **/
(function(e, t) {
    (function(r) {
        var a = Math.cosh || function(d) {
            return Math.abs(d) < 1e-9 ? 1 - d : (Math.exp(d) + Math.exp(-d)) * .5
        }
          , n = Math.sinh || function(d) {
            return Math.abs(d) < 1e-9 ? d : (Math.exp(d) - Math.exp(-d)) * .5
        }
          , i = function(d) {
            var v = Math.PI / 4;
            if (-v > d || d > v)
                return Math.cos(d) - 1;
            var h = d * d;
            return h * (h * (h * (h * (h * (h * (h * (h / 20922789888e3 - 1 / 87178291200) + 1 / 479001600) - 1 / 3628800) + 1 / 40320) - 1 / 720) + 1 / 24) - 1 / 2)
        }
          , o = function(d, v) {
            var h = Math.abs(d)
              , p = Math.abs(v);
            return h < 3e3 && p < 3e3 ? Math.sqrt(h * h + p * p) : (h < p ? (h = p,
            p = d / v) : p = v / d,
            h * Math.sqrt(1 + p * p))
        }
          , s = function() {
            throw SyntaxError("Invalid Param")
        };
        function l(d, v) {
            var h = Math.abs(d)
              , p = Math.abs(v);
            return d === 0 ? Math.log(p) : v === 0 ? Math.log(h) : h < 3e3 && p < 3e3 ? Math.log(d * d + v * v) * .5 : (d = d / 2,
            v = v / 2,
            .5 * Math.log(d * d + v * v) + Math.LN2)
        }
        var u = function(d, v) {
            var h = {
                re: 0,
                im: 0
            };
            if (d == null)
                h.re = h.im = 0;
            else if (v !== void 0)
                h.re = d,
                h.im = v;
            else
                switch (typeof d) {
                case "object":
                    if ("im"in d && "re"in d)
                        h.re = d.re,
                        h.im = d.im;
                    else if ("abs"in d && "arg"in d) {
                        if (!Number.isFinite(d.abs) && Number.isFinite(d.arg))
                            return c.INFINITY;
                        h.re = d.abs * Math.cos(d.arg),
                        h.im = d.abs * Math.sin(d.arg)
                    } else if ("r"in d && "phi"in d) {
                        if (!Number.isFinite(d.r) && Number.isFinite(d.phi))
                            return c.INFINITY;
                        h.re = d.r * Math.cos(d.phi),
                        h.im = d.r * Math.sin(d.phi)
                    } else
                        d.length === 2 ? (h.re = d[0],
                        h.im = d[1]) : s();
                    break;
                case "string":
                    h.im = h.re = 0;
                    var p = d.match(/\d+\.?\d*e[+-]?\d+|\d+\.?\d*|\.\d+|./g)
                      , f = 1
                      , _ = 0;
                    p === null && s();
                    for (var y = 0; y < p.length; y++) {
                        var g = p[y];
                        g === " " || g === "	" || g === `
` || (g === "+" ? f++ : g === "-" ? _++ : g === "i" || g === "I" ? (f + _ === 0 && s(),
                        p[y + 1] !== " " && !isNaN(p[y + 1]) ? (h.im += parseFloat((_ % 2 ? "-" : "") + p[y + 1]),
                        y++) : h.im += parseFloat((_ % 2 ? "-" : "") + "1"),
                        f = _ = 0) : ((f + _ === 0 || isNaN(g)) && s(),
                        p[y + 1] === "i" || p[y + 1] === "I" ? (h.im += parseFloat((_ % 2 ? "-" : "") + g),
                        y++) : h.re += parseFloat((_ % 2 ? "-" : "") + g),
                        f = _ = 0))
                    }
                    f + _ > 0 && s();
                    break;
                case "number":
                    h.im = 0,
                    h.re = d;
                    break;
                default:
                    s()
                }
            return isNaN(h.re) || isNaN(h.im),
            h
        };
        function c(d, v) {
            if (!(this instanceof c))
                return new c(d,v);
            var h = u(d, v);
            this.re = h.re,
            this.im = h.im
        }
        c.prototype = {
            re: 0,
            im: 0,
            sign: function() {
                var d = this.abs();
                return new c(this.re / d,this.im / d)
            },
            add: function(d, v) {
                var h = new c(d,v);
                return this.isInfinite() && h.isInfinite() ? c.NAN : this.isInfinite() || h.isInfinite() ? c.INFINITY : new c(this.re + h.re,this.im + h.im)
            },
            sub: function(d, v) {
                var h = new c(d,v);
                return this.isInfinite() && h.isInfinite() ? c.NAN : this.isInfinite() || h.isInfinite() ? c.INFINITY : new c(this.re - h.re,this.im - h.im)
            },
            mul: function(d, v) {
                var h = new c(d,v);
                return this.isInfinite() && h.isZero() || this.isZero() && h.isInfinite() ? c.NAN : this.isInfinite() || h.isInfinite() ? c.INFINITY : h.im === 0 && this.im === 0 ? new c(this.re * h.re,0) : new c(this.re * h.re - this.im * h.im,this.re * h.im + this.im * h.re)
            },
            div: function(d, v) {
                var h = new c(d,v);
                if (this.isZero() && h.isZero() || this.isInfinite() && h.isInfinite())
                    return c.NAN;
                if (this.isInfinite() || h.isZero())
                    return c.INFINITY;
                if (this.isZero() || h.isInfinite())
                    return c.ZERO;
                d = this.re,
                v = this.im;
                var p = h.re, f = h.im, _, y;
                return f === 0 ? new c(d / p,v / p) : Math.abs(p) < Math.abs(f) ? (y = p / f,
                _ = p * y + f,
                new c((d * y + v) / _,(v * y - d) / _)) : (y = f / p,
                _ = f * y + p,
                new c((d + v * y) / _,(v - d * y) / _))
            },
            pow: function(d, v) {
                var h = new c(d,v);
                if (d = this.re,
                v = this.im,
                h.isZero())
                    return c.ONE;
                if (h.im === 0) {
                    if (v === 0 && d > 0)
                        return new c(Math.pow(d, h.re),0);
                    if (d === 0)
                        switch ((h.re % 4 + 4) % 4) {
                        case 0:
                            return new c(Math.pow(v, h.re),0);
                        case 1:
                            return new c(0,Math.pow(v, h.re));
                        case 2:
                            return new c(-Math.pow(v, h.re),0);
                        case 3:
                            return new c(0,-Math.pow(v, h.re))
                        }
                }
                if (d === 0 && v === 0 && h.re > 0 && h.im >= 0)
                    return c.ZERO;
                var p = Math.atan2(v, d)
                  , f = l(d, v);
                return d = Math.exp(h.re * f - h.im * p),
                v = h.im * f + h.re * p,
                new c(d * Math.cos(v),d * Math.sin(v))
            },
            sqrt: function() {
                var d = this.re, v = this.im, h = this.abs(), p, f;
                if (d >= 0) {
                    if (v === 0)
                        return new c(Math.sqrt(d),0);
                    p = .5 * Math.sqrt(2 * (h + d))
                } else
                    p = Math.abs(v) / Math.sqrt(2 * (h - d));
                return d <= 0 ? f = .5 * Math.sqrt(2 * (h - d)) : f = Math.abs(v) / Math.sqrt(2 * (h + d)),
                new c(p,v < 0 ? -f : f)
            },
            exp: function() {
                var d = Math.exp(this.re);
                return this.im,
                new c(d * Math.cos(this.im),d * Math.sin(this.im))
            },
            expm1: function() {
                var d = this.re
                  , v = this.im;
                return new c(Math.expm1(d) * Math.cos(v) + i(v),Math.exp(d) * Math.sin(v))
            },
            log: function() {
                var d = this.re
                  , v = this.im;
                return new c(l(d, v),Math.atan2(v, d))
            },
            abs: function() {
                return o(this.re, this.im)
            },
            arg: function() {
                return Math.atan2(this.im, this.re)
            },
            sin: function() {
                var d = this.re
                  , v = this.im;
                return new c(Math.sin(d) * a(v),Math.cos(d) * n(v))
            },
            cos: function() {
                var d = this.re
                  , v = this.im;
                return new c(Math.cos(d) * a(v),-Math.sin(d) * n(v))
            },
            tan: function() {
                var d = 2 * this.re
                  , v = 2 * this.im
                  , h = Math.cos(d) + a(v);
                return new c(Math.sin(d) / h,n(v) / h)
            },
            cot: function() {
                var d = 2 * this.re
                  , v = 2 * this.im
                  , h = Math.cos(d) - a(v);
                return new c(-Math.sin(d) / h,n(v) / h)
            },
            sec: function() {
                var d = this.re
                  , v = this.im
                  , h = .5 * a(2 * v) + .5 * Math.cos(2 * d);
                return new c(Math.cos(d) * a(v) / h,Math.sin(d) * n(v) / h)
            },
            csc: function() {
                var d = this.re
                  , v = this.im
                  , h = .5 * a(2 * v) - .5 * Math.cos(2 * d);
                return new c(Math.sin(d) * a(v) / h,-Math.cos(d) * n(v) / h)
            },
            asin: function() {
                var d = this.re
                  , v = this.im
                  , h = new c(v * v - d * d + 1,-2 * d * v).sqrt()
                  , p = new c(h.re - v,h.im + d).log();
                return new c(p.im,-p.re)
            },
            acos: function() {
                var d = this.re
                  , v = this.im
                  , h = new c(v * v - d * d + 1,-2 * d * v).sqrt()
                  , p = new c(h.re - v,h.im + d).log();
                return new c(Math.PI / 2 - p.im,p.re)
            },
            atan: function() {
                var d = this.re
                  , v = this.im;
                if (d === 0) {
                    if (v === 1)
                        return new c(0,1 / 0);
                    if (v === -1)
                        return new c(0,-1 / 0)
                }
                var h = d * d + (1 - v) * (1 - v)
                  , p = new c((1 - v * v - d * d) / h,-2 * d / h).log();
                return new c(-.5 * p.im,.5 * p.re)
            },
            acot: function() {
                var d = this.re
                  , v = this.im;
                if (v === 0)
                    return new c(Math.atan2(1, d),0);
                var h = d * d + v * v;
                return h !== 0 ? new c(d / h,-v / h).atan() : new c(d !== 0 ? d / 0 : 0,v !== 0 ? -v / 0 : 0).atan()
            },
            asec: function() {
                var d = this.re
                  , v = this.im;
                if (d === 0 && v === 0)
                    return new c(0,1 / 0);
                var h = d * d + v * v;
                return h !== 0 ? new c(d / h,-v / h).acos() : new c(d !== 0 ? d / 0 : 0,v !== 0 ? -v / 0 : 0).acos()
            },
            acsc: function() {
                var d = this.re
                  , v = this.im;
                if (d === 0 && v === 0)
                    return new c(Math.PI / 2,1 / 0);
                var h = d * d + v * v;
                return h !== 0 ? new c(d / h,-v / h).asin() : new c(d !== 0 ? d / 0 : 0,v !== 0 ? -v / 0 : 0).asin()
            },
            sinh: function() {
                var d = this.re
                  , v = this.im;
                return new c(n(d) * Math.cos(v),a(d) * Math.sin(v))
            },
            cosh: function() {
                var d = this.re
                  , v = this.im;
                return new c(a(d) * Math.cos(v),n(d) * Math.sin(v))
            },
            tanh: function() {
                var d = 2 * this.re
                  , v = 2 * this.im
                  , h = a(d) + Math.cos(v);
                return new c(n(d) / h,Math.sin(v) / h)
            },
            coth: function() {
                var d = 2 * this.re
                  , v = 2 * this.im
                  , h = a(d) - Math.cos(v);
                return new c(n(d) / h,-Math.sin(v) / h)
            },
            csch: function() {
                var d = this.re
                  , v = this.im
                  , h = Math.cos(2 * v) - a(2 * d);
                return new c(-2 * n(d) * Math.cos(v) / h,2 * a(d) * Math.sin(v) / h)
            },
            sech: function() {
                var d = this.re
                  , v = this.im
                  , h = Math.cos(2 * v) + a(2 * d);
                return new c(2 * a(d) * Math.cos(v) / h,-2 * n(d) * Math.sin(v) / h)
            },
            asinh: function() {
                var d = this.im;
                this.im = -this.re,
                this.re = d;
                var v = this.asin();
                return this.re = -this.im,
                this.im = d,
                d = v.re,
                v.re = -v.im,
                v.im = d,
                v
            },
            acosh: function() {
                var d = this.acos();
                if (d.im <= 0) {
                    var v = d.re;
                    d.re = -d.im,
                    d.im = v
                } else {
                    var v = d.im;
                    d.im = -d.re,
                    d.re = v
                }
                return d
            },
            atanh: function() {
                var d = this.re
                  , v = this.im
                  , h = d > 1 && v === 0
                  , p = 1 - d
                  , f = 1 + d
                  , _ = p * p + v * v
                  , y = _ !== 0 ? new c((f * p - v * v) / _,(v * p + f * v) / _) : new c(d !== -1 ? d / 0 : 0,v !== 0 ? v / 0 : 0)
                  , g = y.re;
                return y.re = l(y.re, y.im) / 2,
                y.im = Math.atan2(y.im, g) / 2,
                h && (y.im = -y.im),
                y
            },
            acoth: function() {
                var d = this.re
                  , v = this.im;
                if (d === 0 && v === 0)
                    return new c(0,Math.PI / 2);
                var h = d * d + v * v;
                return h !== 0 ? new c(d / h,-v / h).atanh() : new c(d !== 0 ? d / 0 : 0,v !== 0 ? -v / 0 : 0).atanh()
            },
            acsch: function() {
                var d = this.re
                  , v = this.im;
                if (v === 0)
                    return new c(d !== 0 ? Math.log(d + Math.sqrt(d * d + 1)) : 1 / 0,0);
                var h = d * d + v * v;
                return h !== 0 ? new c(d / h,-v / h).asinh() : new c(d !== 0 ? d / 0 : 0,v !== 0 ? -v / 0 : 0).asinh()
            },
            asech: function() {
                var d = this.re
                  , v = this.im;
                if (this.isZero())
                    return c.INFINITY;
                var h = d * d + v * v;
                return h !== 0 ? new c(d / h,-v / h).acosh() : new c(d !== 0 ? d / 0 : 0,v !== 0 ? -v / 0 : 0).acosh()
            },
            inverse: function() {
                if (this.isZero())
                    return c.INFINITY;
                if (this.isInfinite())
                    return c.ZERO;
                var d = this.re
                  , v = this.im
                  , h = d * d + v * v;
                return new c(d / h,-v / h)
            },
            conjugate: function() {
                return new c(this.re,-this.im)
            },
            neg: function() {
                return new c(-this.re,-this.im)
            },
            ceil: function(d) {
                return d = Math.pow(10, d || 0),
                new c(Math.ceil(this.re * d) / d,Math.ceil(this.im * d) / d)
            },
            floor: function(d) {
                return d = Math.pow(10, d || 0),
                new c(Math.floor(this.re * d) / d,Math.floor(this.im * d) / d)
            },
            round: function(d) {
                return d = Math.pow(10, d || 0),
                new c(Math.round(this.re * d) / d,Math.round(this.im * d) / d)
            },
            equals: function(d, v) {
                var h = new c(d,v);
                return Math.abs(h.re - this.re) <= c.EPSILON && Math.abs(h.im - this.im) <= c.EPSILON
            },
            clone: function() {
                return new c(this.re,this.im)
            },
            toString: function() {
                var d = this.re
                  , v = this.im
                  , h = "";
                return this.isNaN() ? "NaN" : this.isInfinite() ? "Infinity" : (Math.abs(d) < c.EPSILON && (d = 0),
                Math.abs(v) < c.EPSILON && (v = 0),
                v === 0 ? h + d : (d !== 0 ? (h += d,
                h += " ",
                v < 0 ? (v = -v,
                h += "-") : h += "+",
                h += " ") : v < 0 && (v = -v,
                h += "-"),
                v !== 1 && (h += v),
                h + "i"))
            },
            toVector: function() {
                return [this.re, this.im]
            },
            valueOf: function() {
                return this.im === 0 ? this.re : null
            },
            isNaN: function() {
                return isNaN(this.re) || isNaN(this.im)
            },
            isZero: function() {
                return this.im === 0 && this.re === 0
            },
            isFinite: function() {
                return isFinite(this.re) && isFinite(this.im)
            },
            isInfinite: function() {
                return !(this.isNaN() || this.isFinite())
            }
        },
        c.ZERO = new c(0,0),
        c.ONE = new c(1,0),
        c.I = new c(0,1),
        c.PI = new c(Math.PI,0),
        c.E = new c(Math.E,0),
        c.INFINITY = new c(1 / 0,1 / 0),
        c.NAN = new c(NaN,NaN),
        c.EPSILON = 1e-15,
        Object.defineProperty(c, "__esModule", {
            value: !0
        }),
        c.default = c,
        c.Complex = c,
        e.exports = c
    }
    )()
}
)(XE);
var DR = XE.exports;
const Ir = vi(DR);
var UR = "Complex"
  , FR = []
  , OR = j(UR, FR, () => (Object.defineProperty(Ir, "name", {
    value: "Complex"
}),
Ir.prototype.constructor = Ir,
Ir.prototype.type = "Complex",
Ir.prototype.isComplex = !0,
Ir.prototype.toJSON = function() {
    return {
        mathjs: "Complex",
        re: this.re,
        im: this.im
    }
}
,
Ir.prototype.toPolar = function() {
    return {
        r: this.abs(),
        phi: this.arg()
    }
}
,
Ir.prototype.format = function(e) {
    var t = ""
      , r = this.im
      , a = this.re
      , n = fs(this.re, e)
      , i = fs(this.im, e)
      , o = lt(e) ? e : e ? e.precision : null;
    if (o !== null) {
        var s = Math.pow(10, -o);
        Math.abs(a / r) < s && (a = 0),
        Math.abs(r / a) < s && (r = 0)
    }
    return r === 0 ? t = n : a === 0 ? r === 1 ? t = "i" : r === -1 ? t = "-i" : t = i + "i" : r < 0 ? r === -1 ? t = n + " - i" : t = n + " - " + i.substring(1) + "i" : r === 1 ? t = n + " + i" : t = n + " + " + i + "i",
    t
}
,
Ir.fromPolar = function(e) {
    switch (arguments.length) {
    case 1:
        {
            var t = arguments[0];
            if (typeof t == "object")
                return Ir(t);
            throw new TypeError("Input has to be an object with r and phi keys.")
        }
    case 2:
        {
            var r = arguments[0]
              , a = arguments[1];
            if (lt(r)) {
                if (ln(a) && a.hasBase("ANGLE") && (a = a.toNumber("rad")),
                lt(a))
                    return new Ir({
                        r,
                        phi: a
                    });
                throw new TypeError("Phi is not a number nor an angle unit.")
            } else
                throw new TypeError("Radius r is not a number.")
        }
    default:
        throw new SyntaxError("Wrong number of arguments in function fromPolar")
    }
}
,
Ir.prototype.valueOf = Ir.prototype.toString,
Ir.fromJSON = function(e) {
    return new Ir(e)
}
,
Ir.compare = function(e, t) {
    return e.re > t.re ? 1 : e.re < t.re ? -1 : e.im > t.im ? 1 : e.im < t.im ? -1 : 0
}
,
Ir), {
    isClass: !0
})
  , e4 = {
    exports: {}
};
/**
 * @license Fraction.js v4.3.0 20/08/2023
 * https://www.xarg.org/2014/03/rational-numbers-in-javascript/
 *
 * Copyright (c) 2023, Robert Eisele (robert@raw.org)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 **/
(function(e, t) {
    (function(r) {
        var a = 2e3
          , n = {
            s: 1,
            n: 0,
            d: 1
        };
        function i(y, g) {
            if (isNaN(y = parseInt(y, 10)))
                throw f();
            return y * g
        }
        function o(y, g) {
            if (g === 0)
                throw p();
            var m = Object.create(h.prototype);
            m.s = y < 0 ? -1 : 1,
            y = y < 0 ? -y : y;
            var w = v(y, g);
            return m.n = y / w,
            m.d = g / w,
            m
        }
        function s(y) {
            for (var g = {}, m = y, w = 2, C = 4; C <= m; ) {
                for (; m % w === 0; )
                    m /= w,
                    g[w] = (g[w] || 0) + 1;
                C += 1 + 2 * w++
            }
            return m !== y ? m > 1 && (g[m] = (g[m] || 0) + 1) : g[y] = (g[y] || 0) + 1,
            g
        }
        var l = function(y, g) {
            var m = 0, w = 1, C = 1, b = 0, x = 0, E = 0, k = 1, A = 1, I = 0, T = 1, F = 1, R = 1, O = 1e7, M;
            if (y != null)
                if (g !== void 0) {
                    if (m = y,
                    w = g,
                    C = m * w,
                    m % 1 !== 0 || w % 1 !== 0)
                        throw _()
                } else
                    switch (typeof y) {
                    case "object":
                        {
                            if ("d"in y && "n"in y)
                                m = y.n,
                                w = y.d,
                                "s"in y && (m *= y.s);
                            else if (0 in y)
                                m = y[0],
                                1 in y && (w = y[1]);
                            else
                                throw f();
                            C = m * w;
                            break
                        }
                    case "number":
                        {
                            if (y < 0 && (C = y,
                            y = -y),
                            y % 1 === 0)
                                m = y;
                            else if (y > 0) {
                                for (y >= 1 && (A = Math.pow(10, Math.floor(1 + Math.log(y) / Math.LN10)),
                                y /= A); T <= O && R <= O; )
                                    if (M = (I + F) / (T + R),
                                    y === M) {
                                        T + R <= O ? (m = I + F,
                                        w = T + R) : R > T ? (m = F,
                                        w = R) : (m = I,
                                        w = T);
                                        break
                                    } else
                                        y > M ? (I += F,
                                        T += R) : (F += I,
                                        R += T),
                                        T > O ? (m = F,
                                        w = R) : (m = I,
                                        w = T);
                                m *= A
                            } else
                                (isNaN(y) || isNaN(g)) && (w = m = NaN);
                            break
                        }
                    case "string":
                        {
                            if (T = y.match(/\d+|./g),
                            T === null)
                                throw f();
                            if (T[I] === "-" ? (C = -1,
                            I++) : T[I] === "+" && I++,
                            T.length === I + 1 ? x = i(T[I++], C) : T[I + 1] === "." || T[I] === "." ? (T[I] !== "." && (b = i(T[I++], C)),
                            I++,
                            (I + 1 === T.length || T[I + 1] === "(" && T[I + 3] === ")" || T[I + 1] === "'" && T[I + 3] === "'") && (x = i(T[I], C),
                            k = Math.pow(10, T[I].length),
                            I++),
                            (T[I] === "(" && T[I + 2] === ")" || T[I] === "'" && T[I + 2] === "'") && (E = i(T[I + 1], C),
                            A = Math.pow(10, T[I + 1].length) - 1,
                            I += 3)) : T[I + 1] === "/" || T[I + 1] === ":" ? (x = i(T[I], C),
                            k = i(T[I + 2], 1),
                            I += 3) : T[I + 3] === "/" && T[I + 1] === " " && (b = i(T[I], C),
                            x = i(T[I + 2], C),
                            k = i(T[I + 4], 1),
                            I += 5),
                            T.length <= I) {
                                w = k * A,
                                C = m = E + w * b + A * x;
                                break
                            }
                        }
                    default:
                        throw f()
                    }
            if (w === 0)
                throw p();
            n.s = C < 0 ? -1 : 1,
            n.n = Math.abs(m),
            n.d = Math.abs(w)
        };
        function u(y, g, m) {
            for (var w = 1; g > 0; y = y * y % m,
            g >>= 1)
                g & 1 && (w = w * y % m);
            return w
        }
        function c(y, g) {
            for (; g % 2 === 0; g /= 2)
                ;
            for (; g % 5 === 0; g /= 5)
                ;
            if (g === 1)
                return 0;
            for (var m = 10 % g, w = 1; m !== 1; w++)
                if (m = m * 10 % g,
                w > a)
                    return 0;
            return w
        }
        function d(y, g, m) {
            for (var w = 1, C = u(10, m, g), b = 0; b < 300; b++) {
                if (w === C)
                    return b;
                w = w * 10 % g,
                C = C * 10 % g
            }
            return 0
        }
        function v(y, g) {
            if (!y)
                return g;
            if (!g)
                return y;
            for (; ; ) {
                if (y %= g,
                !y)
                    return g;
                if (g %= y,
                !g)
                    return y
            }
        }
        function h(y, g) {
            if (l(y, g),
            this instanceof h)
                y = v(n.d, n.n),
                this.s = n.s,
                this.n = n.n / y,
                this.d = n.d / y;
            else
                return o(n.s * n.n, n.d)
        }
        var p = function() {
            return new Error("Division by Zero")
        }
          , f = function() {
            return new Error("Invalid argument")
        }
          , _ = function() {
            return new Error("Parameters must be integer")
        };
        h.prototype = {
            s: 1,
            n: 0,
            d: 1,
            abs: function() {
                return o(this.n, this.d)
            },
            neg: function() {
                return o(-this.s * this.n, this.d)
            },
            add: function(y, g) {
                return l(y, g),
                o(this.s * this.n * n.d + n.s * this.d * n.n, this.d * n.d)
            },
            sub: function(y, g) {
                return l(y, g),
                o(this.s * this.n * n.d - n.s * this.d * n.n, this.d * n.d)
            },
            mul: function(y, g) {
                return l(y, g),
                o(this.s * n.s * this.n * n.n, this.d * n.d)
            },
            div: function(y, g) {
                return l(y, g),
                o(this.s * n.s * this.n * n.d, this.d * n.n)
            },
            clone: function() {
                return o(this.s * this.n, this.d)
            },
            mod: function(y, g) {
                if (isNaN(this.n) || isNaN(this.d))
                    return new h(NaN);
                if (y === void 0)
                    return o(this.s * this.n % this.d, 1);
                if (l(y, g),
                n.n === 0 && this.d === 0)
                    throw p();
                return o(this.s * (n.d * this.n) % (n.n * this.d), n.d * this.d)
            },
            gcd: function(y, g) {
                return l(y, g),
                o(v(n.n, this.n) * v(n.d, this.d), n.d * this.d)
            },
            lcm: function(y, g) {
                return l(y, g),
                n.n === 0 && this.n === 0 ? o(0, 1) : o(n.n * this.n, v(n.n, this.n) * v(n.d, this.d))
            },
            ceil: function(y) {
                return y = Math.pow(10, y || 0),
                isNaN(this.n) || isNaN(this.d) ? new h(NaN) : o(Math.ceil(y * this.s * this.n / this.d), y)
            },
            floor: function(y) {
                return y = Math.pow(10, y || 0),
                isNaN(this.n) || isNaN(this.d) ? new h(NaN) : o(Math.floor(y * this.s * this.n / this.d), y)
            },
            round: function(y) {
                return y = Math.pow(10, y || 0),
                isNaN(this.n) || isNaN(this.d) ? new h(NaN) : o(Math.round(y * this.s * this.n / this.d), y)
            },
            inverse: function() {
                return o(this.s * this.d, this.n)
            },
            pow: function(y, g) {
                if (l(y, g),
                n.d === 1)
                    return n.s < 0 ? o(Math.pow(this.s * this.d, n.n), Math.pow(this.n, n.n)) : o(Math.pow(this.s * this.n, n.n), Math.pow(this.d, n.n));
                if (this.s < 0)
                    return null;
                var m = s(this.n)
                  , w = s(this.d)
                  , C = 1
                  , b = 1;
                for (var x in m)
                    if (x !== "1") {
                        if (x === "0") {
                            C = 0;
                            break
                        }
                        if (m[x] *= n.n,
                        m[x] % n.d === 0)
                            m[x] /= n.d;
                        else
                            return null;
                        C *= Math.pow(x, m[x])
                    }
                for (var x in w)
                    if (x !== "1") {
                        if (w[x] *= n.n,
                        w[x] % n.d === 0)
                            w[x] /= n.d;
                        else
                            return null;
                        b *= Math.pow(x, w[x])
                    }
                return n.s < 0 ? o(b, C) : o(C, b)
            },
            equals: function(y, g) {
                return l(y, g),
                this.s * this.n * n.d === n.s * n.n * this.d
            },
            compare: function(y, g) {
                l(y, g);
                var m = this.s * this.n * n.d - n.s * n.n * this.d;
                return (0 < m) - (m < 0)
            },
            simplify: function(y) {
                if (isNaN(this.n) || isNaN(this.d))
                    return this;
                y = y || .001;
                for (var g = this.abs(), m = g.toContinued(), w = 1; w < m.length; w++) {
                    for (var C = o(m[w - 1], 1), b = w - 2; b >= 0; b--)
                        C = C.inverse().add(m[b]);
                    if (Math.abs(C.sub(g).valueOf()) < y)
                        return C.mul(this.s)
                }
                return this
            },
            divisible: function(y, g) {
                return l(y, g),
                !(!(n.n * this.d) || this.n * n.d % (n.n * this.d))
            },
            valueOf: function() {
                return this.s * this.n / this.d
            },
            toFraction: function(y) {
                var g, m = "", w = this.n, C = this.d;
                return this.s < 0 && (m += "-"),
                C === 1 ? m += w : (y && (g = Math.floor(w / C)) > 0 && (m += g,
                m += " ",
                w %= C),
                m += w,
                m += "/",
                m += C),
                m
            },
            toLatex: function(y) {
                var g, m = "", w = this.n, C = this.d;
                return this.s < 0 && (m += "-"),
                C === 1 ? m += w : (y && (g = Math.floor(w / C)) > 0 && (m += g,
                w %= C),
                m += "\\frac{",
                m += w,
                m += "}{",
                m += C,
                m += "}"),
                m
            },
            toContinued: function() {
                var y, g = this.n, m = this.d, w = [];
                if (isNaN(g) || isNaN(m))
                    return w;
                do
                    w.push(Math.floor(g / m)),
                    y = g % m,
                    g = m,
                    m = y;
                while (g !== 1);
                return w
            },
            toString: function(y) {
                var g = this.n
                  , m = this.d;
                if (isNaN(g) || isNaN(m))
                    return "NaN";
                y = y || 15;
                var w = c(g, m)
                  , C = d(g, m, w)
                  , b = this.s < 0 ? "-" : "";
                if (b += g / m | 0,
                g %= m,
                g *= 10,
                g && (b += "."),
                w) {
                    for (var x = C; x--; )
                        b += g / m | 0,
                        g %= m,
                        g *= 10;
                    b += "(";
                    for (var x = w; x--; )
                        b += g / m | 0,
                        g %= m,
                        g *= 10;
                    b += ")"
                } else
                    for (var x = y; g && x--; )
                        b += g / m | 0,
                        g %= m,
                        g *= 10;
                return b
            }
        },
        Object.defineProperty(h, "__esModule", {
            value: !0
        }),
        h.default = h,
        h.Fraction = h,
        e.exports = h
    }
    )()
}
)(e4);
var PR = e4.exports;
const xi = vi(PR);
var BR = "Fraction"
  , RR = []
  , LR = j(BR, RR, () => (Object.defineProperty(xi, "name", {
    value: "Fraction"
}),
xi.prototype.constructor = xi,
xi.prototype.type = "Fraction",
xi.prototype.isFraction = !0,
xi.prototype.toJSON = function() {
    return {
        mathjs: "Fraction",
        n: this.s * this.n,
        d: this.d
    }
}
,
xi.fromJSON = function(e) {
    return new xi(e)
}
,
xi), {
    isClass: !0
})
  , qR = "Range"
  , VR = []
  , $R = j(qR, VR, () => {
    function e(t, r, a) {
        if (!(this instanceof e))
            throw new SyntaxError("Constructor must be called with the new operator");
        var n = t != null
          , i = r != null
          , o = a != null;
        if (n) {
            if (vt(t))
                t = t.toNumber();
            else if (typeof t != "number")
                throw new TypeError("Parameter start must be a number")
        }
        if (i) {
            if (vt(r))
                r = r.toNumber();
            else if (typeof r != "number")
                throw new TypeError("Parameter end must be a number")
        }
        if (o) {
            if (vt(a))
                a = a.toNumber();
            else if (typeof a != "number")
                throw new TypeError("Parameter step must be a number")
        }
        this.start = n ? parseFloat(t) : 0,
        this.end = i ? parseFloat(r) : 0,
        this.step = o ? parseFloat(a) : 1
    }
    return e.prototype.type = "Range",
    e.prototype.isRange = !0,
    e.parse = function(t) {
        if (typeof t != "string")
            return null;
        var r = t.split(":")
          , a = r.map(function(i) {
            return parseFloat(i)
        })
          , n = a.some(function(i) {
            return isNaN(i)
        });
        if (n)
            return null;
        switch (a.length) {
        case 2:
            return new e(a[0],a[1]);
        case 3:
            return new e(a[0],a[2],a[1]);
        default:
            return null
        }
    }
    ,
    e.prototype.clone = function() {
        return new e(this.start,this.end,this.step)
    }
    ,
    e.prototype.size = function() {
        var t = 0
          , r = this.start
          , a = this.step
          , n = this.end
          , i = n - r;
        return go(a) === go(i) ? t = Math.ceil(i / a) : i === 0 && (t = 0),
        isNaN(t) && (t = 0),
        [t]
    }
    ,
    e.prototype.min = function() {
        var t = this.size()[0];
        if (t > 0)
            return this.step > 0 ? this.start : this.start + (t - 1) * this.step
    }
    ,
    e.prototype.max = function() {
        var t = this.size()[0];
        if (t > 0)
            return this.step > 0 ? this.start + (t - 1) * this.step : this.start
    }
    ,
    e.prototype.forEach = function(t) {
        var r = this.start
          , a = this.step
          , n = this.end
          , i = 0;
        if (a > 0)
            for (; r < n; )
                t(r, [i], this),
                r += a,
                i++;
        else if (a < 0)
            for (; r > n; )
                t(r, [i], this),
                r += a,
                i++
    }
    ,
    e.prototype.map = function(t) {
        var r = [];
        return this.forEach(function(a, n, i) {
            r[n[0]] = t(a, n, i)
        }),
        r
    }
    ,
    e.prototype.toArray = function() {
        var t = [];
        return this.forEach(function(r, a) {
            t[a[0]] = r
        }),
        t
    }
    ,
    e.prototype.valueOf = function() {
        return this.toArray()
    }
    ,
    e.prototype.format = function(t) {
        var r = fs(this.start, t);
        return this.step !== 1 && (r += ":" + fs(this.step, t)),
        r += ":" + fs(this.end, t),
        r
    }
    ,
    e.prototype.toString = function() {
        return this.format()
    }
    ,
    e.prototype.toJSON = function() {
        return {
            mathjs: "Range",
            start: this.start,
            end: this.end,
            step: this.step
        }
    }
    ,
    e.fromJSON = function(t) {
        return new e(t.start,t.end,t.step)
    }
    ,
    e
}
, {
    isClass: !0
})
  , zR = "Matrix"
  , GR = []
  , jR = j(zR, GR, () => {
    function e() {
        if (!(this instanceof e))
            throw new SyntaxError("Constructor must be called with the new operator")
    }
    return e.prototype.type = "Matrix",
    e.prototype.isMatrix = !0,
    e.prototype.storage = function() {
        throw new Error("Cannot invoke storage on a Matrix interface")
    }
    ,
    e.prototype.datatype = function() {
        throw new Error("Cannot invoke datatype on a Matrix interface")
    }
    ,
    e.prototype.create = function(t, r) {
        throw new Error("Cannot invoke create on a Matrix interface")
    }
    ,
    e.prototype.subset = function(t, r, a) {
        throw new Error("Cannot invoke subset on a Matrix interface")
    }
    ,
    e.prototype.get = function(t) {
        throw new Error("Cannot invoke get on a Matrix interface")
    }
    ,
    e.prototype.set = function(t, r, a) {
        throw new Error("Cannot invoke set on a Matrix interface")
    }
    ,
    e.prototype.resize = function(t, r) {
        throw new Error("Cannot invoke resize on a Matrix interface")
    }
    ,
    e.prototype.reshape = function(t, r) {
        throw new Error("Cannot invoke reshape on a Matrix interface")
    }
    ,
    e.prototype.clone = function() {
        throw new Error("Cannot invoke clone on a Matrix interface")
    }
    ,
    e.prototype.size = function() {
        throw new Error("Cannot invoke size on a Matrix interface")
    }
    ,
    e.prototype.map = function(t, r) {
        throw new Error("Cannot invoke map on a Matrix interface")
    }
    ,
    e.prototype.forEach = function(t) {
        throw new Error("Cannot invoke forEach on a Matrix interface")
    }
    ,
    e.prototype[Symbol.iterator] = function() {
        throw new Error("Cannot iterate a Matrix interface")
    }
    ,
    e.prototype.toArray = function() {
        throw new Error("Cannot invoke toArray on a Matrix interface")
    }
    ,
    e.prototype.valueOf = function() {
        throw new Error("Cannot invoke valueOf on a Matrix interface")
    }
    ,
    e.prototype.format = function(t) {
        throw new Error("Cannot invoke format on a Matrix interface")
    }
    ,
    e.prototype.toString = function() {
        throw new Error("Cannot invoke toString on a Matrix interface")
    }
    ,
    e
}
, {
    isClass: !0
});
function HR(e) {
    var t = 0
      , r = 1
      , a = Object.create(null)
      , n = Object.create(null)
      , i = 0
      , o = function(l) {
        var u = n[l];
        if (u && (delete a[u],
        delete n[l],
        --t,
        r === u)) {
            if (!t) {
                i = 0,
                r = 1;
                return
            }
            for (; !Object.prototype.hasOwnProperty.call(a, ++r); )
                ;
        }
    };
    return e = Math.abs(e),
    {
        hit: function(l) {
            var u = n[l]
              , c = ++i;
            if (a[c] = l,
            n[l] = c,
            !u)
                return ++t,
                t <= e ? void 0 : (l = a[r],
                o(l),
                l);
            if (delete a[u],
            r === u)
                for (; !Object.prototype.hasOwnProperty.call(a, ++r); )
                    ;
        },
        delete: o,
        clear: function() {
            t = i = 0,
            r = 1,
            a = Object.create(null),
            n = Object.create(null)
        }
    }
}
function rd(e) {
    var {hasher: t, limit: r} = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    return r = r ?? Number.POSITIVE_INFINITY,
    t = t ?? JSON.stringify,
    function a() {
        typeof a.cache != "object" && (a.cache = {
            values: new Map,
            lru: HR(r || Number.POSITIVE_INFINITY)
        });
        for (var n = [], i = 0; i < arguments.length; i++)
            n[i] = arguments[i];
        var o = t(n);
        if (a.cache.values.has(o))
            return a.cache.lru.hit(o),
            a.cache.values.get(o);
        var s = e.apply(e, n);
        return a.cache.values.set(o, s),
        a.cache.values.delete(a.cache.lru.hit(o)),
        s
    }
}
function t4(e) {
    return Object.keys(e.signatures || {}).reduce(function(t, r) {
        var a = (r.match(/,/g) || []).length + 1;
        return Math.max(t, a)
    }, -1)
}
var WR = "DenseMatrix"
  , YR = ["Matrix"]
  , JR = j(WR, YR, e => {
    var {Matrix: t} = e;
    function r(c, d) {
        if (!(this instanceof r))
            throw new SyntaxError("Constructor must be called with the new operator");
        if (d && !Wr(d))
            throw new Error("Invalid datatype: " + d);
        if (je(c))
            c.type === "DenseMatrix" ? (this._data = Qe(c._data),
            this._size = Qe(c._size),
            this._datatype = d || c._datatype) : (this._data = c.toArray(),
            this._size = c.size(),
            this._datatype = d || c._datatype);
        else if (c && At(c.data) && At(c.size))
            this._data = c.data,
            this._size = c.size,
            z1(this._data, this._size),
            this._datatype = d || c.datatype;
        else if (At(c))
            this._data = u(c),
            this._size = it(this._data),
            z1(this._data, this._size),
            this._datatype = d;
        else {
            if (c)
                throw new TypeError("Unsupported type of data (" + Bt(c) + ")");
            this._data = [],
            this._size = [0],
            this._datatype = d
        }
    }
    r.prototype = new t,
    r.prototype.createDenseMatrix = function(c, d) {
        return new r(c,d)
    }
    ,
    Object.defineProperty(r, "name", {
        value: "DenseMatrix"
    }),
    r.prototype.constructor = r,
    r.prototype.type = "DenseMatrix",
    r.prototype.isDenseMatrix = !0,
    r.prototype.getDataType = function() {
        return Uc(this._data, Bt)
    }
    ,
    r.prototype.storage = function() {
        return "dense"
    }
    ,
    r.prototype.datatype = function() {
        return this._datatype
    }
    ,
    r.prototype.create = function(c, d) {
        return new r(c,d)
    }
    ,
    r.prototype.subset = function(c, d, v) {
        switch (arguments.length) {
        case 1:
            return a(this, c);
        case 2:
        case 3:
            return i(this, c, d, v);
        default:
            throw new SyntaxError("Wrong number of arguments")
        }
    }
    ,
    r.prototype.get = function(c) {
        if (!At(c))
            throw new TypeError("Array expected");
        if (c.length !== this._size.length)
            throw new ut(c.length,this._size.length);
        for (var d = 0; d < c.length; d++)
            Ot(c[d], this._size[d]);
        for (var v = this._data, h = 0, p = c.length; h < p; h++) {
            var f = c[h];
            Ot(f, v.length),
            v = v[f]
        }
        return v
    }
    ,
    r.prototype.set = function(c, d, v) {
        if (!At(c))
            throw new TypeError("Array expected");
        if (c.length < this._size.length)
            throw new ut(c.length,this._size.length,"<");
        var h, p, f, _ = c.map(function(g) {
            return g + 1
        });
        l(this, _, v);
        var y = this._data;
        for (h = 0,
        p = c.length - 1; h < p; h++)
            f = c[h],
            Ot(f, y.length),
            y = y[f];
        return f = c[c.length - 1],
        Ot(f, y.length),
        y[f] = d,
        this
    }
    ;
    function a(c, d) {
        if (!Gm(d))
            throw new TypeError("Invalid index");
        var v = d.isScalar();
        if (v)
            return c.get(d.min());
        var h = d.size();
        if (h.length !== c._size.length)
            throw new ut(h.length,c._size.length);
        for (var p = d.min(), f = d.max(), _ = 0, y = c._size.length; _ < y; _++)
            Ot(p[_], c._size[_]),
            Ot(f[_], c._size[_]);
        return new r(n(c._data, d, h.length, 0),c._datatype)
    }
    function n(c, d, v, h) {
        var p = h === v - 1
          , f = d.dimension(h);
        return p ? f.map(function(_) {
            return Ot(_, c.length),
            c[_]
        }).valueOf() : f.map(function(_) {
            Ot(_, c.length);
            var y = c[_];
            return n(y, d, v, h + 1)
        }).valueOf()
    }
    function i(c, d, v, h) {
        if (!d || d.isIndex !== !0)
            throw new TypeError("Invalid index");
        var p = d.size(), f = d.isScalar(), _;
        if (je(v) ? (_ = v.size(),
        v = v.valueOf()) : _ = it(v),
        f) {
            if (_.length !== 0)
                throw new TypeError("Scalar expected");
            c.set(d.min(), v, h)
        } else {
            if (!Cs(_, p))
                try {
                    _.length === 0 ? v = j1([v], p) : v = j1(v, p),
                    _ = it(v)
                } catch {}
            if (p.length < c._size.length)
                throw new ut(p.length,c._size.length,"<");
            if (_.length < p.length) {
                for (var y = 0, g = 0; p[y] === 1 && _[y] === 1; )
                    y++;
                for (; p[y] === 1; )
                    g++,
                    y++;
                v = FE(v, p.length, g, _)
            }
            if (!Cs(p, _))
                throw new ut(p,_,">");
            var m = d.max().map(function(b) {
                return b + 1
            });
            l(c, m, h);
            var w = p.length
              , C = 0;
            o(c._data, d, v, w, C)
        }
        return c
    }
    function o(c, d, v, h, p) {
        var f = p === h - 1
          , _ = d.dimension(p);
        f ? _.forEach(function(y, g) {
            Ot(y),
            c[y] = v[g[0]]
        }) : _.forEach(function(y, g) {
            Ot(y),
            o(c[y], d, v[g[0]], h, p + 1)
        })
    }
    r.prototype.resize = function(c, d, v) {
        if (!Fo(c))
            throw new TypeError("Array or Matrix expected");
        var h = c.valueOf().map(f => Array.isArray(f) && f.length === 1 ? f[0] : f)
          , p = v ? this.clone() : this;
        return s(p, h, d)
    }
    ;
    function s(c, d, v) {
        if (d.length === 0) {
            for (var h = c._data; At(h); )
                h = h[0];
            return h
        }
        return c._size = d.slice(0),
        c._data = jl(c._data, c._size, v),
        c
    }
    r.prototype.reshape = function(c, d) {
        var v = d ? this.clone() : this;
        v._data = n2(v._data, c);
        var h = v._size.reduce( (p, f) => p * f);
        return v._size = i2(c, h),
        v
    }
    ;
    function l(c, d, v) {
        for (var h = c._size.slice(0), p = !1; h.length < d.length; )
            h.push(0),
            p = !0;
        for (var f = 0, _ = d.length; f < _; f++)
            d[f] > h[f] && (h[f] = d[f],
            p = !0);
        p && s(c, h, v)
    }
    r.prototype.clone = function() {
        var c = new r({
            data: Qe(this._data),
            size: Qe(this._size),
            datatype: this._datatype
        });
        return c
    }
    ,
    r.prototype.size = function() {
        return this._size.slice(0)
    }
    ,
    r.prototype.map = function(c) {
        var d = this
          , v = t4(c)
          , h = function _(y, g) {
            return At(y) ? y.map(function(m, w) {
                return _(m, g.concat(w))
            }) : v === 1 ? c(y) : v === 2 ? c(y, g) : c(y, g, d)
        }
          , p = h(this._data, [])
          , f = this._datatype !== void 0 ? Uc(p, Bt) : void 0;
        return new r(p,f)
    }
    ,
    r.prototype.forEach = function(c) {
        var d = this
          , v = function h(p, f) {
            At(p) ? p.forEach(function(_, y) {
                h(_, f.concat(y))
            }) : c(p, f, d)
        };
        v(this._data, [])
    }
    ,
    r.prototype[Symbol.iterator] = function*() {
        var c = function *d(v, h) {
            if (At(v))
                for (var p = 0; p < v.length; p++)
                    yield*d(v[p], h.concat(p));
            else
                yield{
                    value: v,
                    index: h
                }
        };
        yield*c(this._data, [])
    }
    ,
    r.prototype.rows = function() {
        var c = []
          , d = this.size();
        if (d.length !== 2)
            throw new TypeError("Rows can only be returned for a 2D matrix.");
        var v = this._data;
        for (var h of v)
            c.push(new r([h],this._datatype));
        return c
    }
    ,
    r.prototype.columns = function() {
        var c = this
          , d = []
          , v = this.size();
        if (v.length !== 2)
            throw new TypeError("Rows can only be returned for a 2D matrix.");
        for (var h = this._data, p = function(y) {
            var g = h.map(m => [m[y]]);
            d.push(new r(g,c._datatype))
        }, f = 0; f < v[1]; f++)
            p(f);
        return d
    }
    ,
    r.prototype.toArray = function() {
        return Qe(this._data)
    }
    ,
    r.prototype.valueOf = function() {
        return this._data
    }
    ,
    r.prototype.format = function(c) {
        return st(this._data, c)
    }
    ,
    r.prototype.toString = function() {
        return st(this._data)
    }
    ,
    r.prototype.toJSON = function() {
        return {
            mathjs: "DenseMatrix",
            data: this._data,
            size: this._size,
            datatype: this._datatype
        }
    }
    ,
    r.prototype.diagonal = function(c) {
        if (c) {
            if (vt(c) && (c = c.toNumber()),
            !lt(c) || !Be(c))
                throw new TypeError("The parameter k must be an integer number")
        } else
            c = 0;
        for (var d = c > 0 ? c : 0, v = c < 0 ? -c : 0, h = this._size[0], p = this._size[1], f = Math.min(h - v, p - d), _ = [], y = 0; y < f; y++)
            _[y] = this._data[y + v][y + d];
        return new r({
            data: _,
            size: [f],
            datatype: this._datatype
        })
    }
    ,
    r.diagonal = function(c, d, v, h) {
        if (!At(c))
            throw new TypeError("Array expected, size parameter");
        if (c.length !== 2)
            throw new Error("Only two dimensions matrix are supported");
        if (c = c.map(function(x) {
            if (vt(x) && (x = x.toNumber()),
            !lt(x) || !Be(x) || x < 1)
                throw new Error("Size values must be positive integers");
            return x
        }),
        v) {
            if (vt(v) && (v = v.toNumber()),
            !lt(v) || !Be(v))
                throw new TypeError("The parameter k must be an integer number")
        } else
            v = 0;
        var p = v > 0 ? v : 0, f = v < 0 ? -v : 0, _ = c[0], y = c[1], g = Math.min(_ - f, y - p), m;
        if (At(d)) {
            if (d.length !== g)
                throw new Error("Invalid value array length");
            m = function(E) {
                return d[E]
            }
        } else if (je(d)) {
            var w = d.size();
            if (w.length !== 1 || w[0] !== g)
                throw new Error("Invalid matrix length");
            m = function(E) {
                return d.get([E])
            }
        } else
            m = function() {
                return d
            }
            ;
        h || (h = vt(m(0)) ? m(0).mul(0) : 0);
        var C = [];
        if (c.length > 0) {
            C = jl(C, c, h);
            for (var b = 0; b < g; b++)
                C[b + f][b + p] = m(b)
        }
        return new r({
            data: C,
            size: [_, y]
        })
    }
    ,
    r.fromJSON = function(c) {
        return new r(c)
    }
    ,
    r.prototype.swapRows = function(c, d) {
        if (!lt(c) || !Be(c) || !lt(d) || !Be(d))
            throw new Error("Row index must be positive integers");
        if (this._size.length !== 2)
            throw new Error("Only two dimensional matrix is supported");
        return Ot(c, this._size[0]),
        Ot(d, this._size[0]),
        r._swapRows(c, d, this._data),
        this
    }
    ,
    r._swapRows = function(c, d, v) {
        var h = v[c];
        v[c] = v[d],
        v[d] = h
    }
    ;
    function u(c) {
        return je(c) ? u(c.valueOf()) : At(c) ? c.map(u) : c
    }
    return r
}
, {
    isClass: !0
})
  , K1 = "clone"
  , KR = ["typed"]
  , QR = j(K1, KR, e => {
    var {typed: t} = e;
    return t(K1, {
        any: Qe
    })
}
);
function r4(e) {
    var t = e.length, r = e[0].length, a, n, i = [];
    for (n = 0; n < r; n++) {
        var o = [];
        for (a = 0; a < t; a++)
            o.push(e[a][n]);
        i.push(o)
    }
    return i
}
function uu(e) {
    for (var t = 0; t < e.length; t++)
        if (Fo(e[t]))
            return !0;
    return !1
}
function Gi(e, t) {
    je(e) && (e = e.valueOf());
    for (var r = 0, a = e.length; r < a; r++) {
        var n = e[r];
        Array.isArray(n) ? Gi(n, t) : t(n)
    }
}
function dt(e, t, r) {
    return e && typeof e.map == "function" ? e.map(function(a) {
        return dt(a, t)
    }) : t(e)
}
function Zm(e, t, r) {
    var a = Array.isArray(e) ? it(e) : e.size();
    if (t < 0 || t >= a.length)
        throw new zn(t,a.length);
    return je(e) ? e.create(Fh(e.valueOf(), t, r)) : Fh(e, t, r)
}
function Fh(e, t, r) {
    var a, n, i, o;
    if (t <= 0)
        if (Array.isArray(e[0])) {
            for (o = r4(e),
            n = [],
            a = 0; a < o.length; a++)
                n[a] = Fh(o[a], t - 1, r);
            return n
        } else {
            for (i = e[0],
            a = 1; a < e.length; a++)
                i = r(i, e[a]);
            return i
        }
    else {
        for (n = [],
        a = 0; a < e.length; a++)
            n[a] = Fh(e[a], t - 1, r);
        return n
    }
}
function Q1(e, t, r, a, n, i, o, s, l, u, c) {
    var d = e._values, v = e._index, h = e._ptr, p, f, _, y;
    if (a)
        for (f = h[t],
        _ = h[t + 1],
        p = f; p < _; p++)
            y = v[p],
            r[y] !== i ? (r[y] = i,
            o.push(y),
            u ? (a[y] = l ? s(d[p], c) : s(c, d[p]),
            n[y] = i) : a[y] = d[p]) : (a[y] = l ? s(d[p], a[y]) : s(a[y], d[p]),
            n[y] = i);
    else
        for (f = h[t],
        _ = h[t + 1],
        p = f; p < _; p++)
            y = v[p],
            r[y] !== i ? (r[y] = i,
            o.push(y)) : n[y] = i
}
var Z1 = "isInteger"
  , ZR = ["typed"]
  , XR = j(Z1, ZR, e => {
    var {typed: t} = e;
    return t(Z1, {
        number: Be,
        BigNumber: function(a) {
            return a.isInt()
        },
        Fraction: function(a) {
            return a.d === 1 && isFinite(a.n)
        },
        "Array | Matrix": t.referToSelf(r => a => dt(a, r))
    })
}
)
  , Gn = "number"
  , ad = "number, number";
function a4(e) {
    return Math.abs(e)
}
a4.signature = Gn;
function n4(e, t) {
    return e + t
}
n4.signature = ad;
function i4(e, t) {
    return e * t
}
i4.signature = ad;
function o4(e) {
    return -e
}
o4.signature = Gn;
function s4(e) {
    return e
}
s4.signature = Gn;
function Ku(e) {
    return XP(e)
}
Ku.signature = Gn;
function l4(e) {
    return e * e * e
}
l4.signature = Gn;
function u4(e) {
    return Math.exp(e)
}
u4.signature = Gn;
function c4(e) {
    return eB(e)
}
c4.signature = Gn;
function d4(e, t) {
    if (!Be(e) || !Be(t))
        throw new Error("Parameters in function lcm must be integer numbers");
    if (e === 0 || t === 0)
        return 0;
    for (var r, a = e * t; t !== 0; )
        r = t,
        t = e % r,
        e = r;
    return Math.abs(a / e)
}
d4.signature = ad;
function eL(e, t) {
    return t ? Math.log(e) / Math.log(t) : Math.log(e)
}
function v4(e) {
    return QP(e)
}
v4.signature = Gn;
function h4(e) {
    return KP(e)
}
h4.signature = Gn;
function X1(e) {
    var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 2
      , r = t < 0;
    if (r && (t = -t),
    t === 0)
        throw new Error("Root must be non-zero");
    if (e < 0 && Math.abs(t) % 2 !== 1)
        throw new Error("Root must be odd when a is negative.");
    if (e === 0)
        return r ? 1 / 0 : 0;
    if (!isFinite(e))
        return r ? 0 : e;
    var a = Math.pow(Math.abs(e), 1 / t);
    return a = e < 0 ? -a : a,
    r ? 1 / a : a
}
function mw(e) {
    return go(e)
}
mw.signature = Gn;
function m4(e) {
    return e * e
}
m4.signature = Gn;
function f4(e, t) {
    var r, a, n, i = 0, o = 1, s = 1, l = 0;
    if (!Be(e) || !Be(t))
        throw new Error("Parameters in function xgcd must be integer numbers");
    for (; t; )
        a = Math.floor(e / t),
        n = e - a * t,
        r = i,
        i = o - a * i,
        o = r,
        r = s,
        s = l - a * s,
        l = r,
        e = t,
        t = n;
    var u;
    return e < 0 ? u = [-e, -o, -l] : u = [e, e ? o : 0, l],
    u
}
f4.signature = ad;
function p4(e, t) {
    return e * e < 1 && t === 1 / 0 || e * e > 1 && t === -1 / 0 ? 0 : Math.pow(e, t)
}
p4.signature = ad;
function eb(e) {
    var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
    if (!Be(t) || t < 0 || t > 15)
        throw new Error("Number of decimals in function round must be an integer from 0 to 15 inclusive");
    return parseFloat(TE(e, t))
}
var tL = "number"
  , cu = "number, number";
function y4(e, t) {
    if (!Be(e) || !Be(t))
        throw new Error("Integers expected in function bitAnd");
    return e & t
}
y4.signature = cu;
function w4(e) {
    if (!Be(e))
        throw new Error("Integer expected in function bitNot");
    return ~e
}
w4.signature = tL;
function g4(e, t) {
    if (!Be(e) || !Be(t))
        throw new Error("Integers expected in function bitOr");
    return e | t
}
g4.signature = cu;
function _4(e, t) {
    if (!Be(e) || !Be(t))
        throw new Error("Integers expected in function bitXor");
    return e ^ t
}
_4.signature = cu;
function b4(e, t) {
    if (!Be(e) || !Be(t))
        throw new Error("Integers expected in function leftShift");
    return e << t
}
b4.signature = cu;
function C4(e, t) {
    if (!Be(e) || !Be(t))
        throw new Error("Integers expected in function rightArithShift");
    return e >> t
}
C4.signature = cu;
function S4(e, t) {
    if (!Be(e) || !Be(t))
        throw new Error("Integers expected in function rightLogShift");
    return e >>> t
}
S4.signature = cu;
function Ui(e, t) {
    if (t < e)
        return 1;
    if (t === e)
        return t;
    var r = t + e >> 1;
    return Ui(e, r) * Ui(r + 1, t)
}
function x4(e, t) {
    if (!Be(e) || e < 0)
        throw new TypeError("Positive integer value expected in function combinations");
    if (!Be(t) || t < 0)
        throw new TypeError("Positive integer value expected in function combinations");
    if (t > e)
        throw new TypeError("k must be less than or equal to n");
    for (var r = e - t, a = 1, n = t < r ? r + 1 : t + 1, i = 2, o = t < r ? t : r, s = n; s <= e; ++s)
        for (a *= s; i <= o && a % i === 0; )
            a /= i,
            ++i;
    return i <= o && (a /= Ui(i, o)),
    a
}
x4.signature = "number, number";
var rL = Math.PI
  , aL = 2 * Math.PI
  , nL = Math.E
  , iL = 1.618033988749895
  , oL = "number"
  , c2 = "number, number";
function A4(e) {
    return !e
}
A4.signature = oL;
function E4(e, t) {
    return !!(e || t)
}
E4.signature = c2;
function k4(e, t) {
    return !!e != !!t
}
k4.signature = c2;
function T4(e, t) {
    return !!(e && t)
}
T4.signature = c2;
function Oh(e) {
    var t;
    if (Be(e))
        return e <= 0 ? isFinite(e) ? 1 / 0 : NaN : e > 171 ? 1 / 0 : Ui(1, e - 1);
    if (e < .5)
        return Math.PI / (Math.sin(Math.PI * e) * Oh(1 - e));
    if (e >= 171.35)
        return 1 / 0;
    if (e > 85) {
        var r = e * e
          , a = r * e
          , n = a * e
          , i = n * e;
        return Math.sqrt(2 * Math.PI / e) * Math.pow(e / Math.E, e) * (1 + 1 / (12 * e) + 1 / (288 * r) - 139 / (51840 * a) - 571 / (2488320 * n) + 163879 / (209018880 * i) + 5246819 / (75246796800 * i * e))
    }
    --e,
    t = Ul[0];
    for (var o = 1; o < Ul.length; ++o)
        t += Ul[o] / (e + o);
    var s = e + N4 + .5;
    return Math.sqrt(2 * Math.PI) * Math.pow(s, e + .5) * Math.exp(-s) * t
}
Oh.signature = "number";
var N4 = 4.7421875
  , Ul = [.9999999999999971, 57.15623566586292, -59.59796035547549, 14.136097974741746, -.4919138160976202, 3399464998481189e-20, 4652362892704858e-20, -9837447530487956e-20, .0001580887032249125, -.00021026444172410488, .00021743961811521265, -.0001643181065367639, 8441822398385275e-20, -26190838401581408e-21, 36899182659531625e-22]
  , M4 = .9189385332046728
  , sL = 5
  , lL = 7
  , tb = [1.000000000190015, 76.18009172947146, -86.50532032941678, 24.01409824083091, -1.231739572450155, .001208650973866179, -5395239384953e-18];
function Ph(e) {
    if (e < 0)
        return NaN;
    if (e === 0)
        return 1 / 0;
    if (!isFinite(e))
        return e;
    if (e < .5)
        return Math.log(Math.PI / Math.sin(Math.PI * e)) - Ph(1 - e);
    e = e - 1;
    for (var t = e + sL + .5, r = tb[0], a = lL - 1; a >= 1; a--)
        r += tb[a] / (e + a);
    return M4 + (e + .5) * Math.log(t) - t + Math.log(r)
}
Ph.signature = "number";
var ea = "number";
function I4(e) {
    return iB(e)
}
I4.signature = ea;
function D4(e) {
    return Math.atan(1 / e)
}
D4.signature = ea;
function U4(e) {
    return isFinite(e) ? (Math.log((e + 1) / e) + Math.log(e / (e - 1))) / 2 : 0
}
U4.signature = ea;
function F4(e) {
    return Math.asin(1 / e)
}
F4.signature = ea;
function O4(e) {
    var t = 1 / e;
    return Math.log(t + Math.sqrt(t * t + 1))
}
O4.signature = ea;
function P4(e) {
    return Math.acos(1 / e)
}
P4.signature = ea;
function B4(e) {
    var t = 1 / e
      , r = Math.sqrt(t * t - 1);
    return Math.log(r + t)
}
B4.signature = ea;
function R4(e) {
    return oB(e)
}
R4.signature = ea;
function L4(e) {
    return sB(e)
}
L4.signature = ea;
function q4(e) {
    return 1 / Math.tan(e)
}
q4.signature = ea;
function V4(e) {
    var t = Math.exp(2 * e);
    return (t + 1) / (t - 1)
}
V4.signature = ea;
function $4(e) {
    return 1 / Math.sin(e)
}
$4.signature = ea;
function z4(e) {
    return e === 0 ? Number.POSITIVE_INFINITY : Math.abs(2 / (Math.exp(e) - Math.exp(-e))) * go(e)
}
z4.signature = ea;
function G4(e) {
    return 1 / Math.cos(e)
}
G4.signature = ea;
function j4(e) {
    return 2 / (Math.exp(e) + Math.exp(-e))
}
j4.signature = ea;
function H4(e) {
    return uB(e)
}
H4.signature = ea;
var Xm = "number";
function W4(e) {
    return e < 0
}
W4.signature = Xm;
function Y4(e) {
    return e > 0
}
Y4.signature = Xm;
function J4(e) {
    return e === 0
}
J4.signature = Xm;
function K4(e) {
    return Number.isNaN(e)
}
K4.signature = Xm;
var rb = "isNegative"
  , uL = ["typed"]
  , cL = j(rb, uL, e => {
    var {typed: t} = e;
    return t(rb, {
        number: W4,
        BigNumber: function(a) {
            return a.isNeg() && !a.isZero() && !a.isNaN()
        },
        Fraction: function(a) {
            return a.s < 0
        },
        Unit: t.referToSelf(r => a => t.find(r, a.valueType())(a.value)),
        "Array | Matrix": t.referToSelf(r => a => dt(a, r))
    })
}
)
  , ab = "isNumeric"
  , dL = ["typed"]
  , vL = j(ab, dL, e => {
    var {typed: t} = e;
    return t(ab, {
        "number | BigNumber | Fraction | boolean": () => !0,
        "Complex | Unit | string | null | undefined | Node": () => !1,
        "Array | Matrix": t.referToSelf(r => a => dt(a, r))
    })
}
)
  , nb = "hasNumericValue"
  , hL = ["typed", "isNumeric"]
  , mL = j(nb, hL, e => {
    var {typed: t, isNumeric: r} = e;
    return t(nb, {
        boolean: () => !0,
        string: function(n) {
            return n.trim().length > 0 && !isNaN(Number(n))
        },
        any: function(n) {
            return r(n)
        }
    })
}
)
  , ib = "isPositive"
  , fL = ["typed"]
  , pL = j(ib, fL, e => {
    var {typed: t} = e;
    return t(ib, {
        number: Y4,
        BigNumber: function(a) {
            return !a.isNeg() && !a.isZero() && !a.isNaN()
        },
        Fraction: function(a) {
            return a.s > 0 && a.n > 0
        },
        Unit: t.referToSelf(r => a => t.find(r, a.valueType())(a.value)),
        "Array | Matrix": t.referToSelf(r => a => dt(a, r))
    })
}
)
  , ob = "isZero"
  , yL = ["typed"]
  , wL = j(ob, yL, e => {
    var {typed: t} = e;
    return t(ob, {
        number: J4,
        BigNumber: function(a) {
            return a.isZero()
        },
        Complex: function(a) {
            return a.re === 0 && a.im === 0
        },
        Fraction: function(a) {
            return a.d === 1 && a.n === 0
        },
        Unit: t.referToSelf(r => a => t.find(r, a.valueType())(a.value)),
        "Array | Matrix": t.referToSelf(r => a => dt(a, r))
    })
}
)
  , sb = "isNaN"
  , gL = ["typed"]
  , _L = j(sb, gL, e => {
    var {typed: t} = e;
    return t(sb, {
        number: K4,
        BigNumber: function(a) {
            return a.isNaN()
        },
        Fraction: function(a) {
            return !1
        },
        Complex: function(a) {
            return a.isNaN()
        },
        Unit: function(a) {
            return Number.isNaN(a.value)
        },
        "Array | Matrix": function(a) {
            return dt(a, Number.isNaN)
        }
    })
}
)
  , lb = "typeOf"
  , bL = ["typed"]
  , CL = j(lb, bL, e => {
    var {typed: t} = e;
    return t(lb, {
        any: Bt
    })
}
);
function di(e, t, r) {
    if (r == null)
        return e.eq(t);
    if (e.eq(t))
        return !0;
    if (e.isNaN() || t.isNaN())
        return !1;
    if (e.isFinite() && t.isFinite()) {
        var a = e.minus(t).abs();
        if (a.isZero())
            return !0;
        var n = e.constructor.max(e.abs(), t.abs());
        return a.lte(n.times(r))
    }
    return !1
}
function SL(e, t, r) {
    return ja(e.re, t.re, r) && ja(e.im, t.im, r)
}
var du = j("compareUnits", ["typed"], e => {
    var {typed: t} = e;
    return {
        "Unit, Unit": t.referToSelf(r => (a, n) => {
            if (!a.equalBase(n))
                throw new Error("Cannot compare units with different base");
            return t.find(r, [a.valueType(), n.valueType()])(a.value, n.value)
        }
        )
    }
}
)
  , Bh = "equalScalar"
  , xL = ["typed", "config"]
  , AL = j(Bh, xL, e => {
    var {typed: t, config: r} = e
      , a = du({
        typed: t
    });
    return t(Bh, {
        "boolean, boolean": function(i, o) {
            return i === o
        },
        "number, number": function(i, o) {
            return ja(i, o, r.epsilon)
        },
        "BigNumber, BigNumber": function(i, o) {
            return i.eq(o) || di(i, o, r.epsilon)
        },
        "Fraction, Fraction": function(i, o) {
            return i.equals(o)
        },
        "Complex, Complex": function(i, o) {
            return SL(i, o, r.epsilon)
        }
    }, a)
}
);
j(Bh, ["typed", "config"], e => {
    var {typed: t, config: r} = e;
    return t(Bh, {
        "number, number": function(n, i) {
            return ja(n, i, r.epsilon)
        }
    })
}
);
var EL = "SparseMatrix"
  , kL = ["typed", "equalScalar", "Matrix"]
  , TL = j(EL, kL, e => {
    var {typed: t, equalScalar: r, Matrix: a} = e;
    function n(f, _) {
        if (!(this instanceof n))
            throw new SyntaxError("Constructor must be called with the new operator");
        if (_ && !Wr(_))
            throw new Error("Invalid datatype: " + _);
        if (je(f))
            i(this, f, _);
        else if (f && At(f.index) && At(f.ptr) && At(f.size))
            this._values = f.values,
            this._index = f.index,
            this._ptr = f.ptr,
            this._size = f.size,
            this._datatype = _ || f.datatype;
        else if (At(f))
            o(this, f, _);
        else {
            if (f)
                throw new TypeError("Unsupported type of data (" + Bt(f) + ")");
            this._values = [],
            this._index = [],
            this._ptr = [0],
            this._size = [0, 0],
            this._datatype = _
        }
    }
    function i(f, _, y) {
        _.type === "SparseMatrix" ? (f._values = _._values ? Qe(_._values) : void 0,
        f._index = Qe(_._index),
        f._ptr = Qe(_._ptr),
        f._size = Qe(_._size),
        f._datatype = y || _._datatype) : o(f, _.valueOf(), y || _._datatype)
    }
    function o(f, _, y) {
        f._values = [],
        f._index = [],
        f._ptr = [],
        f._datatype = y;
        var g = _.length
          , m = 0
          , w = r
          , C = 0;
        if (Wr(y) && (w = t.find(r, [y, y]) || r,
        C = t.convert(0, y)),
        g > 0) {
            var b = 0;
            do {
                f._ptr.push(f._index.length);
                for (var x = 0; x < g; x++) {
                    var E = _[x];
                    if (At(E)) {
                        if (b === 0 && m < E.length && (m = E.length),
                        b < E.length) {
                            var k = E[b];
                            w(k, C) || (f._values.push(k),
                            f._index.push(x))
                        }
                    } else
                        b === 0 && m < 1 && (m = 1),
                        w(E, C) || (f._values.push(E),
                        f._index.push(x))
                }
                b++
            } while (b < m)
        }
        f._ptr.push(f._index.length),
        f._size = [g, m]
    }
    n.prototype = new a,
    n.prototype.createSparseMatrix = function(f, _) {
        return new n(f,_)
    }
    ,
    Object.defineProperty(n, "name", {
        value: "SparseMatrix"
    }),
    n.prototype.constructor = n,
    n.prototype.type = "SparseMatrix",
    n.prototype.isSparseMatrix = !0,
    n.prototype.getDataType = function() {
        return Uc(this._values, Bt)
    }
    ,
    n.prototype.storage = function() {
        return "sparse"
    }
    ,
    n.prototype.datatype = function() {
        return this._datatype
    }
    ,
    n.prototype.create = function(f, _) {
        return new n(f,_)
    }
    ,
    n.prototype.density = function() {
        var f = this._size[0]
          , _ = this._size[1];
        return f !== 0 && _ !== 0 ? this._index.length / (f * _) : 0
    }
    ,
    n.prototype.subset = function(f, _, y) {
        if (!this._values)
            throw new Error("Cannot invoke subset on a Pattern only matrix");
        switch (arguments.length) {
        case 1:
            return s(this, f);
        case 2:
        case 3:
            return l(this, f, _, y);
        default:
            throw new SyntaxError("Wrong number of arguments")
        }
    }
    ;
    function s(f, _) {
        if (!Gm(_))
            throw new TypeError("Invalid index");
        var y = _.isScalar();
        if (y)
            return f.get(_.min());
        var g = _.size();
        if (g.length !== f._size.length)
            throw new ut(g.length,f._size.length);
        var m, w, C, b, x = _.min(), E = _.max();
        for (m = 0,
        w = f._size.length; m < w; m++)
            Ot(x[m], f._size[m]),
            Ot(E[m], f._size[m]);
        var k = f._values
          , A = f._index
          , I = f._ptr
          , T = _.dimension(0)
          , F = _.dimension(1)
          , R = []
          , O = [];
        T.forEach(function(D, V) {
            O[D] = V[0],
            R[D] = !0
        });
        var M = k ? [] : void 0
          , N = []
          , B = [];
        return F.forEach(function(D) {
            for (B.push(N.length),
            C = I[D],
            b = I[D + 1]; C < b; C++)
                m = A[C],
                R[m] === !0 && (N.push(O[m]),
                M && M.push(k[C]))
        }),
        B.push(N.length),
        new n({
            values: M,
            index: N,
            ptr: B,
            size: g,
            datatype: f._datatype
        })
    }
    function l(f, _, y, g) {
        if (!_ || _.isIndex !== !0)
            throw new TypeError("Invalid index");
        var m = _.size(), w = _.isScalar(), C;
        if (je(y) ? (C = y.size(),
        y = y.toArray()) : C = it(y),
        w) {
            if (C.length !== 0)
                throw new TypeError("Scalar expected");
            f.set(_.min(), y, g)
        } else {
            if (m.length !== 1 && m.length !== 2)
                throw new ut(m.length,f._size.length,"<");
            if (C.length < m.length) {
                for (var b = 0, x = 0; m[b] === 1 && C[b] === 1; )
                    b++;
                for (; m[b] === 1; )
                    x++,
                    b++;
                y = FE(y, m.length, x, C)
            }
            if (!Cs(m, C))
                throw new ut(m,C,">");
            if (m.length === 1) {
                var E = _.dimension(0);
                E.forEach(function(I, T) {
                    Ot(I),
                    f.set([I, 0], y[T[0]], g)
                })
            } else {
                var k = _.dimension(0)
                  , A = _.dimension(1);
                k.forEach(function(I, T) {
                    Ot(I),
                    A.forEach(function(F, R) {
                        Ot(F),
                        f.set([I, F], y[T[0]][R[0]], g)
                    })
                })
            }
        }
        return f
    }
    n.prototype.get = function(f) {
        if (!At(f))
            throw new TypeError("Array expected");
        if (f.length !== this._size.length)
            throw new ut(f.length,this._size.length);
        if (!this._values)
            throw new Error("Cannot invoke get on a Pattern only matrix");
        var _ = f[0]
          , y = f[1];
        Ot(_, this._size[0]),
        Ot(y, this._size[1]);
        var g = u(_, this._ptr[y], this._ptr[y + 1], this._index);
        return g < this._ptr[y + 1] && this._index[g] === _ ? this._values[g] : 0
    }
    ,
    n.prototype.set = function(f, _, y) {
        if (!At(f))
            throw new TypeError("Array expected");
        if (f.length !== this._size.length)
            throw new ut(f.length,this._size.length);
        if (!this._values)
            throw new Error("Cannot invoke set on a Pattern only matrix");
        var g = f[0]
          , m = f[1]
          , w = this._size[0]
          , C = this._size[1]
          , b = r
          , x = 0;
        Wr(this._datatype) && (b = t.find(r, [this._datatype, this._datatype]) || r,
        x = t.convert(0, this._datatype)),
        (g > w - 1 || m > C - 1) && (v(this, Math.max(g + 1, w), Math.max(m + 1, C), y),
        w = this._size[0],
        C = this._size[1]),
        Ot(g, w),
        Ot(m, C);
        var E = u(g, this._ptr[m], this._ptr[m + 1], this._index);
        return E < this._ptr[m + 1] && this._index[E] === g ? b(_, x) ? c(E, m, this._values, this._index, this._ptr) : this._values[E] = _ : b(_, x) || d(E, g, m, _, this._values, this._index, this._ptr),
        this
    }
    ;
    function u(f, _, y, g) {
        if (y - _ === 0)
            return y;
        for (var m = _; m < y; m++)
            if (g[m] === f)
                return m;
        return _
    }
    function c(f, _, y, g, m) {
        y.splice(f, 1),
        g.splice(f, 1);
        for (var w = _ + 1; w < m.length; w++)
            m[w]--
    }
    function d(f, _, y, g, m, w, C) {
        m.splice(f, 0, g),
        w.splice(f, 0, _);
        for (var b = y + 1; b < C.length; b++)
            C[b]++
    }
    n.prototype.resize = function(f, _, y) {
        if (!Fo(f))
            throw new TypeError("Array or Matrix expected");
        var g = f.valueOf().map(w => Array.isArray(w) && w.length === 1 ? w[0] : w);
        if (g.length !== 2)
            throw new Error("Only two dimensions matrix are supported");
        g.forEach(function(w) {
            if (!lt(w) || !Be(w) || w < 0)
                throw new TypeError("Invalid size, must contain positive integers (size: " + st(g) + ")")
        });
        var m = y ? this.clone() : this;
        return v(m, g[0], g[1], _)
    }
    ;
    function v(f, _, y, g) {
        var m = g || 0
          , w = r
          , C = 0;
        Wr(f._datatype) && (w = t.find(r, [f._datatype, f._datatype]) || r,
        C = t.convert(0, f._datatype),
        m = t.convert(m, f._datatype));
        var b = !w(m, C), x = f._size[0], E = f._size[1], k, A, I;
        if (y > E) {
            for (A = E; A < y; A++)
                if (f._ptr[A] = f._values.length,
                b)
                    for (k = 0; k < x; k++)
                        f._values.push(m),
                        f._index.push(k);
            f._ptr[y] = f._values.length
        } else
            y < E && (f._ptr.splice(y + 1, E - y),
            f._values.splice(f._ptr[y], f._values.length),
            f._index.splice(f._ptr[y], f._index.length));
        if (E = y,
        _ > x) {
            if (b) {
                var T = 0;
                for (A = 0; A < E; A++) {
                    f._ptr[A] = f._ptr[A] + T,
                    I = f._ptr[A + 1] + T;
                    var F = 0;
                    for (k = x; k < _; k++,
                    F++)
                        f._values.splice(I + F, 0, m),
                        f._index.splice(I + F, 0, k),
                        T++
                }
                f._ptr[E] = f._values.length
            }
        } else if (_ < x) {
            var R = 0;
            for (A = 0; A < E; A++) {
                f._ptr[A] = f._ptr[A] - R;
                var O = f._ptr[A]
                  , M = f._ptr[A + 1] - R;
                for (I = O; I < M; I++)
                    k = f._index[I],
                    k > _ - 1 && (f._values.splice(I, 1),
                    f._index.splice(I, 1),
                    R++)
            }
            f._ptr[A] = f._values.length
        }
        return f._size[0] = _,
        f._size[1] = y,
        f
    }
    n.prototype.reshape = function(f, _) {
        if (!At(f))
            throw new TypeError("Array expected");
        if (f.length !== 2)
            throw new Error("Sparse matrices can only be reshaped in two dimensions");
        f.forEach(function(D) {
            if (!lt(D) || !Be(D) || D <= -2 || D === 0)
                throw new TypeError("Invalid size, must contain positive integers or -1 (size: " + st(f) + ")")
        });
        var y = this._size[0] * this._size[1];
        f = i2(f, y);
        var g = f[0] * f[1];
        if (y !== g)
            throw new Error("Reshaping sparse matrix will result in the wrong number of elements");
        var m = _ ? this.clone() : this;
        if (this._size[0] === f[0] && this._size[1] === f[1])
            return m;
        for (var w = [], C = 0; C < m._ptr.length; C++)
            for (var b = 0; b < m._ptr[C + 1] - m._ptr[C]; b++)
                w.push(C);
        for (var x = m._values.slice(), E = m._index.slice(), k = 0; k < m._index.length; k++) {
            var A = E[k]
              , I = w[k]
              , T = A * m._size[1] + I;
            w[k] = T % f[1],
            E[k] = Math.floor(T / f[1])
        }
        m._values.length = 0,
        m._index.length = 0,
        m._ptr.length = f[1] + 1,
        m._size = f.slice();
        for (var F = 0; F < m._ptr.length; F++)
            m._ptr[F] = 0;
        for (var R = 0; R < x.length; R++) {
            var O = E[R]
              , M = w[R]
              , N = x[R]
              , B = u(O, m._ptr[M], m._ptr[M + 1], m._index);
            d(B, O, M, N, m._values, m._index, m._ptr)
        }
        return m
    }
    ,
    n.prototype.clone = function() {
        var f = new n({
            values: this._values ? Qe(this._values) : void 0,
            index: Qe(this._index),
            ptr: Qe(this._ptr),
            size: Qe(this._size),
            datatype: this._datatype
        });
        return f
    }
    ,
    n.prototype.size = function() {
        return this._size.slice(0)
    }
    ,
    n.prototype.map = function(f, _) {
        if (!this._values)
            throw new Error("Cannot invoke map on a Pattern only matrix");
        var y = this
          , g = this._size[0]
          , m = this._size[1]
          , w = t4(f)
          , C = function(x, E, k) {
            return w === 1 ? f(x) : w === 2 ? f(x, [E, k]) : f(x, [E, k], y)
        };
        return h(this, 0, g - 1, 0, m - 1, C, _)
    }
    ;
    function h(f, _, y, g, m, w, C) {
        var b = []
          , x = []
          , E = []
          , k = r
          , A = 0;
        Wr(f._datatype) && (k = t.find(r, [f._datatype, f._datatype]) || r,
        A = t.convert(0, f._datatype));
        for (var I = function(G, Z, ie) {
            G = w(G, Z, ie),
            k(G, A) || (b.push(G),
            x.push(Z))
        }, T = g; T <= m; T++) {
            E.push(b.length);
            var F = f._ptr[T]
              , R = f._ptr[T + 1];
            if (C)
                for (var O = F; O < R; O++) {
                    var M = f._index[O];
                    M >= _ && M <= y && I(f._values[O], M - _, T - g)
                }
            else {
                for (var N = {}, B = F; B < R; B++) {
                    var D = f._index[B];
                    N[D] = f._values[B]
                }
                for (var V = _; V <= y; V++) {
                    var J = V in N ? N[V] : 0;
                    I(J, V - _, T - g)
                }
            }
        }
        return E.push(b.length),
        new n({
            values: b,
            index: x,
            ptr: E,
            size: [y - _ + 1, m - g + 1]
        })
    }
    n.prototype.forEach = function(f, _) {
        if (!this._values)
            throw new Error("Cannot invoke forEach on a Pattern only matrix");
        for (var y = this, g = this._size[0], m = this._size[1], w = 0; w < m; w++) {
            var C = this._ptr[w]
              , b = this._ptr[w + 1];
            if (_)
                for (var x = C; x < b; x++) {
                    var E = this._index[x];
                    f(this._values[x], [E, w], y)
                }
            else {
                for (var k = {}, A = C; A < b; A++) {
                    var I = this._index[A];
                    k[I] = this._values[A]
                }
                for (var T = 0; T < g; T++) {
                    var F = T in k ? k[T] : 0;
                    f(F, [T, w], y)
                }
            }
        }
    }
    ,
    n.prototype[Symbol.iterator] = function*() {
        if (!this._values)
            throw new Error("Cannot iterate a Pattern only matrix");
        for (var f = this._size[1], _ = 0; _ < f; _++)
            for (var y = this._ptr[_], g = this._ptr[_ + 1], m = y; m < g; m++) {
                var w = this._index[m];
                yield{
                    value: this._values[m],
                    index: [w, _]
                }
            }
    }
    ,
    n.prototype.toArray = function() {
        return p(this._values, this._index, this._ptr, this._size, !0)
    }
    ,
    n.prototype.valueOf = function() {
        return p(this._values, this._index, this._ptr, this._size, !1)
    }
    ;
    function p(f, _, y, g, m) {
        var w = g[0], C = g[1], b = [], x, E;
        for (x = 0; x < w; x++)
            for (b[x] = [],
            E = 0; E < C; E++)
                b[x][E] = 0;
        for (E = 0; E < C; E++)
            for (var k = y[E], A = y[E + 1], I = k; I < A; I++)
                x = _[I],
                b[x][E] = f ? m ? Qe(f[I]) : f[I] : 1;
        return b
    }
    return n.prototype.format = function(f) {
        for (var _ = this._size[0], y = this._size[1], g = this.density(), m = "Sparse Matrix [" + st(_, f) + " x " + st(y, f) + "] density: " + st(g, f) + `
`, w = 0; w < y; w++)
            for (var C = this._ptr[w], b = this._ptr[w + 1], x = C; x < b; x++) {
                var E = this._index[x];
                m += `
    (` + st(E, f) + ", " + st(w, f) + ") ==> " + (this._values ? st(this._values[x], f) : "X")
            }
        return m
    }
    ,
    n.prototype.toString = function() {
        return st(this.toArray())
    }
    ,
    n.prototype.toJSON = function() {
        return {
            mathjs: "SparseMatrix",
            values: this._values,
            index: this._index,
            ptr: this._ptr,
            size: this._size,
            datatype: this._datatype
        }
    }
    ,
    n.prototype.diagonal = function(f) {
        if (f) {
            if (vt(f) && (f = f.toNumber()),
            !lt(f) || !Be(f))
                throw new TypeError("The parameter k must be an integer number")
        } else
            f = 0;
        var _ = f > 0 ? f : 0
          , y = f < 0 ? -f : 0
          , g = this._size[0]
          , m = this._size[1]
          , w = Math.min(g - y, m - _)
          , C = []
          , b = []
          , x = [];
        x[0] = 0;
        for (var E = _; E < m && C.length < w; E++)
            for (var k = this._ptr[E], A = this._ptr[E + 1], I = k; I < A; I++) {
                var T = this._index[I];
                if (T === E - _ + y) {
                    C.push(this._values[I]),
                    b[C.length - 1] = T - y;
                    break
                }
            }
        return x.push(C.length),
        new n({
            values: C,
            index: b,
            ptr: x,
            size: [w, 1]
        })
    }
    ,
    n.fromJSON = function(f) {
        return new n(f)
    }
    ,
    n.diagonal = function(f, _, y, g, m) {
        if (!At(f))
            throw new TypeError("Array expected, size parameter");
        if (f.length !== 2)
            throw new Error("Only two dimensions matrix are supported");
        if (f = f.map(function(D) {
            if (vt(D) && (D = D.toNumber()),
            !lt(D) || !Be(D) || D < 1)
                throw new Error("Size values must be positive integers");
            return D
        }),
        y) {
            if (vt(y) && (y = y.toNumber()),
            !lt(y) || !Be(y))
                throw new TypeError("The parameter k must be an integer number")
        } else
            y = 0;
        var w = r
          , C = 0;
        Wr(m) && (w = t.find(r, [m, m]) || r,
        C = t.convert(0, m));
        var b = y > 0 ? y : 0, x = y < 0 ? -y : 0, E = f[0], k = f[1], A = Math.min(E - x, k - b), I;
        if (At(_)) {
            if (_.length !== A)
                throw new Error("Invalid value array length");
            I = function(V) {
                return _[V]
            }
        } else if (je(_)) {
            var T = _.size();
            if (T.length !== 1 || T[0] !== A)
                throw new Error("Invalid matrix length");
            I = function(V) {
                return _.get([V])
            }
        } else
            I = function() {
                return _
            }
            ;
        for (var F = [], R = [], O = [], M = 0; M < k; M++) {
            O.push(F.length);
            var N = M - b;
            if (N >= 0 && N < A) {
                var B = I(N);
                w(B, C) || (R.push(N + x),
                F.push(B))
            }
        }
        return O.push(F.length),
        new n({
            values: F,
            index: R,
            ptr: O,
            size: [E, k]
        })
    }
    ,
    n.prototype.swapRows = function(f, _) {
        if (!lt(f) || !Be(f) || !lt(_) || !Be(_))
            throw new Error("Row index must be positive integers");
        if (this._size.length !== 2)
            throw new Error("Only two dimensional matrix is supported");
        return Ot(f, this._size[0]),
        Ot(_, this._size[0]),
        n._swapRows(f, _, this._size[1], this._values, this._index, this._ptr),
        this
    }
    ,
    n._forEachRow = function(f, _, y, g, m) {
        for (var w = g[f], C = g[f + 1], b = w; b < C; b++)
            m(y[b], _[b])
    }
    ,
    n._swapRows = function(f, _, y, g, m, w) {
        for (var C = 0; C < y; C++) {
            var b = w[C]
              , x = w[C + 1]
              , E = u(f, b, x, m)
              , k = u(_, b, x, m);
            if (E < x && k < x && m[E] === f && m[k] === _) {
                if (g) {
                    var A = g[E];
                    g[E] = g[k],
                    g[k] = A
                }
                continue
            }
            if (E < x && m[E] === f && (k >= x || m[k] !== _)) {
                var I = g ? g[E] : void 0;
                m.splice(k, 0, _),
                g && g.splice(k, 0, I),
                m.splice(k <= E ? E + 1 : E, 1),
                g && g.splice(k <= E ? E + 1 : E, 1);
                continue
            }
            if (k < x && m[k] === _ && (E >= x || m[E] !== f)) {
                var T = g ? g[k] : void 0;
                m.splice(E, 0, f),
                g && g.splice(E, 0, T),
                m.splice(E <= k ? k + 1 : k, 1),
                g && g.splice(E <= k ? k + 1 : k, 1)
            }
        }
    }
    ,
    n
}
, {
    isClass: !0
})
  , NL = "number"
  , ML = ["typed"];
function IL(e) {
    var t = e.match(/(0[box])([0-9a-fA-F]*)\.([0-9a-fA-F]*)/);
    if (t) {
        var r = {
            "0b": 2,
            "0o": 8,
            "0x": 16
        }[t[1]]
          , a = t[2]
          , n = t[3];
        return {
            input: e,
            radix: r,
            integerPart: a,
            fractionalPart: n
        }
    } else
        return null
}
function DL(e) {
    for (var t = parseInt(e.integerPart, e.radix), r = 0, a = 0; a < e.fractionalPart.length; a++) {
        var n = parseInt(e.fractionalPart[a], e.radix);
        r += n / Math.pow(e.radix, a + 1)
    }
    var i = t + r;
    if (isNaN(i))
        throw new SyntaxError('String "' + e.input + '" is no valid number');
    return i
}
var UL = j(NL, ML, e => {
    var {typed: t} = e
      , r = t("number", {
        "": function() {
            return 0
        },
        number: function(n) {
            return n
        },
        string: function(n) {
            if (n === "NaN")
                return NaN;
            var i = IL(n);
            if (i)
                return DL(i);
            var o = 0
              , s = n.match(/(0[box][0-9a-fA-F]*)i([0-9]*)/);
            s && (o = Number(s[2]),
            n = s[1]);
            var l = Number(n);
            if (isNaN(l))
                throw new SyntaxError('String "' + n + '" is no valid number');
            if (s) {
                if (l > 2 ** o - 1)
                    throw new SyntaxError('String "'.concat(n, '" is out of range'));
                l >= 2 ** (o - 1) && (l = l - 2 ** o)
            }
            return l
        },
        BigNumber: function(n) {
            return n.toNumber()
        },
        Fraction: function(n) {
            return n.valueOf()
        },
        Unit: t.referToSelf(a => n => {
            var i = n.clone();
            return i.value = a(n.value),
            i
        }
        ),
        null: function(n) {
            return 0
        },
        "Unit, string | Unit": function(n, i) {
            return n.toNumber(i)
        },
        "Array | Matrix": t.referToSelf(a => n => dt(n, a))
    });
    return r.fromJSON = function(a) {
        return parseFloat(a.value)
    }
    ,
    r
}
)
  , ub = "string"
  , FL = ["typed"]
  , OL = j(ub, FL, e => {
    var {typed: t} = e;
    return t(ub, {
        "": function() {
            return ""
        },
        number: fs,
        null: function(a) {
            return "null"
        },
        boolean: function(a) {
            return a + ""
        },
        string: function(a) {
            return a
        },
        "Array | Matrix": t.referToSelf(r => a => dt(a, r)),
        any: function(a) {
            return String(a)
        }
    })
}
)
  , cb = "boolean"
  , PL = ["typed"]
  , BL = j(cb, PL, e => {
    var {typed: t} = e;
    return t(cb, {
        "": function() {
            return !1
        },
        boolean: function(a) {
            return a
        },
        number: function(a) {
            return !!a
        },
        null: function(a) {
            return !1
        },
        BigNumber: function(a) {
            return !a.isZero()
        },
        string: function(a) {
            var n = a.toLowerCase();
            if (n === "true")
                return !0;
            if (n === "false")
                return !1;
            var i = Number(a);
            if (a !== "" && !isNaN(i))
                return !!i;
            throw new Error('Cannot convert "' + a + '" to a boolean')
        },
        "Array | Matrix": t.referToSelf(r => a => dt(a, r))
    })
}
)
  , RL = "bignumber"
  , LL = ["typed", "BigNumber"]
  , qL = j(RL, LL, e => {
    var {typed: t, BigNumber: r} = e;
    return t("bignumber", {
        "": function() {
            return new r(0)
        },
        number: function(n) {
            return new r(n + "")
        },
        string: function(n) {
            var i = n.match(/(0[box][0-9a-fA-F]*)i([0-9]*)/);
            if (i) {
                var o = i[2]
                  , s = r(i[1])
                  , l = new r(2).pow(Number(o));
                if (s.gt(l.sub(1)))
                    throw new SyntaxError('String "'.concat(n, '" is out of range'));
                var u = new r(2).pow(Number(o) - 1);
                return s.gte(u) ? s.sub(l) : s
            }
            return new r(n)
        },
        BigNumber: function(n) {
            return n
        },
        Unit: t.referToSelf(a => n => {
            var i = n.clone();
            return i.value = a(n.value),
            i
        }
        ),
        Fraction: function(n) {
            return new r(n.n).div(n.d).times(n.s)
        },
        null: function(n) {
            return new r(0)
        },
        "Array | Matrix": t.referToSelf(a => n => dt(n, a))
    })
}
)
  , VL = "complex"
  , $L = ["typed", "Complex"]
  , zL = j(VL, $L, e => {
    var {typed: t, Complex: r} = e;
    return t("complex", {
        "": function() {
            return r.ZERO
        },
        number: function(n) {
            return new r(n,0)
        },
        "number, number": function(n, i) {
            return new r(n,i)
        },
        "BigNumber, BigNumber": function(n, i) {
            return new r(n.toNumber(),i.toNumber())
        },
        Fraction: function(n) {
            return new r(n.valueOf(),0)
        },
        Complex: function(n) {
            return n.clone()
        },
        string: function(n) {
            return r(n)
        },
        null: function(n) {
            return r(0)
        },
        Object: function(n) {
            if ("re"in n && "im"in n)
                return new r(n.re,n.im);
            if ("r"in n && "phi"in n || "abs"in n && "arg"in n)
                return new r(n);
            throw new Error("Expected object with properties (re and im) or (r and phi) or (abs and arg)")
        },
        "Array | Matrix": t.referToSelf(a => n => dt(n, a))
    })
}
)
  , GL = "fraction"
  , jL = ["typed", "Fraction"]
  , HL = j(GL, jL, e => {
    var {typed: t, Fraction: r} = e;
    return t("fraction", {
        number: function(n) {
            if (!isFinite(n) || isNaN(n))
                throw new Error(n + " cannot be represented as a fraction");
            return new r(n)
        },
        string: function(n) {
            return new r(n)
        },
        "number, number": function(n, i) {
            return new r(n,i)
        },
        null: function(n) {
            return new r(0)
        },
        BigNumber: function(n) {
            return new r(n.toString())
        },
        Fraction: function(n) {
            return n
        },
        Unit: t.referToSelf(a => n => {
            var i = n.clone();
            return i.value = a(n.value),
            i
        }
        ),
        Object: function(n) {
            return new r(n)
        },
        "Array | Matrix": t.referToSelf(a => n => dt(n, a))
    })
}
)
  , db = "matrix"
  , WL = ["typed", "Matrix", "DenseMatrix", "SparseMatrix"]
  , YL = j(db, WL, e => {
    var {typed: t, Matrix: r, DenseMatrix: a, SparseMatrix: n} = e;
    return t(db, {
        "": function() {
            return i([])
        },
        string: function(s) {
            return i([], s)
        },
        "string, string": function(s, l) {
            return i([], s, l)
        },
        Array: function(s) {
            return i(s)
        },
        Matrix: function(s) {
            return i(s, s.storage())
        },
        "Array | Matrix, string": i,
        "Array | Matrix, string, string": i
    });
    function i(o, s, l) {
        if (s === "dense" || s === "default" || s === void 0)
            return new a(o,l);
        if (s === "sparse")
            return new n(o,l);
        throw new TypeError("Unknown matrix type " + JSON.stringify(s) + ".")
    }
}
)
  , vb = "matrixFromFunction"
  , JL = ["typed", "matrix", "isZero"]
  , KL = j(vb, JL, e => {
    var {typed: t, matrix: r, isZero: a} = e;
    return t(vb, {
        "Array | Matrix, function, string, string": function(o, s, l, u) {
            return n(o, s, l, u)
        },
        "Array | Matrix, function, string": function(o, s, l) {
            return n(o, s, l)
        },
        "Matrix, function": function(o, s) {
            return n(o, s, "dense")
        },
        "Array, function": function(o, s) {
            return n(o, s, "dense").toArray()
        },
        "Array | Matrix, string, function": function(o, s, l) {
            return n(o, l, s)
        },
        "Array | Matrix, string, string, function": function(o, s, l, u) {
            return n(o, u, s, l)
        }
    });
    function n(i, o, s, l) {
        var u;
        return l !== void 0 ? u = r(s, l) : u = r(s),
        u.resize(i),
        u.forEach(function(c, d) {
            var v = o(d);
            a(v) || u.set(d, v)
        }),
        u
    }
}
)
  , hb = "matrixFromRows"
  , QL = ["typed", "matrix", "flatten", "size"]
  , ZL = j(hb, QL, e => {
    var {typed: t, matrix: r, flatten: a, size: n} = e;
    return t(hb, {
        "...Array": function(l) {
            return i(l)
        },
        "...Matrix": function(l) {
            return r(i(l.map(u => u.toArray())))
        }
    });
    function i(s) {
        if (s.length === 0)
            throw new TypeError("At least one row is needed to construct a matrix.");
        var l = o(s[0])
          , u = [];
        for (var c of s) {
            var d = o(c);
            if (d !== l)
                throw new TypeError("The vectors had different length: " + (l | 0) + " ≠ " + (d | 0));
            u.push(a(c))
        }
        return u
    }
    function o(s) {
        var l = n(s);
        if (l.length === 1)
            return l[0];
        if (l.length === 2) {
            if (l[0] === 1)
                return l[1];
            if (l[1] === 1)
                return l[0];
            throw new TypeError("At least one of the arguments is not a vector.")
        } else
            throw new TypeError("Only one- or two-dimensional vectors are supported.")
    }
}
)
  , mb = "matrixFromColumns"
  , XL = ["typed", "matrix", "flatten", "size"]
  , eq = j(mb, XL, e => {
    var {typed: t, matrix: r, flatten: a, size: n} = e;
    return t(mb, {
        "...Array": function(l) {
            return i(l)
        },
        "...Matrix": function(l) {
            return r(i(l.map(u => u.toArray())))
        }
    });
    function i(s) {
        if (s.length === 0)
            throw new TypeError("At least one column is needed to construct a matrix.");
        for (var l = o(s[0]), u = [], c = 0; c < l; c++)
            u[c] = [];
        for (var d of s) {
            var v = o(d);
            if (v !== l)
                throw new TypeError("The vectors had different length: " + (l | 0) + " ≠ " + (v | 0));
            for (var h = a(d), p = 0; p < l; p++)
                u[p].push(h[p])
        }
        return u
    }
    function o(s) {
        var l = n(s);
        if (l.length === 1)
            return l[0];
        if (l.length === 2) {
            if (l[0] === 1)
                return l[1];
            if (l[1] === 1)
                return l[0];
            throw new TypeError("At least one of the arguments is not a vector.")
        } else
            throw new TypeError("Only one- or two-dimensional vectors are supported.")
    }
}
)
  , fb = "splitUnit"
  , tq = ["typed"]
  , rq = j(fb, tq, e => {
    var {typed: t} = e;
    return t(fb, {
        "Unit, Array": function(a, n) {
            return a.splitUnit(n)
        }
    })
}
)
  , pb = "unaryMinus"
  , aq = ["typed"]
  , nq = j(pb, aq, e => {
    var {typed: t} = e;
    return t(pb, {
        number: o4,
        "Complex | BigNumber | Fraction": r => r.neg(),
        Unit: t.referToSelf(r => a => {
            var n = a.clone();
            return n.value = t.find(r, n.valueType())(a.value),
            n
        }
        ),
        "Array | Matrix": t.referToSelf(r => a => dt(a, r))
    })
}
)
  , yb = "unaryPlus"
  , iq = ["typed", "config", "BigNumber"]
  , oq = j(yb, iq, e => {
    var {typed: t, config: r, BigNumber: a} = e;
    return t(yb, {
        number: s4,
        Complex: function(i) {
            return i
        },
        BigNumber: function(i) {
            return i
        },
        Fraction: function(i) {
            return i
        },
        Unit: function(i) {
            return i.clone()
        },
        "Array | Matrix": t.referToSelf(n => i => dt(i, n)),
        "boolean | string": function(i) {
            return r.number === "BigNumber" ? new a(+i) : +i
        }
    })
}
)
  , wb = "abs"
  , sq = ["typed"]
  , lq = j(wb, sq, e => {
    var {typed: t} = e;
    return t(wb, {
        number: a4,
        "Complex | BigNumber | Fraction | Unit": r => r.abs(),
        "Array | Matrix": t.referToSelf(r => a => dt(a, r))
    })
}
)
  , gb = "apply"
  , uq = ["typed", "isInteger"]
  , d2 = j(gb, uq, e => {
    var {typed: t, isInteger: r} = e;
    return t(gb, {
        "Array | Matrix, number | BigNumber, function": function(n, i, o) {
            if (!r(i))
                throw new TypeError("Integer number expected for dimension");
            var s = Array.isArray(n) ? it(n) : n.size();
            if (i < 0 || i >= s.length)
                throw new zn(i,s.length);
            return je(n) ? n.create(Rh(n.valueOf(), i, o)) : Rh(n, i, o)
        }
    })
}
);
function Rh(e, t, r) {
    var a, n, i;
    if (t <= 0)
        if (Array.isArray(e[0])) {
            for (i = cq(e),
            n = [],
            a = 0; a < i.length; a++)
                n[a] = Rh(i[a], t - 1, r);
            return n
        } else
            return r(e);
    else {
        for (n = [],
        a = 0; a < e.length; a++)
            n[a] = Rh(e[a], t - 1, r);
        return n
    }
}
function cq(e) {
    var t = e.length, r = e[0].length, a, n, i = [];
    for (n = 0; n < r; n++) {
        var o = [];
        for (a = 0; a < t; a++)
            o.push(e[a][n]);
        i.push(o)
    }
    return i
}
var _b = "addScalar"
  , dq = ["typed"]
  , vq = j(_b, dq, e => {
    var {typed: t} = e;
    return t(_b, {
        "number, number": n4,
        "Complex, Complex": function(a, n) {
            return a.add(n)
        },
        "BigNumber, BigNumber": function(a, n) {
            return a.plus(n)
        },
        "Fraction, Fraction": function(a, n) {
            return a.add(n)
        },
        "Unit, Unit": t.referToSelf(r => (a, n) => {
            if (a.value === null || a.value === void 0)
                throw new Error("Parameter x contains a unit with undefined value");
            if (n.value === null || n.value === void 0)
                throw new Error("Parameter y contains a unit with undefined value");
            if (!a.equalBase(n))
                throw new Error("Units do not match");
            var i = a.clone();
            return i.value = t.find(r, [i.valueType(), n.valueType()])(i.value, n.value),
            i.fixPrefix = !1,
            i
        }
        )
    })
}
)
  , bb = "cbrt"
  , hq = ["config", "typed", "isNegative", "unaryMinus", "matrix", "Complex", "BigNumber", "Fraction"]
  , mq = j(bb, hq, e => {
    var {config: t, typed: r, isNegative: a, unaryMinus: n, matrix: i, Complex: o, BigNumber: s, Fraction: l} = e;
    return r(bb, {
        number: Ku,
        Complex: u,
        "Complex, boolean": u,
        BigNumber: function(v) {
            return v.cbrt()
        },
        Unit: c
    });
    function u(d, v) {
        var h = d.arg() / 3
          , p = d.abs()
          , f = new o(Ku(p),0).mul(new o(0,h).exp());
        if (v) {
            var _ = [f, new o(Ku(p),0).mul(new o(0,h + Math.PI * 2 / 3).exp()), new o(Ku(p),0).mul(new o(0,h - Math.PI * 2 / 3).exp())];
            return t.matrix === "Array" ? _ : i(_)
        } else
            return f
    }
    function c(d) {
        if (d.value && Oi(d.value)) {
            var v = d.clone();
            return v.value = 1,
            v = v.pow(1 / 3),
            v.value = u(d.value),
            v
        } else {
            var h = a(d.value);
            h && (d.value = n(d.value));
            var p;
            vt(d.value) ? p = new s(1).div(3) : ed(d.value) ? p = new l(1,3) : p = 1 / 3;
            var f = d.pow(p);
            return h && (f.value = n(f.value)),
            f
        }
    }
}
)
  , fq = "matAlgo11xS0s"
  , pq = ["typed", "equalScalar"]
  , Lr = j(fq, pq, e => {
    var {typed: t, equalScalar: r} = e;
    return function(n, i, o, s) {
        var l = n._values
          , u = n._index
          , c = n._ptr
          , d = n._size
          , v = n._datatype;
        if (!l)
            throw new Error("Cannot perform operation on Pattern Sparse Matrix and Scalar value");
        var h = d[0], p = d[1], f, _ = r, y = 0, g = o;
        typeof v == "string" && (f = v,
        _ = t.find(r, [f, f]),
        y = t.convert(0, f),
        i = t.convert(i, f),
        g = t.find(o, [f, f]));
        for (var m = [], w = [], C = [], b = 0; b < p; b++) {
            C[b] = w.length;
            for (var x = c[b], E = c[b + 1], k = x; k < E; k++) {
                var A = u[k]
                  , I = s ? g(i, l[k]) : g(l[k], i);
                _(I, y) || (w.push(A),
                m.push(I))
            }
        }
        return C[p] = w.length,
        n.createSparseMatrix({
            values: m,
            index: w,
            ptr: C,
            size: [h, p],
            datatype: f
        })
    }
}
)
  , yq = "matAlgo12xSfs"
  , wq = ["typed", "DenseMatrix"]
  , Sr = j(yq, wq, e => {
    var {typed: t, DenseMatrix: r} = e;
    return function(n, i, o, s) {
        var l = n._values
          , u = n._index
          , c = n._ptr
          , d = n._size
          , v = n._datatype;
        if (!l)
            throw new Error("Cannot perform operation on Pattern Sparse Matrix and Scalar value");
        var h = d[0], p = d[1], f, _ = o;
        typeof v == "string" && (f = v,
        i = t.convert(i, f),
        _ = t.find(o, [f, f]));
        for (var y = [], g = [], m = [], w = 0; w < p; w++) {
            for (var C = w + 1, b = c[w], x = c[w + 1], E = b; E < x; E++) {
                var k = u[E];
                g[k] = l[E],
                m[k] = C
            }
            for (var A = 0; A < h; A++)
                w === 0 && (y[A] = []),
                m[A] === C ? y[A][w] = s ? _(i, g[A]) : _(g[A], i) : y[A][w] = s ? _(i, 0) : _(0, i)
        }
        return new r({
            data: y,
            size: [h, p],
            datatype: f
        })
    }
}
)
  , gq = "matAlgo14xDs"
  , _q = ["typed"]
  , jn = j(gq, _q, e => {
    var {typed: t} = e;
    return function(n, i, o, s) {
        var l = n._data, u = n._size, c = n._datatype, d, v = o;
        typeof c == "string" && (d = c,
        i = t.convert(i, d),
        v = t.find(o, [d, d]));
        var h = u.length > 0 ? r(v, 0, u, u[0], l, i, s) : [];
        return n.createDenseMatrix({
            data: h,
            size: Qe(u),
            datatype: d
        })
    }
    ;
    function r(a, n, i, o, s, l, u) {
        var c = [];
        if (n === i.length - 1)
            for (var d = 0; d < o; d++)
                c[d] = u ? a(l, s[d]) : a(s[d], l);
        else
            for (var v = 0; v < o; v++)
                c[v] = r(a, n + 1, i, i[n + 1], s[v], l, u);
        return c
    }
}
)
  , fw = "ceil"
  , bq = ["typed", "config", "round", "matrix", "equalScalar", "zeros", "DenseMatrix"]
  , Cq = j(fw, ["typed", "config", "round"], e => {
    var {typed: t, config: r, round: a} = e;
    return t(fw, {
        number: function(i) {
            return ja(i, a(i), r.epsilon) ? a(i) : Math.ceil(i)
        },
        "number, number": function(i, o) {
            if (ja(i, a(i, o), r.epsilon))
                return a(i, o);
            var [s,l] = "".concat(i, "e").split("e")
              , u = Math.ceil(Number("".concat(s, "e").concat(Number(l) + o)));
            return [s,l] = "".concat(u, "e").split("e"),
            Number("".concat(s, "e").concat(Number(l) - o))
        }
    })
}
)
  , Sq = j(fw, bq, e => {
    var {typed: t, config: r, round: a, matrix: n, equalScalar: i, zeros: o, DenseMatrix: s} = e
      , l = Lr({
        typed: t,
        equalScalar: i
    })
      , u = Sr({
        typed: t,
        DenseMatrix: s
    })
      , c = jn({
        typed: t
    })
      , d = Cq({
        typed: t,
        config: r,
        round: a
    });
    return t("ceil", {
        number: d.signatures.number,
        "number,number": d.signatures["number,number"],
        Complex: function(h) {
            return h.ceil()
        },
        "Complex, number": function(h, p) {
            return h.ceil(p)
        },
        "Complex, BigNumber": function(h, p) {
            return h.ceil(p.toNumber())
        },
        BigNumber: function(h) {
            return di(h, a(h), r.epsilon) ? a(h) : h.ceil()
        },
        "BigNumber, BigNumber": function(h, p) {
            return di(h, a(h, p), r.epsilon) ? a(h, p) : h.toDecimalPlaces(p.toNumber(), Bo.ROUND_CEIL)
        },
        Fraction: function(h) {
            return h.ceil()
        },
        "Fraction, number": function(h, p) {
            return h.ceil(p)
        },
        "Fraction, BigNumber": function(h, p) {
            return h.ceil(p.toNumber())
        },
        "Array | Matrix": t.referToSelf(v => h => dt(h, v)),
        "Array, number | BigNumber": t.referToSelf(v => (h, p) => dt(h, f => v(f, p))),
        "SparseMatrix, number | BigNumber": t.referToSelf(v => (h, p) => l(h, p, v, !1)),
        "DenseMatrix, number | BigNumber": t.referToSelf(v => (h, p) => c(h, p, v, !1)),
        "number | Complex | Fraction | BigNumber, Array": t.referToSelf(v => (h, p) => c(n(p), h, v, !0).valueOf()),
        "number | Complex | Fraction | BigNumber, Matrix": t.referToSelf(v => (h, p) => i(h, 0) ? o(p.size(), p.storage()) : p.storage() === "dense" ? c(p, h, v, !0) : u(p, h, v, !0))
    })
}
)
  , Cb = "cube"
  , xq = ["typed"]
  , Aq = j(Cb, xq, e => {
    var {typed: t} = e;
    return t(Cb, {
        number: l4,
        Complex: function(a) {
            return a.mul(a).mul(a)
        },
        BigNumber: function(a) {
            return a.times(a).times(a)
        },
        Fraction: function(a) {
            return a.pow(3)
        },
        Unit: function(a) {
            return a.pow(3)
        }
    })
}
)
  , Sb = "exp"
  , Eq = ["typed"]
  , kq = j(Sb, Eq, e => {
    var {typed: t} = e;
    return t(Sb, {
        number: u4,
        Complex: function(a) {
            return a.exp()
        },
        BigNumber: function(a) {
            return a.exp()
        }
    })
}
)
  , xb = "expm1"
  , Tq = ["typed", "Complex"]
  , Nq = j(xb, Tq, e => {
    var {typed: t, Complex: r} = e;
    return t(xb, {
        number: c4,
        Complex: function(n) {
            var i = Math.exp(n.re);
            return new r(i * Math.cos(n.im) - 1,i * Math.sin(n.im))
        },
        BigNumber: function(n) {
            return n.exp().minus(1)
        }
    })
}
)
  , pw = "fix"
  , Mq = ["typed", "Complex", "matrix", "ceil", "floor", "equalScalar", "zeros", "DenseMatrix"]
  , Iq = j(pw, ["typed", "ceil", "floor"], e => {
    var {typed: t, ceil: r, floor: a} = e;
    return t(pw, {
        number: function(i) {
            return i > 0 ? a(i) : r(i)
        },
        "number, number": function(i, o) {
            return i > 0 ? a(i, o) : r(i, o)
        }
    })
}
)
  , Dq = j(pw, Mq, e => {
    var {typed: t, Complex: r, matrix: a, ceil: n, floor: i, equalScalar: o, zeros: s, DenseMatrix: l} = e
      , u = Sr({
        typed: t,
        DenseMatrix: l
    })
      , c = jn({
        typed: t
    })
      , d = Iq({
        typed: t,
        ceil: n,
        floor: i
    });
    return t("fix", {
        number: d.signatures.number,
        "number, number | BigNumber": d.signatures["number,number"],
        Complex: function(h) {
            return new r(h.re > 0 ? Math.floor(h.re) : Math.ceil(h.re),h.im > 0 ? Math.floor(h.im) : Math.ceil(h.im))
        },
        "Complex, number": function(h, p) {
            return new r(h.re > 0 ? i(h.re, p) : n(h.re, p),h.im > 0 ? i(h.im, p) : n(h.im, p))
        },
        "Complex, BigNumber": function(h, p) {
            var f = p.toNumber();
            return new r(h.re > 0 ? i(h.re, f) : n(h.re, f),h.im > 0 ? i(h.im, f) : n(h.im, f))
        },
        BigNumber: function(h) {
            return h.isNegative() ? n(h) : i(h)
        },
        "BigNumber, number | BigNumber": function(h, p) {
            return h.isNegative() ? n(h, p) : i(h, p)
        },
        Fraction: function(h) {
            return h.s < 0 ? h.ceil() : h.floor()
        },
        "Fraction, number | BigNumber": function(h, p) {
            return h.s < 0 ? n(h, p) : i(h, p)
        },
        "Array | Matrix": t.referToSelf(v => h => dt(h, v)),
        "Array | Matrix, number | BigNumber": t.referToSelf(v => (h, p) => dt(h, f => v(f, p))),
        "number | Complex | Fraction | BigNumber, Array": t.referToSelf(v => (h, p) => c(a(p), h, v, !0).valueOf()),
        "number | Complex | Fraction | BigNumber, Matrix": t.referToSelf(v => (h, p) => o(h, 0) ? s(p.size(), p.storage()) : p.storage() === "dense" ? c(p, h, v, !0) : u(p, h, v, !0))
    })
}
)
  , yw = "floor"
  , Uq = ["typed", "config", "round", "matrix", "equalScalar", "zeros", "DenseMatrix"]
  , Fq = j(yw, ["typed", "config", "round"], e => {
    var {typed: t, config: r, round: a} = e;
    return t(yw, {
        number: function(i) {
            return ja(i, a(i), r.epsilon) ? a(i) : Math.floor(i)
        },
        "number, number": function(i, o) {
            if (ja(i, a(i, o), r.epsilon))
                return a(i, o);
            var [s,l] = "".concat(i, "e").split("e")
              , u = Math.floor(Number("".concat(s, "e").concat(Number(l) + o)));
            return [s,l] = "".concat(u, "e").split("e"),
            Number("".concat(s, "e").concat(Number(l) - o))
        }
    })
}
)
  , Q4 = j(yw, Uq, e => {
    var {typed: t, config: r, round: a, matrix: n, equalScalar: i, zeros: o, DenseMatrix: s} = e
      , l = Lr({
        typed: t,
        equalScalar: i
    })
      , u = Sr({
        typed: t,
        DenseMatrix: s
    })
      , c = jn({
        typed: t
    })
      , d = Fq({
        typed: t,
        config: r,
        round: a
    });
    return t("floor", {
        number: d.signatures.number,
        "number,number": d.signatures["number,number"],
        Complex: function(h) {
            return h.floor()
        },
        "Complex, number": function(h, p) {
            return h.floor(p)
        },
        "Complex, BigNumber": function(h, p) {
            return h.floor(p.toNumber())
        },
        BigNumber: function(h) {
            return di(h, a(h), r.epsilon) ? a(h) : h.floor()
        },
        "BigNumber, BigNumber": function(h, p) {
            return di(h, a(h, p), r.epsilon) ? a(h, p) : h.toDecimalPlaces(p.toNumber(), Bo.ROUND_FLOOR)
        },
        Fraction: function(h) {
            return h.floor()
        },
        "Fraction, number": function(h, p) {
            return h.floor(p)
        },
        "Fraction, BigNumber": function(h, p) {
            return h.floor(p.toNumber())
        },
        "Array | Matrix": t.referToSelf(v => h => dt(h, v)),
        "Array, number | BigNumber": t.referToSelf(v => (h, p) => dt(h, f => v(f, p))),
        "SparseMatrix, number | BigNumber": t.referToSelf(v => (h, p) => l(h, p, v, !1)),
        "DenseMatrix, number | BigNumber": t.referToSelf(v => (h, p) => c(h, p, v, !1)),
        "number | Complex | Fraction | BigNumber, Array": t.referToSelf(v => (h, p) => c(n(p), h, v, !0).valueOf()),
        "number | Complex | Fraction | BigNumber, Matrix": t.referToSelf(v => (h, p) => i(h, 0) ? o(p.size(), p.storage()) : p.storage() === "dense" ? c(p, h, v, !0) : u(p, h, v, !0))
    })
}
)
  , Oq = "matAlgo02xDS0"
  , Pq = ["typed", "equalScalar"]
  , Hn = j(Oq, Pq, e => {
    var {typed: t, equalScalar: r} = e;
    return function(n, i, o, s) {
        var l = n._data
          , u = n._size
          , c = n._datatype
          , d = i._values
          , v = i._index
          , h = i._ptr
          , p = i._size
          , f = i._datatype;
        if (u.length !== p.length)
            throw new ut(u.length,p.length);
        if (u[0] !== p[0] || u[1] !== p[1])
            throw new RangeError("Dimension mismatch. Matrix A (" + u + ") must match Matrix B (" + p + ")");
        if (!d)
            throw new Error("Cannot perform operation on Dense Matrix and Pattern Sparse Matrix");
        var _ = u[0], y = u[1], g, m = r, w = 0, C = o;
        typeof c == "string" && c === f && (g = c,
        m = t.find(r, [g, g]),
        w = t.convert(0, g),
        C = t.find(o, [g, g]));
        for (var b = [], x = [], E = [], k = 0; k < y; k++) {
            E[k] = x.length;
            for (var A = h[k], I = h[k + 1], T = A; T < I; T++) {
                var F = v[T]
                  , R = s ? C(d[T], l[F][k]) : C(l[F][k], d[T]);
                m(R, w) || (x.push(F),
                b.push(R))
            }
        }
        return E[y] = x.length,
        i.createSparseMatrix({
            values: b,
            index: x,
            ptr: E,
            size: [_, y],
            datatype: g
        })
    }
}
)
  , Bq = "matAlgo03xDSf"
  , Rq = ["typed"]
  , fa = j(Bq, Rq, e => {
    var {typed: t} = e;
    return function(a, n, i, o) {
        var s = a._data
          , l = a._size
          , u = a._datatype
          , c = n._values
          , d = n._index
          , v = n._ptr
          , h = n._size
          , p = n._datatype;
        if (l.length !== h.length)
            throw new ut(l.length,h.length);
        if (l[0] !== h[0] || l[1] !== h[1])
            throw new RangeError("Dimension mismatch. Matrix A (" + l + ") must match Matrix B (" + h + ")");
        if (!c)
            throw new Error("Cannot perform operation on Dense Matrix and Pattern Sparse Matrix");
        var f = l[0], _ = l[1], y, g = 0, m = i;
        typeof u == "string" && u === p && (y = u,
        g = t.convert(0, y),
        m = t.find(i, [y, y]));
        for (var w = [], C = 0; C < f; C++)
            w[C] = [];
        for (var b = [], x = [], E = 0; E < _; E++) {
            for (var k = E + 1, A = v[E], I = v[E + 1], T = A; T < I; T++) {
                var F = d[T];
                b[F] = o ? m(c[T], s[F][E]) : m(s[F][E], c[T]),
                x[F] = k
            }
            for (var R = 0; R < f; R++)
                x[R] === k ? w[R][E] = b[R] : w[R][E] = o ? m(g, s[R][E]) : m(s[R][E], g)
        }
        return a.createDenseMatrix({
            data: w,
            size: [f, _],
            datatype: y
        })
    }
}
)
  , Lq = "matAlgo05xSfSf"
  , qq = ["typed", "equalScalar"]
  , ef = j(Lq, qq, e => {
    var {typed: t, equalScalar: r} = e;
    return function(n, i, o) {
        var s = n._values
          , l = n._index
          , u = n._ptr
          , c = n._size
          , d = n._datatype
          , v = i._values
          , h = i._index
          , p = i._ptr
          , f = i._size
          , _ = i._datatype;
        if (c.length !== f.length)
            throw new ut(c.length,f.length);
        if (c[0] !== f[0] || c[1] !== f[1])
            throw new RangeError("Dimension mismatch. Matrix A (" + c + ") must match Matrix B (" + f + ")");
        var y = c[0], g = c[1], m, w = r, C = 0, b = o;
        typeof d == "string" && d === _ && (m = d,
        w = t.find(r, [m, m]),
        C = t.convert(0, m),
        b = t.find(o, [m, m]));
        var x = s && v ? [] : void 0, E = [], k = [], A = x ? [] : void 0, I = x ? [] : void 0, T = [], F = [], R, O, M, N;
        for (O = 0; O < g; O++) {
            k[O] = E.length;
            var B = O + 1;
            for (M = u[O],
            N = u[O + 1]; M < N; M++)
                R = l[M],
                E.push(R),
                T[R] = B,
                A && (A[R] = s[M]);
            for (M = p[O],
            N = p[O + 1]; M < N; M++)
                R = h[M],
                T[R] !== B && E.push(R),
                F[R] = B,
                I && (I[R] = v[M]);
            if (x)
                for (M = k[O]; M < E.length; ) {
                    R = E[M];
                    var D = T[R]
                      , V = F[R];
                    if (D === B || V === B) {
                        var J = D === B ? A[R] : C
                          , Y = V === B ? I[R] : C
                          , G = b(J, Y);
                        w(G, C) ? E.splice(M, 1) : (x.push(G),
                        M++)
                    }
                }
        }
        return k[g] = E.length,
        n.createSparseMatrix({
            values: x,
            index: E,
            ptr: k,
            size: [y, g],
            datatype: m
        })
    }
}
)
  , Vq = "matAlgo13xDD"
  , $q = ["typed"]
  , zq = j(Vq, $q, e => {
    var {typed: t} = e;
    return function(n, i, o) {
        var s = n._data
          , l = n._size
          , u = n._datatype
          , c = i._data
          , d = i._size
          , v = i._datatype
          , h = [];
        if (l.length !== d.length)
            throw new ut(l.length,d.length);
        for (var p = 0; p < l.length; p++) {
            if (l[p] !== d[p])
                throw new RangeError("Dimension mismatch. Matrix A (" + l + ") must match Matrix B (" + d + ")");
            h[p] = l[p]
        }
        var f, _ = o;
        typeof u == "string" && u === v && (f = u,
        _ = t.find(o, [f, f]));
        var y = h.length > 0 ? r(_, 0, h, h[0], s, c) : [];
        return n.createDenseMatrix({
            data: y,
            size: h,
            datatype: f
        })
    }
    ;
    function r(a, n, i, o, s, l) {
        var u = [];
        if (n === i.length - 1)
            for (var c = 0; c < o; c++)
                u[c] = a(s[c], l[c]);
        else
            for (var d = 0; d < o; d++)
                u[d] = r(a, n + 1, i, i[n + 1], s[d], l[d]);
        return u
    }
}
)
  , Gq = "broadcast"
  , jq = ["concat"]
  , Hq = j(Gq, jq, e => {
    var {concat: t} = e;
    return function(n, i) {
        var o = Math.max(n._size.length, i._size.length);
        if (n._size.length === i._size.length && n._size.every( (p, f) => p === i._size[f]))
            return [n, i];
        for (var s = r(n._size, o, 0), l = r(i._size, o, 0), u = [], c = 0; c < o; c++)
            u[c] = Math.max(s[c], l[c]);
        Mh(s, u),
        Mh(l, u);
        var d = n.clone()
          , v = i.clone();
        d._size.length < o ? d.reshape(r(d._size, o, 1)) : v._size.length < o && v.reshape(r(v._size, o, 1));
        for (var h = 0; h < o; h++)
            d._size[h] < u[h] && (d = a(d, u[h], h)),
            v._size[h] < u[h] && (v = a(v, u[h], h));
        return [d, v]
    }
    ;
    function r(n, i, o) {
        return [...Array(i - n.length).fill(o), ...n]
    }
    function a(n, i, o) {
        return t(...Array(i).fill(n), o)
    }
}
)
  , Wq = "matrixAlgorithmSuite"
  , Yq = ["typed", "matrix", "concat"]
  , Vt = j(Wq, Yq, e => {
    var {typed: t, matrix: r, concat: a} = e
      , n = zq({
        typed: t
    })
      , i = jn({
        typed: t
    })
      , o = Hq({
        concat: a
    });
    return function(l) {
        var u = l.elop, c = l.SD || l.DS, d;
        u ? (d = {
            "DenseMatrix, DenseMatrix": (f, _) => n(...o(f, _), u),
            "Array, Array": (f, _) => n(...o(r(f), r(_)), u).valueOf(),
            "Array, DenseMatrix": (f, _) => n(...o(r(f), _), u),
            "DenseMatrix, Array": (f, _) => n(...o(f, r(_)), u)
        },
        l.SS && (d["SparseMatrix, SparseMatrix"] = (f, _) => l.SS(...o(f, _), u, !1)),
        l.DS && (d["DenseMatrix, SparseMatrix"] = (f, _) => l.DS(...o(f, _), u, !1),
        d["Array, SparseMatrix"] = (f, _) => l.DS(...o(r(f), _), u, !1)),
        c && (d["SparseMatrix, DenseMatrix"] = (f, _) => c(...o(_, f), u, !0),
        d["SparseMatrix, Array"] = (f, _) => c(...o(r(_), f), u, !0))) : (d = {
            "DenseMatrix, DenseMatrix": t.referToSelf(f => (_, y) => n(...o(_, y), f)),
            "Array, Array": t.referToSelf(f => (_, y) => n(...o(r(_), r(y)), f).valueOf()),
            "Array, DenseMatrix": t.referToSelf(f => (_, y) => n(...o(r(_), y), f)),
            "DenseMatrix, Array": t.referToSelf(f => (_, y) => n(...o(_, r(y)), f))
        },
        l.SS && (d["SparseMatrix, SparseMatrix"] = t.referToSelf(f => (_, y) => l.SS(...o(_, y), f, !1))),
        l.DS && (d["DenseMatrix, SparseMatrix"] = t.referToSelf(f => (_, y) => l.DS(...o(_, y), f, !1)),
        d["Array, SparseMatrix"] = t.referToSelf(f => (_, y) => l.DS(...o(r(_), y), f, !1))),
        c && (d["SparseMatrix, DenseMatrix"] = t.referToSelf(f => (_, y) => c(...o(y, _), f, !0)),
        d["SparseMatrix, Array"] = t.referToSelf(f => (_, y) => c(...o(r(y), _), f, !0))));
        var v = l.scalar || "any"
          , h = l.Ds || l.Ss;
        h && (u ? (d["DenseMatrix," + v] = (f, _) => i(f, _, u, !1),
        d[v + ", DenseMatrix"] = (f, _) => i(_, f, u, !0),
        d["Array," + v] = (f, _) => i(r(f), _, u, !1).valueOf(),
        d[v + ", Array"] = (f, _) => i(r(_), f, u, !0).valueOf()) : (d["DenseMatrix," + v] = t.referToSelf(f => (_, y) => i(_, y, f, !1)),
        d[v + ", DenseMatrix"] = t.referToSelf(f => (_, y) => i(y, _, f, !0)),
        d["Array," + v] = t.referToSelf(f => (_, y) => i(r(_), y, f, !1).valueOf()),
        d[v + ", Array"] = t.referToSelf(f => (_, y) => i(r(y), _, f, !0).valueOf())));
        var p = l.sS !== void 0 ? l.sS : l.Ss;
        return u ? (l.Ss && (d["SparseMatrix," + v] = (f, _) => l.Ss(f, _, u, !1)),
        p && (d[v + ", SparseMatrix"] = (f, _) => p(_, f, u, !0))) : (l.Ss && (d["SparseMatrix," + v] = t.referToSelf(f => (_, y) => l.Ss(_, y, f, !1))),
        p && (d[v + ", SparseMatrix"] = t.referToSelf(f => (_, y) => p(y, _, f, !0)))),
        u && u.signatures && EE(d, u.signatures),
        d
    }
}
)
  , Ab = "mod"
  , Jq = ["typed", "config", "round", "matrix", "equalScalar", "zeros", "DenseMatrix", "concat"]
  , Z4 = j(Ab, Jq, e => {
    var {typed: t, config: r, round: a, matrix: n, equalScalar: i, zeros: o, DenseMatrix: s, concat: l} = e
      , u = Q4({
        typed: t,
        config: r,
        round: a,
        matrix: n,
        equalScalar: i,
        zeros: o,
        DenseMatrix: s
    })
      , c = Hn({
        typed: t,
        equalScalar: i
    })
      , d = fa({
        typed: t
    })
      , v = ef({
        typed: t,
        equalScalar: i
    })
      , h = Lr({
        typed: t,
        equalScalar: i
    })
      , p = Sr({
        typed: t,
        DenseMatrix: s
    })
      , f = Vt({
        typed: t,
        matrix: n,
        concat: l
    });
    return t(Ab, {
        "number, number": _,
        "BigNumber, BigNumber": function(g, m) {
            if (m.isNeg())
                throw new Error("Cannot calculate mod for a negative divisor");
            return m.isZero() ? g : g.mod(m)
        },
        "Fraction, Fraction": function(g, m) {
            if (m.compare(0) < 0)
                throw new Error("Cannot calculate mod for a negative divisor");
            return g.compare(0) >= 0 ? g.mod(m) : g.mod(m).add(m).mod(m)
        }
    }, f({
        SS: v,
        DS: d,
        SD: c,
        Ss: h,
        sS: p
    }));
    function _(y, g) {
        return g === 0 ? y : y - g * u(y / g)
    }
}
)
  , Kq = "matAlgo01xDSid"
  , Qq = ["typed"]
  , zo = j(Kq, Qq, e => {
    var {typed: t} = e;
    return function(a, n, i, o) {
        var s = a._data
          , l = a._size
          , u = a._datatype
          , c = n._values
          , d = n._index
          , v = n._ptr
          , h = n._size
          , p = n._datatype;
        if (l.length !== h.length)
            throw new ut(l.length,h.length);
        if (l[0] !== h[0] || l[1] !== h[1])
            throw new RangeError("Dimension mismatch. Matrix A (" + l + ") must match Matrix B (" + h + ")");
        if (!c)
            throw new Error("Cannot perform operation on Dense Matrix and Pattern Sparse Matrix");
        var f = l[0], _ = l[1], y = typeof u == "string" && u === p ? u : void 0, g = y ? t.find(i, [y, y]) : i, m, w, C = [];
        for (m = 0; m < f; m++)
            C[m] = [];
        var b = []
          , x = [];
        for (w = 0; w < _; w++) {
            for (var E = w + 1, k = v[w], A = v[w + 1], I = k; I < A; I++)
                m = d[I],
                b[m] = o ? g(c[I], s[m][w]) : g(s[m][w], c[I]),
                x[m] = E;
            for (m = 0; m < f; m++)
                x[m] === E ? C[m][w] = b[m] : C[m][w] = s[m][w]
        }
        return a.createDenseMatrix({
            data: C,
            size: [f, _],
            datatype: y
        })
    }
}
)
  , Zq = "matAlgo04xSidSid"
  , Xq = ["typed", "equalScalar"]
  , v2 = j(Zq, Xq, e => {
    var {typed: t, equalScalar: r} = e;
    return function(n, i, o) {
        var s = n._values
          , l = n._index
          , u = n._ptr
          , c = n._size
          , d = n._datatype
          , v = i._values
          , h = i._index
          , p = i._ptr
          , f = i._size
          , _ = i._datatype;
        if (c.length !== f.length)
            throw new ut(c.length,f.length);
        if (c[0] !== f[0] || c[1] !== f[1])
            throw new RangeError("Dimension mismatch. Matrix A (" + c + ") must match Matrix B (" + f + ")");
        var y = c[0], g = c[1], m, w = r, C = 0, b = o;
        typeof d == "string" && d === _ && (m = d,
        w = t.find(r, [m, m]),
        C = t.convert(0, m),
        b = t.find(o, [m, m]));
        var x = s && v ? [] : void 0, E = [], k = [], A = s && v ? [] : void 0, I = s && v ? [] : void 0, T = [], F = [], R, O, M, N, B;
        for (O = 0; O < g; O++) {
            k[O] = E.length;
            var D = O + 1;
            for (N = u[O],
            B = u[O + 1],
            M = N; M < B; M++)
                R = l[M],
                E.push(R),
                T[R] = D,
                A && (A[R] = s[M]);
            for (N = p[O],
            B = p[O + 1],
            M = N; M < B; M++)
                if (R = h[M],
                T[R] === D) {
                    if (A) {
                        var V = b(A[R], v[M]);
                        w(V, C) ? T[R] = null : A[R] = V
                    }
                } else
                    E.push(R),
                    F[R] = D,
                    I && (I[R] = v[M]);
            if (A && I)
                for (M = k[O]; M < E.length; )
                    R = E[M],
                    T[R] === D ? (x[M] = A[R],
                    M++) : F[R] === D ? (x[M] = I[R],
                    M++) : E.splice(M, 1)
        }
        return k[g] = E.length,
        n.createSparseMatrix({
            values: x,
            index: E,
            ptr: k,
            size: [y, g],
            datatype: m
        })
    }
}
)
  , eV = "matAlgo10xSids"
  , tV = ["typed", "DenseMatrix"]
  , Ns = j(eV, tV, e => {
    var {typed: t, DenseMatrix: r} = e;
    return function(n, i, o, s) {
        var l = n._values
          , u = n._index
          , c = n._ptr
          , d = n._size
          , v = n._datatype;
        if (!l)
            throw new Error("Cannot perform operation on Pattern Sparse Matrix and Scalar value");
        var h = d[0], p = d[1], f, _ = o;
        typeof v == "string" && (f = v,
        i = t.convert(i, f),
        _ = t.find(o, [f, f]));
        for (var y = [], g = [], m = [], w = 0; w < p; w++) {
            for (var C = w + 1, b = c[w], x = c[w + 1], E = b; E < x; E++) {
                var k = u[E];
                g[k] = l[E],
                m[k] = C
            }
            for (var A = 0; A < h; A++)
                w === 0 && (y[A] = []),
                m[A] === C ? y[A][w] = s ? _(i, g[A]) : _(g[A], i) : y[A][w] = i
        }
        return new r({
            data: y,
            size: [h, p],
            datatype: f
        })
    }
}
);
function Ms(e, t, r, a) {
    if (!(this instanceof Ms))
        throw new SyntaxError("Constructor must be called with the new operator");
    this.fn = e,
    this.count = t,
    this.min = r,
    this.max = a,
    this.message = "Wrong number of arguments in function " + e + " (" + t + " provided, " + r + (a != null ? "-" + a : "") + " expected)",
    this.stack = new Error().stack
}
Ms.prototype = new Error;
Ms.prototype.constructor = Error;
Ms.prototype.name = "ArgumentsError";
Ms.prototype.isArgumentsError = !0;
var Eb = "gcd"
  , rV = ["typed", "config", "round", "matrix", "equalScalar", "zeros", "BigNumber", "DenseMatrix", "concat"]
  , xp = "number | BigNumber | Fraction | Matrix | Array"
  , aV = "".concat(xp, ", ").concat(xp, ", ...").concat(xp);
function kb(e) {
    return !e.some(t => Array.isArray(t))
}
var nV = j(Eb, rV, e => {
    var {typed: t, matrix: r, config: a, round: n, equalScalar: i, zeros: o, BigNumber: s, DenseMatrix: l, concat: u} = e
      , c = Z4({
        typed: t,
        config: a,
        round: n,
        matrix: r,
        equalScalar: i,
        zeros: o,
        DenseMatrix: l,
        concat: u
    })
      , d = zo({
        typed: t
    })
      , v = v2({
        typed: t,
        equalScalar: i
    })
      , h = Ns({
        typed: t,
        DenseMatrix: l
    })
      , p = Vt({
        typed: t,
        matrix: r,
        concat: u
    });
    return t(Eb, {
        "number, number": f,
        "BigNumber, BigNumber": _,
        "Fraction, Fraction": (y, g) => y.gcd(g)
    }, p({
        SS: v,
        DS: d,
        Ss: h
    }), {
        [aV]: t.referToSelf(y => (g, m, w) => {
            for (var C = y(g, m), b = 0; b < w.length; b++)
                C = y(C, w[b]);
            return C
        }
        ),
        Array: t.referToSelf(y => g => {
            if (g.length === 1 && Array.isArray(g[0]) && kb(g[0]))
                return y(...g[0]);
            if (kb(g))
                return y(...g);
            throw new Ms("gcd() supports only 1d matrices!")
        }
        ),
        Matrix: t.referToSelf(y => g => y(g.toArray()))
    });
    function f(y, g) {
        if (!Be(y) || !Be(g))
            throw new Error("Parameters in function gcd must be integer numbers");
        for (var m; g !== 0; )
            m = c(y, g),
            y = g,
            g = m;
        return y < 0 ? -y : y
    }
    function _(y, g) {
        if (!y.isInt() || !g.isInt())
            throw new Error("Parameters in function gcd must be integer numbers");
        for (var m = new s(0); !g.isZero(); ) {
            var w = c(y, g);
            y = g,
            g = w
        }
        return y.lt(m) ? y.neg() : y
    }
}
)
  , iV = "matAlgo06xS0S0"
  , oV = ["typed", "equalScalar"]
  , tf = j(iV, oV, e => {
    var {typed: t, equalScalar: r} = e;
    return function(n, i, o) {
        var s = n._values
          , l = n._size
          , u = n._datatype
          , c = i._values
          , d = i._size
          , v = i._datatype;
        if (l.length !== d.length)
            throw new ut(l.length,d.length);
        if (l[0] !== d[0] || l[1] !== d[1])
            throw new RangeError("Dimension mismatch. Matrix A (" + l + ") must match Matrix B (" + d + ")");
        var h = l[0], p = l[1], f, _ = r, y = 0, g = o;
        typeof u == "string" && u === v && (f = u,
        _ = t.find(r, [f, f]),
        y = t.convert(0, f),
        g = t.find(o, [f, f]));
        for (var m = s && c ? [] : void 0, w = [], C = [], b = m ? [] : void 0, x = [], E = [], k = 0; k < p; k++) {
            C[k] = w.length;
            var A = k + 1;
            if (Q1(n, k, x, b, E, A, w, g),
            Q1(i, k, x, b, E, A, w, g),
            b)
                for (var I = C[k]; I < w.length; ) {
                    var T = w[I];
                    if (E[T] === A) {
                        var F = b[T];
                        _(F, y) ? w.splice(I, 1) : (m.push(F),
                        I++)
                    } else
                        w.splice(I, 1)
                }
            else
                for (var R = C[k]; R < w.length; ) {
                    var O = w[R];
                    E[O] !== A ? w.splice(R, 1) : R++
                }
        }
        return C[p] = w.length,
        n.createSparseMatrix({
            values: m,
            index: w,
            ptr: C,
            size: [h, p],
            datatype: f
        })
    }
}
)
  , Tb = "lcm"
  , sV = ["typed", "matrix", "equalScalar", "concat"]
  , lV = j(Tb, sV, e => {
    var {typed: t, matrix: r, equalScalar: a, concat: n} = e
      , i = Hn({
        typed: t,
        equalScalar: a
    })
      , o = tf({
        typed: t,
        equalScalar: a
    })
      , s = Lr({
        typed: t,
        equalScalar: a
    })
      , l = Vt({
        typed: t,
        matrix: r,
        concat: n
    })
      , u = "number | BigNumber | Fraction | Matrix | Array"
      , c = {};
    return c["".concat(u, ", ").concat(u, ", ...").concat(u)] = t.referToSelf(v => (h, p, f) => {
        for (var _ = v(h, p), y = 0; y < f.length; y++)
            _ = v(_, f[y]);
        return _
    }
    ),
    t(Tb, {
        "number, number": d4,
        "BigNumber, BigNumber": d,
        "Fraction, Fraction": (v, h) => v.lcm(h)
    }, l({
        SS: o,
        DS: i,
        Ss: s
    }), c);
    function d(v, h) {
        if (!v.isInt() || !h.isInt())
            throw new Error("Parameters in function lcm must be integer numbers");
        if (v.isZero())
            return v;
        if (h.isZero())
            return h;
        for (var p = v.times(h); !h.isZero(); ) {
            var f = h;
            h = v.mod(f),
            v = f
        }
        return p.div(v).abs()
    }
}
)
  , Nb = "log10"
  , uV = ["typed", "config", "Complex"]
  , cV = j(Nb, uV, e => {
    var {typed: t, config: r, Complex: a} = e;
    return t(Nb, {
        number: function(i) {
            return i >= 0 || r.predictable ? v4(i) : new a(i,0).log().div(Math.LN10)
        },
        Complex: function(i) {
            return new a(i).log().div(Math.LN10)
        },
        BigNumber: function(i) {
            return !i.isNegative() || r.predictable ? i.log() : new a(i.toNumber(),0).log().div(Math.LN10)
        },
        "Array | Matrix": t.referToSelf(n => i => dt(i, n))
    })
}
)
  , Mb = "log2"
  , dV = ["typed", "config", "Complex"]
  , vV = j(Mb, dV, e => {
    var {typed: t, config: r, Complex: a} = e;
    return t(Mb, {
        number: function(o) {
            return o >= 0 || r.predictable ? h4(o) : n(new a(o,0))
        },
        Complex: n,
        BigNumber: function(o) {
            return !o.isNegative() || r.predictable ? o.log(2) : n(new a(o.toNumber(),0))
        },
        "Array | Matrix": t.referToSelf(i => o => dt(o, i))
    });
    function n(i) {
        var o = Math.sqrt(i.re * i.re + i.im * i.im);
        return new a(Math.log2 ? Math.log2(o) : Math.log(o) / Math.LN2,Math.atan2(i.im, i.re) / Math.LN2)
    }
}
)
  , hV = "multiplyScalar"
  , mV = ["typed"]
  , fV = j(hV, mV, e => {
    var {typed: t} = e;
    return t("multiplyScalar", {
        "number, number": i4,
        "Complex, Complex": function(a, n) {
            return a.mul(n)
        },
        "BigNumber, BigNumber": function(a, n) {
            return a.times(n)
        },
        "Fraction, Fraction": function(a, n) {
            return a.mul(n)
        },
        "number | Fraction | BigNumber | Complex, Unit": (r, a) => a.multiply(r),
        "Unit, number | Fraction | BigNumber | Complex | Unit": (r, a) => r.multiply(a)
    })
}
)
  , Ib = "multiply"
  , pV = ["typed", "matrix", "addScalar", "multiplyScalar", "equalScalar", "dot"]
  , yV = j(Ib, pV, e => {
    var {typed: t, matrix: r, addScalar: a, multiplyScalar: n, equalScalar: i, dot: o} = e
      , s = Lr({
        typed: t,
        equalScalar: i
    })
      , l = jn({
        typed: t
    });
    function u(C, b) {
        switch (C.length) {
        case 1:
            switch (b.length) {
            case 1:
                if (C[0] !== b[0])
                    throw new RangeError("Dimension mismatch in multiplication. Vectors must have the same length");
                break;
            case 2:
                if (C[0] !== b[0])
                    throw new RangeError("Dimension mismatch in multiplication. Vector length (" + C[0] + ") must match Matrix rows (" + b[0] + ")");
                break;
            default:
                throw new Error("Can only multiply a 1 or 2 dimensional matrix (Matrix B has " + b.length + " dimensions)")
            }
            break;
        case 2:
            switch (b.length) {
            case 1:
                if (C[1] !== b[0])
                    throw new RangeError("Dimension mismatch in multiplication. Matrix columns (" + C[1] + ") must match Vector length (" + b[0] + ")");
                break;
            case 2:
                if (C[1] !== b[0])
                    throw new RangeError("Dimension mismatch in multiplication. Matrix A columns (" + C[1] + ") must match Matrix B rows (" + b[0] + ")");
                break;
            default:
                throw new Error("Can only multiply a 1 or 2 dimensional matrix (Matrix B has " + b.length + " dimensions)")
            }
            break;
        default:
            throw new Error("Can only multiply a 1 or 2 dimensional matrix (Matrix A has " + C.length + " dimensions)")
        }
    }
    function c(C, b, x) {
        if (x === 0)
            throw new Error("Cannot multiply two empty vectors");
        return o(C, b)
    }
    function d(C, b) {
        if (b.storage() !== "dense")
            throw new Error("Support for SparseMatrix not implemented");
        return v(C, b)
    }
    function v(C, b) {
        var x = C._data, E = C._size, k = C._datatype, A = b._data, I = b._size, T = b._datatype, F = E[0], R = I[1], O, M = a, N = n;
        k && T && k === T && typeof k == "string" && (O = k,
        M = t.find(a, [O, O]),
        N = t.find(n, [O, O]));
        for (var B = [], D = 0; D < R; D++) {
            for (var V = N(x[0], A[0][D]), J = 1; J < F; J++)
                V = M(V, N(x[J], A[J][D]));
            B[D] = V
        }
        return C.createDenseMatrix({
            data: B,
            size: [R],
            datatype: O
        })
    }
    var h = t("_multiplyMatrixVector", {
        "DenseMatrix, any": f,
        "SparseMatrix, any": g
    })
      , p = t("_multiplyMatrixMatrix", {
        "DenseMatrix, DenseMatrix": _,
        "DenseMatrix, SparseMatrix": y,
        "SparseMatrix, DenseMatrix": m,
        "SparseMatrix, SparseMatrix": w
    });
    function f(C, b) {
        var x = C._data, E = C._size, k = C._datatype, A = b._data, I = b._datatype, T = E[0], F = E[1], R, O = a, M = n;
        k && I && k === I && typeof k == "string" && (R = k,
        O = t.find(a, [R, R]),
        M = t.find(n, [R, R]));
        for (var N = [], B = 0; B < T; B++) {
            for (var D = x[B], V = M(D[0], A[0]), J = 1; J < F; J++)
                V = O(V, M(D[J], A[J]));
            N[B] = V
        }
        return C.createDenseMatrix({
            data: N,
            size: [T],
            datatype: R
        })
    }
    function _(C, b) {
        var x = C._data, E = C._size, k = C._datatype, A = b._data, I = b._size, T = b._datatype, F = E[0], R = E[1], O = I[1], M, N = a, B = n;
        k && T && k === T && typeof k == "string" && (M = k,
        N = t.find(a, [M, M]),
        B = t.find(n, [M, M]));
        for (var D = [], V = 0; V < F; V++) {
            var J = x[V];
            D[V] = [];
            for (var Y = 0; Y < O; Y++) {
                for (var G = B(J[0], A[0][Y]), Z = 1; Z < R; Z++)
                    G = N(G, B(J[Z], A[Z][Y]));
                D[V][Y] = G
            }
        }
        return C.createDenseMatrix({
            data: D,
            size: [F, O],
            datatype: M
        })
    }
    function y(C, b) {
        var x = C._data
          , E = C._size
          , k = C._datatype
          , A = b._values
          , I = b._index
          , T = b._ptr
          , F = b._size
          , R = b._datatype;
        if (!A)
            throw new Error("Cannot multiply Dense Matrix times Pattern only Matrix");
        var O = E[0], M = F[1], N, B = a, D = n, V = i, J = 0;
        k && R && k === R && typeof k == "string" && (N = k,
        B = t.find(a, [N, N]),
        D = t.find(n, [N, N]),
        V = t.find(i, [N, N]),
        J = t.convert(0, N));
        for (var Y = [], G = [], Z = [], ie = b.createSparseMatrix({
            values: Y,
            index: G,
            ptr: Z,
            size: [O, M],
            datatype: N
        }), re = 0; re < M; re++) {
            Z[re] = G.length;
            var se = T[re]
              , ce = T[re + 1];
            if (ce > se)
                for (var ue = 0, oe = 0; oe < O; oe++) {
                    for (var me = oe + 1, xe = void 0, pe = se; pe < ce; pe++) {
                        var be = I[pe];
                        ue !== me ? (xe = D(x[oe][be], A[pe]),
                        ue = me) : xe = B(xe, D(x[oe][be], A[pe]))
                    }
                    ue === me && !V(xe, J) && (G.push(oe),
                    Y.push(xe))
                }
        }
        return Z[M] = G.length,
        ie
    }
    function g(C, b) {
        var x = C._values
          , E = C._index
          , k = C._ptr
          , A = C._datatype;
        if (!x)
            throw new Error("Cannot multiply Pattern only Matrix times Dense Matrix");
        var I = b._data, T = b._datatype, F = C._size[0], R = b._size[0], O = [], M = [], N = [], B, D = a, V = n, J = i, Y = 0;
        A && T && A === T && typeof A == "string" && (B = A,
        D = t.find(a, [B, B]),
        V = t.find(n, [B, B]),
        J = t.find(i, [B, B]),
        Y = t.convert(0, B));
        var G = []
          , Z = [];
        N[0] = 0;
        for (var ie = 0; ie < R; ie++) {
            var re = I[ie];
            if (!J(re, Y))
                for (var se = k[ie], ce = k[ie + 1], ue = se; ue < ce; ue++) {
                    var oe = E[ue];
                    Z[oe] ? G[oe] = D(G[oe], V(re, x[ue])) : (Z[oe] = !0,
                    M.push(oe),
                    G[oe] = V(re, x[ue]))
                }
        }
        for (var me = M.length, xe = 0; xe < me; xe++) {
            var pe = M[xe];
            O[xe] = G[pe]
        }
        return N[1] = M.length,
        C.createSparseMatrix({
            values: O,
            index: M,
            ptr: N,
            size: [F, 1],
            datatype: B
        })
    }
    function m(C, b) {
        var x = C._values
          , E = C._index
          , k = C._ptr
          , A = C._datatype;
        if (!x)
            throw new Error("Cannot multiply Pattern only Matrix times Dense Matrix");
        var I = b._data, T = b._datatype, F = C._size[0], R = b._size[0], O = b._size[1], M, N = a, B = n, D = i, V = 0;
        A && T && A === T && typeof A == "string" && (M = A,
        N = t.find(a, [M, M]),
        B = t.find(n, [M, M]),
        D = t.find(i, [M, M]),
        V = t.convert(0, M));
        for (var J = [], Y = [], G = [], Z = C.createSparseMatrix({
            values: J,
            index: Y,
            ptr: G,
            size: [F, O],
            datatype: M
        }), ie = [], re = [], se = 0; se < O; se++) {
            G[se] = Y.length;
            for (var ce = se + 1, ue = 0; ue < R; ue++) {
                var oe = I[ue][se];
                if (!D(oe, V))
                    for (var me = k[ue], xe = k[ue + 1], pe = me; pe < xe; pe++) {
                        var be = E[pe];
                        re[be] !== ce ? (re[be] = ce,
                        Y.push(be),
                        ie[be] = B(oe, x[pe])) : ie[be] = N(ie[be], B(oe, x[pe]))
                    }
            }
            for (var H = G[se], Q = Y.length, z = H; z < Q; z++) {
                var P = Y[z];
                J[z] = ie[P]
            }
        }
        return G[O] = Y.length,
        Z
    }
    function w(C, b) {
        var x = C._values, E = C._index, k = C._ptr, A = C._datatype, I = b._values, T = b._index, F = b._ptr, R = b._datatype, O = C._size[0], M = b._size[1], N = x && I, B, D = a, V = n;
        A && R && A === R && typeof A == "string" && (B = A,
        D = t.find(a, [B, B]),
        V = t.find(n, [B, B]));
        for (var J = N ? [] : void 0, Y = [], G = [], Z = C.createSparseMatrix({
            values: J,
            index: Y,
            ptr: G,
            size: [O, M],
            datatype: B
        }), ie = N ? [] : void 0, re = [], se, ce, ue, oe, me, xe, pe, be, H = 0; H < M; H++) {
            G[H] = Y.length;
            var Q = H + 1;
            for (me = F[H],
            xe = F[H + 1],
            oe = me; oe < xe; oe++)
                if (be = T[oe],
                N)
                    for (ce = k[be],
                    ue = k[be + 1],
                    se = ce; se < ue; se++)
                        pe = E[se],
                        re[pe] !== Q ? (re[pe] = Q,
                        Y.push(pe),
                        ie[pe] = V(I[oe], x[se])) : ie[pe] = D(ie[pe], V(I[oe], x[se]));
                else
                    for (ce = k[be],
                    ue = k[be + 1],
                    se = ce; se < ue; se++)
                        pe = E[se],
                        re[pe] !== Q && (re[pe] = Q,
                        Y.push(pe));
            if (N)
                for (var z = G[H], P = Y.length, $ = z; $ < P; $++) {
                    var K = Y[$];
                    J[$] = ie[K]
                }
        }
        return G[M] = Y.length,
        Z
    }
    return t(Ib, n, {
        "Array, Array": t.referTo("Matrix, Matrix", C => (b, x) => {
            u(it(b), it(x));
            var E = C(r(b), r(x));
            return je(E) ? E.valueOf() : E
        }
        ),
        "Matrix, Matrix": function(b, x) {
            var E = b.size()
              , k = x.size();
            return u(E, k),
            E.length === 1 ? k.length === 1 ? c(b, x, E[0]) : d(b, x) : k.length === 1 ? h(b, x) : p(b, x)
        },
        "Matrix, Array": t.referTo("Matrix,Matrix", C => (b, x) => C(b, r(x))),
        "Array, Matrix": t.referToSelf(C => (b, x) => C(r(b, x.storage()), x)),
        "SparseMatrix, any": function(b, x) {
            return s(b, x, n, !1)
        },
        "DenseMatrix, any": function(b, x) {
            return l(b, x, n, !1)
        },
        "any, SparseMatrix": function(b, x) {
            return s(x, b, n, !0)
        },
        "any, DenseMatrix": function(b, x) {
            return l(x, b, n, !0)
        },
        "Array, any": function(b, x) {
            return l(r(b), x, n, !1).valueOf()
        },
        "any, Array": function(b, x) {
            return l(r(x), b, n, !0).valueOf()
        },
        "any, any": n,
        "any, any, ...any": t.referToSelf(C => (b, x, E) => {
            for (var k = C(b, x), A = 0; A < E.length; A++)
                k = C(k, E[A]);
            return k
        }
        )
    })
}
)
  , Db = "nthRoot"
  , wV = ["typed", "matrix", "equalScalar", "BigNumber", "concat"]
  , gV = j(Db, wV, e => {
    var {typed: t, matrix: r, equalScalar: a, BigNumber: n, concat: i} = e
      , o = zo({
        typed: t
    })
      , s = Hn({
        typed: t,
        equalScalar: a
    })
      , l = tf({
        typed: t,
        equalScalar: a
    })
      , u = Lr({
        typed: t,
        equalScalar: a
    })
      , c = Vt({
        typed: t,
        matrix: r,
        concat: i
    });
    function d() {
        throw new Error("Complex number not supported in function nthRoot. Use nthRoots instead.")
    }
    return t(Db, {
        number: X1,
        "number, number": X1,
        BigNumber: h => v(h, new n(2)),
        "BigNumber, BigNumber": v,
        Complex: d,
        "Complex, number": d,
        Array: t.referTo("DenseMatrix,number", h => p => h(r(p), 2).valueOf()),
        DenseMatrix: t.referTo("DenseMatrix,number", h => p => h(p, 2)),
        SparseMatrix: t.referTo("SparseMatrix,number", h => p => h(p, 2)),
        "SparseMatrix, SparseMatrix": t.referToSelf(h => (p, f) => {
            if (f.density() === 1)
                return l(p, f, h);
            throw new Error("Root must be non-zero")
        }
        ),
        "DenseMatrix, SparseMatrix": t.referToSelf(h => (p, f) => {
            if (f.density() === 1)
                return o(p, f, h, !1);
            throw new Error("Root must be non-zero")
        }
        ),
        "Array, SparseMatrix": t.referTo("DenseMatrix,SparseMatrix", h => (p, f) => h(r(p), f)),
        "number | BigNumber, SparseMatrix": t.referToSelf(h => (p, f) => {
            if (f.density() === 1)
                return u(f, p, h, !0);
            throw new Error("Root must be non-zero")
        }
        )
    }, c({
        scalar: "number | BigNumber",
        SD: s,
        Ss: u,
        sS: !1
    }));
    function v(h, p) {
        var f = n.precision
          , _ = n.clone({
            precision: f + 2
        })
          , y = new n(0)
          , g = new _(1)
          , m = p.isNegative();
        if (m && (p = p.neg()),
        p.isZero())
            throw new Error("Root must be non-zero");
        if (h.isNegative() && !p.abs().mod(2).equals(1))
            throw new Error("Root must be odd when a is negative.");
        if (h.isZero())
            return m ? new _(1 / 0) : 0;
        if (!h.isFinite())
            return m ? y : h;
        var w = h.abs().pow(g.div(p));
        return w = h.isNeg() ? w.neg() : w,
        new n((m ? g.div(w) : w).toPrecision(f))
    }
}
)
  , Ub = "sign"
  , _V = ["typed", "BigNumber", "Fraction", "complex"]
  , bV = j(Ub, _V, e => {
    var {typed: t, BigNumber: r, complex: a, Fraction: n} = e;
    return t(Ub, {
        number: mw,
        Complex: function(o) {
            return o.im === 0 ? a(mw(o.re)) : o.sign()
        },
        BigNumber: function(o) {
            return new r(o.cmp(0))
        },
        Fraction: function(o) {
            return new n(o.s,1)
        },
        "Array | Matrix": t.referToSelf(i => o => dt(o, i)),
        Unit: t.referToSelf(i => o => {
            if (!o._isDerived() && o.units[0].unit.offset !== 0)
                throw new TypeError("sign is ambiguous for units with offset");
            return t.find(i, o.valueType())(o.value)
        }
        )
    })
}
)
  , CV = "sqrt"
  , SV = ["config", "typed", "Complex"]
  , xV = j(CV, SV, e => {
    var {config: t, typed: r, Complex: a} = e;
    return r("sqrt", {
        number: n,
        Complex: function(o) {
            return o.sqrt()
        },
        BigNumber: function(o) {
            return !o.isNegative() || t.predictable ? o.sqrt() : n(o.toNumber())
        },
        Unit: function(o) {
            return o.pow(.5)
        }
    });
    function n(i) {
        return isNaN(i) ? NaN : i >= 0 || t.predictable ? Math.sqrt(i) : new a(i,0).sqrt()
    }
}
)
  , Fb = "square"
  , AV = ["typed"]
  , EV = j(Fb, AV, e => {
    var {typed: t} = e;
    return t(Fb, {
        number: m4,
        Complex: function(a) {
            return a.mul(a)
        },
        BigNumber: function(a) {
            return a.times(a)
        },
        Fraction: function(a) {
            return a.mul(a)
        },
        Unit: function(a) {
            return a.pow(2)
        }
    })
}
)
  , Ob = "subtract"
  , kV = ["typed", "matrix", "equalScalar", "addScalar", "unaryMinus", "DenseMatrix", "concat"]
  , TV = j(Ob, kV, e => {
    var {typed: t, matrix: r, equalScalar: a, addScalar: n, unaryMinus: i, DenseMatrix: o, concat: s} = e
      , l = zo({
        typed: t
    })
      , u = fa({
        typed: t
    })
      , c = ef({
        typed: t,
        equalScalar: a
    })
      , d = Ns({
        typed: t,
        DenseMatrix: o
    })
      , v = Sr({
        typed: t,
        DenseMatrix: o
    })
      , h = Vt({
        typed: t,
        matrix: r,
        concat: s
    });
    return t(Ob, {
        "number, number": (p, f) => p - f,
        "Complex, Complex": (p, f) => p.sub(f),
        "BigNumber, BigNumber": (p, f) => p.minus(f),
        "Fraction, Fraction": (p, f) => p.sub(f),
        "Unit, Unit": t.referToSelf(p => (f, _) => {
            if (f.value === null)
                throw new Error("Parameter x contains a unit with undefined value");
            if (_.value === null)
                throw new Error("Parameter y contains a unit with undefined value");
            if (!f.equalBase(_))
                throw new Error("Units do not match");
            var y = f.clone();
            return y.value = t.find(p, [y.valueType(), _.valueType()])(y.value, _.value),
            y.fixPrefix = !1,
            y
        }
        )
    }, h({
        SS: c,
        DS: l,
        SD: u,
        Ss: v,
        sS: d
    }))
}
)
  , Pb = "xgcd"
  , NV = ["typed", "config", "matrix", "BigNumber"]
  , MV = j(Pb, NV, e => {
    var {typed: t, config: r, matrix: a, BigNumber: n} = e;
    return t(Pb, {
        "number, number": function(s, l) {
            var u = f4(s, l);
            return r.matrix === "Array" ? u : a(u)
        },
        "BigNumber, BigNumber": i
    });
    function i(o, s) {
        var l, u, c, d = new n(0), v = new n(1), h = d, p = v, f = v, _ = d;
        if (!o.isInt() || !s.isInt())
            throw new Error("Parameters in function xgcd must be integer numbers");
        for (; !s.isZero(); )
            u = o.div(s).floor(),
            c = o.mod(s),
            l = h,
            h = p.minus(u.times(h)),
            p = l,
            l = f,
            f = _.minus(u.times(f)),
            _ = l,
            o = s,
            s = c;
        var y;
        return o.lt(d) ? y = [o.neg(), p.neg(), _.neg()] : y = [o, o.isZero() ? 0 : p, _],
        r.matrix === "Array" ? y : a(y)
    }
}
)
  , Bb = "invmod"
  , IV = ["typed", "config", "BigNumber", "xgcd", "equal", "smaller", "mod", "add", "isInteger"]
  , DV = j(Bb, IV, e => {
    var {typed: t, config: r, BigNumber: a, xgcd: n, equal: i, smaller: o, mod: s, add: l, isInteger: u} = e;
    return t(Bb, {
        "number, number": c,
        "BigNumber, BigNumber": c
    });
    function c(d, v) {
        if (!u(d) || !u(v))
            throw new Error("Parameters in function invmod must be integer numbers");
        if (d = s(d, v),
        i(v, 0))
            throw new Error("Divisor must be non zero");
        var h = n(d, v);
        h = h.valueOf();
        var [p,f] = h;
        return i(p, a(1)) ? (f = s(f, v),
        o(f, a(0)) && (f = l(f, v)),
        f) : NaN
    }
}
)
  , UV = "matAlgo09xS0Sf"
  , FV = ["typed", "equalScalar"]
  , X4 = j(UV, FV, e => {
    var {typed: t, equalScalar: r} = e;
    return function(n, i, o) {
        var s = n._values
          , l = n._index
          , u = n._ptr
          , c = n._size
          , d = n._datatype
          , v = i._values
          , h = i._index
          , p = i._ptr
          , f = i._size
          , _ = i._datatype;
        if (c.length !== f.length)
            throw new ut(c.length,f.length);
        if (c[0] !== f[0] || c[1] !== f[1])
            throw new RangeError("Dimension mismatch. Matrix A (" + c + ") must match Matrix B (" + f + ")");
        var y = c[0], g = c[1], m, w = r, C = 0, b = o;
        typeof d == "string" && d === _ && (m = d,
        w = t.find(r, [m, m]),
        C = t.convert(0, m),
        b = t.find(o, [m, m]));
        var x = s && v ? [] : void 0, E = [], k = [], A = x ? [] : void 0, I = [], T, F, R, O, M;
        for (F = 0; F < g; F++) {
            k[F] = E.length;
            var N = F + 1;
            if (A)
                for (O = p[F],
                M = p[F + 1],
                R = O; R < M; R++)
                    T = h[R],
                    I[T] = N,
                    A[T] = v[R];
            for (O = u[F],
            M = u[F + 1],
            R = O; R < M; R++)
                if (T = l[R],
                A) {
                    var B = I[T] === N ? A[T] : C
                      , D = b(s[R], B);
                    w(D, C) || (E.push(T),
                    x.push(D))
                } else
                    E.push(T)
        }
        return k[g] = E.length,
        n.createSparseMatrix({
            values: x,
            index: E,
            ptr: k,
            size: [y, g],
            datatype: m
        })
    }
}
)
  , Rb = "dotMultiply"
  , OV = ["typed", "matrix", "equalScalar", "multiplyScalar", "concat"]
  , PV = j(Rb, OV, e => {
    var {typed: t, matrix: r, equalScalar: a, multiplyScalar: n, concat: i} = e
      , o = Hn({
        typed: t,
        equalScalar: a
    })
      , s = X4({
        typed: t,
        equalScalar: a
    })
      , l = Lr({
        typed: t,
        equalScalar: a
    })
      , u = Vt({
        typed: t,
        matrix: r,
        concat: i
    });
    return t(Rb, u({
        elop: n,
        SS: s,
        DS: o,
        Ss: l
    }))
}
);
function BV(e, t) {
    if (e.isFinite() && !e.isInteger() || t.isFinite() && !t.isInteger())
        throw new Error("Integers expected in function bitAnd");
    var r = e.constructor;
    if (e.isNaN() || t.isNaN())
        return new r(NaN);
    if (e.isZero() || t.eq(-1) || e.eq(t))
        return e;
    if (t.isZero() || e.eq(-1))
        return t;
    if (!e.isFinite() || !t.isFinite()) {
        if (!e.isFinite() && !t.isFinite())
            return e.isNegative() === t.isNegative() ? e : new r(0);
        if (!e.isFinite())
            return t.isNegative() ? e : e.isNegative() ? new r(0) : t;
        if (!t.isFinite())
            return e.isNegative() ? t : t.isNegative() ? new r(0) : e
    }
    return h2(e, t, function(a, n) {
        return a & n
    })
}
function Oc(e) {
    if (e.isFinite() && !e.isInteger())
        throw new Error("Integer expected in function bitNot");
    var t = e.constructor
      , r = t.precision;
    t.config({
        precision: 1e9
    });
    var a = e.plus(new t(1));
    return a.s = -a.s || null,
    t.config({
        precision: r
    }),
    a
}
function RV(e, t) {
    if (e.isFinite() && !e.isInteger() || t.isFinite() && !t.isInteger())
        throw new Error("Integers expected in function bitOr");
    var r = e.constructor;
    if (e.isNaN() || t.isNaN())
        return new r(NaN);
    var a = new r(-1);
    return e.isZero() || t.eq(a) || e.eq(t) ? t : t.isZero() || e.eq(a) ? e : !e.isFinite() || !t.isFinite() ? !e.isFinite() && !e.isNegative() && t.isNegative() || e.isNegative() && !t.isNegative() && !t.isFinite() ? a : e.isNegative() && t.isNegative() ? e.isFinite() ? e : t : e.isFinite() ? t : e : h2(e, t, function(n, i) {
        return n | i
    })
}
function h2(e, t, r) {
    var a = e.constructor, n, i, o = +(e.s < 0), s = +(t.s < 0);
    if (o) {
        n = Qd(Oc(e));
        for (var l = 0; l < n.length; ++l)
            n[l] ^= 1
    } else
        n = Qd(e);
    if (s) {
        i = Qd(Oc(t));
        for (var u = 0; u < i.length; ++u)
            i[u] ^= 1
    } else
        i = Qd(t);
    var c, d, v;
    n.length <= i.length ? (c = n,
    d = i,
    v = o) : (c = i,
    d = n,
    v = s);
    var h = c.length
      , p = d.length
      , f = r(o, s) ^ 1
      , _ = new a(f ^ 1)
      , y = new a(1)
      , g = new a(2)
      , m = a.precision;
    for (a.config({
        precision: 1e9
    }); h > 0; )
        r(c[--h], d[--p]) === f && (_ = _.plus(y)),
        y = y.times(g);
    for (; p > 0; )
        r(v, d[--p]) === f && (_ = _.plus(y)),
        y = y.times(g);
    return a.config({
        precision: m
    }),
    f === 0 && (_.s = -_.s),
    _
}
function Qd(e) {
    for (var t = e.d, r = t[0] + "", a = 1; a < t.length; ++a) {
        for (var n = t[a] + "", i = 7 - n.length; i--; )
            n = "0" + n;
        r += n
    }
    for (var o = r.length; r.charAt(o) === "0"; )
        o--;
    var s = e.e
      , l = r.slice(0, o + 1 || 1)
      , u = l.length;
    if (s > 0)
        if (++s > u)
            for (s -= u; s--; )
                l += "0";
        else
            s < u && (l = l.slice(0, s) + "." + l.slice(s));
    for (var c = [0], d = 0; d < l.length; ) {
        for (var v = c.length; v--; )
            c[v] *= 10;
        c[0] += parseInt(l.charAt(d++));
        for (var h = 0; h < c.length; ++h)
            c[h] > 1 && ((c[h + 1] === null || c[h + 1] === void 0) && (c[h + 1] = 0),
            c[h + 1] += c[h] >> 1,
            c[h] &= 1)
    }
    return c.reverse()
}
function LV(e, t) {
    if (e.isFinite() && !e.isInteger() || t.isFinite() && !t.isInteger())
        throw new Error("Integers expected in function bitXor");
    var r = e.constructor;
    if (e.isNaN() || t.isNaN())
        return new r(NaN);
    if (e.isZero())
        return t;
    if (t.isZero())
        return e;
    if (e.eq(t))
        return new r(0);
    var a = new r(-1);
    return e.eq(a) ? Oc(t) : t.eq(a) ? Oc(e) : !e.isFinite() || !t.isFinite() ? !e.isFinite() && !t.isFinite() ? a : new r(e.isNegative() === t.isNegative() ? 1 / 0 : -1 / 0) : h2(e, t, function(n, i) {
        return n ^ i
    })
}
function qV(e, t) {
    if (e.isFinite() && !e.isInteger() || t.isFinite() && !t.isInteger())
        throw new Error("Integers expected in function leftShift");
    var r = e.constructor;
    return e.isNaN() || t.isNaN() || t.isNegative() && !t.isZero() ? new r(NaN) : e.isZero() || t.isZero() ? e : !e.isFinite() && !t.isFinite() ? new r(NaN) : t.lt(55) ? e.times(Math.pow(2, t.toNumber()) + "") : e.times(new r(2).pow(t))
}
function VV(e, t) {
    if (e.isFinite() && !e.isInteger() || t.isFinite() && !t.isInteger())
        throw new Error("Integers expected in function rightArithShift");
    var r = e.constructor;
    return e.isNaN() || t.isNaN() || t.isNegative() && !t.isZero() ? new r(NaN) : e.isZero() || t.isZero() ? e : t.isFinite() ? t.lt(55) ? e.div(Math.pow(2, t.toNumber()) + "").floor() : e.div(new r(2).pow(t)).floor() : e.isNegative() ? new r(-1) : e.isFinite() ? new r(0) : new r(NaN)
}
var Lb = "bitAnd"
  , $V = ["typed", "matrix", "equalScalar", "concat"]
  , zV = j(Lb, $V, e => {
    var {typed: t, matrix: r, equalScalar: a, concat: n} = e
      , i = Hn({
        typed: t,
        equalScalar: a
    })
      , o = tf({
        typed: t,
        equalScalar: a
    })
      , s = Lr({
        typed: t,
        equalScalar: a
    })
      , l = Vt({
        typed: t,
        matrix: r,
        concat: n
    });
    return t(Lb, {
        "number, number": y4,
        "BigNumber, BigNumber": BV
    }, l({
        SS: o,
        DS: i,
        Ss: s
    }))
}
)
  , qb = "bitNot"
  , GV = ["typed"]
  , jV = j(qb, GV, e => {
    var {typed: t} = e;
    return t(qb, {
        number: w4,
        BigNumber: Oc,
        "Array | Matrix": t.referToSelf(r => a => dt(a, r))
    })
}
)
  , Vb = "bitOr"
  , HV = ["typed", "matrix", "equalScalar", "DenseMatrix", "concat"]
  , WV = j(Vb, HV, e => {
    var {typed: t, matrix: r, equalScalar: a, DenseMatrix: n, concat: i} = e
      , o = zo({
        typed: t
    })
      , s = v2({
        typed: t,
        equalScalar: a
    })
      , l = Ns({
        typed: t,
        DenseMatrix: n
    })
      , u = Vt({
        typed: t,
        matrix: r,
        concat: i
    });
    return t(Vb, {
        "number, number": g4,
        "BigNumber, BigNumber": RV
    }, u({
        SS: s,
        DS: o,
        Ss: l
    }))
}
)
  , YV = "matAlgo07xSSf"
  , JV = ["typed", "DenseMatrix"]
  , hi = j(YV, JV, e => {
    var {typed: t, DenseMatrix: r} = e;
    return function(i, o, s) {
        var l = i._size
          , u = i._datatype
          , c = o._size
          , d = o._datatype;
        if (l.length !== c.length)
            throw new ut(l.length,c.length);
        if (l[0] !== c[0] || l[1] !== c[1])
            throw new RangeError("Dimension mismatch. Matrix A (" + l + ") must match Matrix B (" + c + ")");
        var v = l[0], h = l[1], p, f = 0, _ = s;
        typeof u == "string" && u === d && (p = u,
        f = t.convert(0, p),
        _ = t.find(s, [p, p]));
        var y, g, m = [];
        for (y = 0; y < v; y++)
            m[y] = [];
        var w = []
          , C = []
          , b = []
          , x = [];
        for (g = 0; g < h; g++) {
            var E = g + 1;
            for (a(i, g, b, w, E),
            a(o, g, x, C, E),
            y = 0; y < v; y++) {
                var k = b[y] === E ? w[y] : f
                  , A = x[y] === E ? C[y] : f;
                m[y][g] = _(k, A)
            }
        }
        return new r({
            data: m,
            size: [v, h],
            datatype: p
        })
    }
    ;
    function a(n, i, o, s, l) {
        for (var u = n._values, c = n._index, d = n._ptr, v = d[i], h = d[i + 1]; v < h; v++) {
            var p = c[v];
            o[p] = l,
            s[p] = u[v]
        }
    }
}
)
  , $b = "bitXor"
  , KV = ["typed", "matrix", "DenseMatrix", "concat"]
  , QV = j($b, KV, e => {
    var {typed: t, matrix: r, DenseMatrix: a, concat: n} = e
      , i = fa({
        typed: t
    })
      , o = hi({
        typed: t,
        DenseMatrix: a
    })
      , s = Sr({
        typed: t,
        DenseMatrix: a
    })
      , l = Vt({
        typed: t,
        matrix: r,
        concat: n
    });
    return t($b, {
        "number, number": _4,
        "BigNumber, BigNumber": LV
    }, l({
        SS: o,
        DS: i,
        Ss: s
    }))
}
)
  , zb = "arg"
  , ZV = ["typed"]
  , XV = j(zb, ZV, e => {
    var {typed: t} = e;
    return t(zb, {
        number: function(a) {
            return Math.atan2(0, a)
        },
        BigNumber: function(a) {
            return a.constructor.atan2(0, a)
        },
        Complex: function(a) {
            return a.arg()
        },
        "Array | Matrix": t.referToSelf(r => a => dt(a, r))
    })
}
)
  , Gb = "conj"
  , e$ = ["typed"]
  , t$ = j(Gb, e$, e => {
    var {typed: t} = e;
    return t(Gb, {
        "number | BigNumber | Fraction": r => r,
        Complex: r => r.conjugate(),
        "Array | Matrix": t.referToSelf(r => a => dt(a, r))
    })
}
)
  , jb = "im"
  , r$ = ["typed"]
  , a$ = j(jb, r$, e => {
    var {typed: t} = e;
    return t(jb, {
        number: () => 0,
        "BigNumber | Fraction": r => r.mul(0),
        Complex: r => r.im,
        "Array | Matrix": t.referToSelf(r => a => dt(a, r))
    })
}
)
  , Hb = "re"
  , n$ = ["typed"]
  , i$ = j(Hb, n$, e => {
    var {typed: t} = e;
    return t(Hb, {
        "number | BigNumber | Fraction": r => r,
        Complex: r => r.re,
        "Array | Matrix": t.referToSelf(r => a => dt(a, r))
    })
}
)
  , Wb = "not"
  , o$ = ["typed"]
  , s$ = j(Wb, o$, e => {
    var {typed: t} = e;
    return t(Wb, {
        "null | undefined": () => !0,
        number: A4,
        Complex: function(a) {
            return a.re === 0 && a.im === 0
        },
        BigNumber: function(a) {
            return a.isZero() || a.isNaN()
        },
        Unit: t.referToSelf(r => a => t.find(r, a.valueType())(a.value)),
        "Array | Matrix": t.referToSelf(r => a => dt(a, r))
    })
}
)
  , Yb = "or"
  , l$ = ["typed", "matrix", "equalScalar", "DenseMatrix", "concat"]
  , u$ = j(Yb, l$, e => {
    var {typed: t, matrix: r, equalScalar: a, DenseMatrix: n, concat: i} = e
      , o = fa({
        typed: t
    })
      , s = ef({
        typed: t,
        equalScalar: a
    })
      , l = Sr({
        typed: t,
        DenseMatrix: n
    })
      , u = Vt({
        typed: t,
        matrix: r,
        concat: i
    });
    return t(Yb, {
        "number, number": E4,
        "Complex, Complex": function(d, v) {
            return d.re !== 0 || d.im !== 0 || v.re !== 0 || v.im !== 0
        },
        "BigNumber, BigNumber": function(d, v) {
            return !d.isZero() && !d.isNaN() || !v.isZero() && !v.isNaN()
        },
        "Unit, Unit": t.referToSelf(c => (d, v) => c(d.value || 0, v.value || 0))
    }, u({
        SS: s,
        DS: o,
        Ss: l
    }))
}
)
  , Jb = "xor"
  , c$ = ["typed", "matrix", "DenseMatrix", "concat"]
  , d$ = j(Jb, c$, e => {
    var {typed: t, matrix: r, DenseMatrix: a, concat: n} = e
      , i = fa({
        typed: t
    })
      , o = hi({
        typed: t,
        DenseMatrix: a
    })
      , s = Sr({
        typed: t,
        DenseMatrix: a
    })
      , l = Vt({
        typed: t,
        matrix: r,
        concat: n
    });
    return t(Jb, {
        "number, number": k4,
        "Complex, Complex": function(c, d) {
            return (c.re !== 0 || c.im !== 0) != (d.re !== 0 || d.im !== 0)
        },
        "BigNumber, BigNumber": function(c, d) {
            return (!c.isZero() && !c.isNaN()) != (!d.isZero() && !d.isNaN())
        },
        "Unit, Unit": t.referToSelf(u => (c, d) => u(c.value || 0, d.value || 0))
    }, l({
        SS: o,
        DS: i,
        Ss: s
    }))
}
)
  , Kb = "concat"
  , v$ = ["typed", "matrix", "isInteger"]
  , ek = j(Kb, v$, e => {
    var {typed: t, matrix: r, isInteger: a} = e;
    return t(Kb, {
        "...Array | Matrix | number | BigNumber": function(i) {
            var o, s = i.length, l = -1, u, c = !1, d = [];
            for (o = 0; o < s; o++) {
                var v = i[o];
                if (je(v) && (c = !0),
                lt(v) || vt(v)) {
                    if (o !== s - 1)
                        throw new Error("Dimension must be specified as last argument");
                    if (u = l,
                    l = v.valueOf(),
                    !a(l))
                        throw new TypeError("Integer number expected for dimension");
                    if (l < 0 || o > 0 && l > u)
                        throw new zn(l,u + 1)
                } else {
                    var h = Qe(v).valueOf()
                      , p = it(h);
                    if (d[o] = h,
                    u = l,
                    l = p.length - 1,
                    o > 0 && l !== u)
                        throw new ut(u + 1,l + 1)
                }
            }
            if (d.length === 0)
                throw new SyntaxError("At least one matrix expected");
            for (var f = d.shift(); d.length; )
                f = RE(f, d.shift(), l);
            return c ? r(f) : f
        },
        "...string": function(i) {
            return i.join("")
        }
    })
}
)
  , Qb = "column"
  , h$ = ["typed", "Index", "matrix", "range"]
  , tk = j(Qb, h$, e => {
    var {typed: t, Index: r, matrix: a, range: n} = e;
    return t(Qb, {
        "Matrix, number": i,
        "Array, number": function(s, l) {
            return i(a(Qe(s)), l).valueOf()
        }
    });
    function i(o, s) {
        if (o.size().length !== 2)
            throw new Error("Only two dimensional matrix is supported");
        Ot(s, o.size()[1]);
        var l = n(0, o.size()[0])
          , u = new r(l,s)
          , c = o.subset(u);
        return je(c) ? c : a([[c]])
    }
}
)
  , Zb = "count"
  , m$ = ["typed", "size", "prod"]
  , f$ = j(Zb, m$, e => {
    var {typed: t, size: r, prod: a} = e;
    return t(Zb, {
        string: function(i) {
            return i.length
        },
        "Matrix | Array": function(i) {
            return a(r(i))
        }
    })
}
)
  , Xb = "cross"
  , p$ = ["typed", "matrix", "subtract", "multiply"]
  , y$ = j(Xb, p$, e => {
    var {typed: t, matrix: r, subtract: a, multiply: n} = e;
    return t(Xb, {
        "Matrix, Matrix": function(s, l) {
            return r(i(s.toArray(), l.toArray()))
        },
        "Matrix, Array": function(s, l) {
            return r(i(s.toArray(), l))
        },
        "Array, Matrix": function(s, l) {
            return r(i(s, l.toArray()))
        },
        "Array, Array": i
    });
    function i(o, s) {
        var l = Math.max(it(o).length, it(s).length);
        o = kh(o),
        s = kh(s);
        var u = it(o)
          , c = it(s);
        if (u.length !== 1 || c.length !== 1 || u[0] !== 3 || c[0] !== 3)
            throw new RangeError("Vectors with length 3 expected (Size A = [" + u.join(", ") + "], B = [" + c.join(", ") + "])");
        var d = [a(n(o[1], s[2]), n(o[2], s[1])), a(n(o[2], s[0]), n(o[0], s[2])), a(n(o[0], s[1]), n(o[1], s[0]))];
        return l > 1 ? [d] : d
    }
}
)
  , e6 = "diag"
  , w$ = ["typed", "matrix", "DenseMatrix", "SparseMatrix"]
  , g$ = j(e6, w$, e => {
    var {typed: t, matrix: r, DenseMatrix: a, SparseMatrix: n} = e;
    return t(e6, {
        Array: function(u) {
            return i(u, 0, it(u), null)
        },
        "Array, number": function(u, c) {
            return i(u, c, it(u), null)
        },
        "Array, BigNumber": function(u, c) {
            return i(u, c.toNumber(), it(u), null)
        },
        "Array, string": function(u, c) {
            return i(u, 0, it(u), c)
        },
        "Array, number, string": function(u, c, d) {
            return i(u, c, it(u), d)
        },
        "Array, BigNumber, string": function(u, c, d) {
            return i(u, c.toNumber(), it(u), d)
        },
        Matrix: function(u) {
            return i(u, 0, u.size(), u.storage())
        },
        "Matrix, number": function(u, c) {
            return i(u, c, u.size(), u.storage())
        },
        "Matrix, BigNumber": function(u, c) {
            return i(u, c.toNumber(), u.size(), u.storage())
        },
        "Matrix, string": function(u, c) {
            return i(u, 0, u.size(), c)
        },
        "Matrix, number, string": function(u, c, d) {
            return i(u, c, u.size(), d)
        },
        "Matrix, BigNumber, string": function(u, c, d) {
            return i(u, c.toNumber(), u.size(), d)
        }
    });
    function i(l, u, c, d) {
        if (!Be(u))
            throw new TypeError("Second parameter in function diag must be an integer");
        var v = u > 0 ? u : 0
          , h = u < 0 ? -u : 0;
        switch (c.length) {
        case 1:
            return o(l, u, d, c[0], h, v);
        case 2:
            return s(l, u, d, c, h, v)
        }
        throw new RangeError("Matrix for function diag must be 2 dimensional")
    }
    function o(l, u, c, d, v, h) {
        var p = [d + v, d + h];
        if (c && c !== "sparse" && c !== "dense")
            throw new TypeError("Unknown matrix type ".concat(c, '"'));
        var f = c === "sparse" ? n.diagonal(p, l, u) : a.diagonal(p, l, u);
        return c !== null ? f : f.valueOf()
    }
    function s(l, u, c, d, v, h) {
        if (je(l)) {
            var p = l.diagonal(u);
            return c !== null ? c !== p.storage() ? r(p, c) : p : p.valueOf()
        }
        for (var f = Math.min(d[0] - v, d[1] - h), _ = [], y = 0; y < f; y++)
            _[y] = l[y + v][y + h];
        return c !== null ? r(_) : _
    }
}
);
function vu(e, t, r, a, n) {
    if (_l.isTypedFunction(e)) {
        var i = [t, r, a]
          , o = _l.resolve(e, i);
        if (o)
            return d(o.implementation, i);
        var s = [t, r]
          , l = _l.resolve(e, s);
        if (l)
            return d(l.implementation, s);
        var u = [t]
          , c = _l.resolve(e, u);
        return c ? d(c.implementation, u) : d(e, i)
    } else
        return e(t, r, a);
    function d(v, h) {
        try {
            return v.apply(v, h)
        } catch (_) {
            var p;
            if (_ instanceof TypeError && ((p = _.data) === null || p === void 0 ? void 0 : p.category) === "wrongType") {
                var f = [];
                throw f.push("value: ".concat(Bt(t))),
                h.length >= 2 && f.push("index: ".concat(Bt(r))),
                h.length >= 3 && f.push("array: ".concat(Bt(a))),
                new TypeError("Function ".concat(n, " cannot apply callback arguments ") + "".concat(e.name, "(").concat(f.join(", "), ") at index ").concat(JSON.stringify(r)))
            } else
                throw new TypeError("Function ".concat(n, " cannot apply callback arguments ") + "to function ".concat(e.name, ": ").concat(_.message))
        }
    }
}
var _$ = "filter"
  , b$ = ["typed"]
  , C$ = j(_$, b$, e => {
    var {typed: t} = e;
    return t("filter", {
        "Array, function": t6,
        "Matrix, function": function(a, n) {
            return a.create(t6(a.toArray(), n))
        },
        "Array, RegExp": Th,
        "Matrix, RegExp": function(a, n) {
            return a.create(Th(a.toArray(), n))
        }
    })
}
);
function t6(e, t) {
    return PE(e, function(r, a, n) {
        return vu(t, r, [a], n, "filter")
    })
}
var r6 = "flatten"
  , S$ = ["typed", "matrix"]
  , x$ = j(r6, S$, e => {
    var {typed: t, matrix: r} = e;
    return t(r6, {
        Array: function(n) {
            return bt(n)
        },
        Matrix: function(n) {
            var i = bt(n.toArray());
            return r(i)
        }
    })
}
)
  , a6 = "forEach"
  , A$ = ["typed"]
  , E$ = j(a6, A$, e => {
    var {typed: t} = e;
    return t(a6, {
        "Array, function": k$,
        "Matrix, function": function(a, n) {
            a.forEach(n)
        }
    })
}
);
function k$(e, t) {
    var r = function a(n, i) {
        if (Array.isArray(n))
            Ym(n, function(o, s) {
                a(o, i.concat(s))
            });
        else
            return vu(t, n, i, e, "forEach")
    };
    r(e, [])
}
var n6 = "getMatrixDataType"
  , T$ = ["typed"]
  , N$ = j(n6, T$, e => {
    var {typed: t} = e;
    return t(n6, {
        Array: function(a) {
            return Uc(a, Bt)
        },
        Matrix: function(a) {
            return a.getDataType()
        }
    })
}
)
  , i6 = "identity"
  , M$ = ["typed", "config", "matrix", "BigNumber", "DenseMatrix", "SparseMatrix"]
  , I$ = j(i6, M$, e => {
    var {typed: t, config: r, matrix: a, BigNumber: n, DenseMatrix: i, SparseMatrix: o} = e;
    return t(i6, {
        "": function() {
            return r.matrix === "Matrix" ? a([]) : []
        },
        string: function(c) {
            return a(c)
        },
        "number | BigNumber": function(c) {
            return l(c, c, r.matrix === "Matrix" ? "dense" : void 0)
        },
        "number | BigNumber, string": function(c, d) {
            return l(c, c, d)
        },
        "number | BigNumber, number | BigNumber": function(c, d) {
            return l(c, d, r.matrix === "Matrix" ? "dense" : void 0)
        },
        "number | BigNumber, number | BigNumber, string": function(c, d, v) {
            return l(c, d, v)
        },
        Array: function(c) {
            return s(c)
        },
        "Array, string": function(c, d) {
            return s(c, d)
        },
        Matrix: function(c) {
            return s(c.valueOf(), c.storage())
        },
        "Matrix, string": function(c, d) {
            return s(c.valueOf(), d)
        }
    });
    function s(u, c) {
        switch (u.length) {
        case 0:
            return c ? a(c) : [];
        case 1:
            return l(u[0], u[0], c);
        case 2:
            return l(u[0], u[1], c);
        default:
            throw new Error("Vector containing two values expected")
        }
    }
    function l(u, c, d) {
        var v = vt(u) || vt(c) ? n : null;
        if (vt(u) && (u = u.toNumber()),
        vt(c) && (c = c.toNumber()),
        !Be(u) || u < 1)
            throw new Error("Parameters in function identity must be positive integers");
        if (!Be(c) || c < 1)
            throw new Error("Parameters in function identity must be positive integers");
        var h = v ? new n(1) : 1
          , p = v ? new v(0) : 0
          , f = [u, c];
        if (d) {
            if (d === "sparse")
                return o.diagonal(f, h, 0, p);
            if (d === "dense")
                return i.diagonal(f, h, 0, p);
            throw new TypeError('Unknown matrix type "'.concat(d, '"'))
        }
        for (var _ = jl([], f, p), y = u < c ? u : c, g = 0; g < y; g++)
            _[g][g] = h;
        return _
    }
}
)
  , o6 = "kron"
  , D$ = ["typed", "matrix", "multiplyScalar"]
  , U$ = j(o6, D$, e => {
    var {typed: t, matrix: r, multiplyScalar: a} = e;
    return t(o6, {
        "Matrix, Matrix": function(o, s) {
            return r(n(o.toArray(), s.toArray()))
        },
        "Matrix, Array": function(o, s) {
            return r(n(o.toArray(), s))
        },
        "Array, Matrix": function(o, s) {
            return r(n(o, s.toArray()))
        },
        "Array, Array": n
    });
    function n(i, o) {
        if (it(i).length === 1 && (i = [i]),
        it(o).length === 1 && (o = [o]),
        it(i).length > 2 || it(o).length > 2)
            throw new RangeError("Vectors with dimensions greater then 2 are not supported expected (Size x = " + JSON.stringify(i.length) + ", y = " + JSON.stringify(o.length) + ")");
        var s = []
          , l = [];
        return i.map(function(u) {
            return o.map(function(c) {
                return l = [],
                s.push(l),
                u.map(function(d) {
                    return c.map(function(v) {
                        return l.push(a(d, v))
                    })
                })
            })
        }) && s
    }
}
)
  , s6 = "map"
  , F$ = ["typed"]
  , O$ = j(s6, F$, e => {
    var {typed: t} = e;
    return t(s6, {
        "Array, function": P$,
        "Matrix, function": function(a, n) {
            return a.map(n)
        }
    })
}
);
function P$(e, t) {
    var r = function a(n, i) {
        return Array.isArray(n) ? n.map(function(o, s) {
            return a(o, i.concat(s))
        }) : vu(t, n, i, e, "map")
    };
    return r(e, [])
}
var l6 = "diff"
  , B$ = ["typed", "matrix", "subtract", "number"]
  , rk = j(l6, B$, e => {
    var {typed: t, matrix: r, subtract: a, number: n} = e;
    return t(l6, {
        "Array | Matrix": function(c) {
            return je(c) ? r(o(c.toArray())) : o(c)
        },
        "Array | Matrix, number": function(c, d) {
            if (!Be(d))
                throw new RangeError("Dimension must be a whole number");
            return je(c) ? r(i(c.toArray(), d)) : i(c, d)
        },
        "Array, BigNumber": t.referTo("Array,number", u => (c, d) => u(c, n(d))),
        "Matrix, BigNumber": t.referTo("Matrix,number", u => (c, d) => u(c, n(d)))
    });
    function i(u, c) {
        if (je(u) && (u = u.toArray()),
        !Array.isArray(u))
            throw RangeError("Array/Matrix does not have that many dimensions");
        if (c > 0) {
            var d = [];
            return u.forEach(v => {
                d.push(i(v, c - 1))
            }
            ),
            d
        } else {
            if (c === 0)
                return o(u);
            throw RangeError("Cannot have negative dimension")
        }
    }
    function o(u) {
        for (var c = [], d = u.length, v = 1; v < d; v++)
            c.push(s(u[v - 1], u[v]));
        return c
    }
    function s(u, c) {
        je(u) && (u = u.toArray()),
        je(c) && (c = c.toArray());
        var d = Array.isArray(u)
          , v = Array.isArray(c);
        if (d && v)
            return l(u, c);
        if (!d && !v)
            return a(c, u);
        throw TypeError("Cannot calculate difference between 1 array and 1 non-array")
    }
    function l(u, c) {
        if (u.length !== c.length)
            throw RangeError("Not all sub-arrays have the same length");
        for (var d = [], v = u.length, h = 0; h < v; h++)
            d.push(s(u[h], c[h]));
        return d
    }
}
)
  , R$ = "ones"
  , L$ = ["typed", "config", "matrix", "BigNumber"]
  , q$ = j(R$, L$, e => {
    var {typed: t, config: r, matrix: a, BigNumber: n} = e;
    return t("ones", {
        "": function() {
            return r.matrix === "Array" ? i([]) : i([], "default")
        },
        "...number | BigNumber | string": function(u) {
            var c = u[u.length - 1];
            if (typeof c == "string") {
                var d = u.pop();
                return i(u, d)
            } else
                return r.matrix === "Array" ? i(u) : i(u, "default")
        },
        Array: i,
        Matrix: function(u) {
            var c = u.storage();
            return i(u.valueOf(), c)
        },
        "Array | Matrix, string": function(u, c) {
            return i(u.valueOf(), c)
        }
    });
    function i(l, u) {
        var c = o(l)
          , d = c ? new n(1) : 1;
        if (s(l),
        u) {
            var v = a(u);
            return l.length > 0 ? v.resize(l, d) : v
        } else {
            var h = [];
            return l.length > 0 ? jl(h, l, d) : h
        }
    }
    function o(l) {
        var u = !1;
        return l.forEach(function(c, d, v) {
            vt(c) && (u = !0,
            v[d] = c.toNumber())
        }),
        u
    }
    function s(l) {
        l.forEach(function(u) {
            if (typeof u != "number" || !Be(u) || u < 0)
                throw new Error("Parameters in function ones must be positive integers")
        })
    }
}
);
function m2() {
    throw new Error('No "bignumber" implementation available')
}
function ak() {
    throw new Error('No "fraction" implementation available')
}
function nk() {
    throw new Error('No "matrix" implementation available')
}
var u6 = "range"
  , V$ = ["typed", "config", "?matrix", "?bignumber", "smaller", "smallerEq", "larger", "largerEq", "add", "isPositive"]
  , ik = j(u6, V$, e => {
    var {typed: t, config: r, matrix: a, bignumber: n, smaller: i, smallerEq: o, larger: s, largerEq: l, add: u, isPositive: c} = e;
    return t(u6, {
        string: v,
        "string, boolean": v,
        "number, number": function(_, y) {
            return d(h(_, y, 1, !1))
        },
        "number, number, number": function(_, y, g) {
            return d(h(_, y, g, !1))
        },
        "number, number, boolean": function(_, y, g) {
            return d(h(_, y, 1, g))
        },
        "number, number, number, boolean": function(_, y, g, m) {
            return d(h(_, y, g, m))
        },
        "BigNumber, BigNumber": function(_, y) {
            var g = _.constructor;
            return d(h(_, y, new g(1), !1))
        },
        "BigNumber, BigNumber, BigNumber": function(_, y, g) {
            return d(h(_, y, g, !1))
        },
        "BigNumber, BigNumber, boolean": function(_, y, g) {
            var m = _.constructor;
            return d(h(_, y, new m(1), g))
        },
        "BigNumber, BigNumber, BigNumber, boolean": function(_, y, g, m) {
            return d(h(_, y, g, m))
        },
        "Unit, Unit, Unit": function(_, y, g) {
            return d(h(_, y, g, !1))
        },
        "Unit, Unit, Unit, boolean": function(_, y, g, m) {
            return d(h(_, y, g, m))
        }
    });
    function d(f) {
        return r.matrix === "Matrix" ? a ? a(f) : nk() : f
    }
    function v(f, _) {
        var y = p(f);
        if (!y)
            throw new SyntaxError('String "' + f + '" is no valid range');
        return r.number === "BigNumber" ? (n === void 0 && m2(),
        d(h(n(y.start), n(y.end), n(y.step)))) : d(h(y.start, y.end, y.step, _))
    }
    function h(f, _, y, g) {
        for (var m = [], w = c(y) ? g ? o : i : g ? l : s, C = f; w(C, _); )
            m.push(C),
            C = u(C, y);
        return m
    }
    function p(f) {
        var _ = f.split(":")
          , y = _.map(function(m) {
            return Number(m)
        })
          , g = y.some(function(m) {
            return isNaN(m)
        });
        if (g)
            return null;
        switch (y.length) {
        case 2:
            return {
                start: y[0],
                end: y[1],
                step: 1
            };
        case 3:
            return {
                start: y[0],
                end: y[2],
                step: y[1]
            };
        default:
            return null
        }
    }
}
)
  , c6 = "reshape"
  , $$ = ["typed", "isInteger", "matrix"]
  , z$ = j(c6, $$, e => {
    var {typed: t, isInteger: r} = e;
    return t(c6, {
        "Matrix, Array": function(n, i) {
            return n.reshape(i, !0)
        },
        "Array, Array": function(n, i) {
            return i.forEach(function(o) {
                if (!r(o))
                    throw new TypeError("Invalid size for dimension: " + o)
            }),
            n2(n, i)
        }
    })
}
)
  , G$ = "resize"
  , j$ = ["config", "matrix"]
  , H$ = j(G$, j$, e => {
    var {config: t, matrix: r} = e;
    return function(i, o, s) {
        if (arguments.length !== 2 && arguments.length !== 3)
            throw new Ms("resize",arguments.length,2,3);
        if (je(o) && (o = o.valueOf()),
        vt(o[0]) && (o = o.map(function(c) {
            return vt(c) ? c.toNumber() : c
        })),
        je(i))
            return i.resize(o, s, !0);
        if (typeof i == "string")
            return a(i, o, s);
        var l = Array.isArray(i) ? !1 : t.matrix !== "Array";
        if (o.length === 0) {
            for (; Array.isArray(i); )
                i = i[0];
            return Qe(i)
        } else {
            Array.isArray(i) || (i = [i]),
            i = Qe(i);
            var u = jl(i, o, s);
            return l ? r(u) : u
        }
    }
    ;
    function a(n, i, o) {
        if (o !== void 0) {
            if (typeof o != "string" || o.length !== 1)
                throw new TypeError("Single character expected as defaultValue")
        } else
            o = " ";
        if (i.length !== 1)
            throw new ut(i.length,1);
        var s = i[0];
        if (typeof s != "number" || !Be(s))
            throw new TypeError("Invalid size, must contain positive integers (size: " + st(i) + ")");
        if (n.length > s)
            return n.substring(0, s);
        if (n.length < s) {
            for (var l = n, u = 0, c = s - n.length; u < c; u++)
                l += o;
            return l
        } else
            return n
    }
}
)
  , d6 = "rotate"
  , W$ = ["typed", "multiply", "rotationMatrix"]
  , Y$ = j(d6, W$, e => {
    var {typed: t, multiply: r, rotationMatrix: a} = e;
    return t(d6, {
        "Array , number | BigNumber | Complex | Unit": function(o, s) {
            n(o, 2);
            var l = r(a(s), o);
            return l.toArray()
        },
        "Matrix , number | BigNumber | Complex | Unit": function(o, s) {
            return n(o, 2),
            r(a(s), o)
        },
        "Array, number | BigNumber | Complex | Unit, Array | Matrix": function(o, s, l) {
            n(o, 3);
            var u = r(a(s, l), o);
            return u
        },
        "Matrix, number | BigNumber | Complex | Unit, Array | Matrix": function(o, s, l) {
            return n(o, 3),
            r(a(s, l), o)
        }
    });
    function n(i, o) {
        var s = Array.isArray(i) ? it(i) : i.size();
        if (s.length > 2)
            throw new RangeError("Vector must be of dimensions 1x".concat(o));
        if (s.length === 2 && s[1] !== 1)
            throw new RangeError("Vector must be of dimensions 1x".concat(o));
        if (s[0] !== o)
            throw new RangeError("Vector must be of dimensions 1x".concat(o))
    }
}
)
  , v6 = "rotationMatrix"
  , J$ = ["typed", "config", "multiplyScalar", "addScalar", "unaryMinus", "norm", "matrix", "BigNumber", "DenseMatrix", "SparseMatrix", "cos", "sin"]
  , K$ = j(v6, J$, e => {
    var {typed: t, config: r, multiplyScalar: a, addScalar: n, unaryMinus: i, norm: o, BigNumber: s, matrix: l, DenseMatrix: u, SparseMatrix: c, cos: d, sin: v} = e;
    return t(v6, {
        "": function() {
            return r.matrix === "Matrix" ? l([]) : []
        },
        string: function(m) {
            return l(m)
        },
        "number | BigNumber | Complex | Unit": function(m) {
            return h(m, r.matrix === "Matrix" ? "dense" : void 0)
        },
        "number | BigNumber | Complex | Unit, string": function(m, w) {
            return h(m, w)
        },
        "number | BigNumber | Complex | Unit, Array": function(m, w) {
            var C = l(w);
            return p(C),
            y(m, C, void 0)
        },
        "number | BigNumber | Complex | Unit, Matrix": function(m, w) {
            p(w);
            var C = w.storage() || (r.matrix === "Matrix" ? "dense" : void 0);
            return y(m, w, C)
        },
        "number | BigNumber | Complex | Unit, Array, string": function(m, w, C) {
            var b = l(w);
            return p(b),
            y(m, b, C)
        },
        "number | BigNumber | Complex | Unit, Matrix, string": function(m, w, C) {
            return p(w),
            y(m, w, C)
        }
    });
    function h(g, m) {
        var w = vt(g)
          , C = w ? new s(-1) : -1
          , b = d(g)
          , x = v(g)
          , E = [[b, a(C, x)], [x, b]];
        return _(E, m)
    }
    function p(g) {
        var m = g.size();
        if (m.length < 1 || m[0] !== 3)
            throw new RangeError("Vector must be of dimensions 1x3")
    }
    function f(g) {
        return g.reduce( (m, w) => a(m, w))
    }
    function _(g, m) {
        if (m) {
            if (m === "sparse")
                return new c(g);
            if (m === "dense")
                return new u(g);
            throw new TypeError('Unknown matrix type "'.concat(m, '"'))
        }
        return g
    }
    function y(g, m, w) {
        var C = o(m);
        if (C === 0)
            throw new RangeError("Rotation around zero vector");
        var b = vt(g) ? s : null
          , x = b ? new b(1) : 1
          , E = b ? new b(-1) : -1
          , k = b ? new b(m.get([0]) / C) : m.get([0]) / C
          , A = b ? new b(m.get([1]) / C) : m.get([1]) / C
          , I = b ? new b(m.get([2]) / C) : m.get([2]) / C
          , T = d(g)
          , F = n(x, i(T))
          , R = v(g)
          , O = n(T, f([k, k, F]))
          , M = n(f([k, A, F]), f([E, I, R]))
          , N = n(f([k, I, F]), f([A, R]))
          , B = n(f([k, A, F]), f([I, R]))
          , D = n(T, f([A, A, F]))
          , V = n(f([A, I, F]), f([E, k, R]))
          , J = n(f([k, I, F]), f([E, A, R]))
          , Y = n(f([A, I, F]), f([k, R]))
          , G = n(T, f([I, I, F]))
          , Z = [[O, M, N], [B, D, V], [J, Y, G]];
        return _(Z, w)
    }
}
)
  , h6 = "row"
  , Q$ = ["typed", "Index", "matrix", "range"]
  , ok = j(h6, Q$, e => {
    var {typed: t, Index: r, matrix: a, range: n} = e;
    return t(h6, {
        "Matrix, number": i,
        "Array, number": function(s, l) {
            return i(a(Qe(s)), l).valueOf()
        }
    });
    function i(o, s) {
        if (o.size().length !== 2)
            throw new Error("Only two dimensional matrix is supported");
        Ot(s, o.size()[0]);
        var l = n(0, o.size()[1])
          , u = new r(s,l)
          , c = o.subset(u);
        return je(c) ? c : a([[c]])
    }
}
)
  , m6 = "size"
  , Z$ = ["typed", "config", "?matrix"]
  , X$ = j(m6, Z$, e => {
    var {typed: t, config: r, matrix: a} = e;
    return t(m6, {
        Matrix: function(i) {
            return i.create(i.size())
        },
        Array: it,
        string: function(i) {
            return r.matrix === "Array" ? [i.length] : a([i.length])
        },
        "number | Complex | BigNumber | Unit | boolean | null": function(i) {
            return r.matrix === "Array" ? [] : a ? a([]) : nk()
        }
    })
}
)
  , f6 = "squeeze"
  , ez = ["typed", "matrix"]
  , tz = j(f6, ez, e => {
    var {typed: t, matrix: r} = e;
    return t(f6, {
        Array: function(n) {
            return kh(Qe(n))
        },
        Matrix: function(n) {
            var i = kh(n.toArray());
            return Array.isArray(i) ? r(i) : i
        },
        any: function(n) {
            return Qe(n)
        }
    })
}
)
  , p6 = "subset"
  , rz = ["typed", "matrix", "zeros", "add"]
  , sk = j(p6, rz, e => {
    var {typed: t, matrix: r, zeros: a, add: n} = e;
    return t(p6, {
        "Matrix, Index": function(s, l) {
            return Gl(l) ? r() : (Eh(s, l),
            s.subset(l))
        },
        "Array, Index": t.referTo("Matrix, Index", function(o) {
            return function(s, l) {
                var u = o(r(s), l);
                return l.isScalar() ? u : u.valueOf()
            }
        }),
        "Object, Index": nz,
        "string, Index": az,
        "Matrix, Index, any, any": function(s, l, u, c) {
            return Gl(l) ? s : (Eh(s, l),
            s.clone().subset(l, i(u, l), c))
        },
        "Array, Index, any, any": t.referTo("Matrix, Index, any, any", function(o) {
            return function(s, l, u, c) {
                var d = o(r(s), l, u, c);
                return d.isMatrix ? d.valueOf() : d
            }
        }),
        "Array, Index, any": t.referTo("Matrix, Index, any, any", function(o) {
            return function(s, l, u) {
                return o(r(s), l, u, void 0).valueOf()
            }
        }),
        "Matrix, Index, any": t.referTo("Matrix, Index, any, any", function(o) {
            return function(s, l, u) {
                return o(s, l, u, void 0)
            }
        }),
        "string, Index, string": y6,
        "string, Index, string, string": y6,
        "Object, Index, any": iz
    });
    function i(o, s) {
        if (typeof o == "string")
            throw new Error("can't boradcast a string");
        if (s._isScalar)
            return o;
        var l = s.size();
        if (l.every(u => u > 0))
            try {
                return n(o, a(l))
            } catch {
                return o
            }
        else
            return o
    }
}
);
function az(e, t) {
    if (!Gm(t))
        throw new TypeError("Index expected");
    if (Gl(t))
        return "";
    if (Eh(Array.from(e), t),
    t.size().length !== 1)
        throw new ut(t.size().length,1);
    var r = e.length;
    Ot(t.min()[0], r),
    Ot(t.max()[0], r);
    var a = t.dimension(0)
      , n = "";
    return a.forEach(function(i) {
        n += e.charAt(i)
    }),
    n
}
function y6(e, t, r, a) {
    if (!t || t.isIndex !== !0)
        throw new TypeError("Index expected");
    if (Gl(t))
        return e;
    if (Eh(Array.from(e), t),
    t.size().length !== 1)
        throw new ut(t.size().length,1);
    if (a !== void 0) {
        if (typeof a != "string" || a.length !== 1)
            throw new TypeError("Single character expected as defaultValue")
    } else
        a = " ";
    var n = t.dimension(0)
      , i = n.size()[0];
    if (i !== r.length)
        throw new ut(n.size()[0],r.length);
    var o = e.length;
    Ot(t.min()[0]),
    Ot(t.max()[0]);
    for (var s = [], l = 0; l < o; l++)
        s[l] = e.charAt(l);
    if (n.forEach(function(d, v) {
        s[d] = r.charAt(v[0])
    }),
    s.length > o)
        for (var u = o - 1, c = s.length; u < c; u++)
            s[u] || (s[u] = a);
    return s.join("")
}
function nz(e, t) {
    if (!Gl(t)) {
        if (t.size().length !== 1)
            throw new ut(t.size(),1);
        var r = t.dimension(0);
        if (typeof r != "string")
            throw new TypeError("String expected as index to retrieve an object property");
        return la(e, r)
    }
}
function iz(e, t, r) {
    if (Gl(t))
        return e;
    if (t.size().length !== 1)
        throw new ut(t.size(),1);
    var a = t.dimension(0);
    if (typeof a != "string")
        throw new TypeError("String expected as index to retrieve an object property");
    var n = Qe(e);
    return Wl(n, a, r),
    n
}
var w6 = "transpose"
  , oz = ["typed", "matrix"]
  , sz = j(w6, oz, e => {
    var {typed: t, matrix: r} = e;
    return t(w6, {
        Array: o => a(r(o)).valueOf(),
        Matrix: a,
        any: Qe
    });
    function a(o) {
        var s = o.size(), l;
        switch (s.length) {
        case 1:
            l = o.clone();
            break;
        case 2:
            {
                var u = s[0]
                  , c = s[1];
                if (c === 0)
                    throw new RangeError("Cannot transpose a 2D matrix with no columns (size: " + st(s) + ")");
                switch (o.storage()) {
                case "dense":
                    l = n(o, u, c);
                    break;
                case "sparse":
                    l = i(o, u, c);
                    break
                }
            }
            break;
        default:
            throw new RangeError("Matrix must be a vector or two dimensional (size: " + st(s) + ")")
        }
        return l
    }
    function n(o, s, l) {
        for (var u = o._data, c = [], d, v = 0; v < l; v++) {
            d = c[v] = [];
            for (var h = 0; h < s; h++)
                d[h] = Qe(u[h][v])
        }
        return o.createDenseMatrix({
            data: c,
            size: [l, s],
            datatype: o._datatype
        })
    }
    function i(o, s, l) {
        for (var u = o._values, c = o._index, d = o._ptr, v = u ? [] : void 0, h = [], p = [], f = [], _ = 0; _ < s; _++)
            f[_] = 0;
        var y, g, m;
        for (y = 0,
        g = c.length; y < g; y++)
            f[c[y]]++;
        for (var w = 0, C = 0; C < s; C++)
            p.push(w),
            w += f[C],
            f[C] = p[C];
        for (p.push(w),
        m = 0; m < l; m++)
            for (var b = d[m], x = d[m + 1], E = b; E < x; E++) {
                var k = f[c[E]]++;
                h[k] = m,
                u && (v[k] = Qe(u[E]))
            }
        return o.createSparseMatrix({
            values: v,
            index: h,
            ptr: p,
            size: [l, s],
            datatype: o._datatype
        })
    }
}
)
  , g6 = "ctranspose"
  , lz = ["typed", "transpose", "conj"]
  , uz = j(g6, lz, e => {
    var {typed: t, transpose: r, conj: a} = e;
    return t(g6, {
        any: function(i) {
            return a(r(i))
        }
    })
}
)
  , _6 = "zeros"
  , cz = ["typed", "config", "matrix", "BigNumber"]
  , dz = j(_6, cz, e => {
    var {typed: t, config: r, matrix: a, BigNumber: n} = e;
    return t(_6, {
        "": function() {
            return r.matrix === "Array" ? i([]) : i([], "default")
        },
        "...number | BigNumber | string": function(u) {
            var c = u[u.length - 1];
            if (typeof c == "string") {
                var d = u.pop();
                return i(u, d)
            } else
                return r.matrix === "Array" ? i(u) : i(u, "default")
        },
        Array: i,
        Matrix: function(u) {
            var c = u.storage();
            return i(u.valueOf(), c)
        },
        "Array | Matrix, string": function(u, c) {
            return i(u.valueOf(), c)
        }
    });
    function i(l, u) {
        var c = o(l)
          , d = c ? new n(0) : 0;
        if (s(l),
        u) {
            var v = a(u);
            return l.length > 0 ? v.resize(l, d) : v
        } else {
            var h = [];
            return l.length > 0 ? jl(h, l, d) : h
        }
    }
    function o(l) {
        var u = !1;
        return l.forEach(function(c, d, v) {
            vt(c) && (u = !0,
            v[d] = c.toNumber())
        }),
        u
    }
    function s(l) {
        l.forEach(function(u) {
            if (typeof u != "number" || !Be(u) || u < 0)
                throw new Error("Parameters in function zeros must be positive integers")
        })
    }
}
)
  , b6 = "fft"
  , vz = ["typed", "matrix", "addScalar", "multiplyScalar", "divideScalar", "exp", "tau", "i", "dotDivide", "conj", "pow", "ceil", "log2"]
  , hz = j(b6, vz, e => {
    var {typed: t, matrix: r, addScalar: a, multiplyScalar: n, divideScalar: i, exp: o, tau: s, i: l, dotDivide: u, conj: c, pow: d, ceil: v, log2: h} = e;
    return t(b6, {
        Array: p,
        Matrix: function(m) {
            return m.create(p(m.toArray()))
        }
    });
    function p(g) {
        var m = it(g);
        return m.length === 1 ? y(g, m[0]) : f(g.map(w => p(w, m.slice(1))), 0)
    }
    function f(g, m) {
        var w = it(g);
        if (m !== 0)
            return new Array(w[0]).fill(0).map( (b, x) => f(g[x], m - 1));
        if (w.length === 1)
            return y(g);
        function C(b) {
            var x = it(b);
            return new Array(x[1]).fill(0).map( (E, k) => new Array(x[0]).fill(0).map( (A, I) => b[I][k]))
        }
        return C(f(C(g), 1))
    }
    function _(g) {
        for (var m = g.length, w = o(i(n(-1, n(l, s)), m)), C = [], b = 1 - m; b < m; b++)
            C.push(d(w, i(d(b, 2), 2)));
        for (var x = d(2, v(h(m + m - 1))), E = [...new Array(m).fill(0).map( (M, N) => n(g[N], C[m - 1 + N])), ...new Array(x - m).fill(0)], k = [...new Array(m + m - 1).fill(0).map( (M, N) => i(1, C[N])), ...new Array(x - (m + m - 1)).fill(0)], A = y(E), I = y(k), T = new Array(x).fill(0).map( (M, N) => n(A[N], I[N])), F = u(c(p(c(T))), x), R = [], O = m - 1; O < m + m - 1; O++)
            R.push(n(F[O], C[O]));
        return R
    }
    function y(g) {
        var m = g.length;
        if (m === 1)
            return [g[0]];
        if (m % 2 === 0) {
            for (var w = [...y(g.filter( (E, k) => k % 2 === 0)), ...y(g.filter( (E, k) => k % 2 === 1))], C = 0; C < m / 2; C++) {
                var b = w[C]
                  , x = n(w[C + m / 2], o(n(n(s, l), i(-C, m))));
                w[C] = a(b, x),
                w[C + m / 2] = a(b, n(-1, x))
            }
            return w
        } else
            return _(g)
    }
}
)
  , C6 = "ifft"
  , mz = ["typed", "fft", "dotDivide", "conj"]
  , fz = j(C6, mz, e => {
    var {typed: t, fft: r, dotDivide: a, conj: n} = e;
    return t(C6, {
        "Array | Matrix": function(o) {
            var s = je(o) ? o.size() : it(o);
            return a(n(r(n(o))), s.reduce( (l, u) => l * u, 1))
        }
    })
}
);
function S6(e, t) {
    var r = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var a = Object.getOwnPropertySymbols(e);
        t && (a = a.filter(function(n) {
            return Object.getOwnPropertyDescriptor(e, n).enumerable
        })),
        r.push.apply(r, a)
    }
    return r
}
function pz(e) {
    for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t] != null ? arguments[t] : {};
        t % 2 ? S6(Object(r), !0).forEach(function(a) {
            Ze(e, a, r[a])
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : S6(Object(r)).forEach(function(a) {
            Object.defineProperty(e, a, Object.getOwnPropertyDescriptor(r, a))
        })
    }
    return e
}
var yz = "solveODE"
  , wz = ["typed", "add", "subtract", "multiply", "divide", "max", "map", "abs", "isPositive", "isNegative", "larger", "smaller", "matrix", "bignumber", "unaryMinus"]
  , gz = j(yz, wz, e => {
    var {typed: t, add: r, subtract: a, multiply: n, divide: i, max: o, map: s, abs: l, isPositive: u, isNegative: c, larger: d, smaller: v, matrix: h, bignumber: p, unaryMinus: f} = e;
    function _(E) {
        return function(k, A, I, T) {
            var F = !(A.length === 2 && (A.every(b) || A.every(ln)));
            if (F)
                throw new Error('"tspan" must be an Array of two numeric values or two units [tStart, tEnd]');
            var R = A[0]
              , O = A[1]
              , M = d(O, R)
              , N = T.firstStep;
            if (N !== void 0 && !u(N))
                throw new Error('"firstStep" must be positive');
            var B = T.maxStep;
            if (B !== void 0 && !u(B))
                throw new Error('"maxStep" must be positive');
            var D = T.minStep;
            if (D && c(D))
                throw new Error('"minStep" must be positive or zero');
            var V = [R, O, N, D, B].filter(L => L !== void 0);
            if (!(V.every(b) || V.every(ln)))
                throw new Error('Inconsistent type of "t" dependant variables');
            for (var J = 1, Y = T.tol ? T.tol : 1e-4, G = T.minDelta ? T.minDelta : .2, Z = T.maxDelta ? T.maxDelta : 5, ie = T.maxIter ? T.maxIter : 1e4, re = [R, O, ...I, B, D].some(vt), [se,ce,ue,oe] = re ? [p(E.a), p(E.c), p(E.b), p(E.bp)] : [E.a, E.c, E.b, E.bp], me = N ? M ? N : f(N) : i(a(O, R), J), xe = [R], pe = [I], be = a(ue, oe), H = 0, Q = 0, z = w(M), P = C(M); z(xe[H], O); ) {
                var $ = [];
                me = P(xe[H], O, me),
                $.push(k(xe[H], pe[H]));
                for (var K = 1; K < ce.length; ++K)
                    $.push(k(r(xe[H], n(ce[K], me)), r(pe[H], n(me, se[K], $))));
                var ae = o(l(s(n(be, $), L => ln(L) ? L.value : L)));
                ae < Y && Y / ae > 1 / 4 && (xe.push(r(xe[H], me)),
                pe.push(r(pe[H], n(me, ue, $))),
                H++);
                var te = .84 * (Y / ae) ** (1 / 5);
                if (v(te, G) ? te = G : d(te, Z) && (te = Z),
                te = re ? p(te) : te,
                me = n(me, te),
                B && d(l(me), B) ? me = M ? B : f(B) : D && v(l(me), D) && (me = M ? D : f(D)),
                Q++,
                Q > ie)
                    throw new Error("Maximum number of iterations reached, try changing options")
            }
            return {
                t: xe,
                y: pe
            }
        }
    }
    function y(E, k, A, I) {
        var T = [[], [.5], [0, .75], [.2222222222222222, .3333333333333333, .4444444444444444]]
          , F = [null, 1 / 2, 3 / 4, 1]
          , R = [2 / 9, 1 / 3, 4 / 9, 0]
          , O = [7 / 24, 1 / 4, 1 / 3, 1 / 8]
          , M = {
            a: T,
            c: F,
            b: R,
            bp: O
        };
        return _(M)(E, k, A, I)
    }
    function g(E, k, A, I) {
        var T = [[], [.2], [.075, .225], [.9777777777777777, -3.7333333333333334, 3.5555555555555554], [2.9525986892242035, -11.595793324188385, 9.822892851699436, -.2908093278463649], [2.8462752525252526, -10.757575757575758, 8.906422717743473, .2784090909090909, -.2735313036020583], [.09114583333333333, 0, .44923629829290207, .6510416666666666, -.322376179245283, .13095238095238096]]
          , F = [null, 1 / 5, 3 / 10, 4 / 5, 8 / 9, 1, 1]
          , R = [35 / 384, 0, 500 / 1113, 125 / 192, -2187 / 6784, 11 / 84, 0]
          , O = [5179 / 57600, 0, 7571 / 16695, 393 / 640, -92097 / 339200, 187 / 2100, 1 / 40]
          , M = {
            a: T,
            c: F,
            b: R,
            bp: O
        };
        return _(M)(E, k, A, I)
    }
    function m(E, k, A, I) {
        var T = I.method ? I.method : "RK45"
          , F = {
            RK23: y,
            RK45: g
        };
        if (T.toUpperCase()in F) {
            var R = pz({}, I);
            return delete R.method,
            F[T.toUpperCase()](E, k, A, R)
        } else {
            var O = Object.keys(F).map(N => '"'.concat(N, '"'))
              , M = "".concat(O.slice(0, -1).join(", "), " and ").concat(O.slice(-1));
            throw new Error('Unavailable method "'.concat(T, '". Available methods are ').concat(M))
        }
    }
    function w(E) {
        return E ? v : d
    }
    function C(E) {
        var k = E ? d : v;
        return function(A, I, T) {
            var F = r(A, T);
            return k(F, I) ? a(I, A) : T
        }
    }
    function b(E) {
        return vt(E) || lt(E)
    }
    function x(E, k, A, I) {
        var T = m(E, k.toArray(), A.toArray(), I);
        return {
            t: h(T.t),
            y: h(T.y)
        }
    }
    return t("solveODE", {
        "function, Array, Array, Object": m,
        "function, Matrix, Matrix, Object": x,
        "function, Array, Array": (E, k, A) => m(E, k, A, {}),
        "function, Matrix, Matrix": (E, k, A) => x(E, k, A, {}),
        "function, Array, number | BigNumber | Unit": (E, k, A) => {
            var I = m(E, k, [A], {});
            return {
                t: I.t,
                y: I.y.map(T => T[0])
            }
        }
        ,
        "function, Matrix, number | BigNumber | Unit": (E, k, A) => {
            var I = m(E, k.toArray(), [A], {});
            return {
                t: h(I.t),
                y: h(I.y.map(T => T[0]))
            }
        }
        ,
        "function, Array, number | BigNumber | Unit, Object": (E, k, A, I) => {
            var T = m(E, k, [A], I);
            return {
                t: T.t,
                y: T.y.map(F => F[0])
            }
        }
        ,
        "function, Matrix, number | BigNumber | Unit, Object": (E, k, A, I) => {
            var T = m(E, k.toArray(), [A], I);
            return {
                t: h(T.t),
                y: h(T.y.map(F => F[0]))
            }
        }
    })
}
)
  , _z = "erf"
  , bz = ["typed"]
  , Cz = j(_z, bz, e => {
    var {typed: t} = e;
    return t("name", {
        number: function(o) {
            var s = Math.abs(o);
            return s >= Az ? go(o) : s <= Sz ? go(o) * r(s) : s <= 4 ? go(o) * (1 - a(s)) : go(o) * (1 - n(s))
        },
        "Array | Matrix": t.referToSelf(i => o => dt(o, i))
    });
    function r(i) {
        var o = i * i, s = Ai[0][4] * o, l = o, u;
        for (u = 0; u < 3; u += 1)
            s = (s + Ai[0][u]) * o,
            l = (l + el[0][u]) * o;
        return i * (s + Ai[0][3]) / (l + el[0][3])
    }
    function a(i) {
        var o = Ai[1][8] * i, s = i, l;
        for (l = 0; l < 7; l += 1)
            o = (o + Ai[1][l]) * i,
            s = (s + el[1][l]) * i;
        var u = (o + Ai[1][7]) / (s + el[1][7])
          , c = parseInt(i * 16) / 16
          , d = (i - c) * (i + c);
        return Math.exp(-c * c) * Math.exp(-d) * u
    }
    function n(i) {
        var o = 1 / (i * i), s = Ai[2][5] * o, l = o, u;
        for (u = 0; u < 4; u += 1)
            s = (s + Ai[2][u]) * o,
            l = (l + el[2][u]) * o;
        var c = o * (s + Ai[2][4]) / (l + el[2][4]);
        c = (xz - c) / i,
        o = parseInt(i * 16) / 16;
        var d = (i - o) * (i + o);
        return Math.exp(-o * o) * Math.exp(-d) * c
    }
}
)
  , Sz = .46875
  , xz = .5641895835477563
  , Ai = [[3.1611237438705655, 113.86415415105016, 377.485237685302, 3209.3775891384694, .18577770618460315], [.5641884969886701, 8.883149794388377, 66.11919063714163, 298.6351381974001, 881.952221241769, 1712.0476126340707, 2051.0783778260716, 1230.3393547979972, 21531153547440383e-24], [.30532663496123236, .36034489994980445, .12578172611122926, .016083785148742275, .0006587491615298378, .016315387137302097]]
  , el = [[23.601290952344122, 244.02463793444417, 1282.6165260773723, 2844.236833439171], [15.744926110709835, 117.6939508913125, 537.1811018620099, 1621.3895745666903, 3290.7992357334597, 4362.619090143247, 3439.3676741437216, 1230.3393548037495], [2.568520192289822, 1.8729528499234604, .5279051029514285, .06051834131244132, .0023352049762686918]]
  , Az = Math.pow(2, 53)
  , x6 = "zeta"
  , Ez = ["typed", "config", "multiply", "pow", "divide", "factorial", "equal", "smallerEq", "isNegative", "gamma", "sin", "subtract", "add", "?Complex", "?BigNumber", "pi"]
  , kz = j(x6, Ez, e => {
    var {typed: t, config: r, multiply: a, pow: n, divide: i, factorial: o, equal: s, smallerEq: l, isNegative: u, gamma: c, sin: d, subtract: v, add: h, Complex: p, BigNumber: f, pi: _} = e;
    return t(x6, {
        number: b => y(b, x => x, () => 20),
        BigNumber: b => y(b, x => new f(x), () => Math.abs(Math.log10(r.epsilon))),
        Complex: g
    });
    function y(b, x, E) {
        return s(b, 0) ? x(-.5) : s(b, 1) ? x(NaN) : isFinite(b) ? m(b, x, E, k => k) : u(b) ? x(NaN) : x(1)
    }
    function g(b) {
        return b.re === 0 && b.im === 0 ? new p(-.5) : b.re === 1 ? new p(NaN,NaN) : b.re === 1 / 0 && b.im === 0 ? new p(1) : b.im === 1 / 0 || b.re === -1 / 0 ? new p(NaN,NaN) : m(b, x => x, x => Math.round(1.3 * 15 + .9 * Math.abs(x.im)), x => x.re)
    }
    function m(b, x, E, k) {
        var A = E(b);
        if (k(b) > -(A - 1) / 2)
            return C(b, x(A), x);
        var I = a(n(2, b), n(x(_), v(b, 1)));
        return I = a(I, d(a(i(x(_), 2), b))),
        I = a(I, c(v(1, b))),
        a(I, m(v(1, b), x, E, k))
    }
    function w(b, x) {
        for (var E = b, k = b; l(k, x); k = h(k, 1)) {
            var A = i(a(o(h(x, v(k, 1))), n(4, k)), a(o(v(x, k)), o(a(2, k))));
            E = h(E, A)
        }
        return a(x, E)
    }
    function C(b, x, E) {
        for (var k = i(1, a(w(E(0), x), v(1, n(2, v(1, b))))), A = E(0), I = E(1); l(I, x); I = h(I, 1))
            A = h(A, i(a((-1) ** (I - 1), w(I, x)), n(I, b)));
        return a(k, A)
    }
}
)
  , A6 = "mode"
  , Tz = ["typed", "isNaN", "isNumeric"]
  , Nz = j(A6, Tz, e => {
    var {typed: t, isNaN: r, isNumeric: a} = e;
    return t(A6, {
        "Array | Matrix": n,
        "...": function(o) {
            return n(o)
        }
    });
    function n(i) {
        i = bt(i.valueOf());
        var o = i.length;
        if (o === 0)
            throw new Error("Cannot calculate mode of an empty array");
        for (var s = {}, l = [], u = 0, c = 0; c < i.length; c++) {
            var d = i[c];
            if (a(d) && r(d))
                throw new Error("Cannot calculate mode of an array containing NaN values");
            d in s || (s[d] = 0),
            s[d]++,
            s[d] === u ? l.push(d) : s[d] > u && (u = s[d],
            l = [d])
        }
        return l
    }
}
);
function da(e, t, r) {
    var a;
    return String(e).indexOf("Unexpected type") !== -1 ? (a = arguments.length > 2 ? " (type: " + Bt(r) + ", value: " + JSON.stringify(r) + ")" : " (type: " + e.data.actual + ")",
    new TypeError("Cannot calculate " + t + ", unexpected type of argument" + a)) : String(e).indexOf("complex numbers") !== -1 ? (a = arguments.length > 2 ? " (type: " + Bt(r) + ", value: " + JSON.stringify(r) + ")" : "",
    new TypeError("Cannot calculate " + t + ", no ordering relation is defined for complex numbers" + a)) : e
}
var E6 = "prod"
  , Mz = ["typed", "config", "multiplyScalar", "numeric"]
  , Iz = j(E6, Mz, e => {
    var {typed: t, config: r, multiplyScalar: a, numeric: n} = e;
    return t(E6, {
        "Array | Matrix": i,
        "Array | Matrix, number | BigNumber": function(s, l) {
            throw new Error("prod(A, dim) is not yet supported")
        },
        "...": function(s) {
            return i(s)
        }
    });
    function i(o) {
        var s;
        if (Gi(o, function(l) {
            try {
                s = s === void 0 ? l : a(s, l)
            } catch (u) {
                throw da(u, "prod", l)
            }
        }),
        typeof s == "string" && (s = n(s, r.number)),
        s === void 0)
            throw new Error("Cannot calculate prod of an empty array");
        return s
    }
}
)
  , k6 = "format"
  , Dz = ["typed"]
  , Uz = j(k6, Dz, e => {
    var {typed: t} = e;
    return t(k6, {
        any: st,
        "any, Object | function | number": st
    })
}
)
  , T6 = "bin"
  , Fz = ["typed", "format"]
  , Oz = j(T6, Fz, e => {
    var {typed: t, format: r} = e;
    return t(T6, {
        "number | BigNumber": function(n) {
            return r(n, {
                notation: "bin"
            })
        },
        "number | BigNumber, number": function(n, i) {
            return r(n, {
                notation: "bin",
                wordSize: i
            })
        }
    })
}
)
  , N6 = "oct"
  , Pz = ["typed", "format"]
  , Bz = j(N6, Pz, e => {
    var {typed: t, format: r} = e;
    return t(N6, {
        "number | BigNumber": function(n) {
            return r(n, {
                notation: "oct"
            })
        },
        "number | BigNumber, number": function(n, i) {
            return r(n, {
                notation: "oct",
                wordSize: i
            })
        }
    })
}
)
  , M6 = "hex"
  , Rz = ["typed", "format"]
  , Lz = j(M6, Rz, e => {
    var {typed: t, format: r} = e;
    return t(M6, {
        "number | BigNumber": function(n) {
            return r(n, {
                notation: "hex"
            })
        },
        "number | BigNumber, number": function(n, i) {
            return r(n, {
                notation: "hex",
                wordSize: i
            })
        }
    })
}
)
  , lk = /\$([\w.]+)/g
  , I6 = "print"
  , qz = ["typed"]
  , uk = j(I6, qz, e => {
    var {typed: t} = e;
    return t(I6, {
        "string, Object | Array": D6,
        "string, Object | Array, number | Object": D6
    })
}
);
function D6(e, t, r) {
    return e.replace(lk, function(a, n) {
        var i = n.split(".")
          , o = t[i.shift()];
        for (o !== void 0 && o.isMatrix && (o = o.toArray()); i.length && o !== void 0; ) {
            var s = i.shift();
            o = s ? o[s] : o + "."
        }
        return o !== void 0 ? Wr(o) ? o : st(o, r) : a
    })
}
var U6 = "to"
  , Vz = ["typed", "matrix", "concat"]
  , $z = j(U6, Vz, e => {
    var {typed: t, matrix: r, concat: a} = e
      , n = Vt({
        typed: t,
        matrix: r,
        concat: a
    });
    return t(U6, {
        "Unit, Unit | string": (i, o) => i.to(o)
    }, n({
        Ds: !0
    }))
}
)
  , F6 = "isPrime"
  , zz = ["typed"]
  , Gz = j(F6, zz, e => {
    var {typed: t} = e;
    return t(F6, {
        number: function(a) {
            if (a * 0 !== 0)
                return !1;
            if (a <= 3)
                return a > 1;
            if (a % 2 === 0 || a % 3 === 0)
                return !1;
            for (var n = 5; n * n <= a; n += 6)
                if (a % n === 0 || a % (n + 2) === 0)
                    return !1;
            return !0
        },
        BigNumber: function(a) {
            if (a.toNumber() * 0 !== 0)
                return !1;
            if (a.lte(3))
                return a.gt(1);
            if (a.mod(2).eq(0) || a.mod(3).eq(0))
                return !1;
            if (a.lt(Math.pow(2, 32))) {
                for (var n = a.toNumber(), i = 5; i * i <= n; i += 6)
                    if (n % i === 0 || n % (i + 2) === 0)
                        return !1;
                return !0
            }
            function o(g, m, w) {
                for (var C = 1; !m.eq(0); )
                    m.mod(2).eq(0) ? (m = m.div(2),
                    g = g.mul(g).mod(w)) : (m = m.sub(1),
                    C = g.mul(C).mod(w));
                return C
            }
            var s = a.constructor.clone({
                precision: a.toFixed(0).length * 2
            });
            a = new s(a);
            for (var l = 0, u = a.sub(1); u.mod(2).eq(0); )
                u = u.div(2),
                l += 1;
            var c = null;
            if (a.lt("3317044064679887385961981"))
                c = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41].filter(g => g < a);
            else {
                var d = Math.min(a.toNumber() - 2, Math.floor(2 * Math.pow(a.toFixed(0).length * Math.log(10), 2)));
                c = [];
                for (var v = 2; v <= d; v += 1)
                    c.push(d)
            }
            for (var h = 0; h < c.length; h += 1) {
                var p = c[h]
                  , f = o(a.sub(a).add(p), u, a);
                if (!f.eq(1)) {
                    for (var _ = 0, y = f; !y.eq(a.sub(1)); _ += 1,
                    y = y.mul(y).mod(a))
                        if (_ === l - 1)
                            return !1
                }
            }
            return !0
        },
        "Array | Matrix": t.referToSelf(r => a => dt(a, r))
    })
}
)
  , jz = "numeric"
  , Hz = ["number", "?bignumber", "?fraction"]
  , Wz = j(jz, Hz, e => {
    var {number: t, bignumber: r, fraction: a} = e
      , n = {
        string: !0,
        number: !0,
        BigNumber: !0,
        Fraction: !0
    }
      , i = {
        number: o => t(o),
        BigNumber: r ? o => r(o) : m2,
        Fraction: a ? o => a(o) : ak
    };
    return function(s) {
        var l = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "number"
          , u = arguments.length > 2 ? arguments[2] : void 0;
        if (u !== void 0)
            throw new SyntaxError("numeric() takes one or two arguments");
        var c = Bt(s);
        if (!(c in n))
            throw new TypeError("Cannot convert " + s + ' of type "' + c + '"; valid input types are ' + Object.keys(n).join(", "));
        if (!(l in i))
            throw new TypeError("Cannot convert " + s + ' to type "' + l + '"; valid output types are ' + Object.keys(i).join(", "));
        return l === c ? s : i[l](s)
    }
}
)
  , O6 = "divideScalar"
  , Yz = ["typed", "numeric"]
  , Jz = j(O6, Yz, e => {
    var {typed: t, numeric: r} = e;
    return t(O6, {
        "number, number": function(n, i) {
            return n / i
        },
        "Complex, Complex": function(n, i) {
            return n.div(i)
        },
        "BigNumber, BigNumber": function(n, i) {
            return n.div(i)
        },
        "Fraction, Fraction": function(n, i) {
            return n.div(i)
        },
        "Unit, number | Complex | Fraction | BigNumber | Unit": (a, n) => a.divide(n),
        "number | Fraction | Complex | BigNumber, Unit": (a, n) => n.divideInto(a)
    })
}
)
  , P6 = "pow"
  , Kz = ["typed", "config", "identity", "multiply", "matrix", "inv", "fraction", "number", "Complex"]
  , Qz = j(P6, Kz, e => {
    var {typed: t, config: r, identity: a, multiply: n, matrix: i, inv: o, number: s, fraction: l, Complex: u} = e;
    return t(P6, {
        "number, number": c,
        "Complex, Complex": function(p, f) {
            return p.pow(f)
        },
        "BigNumber, BigNumber": function(p, f) {
            return f.isInteger() || p >= 0 || r.predictable ? p.pow(f) : new u(p.toNumber(),0).pow(f.toNumber(), 0)
        },
        "Fraction, Fraction": function(p, f) {
            var _ = p.pow(f);
            if (_ != null)
                return _;
            if (r.predictable)
                throw new Error("Result of pow is non-rational and cannot be expressed as a fraction");
            return c(p.valueOf(), f.valueOf())
        },
        "Array, number": d,
        "Array, BigNumber": function(p, f) {
            return d(p, f.toNumber())
        },
        "Matrix, number": v,
        "Matrix, BigNumber": function(p, f) {
            return v(p, f.toNumber())
        },
        "Unit, number | BigNumber": function(p, f) {
            return p.pow(f)
        }
    });
    function c(h, p) {
        if (r.predictable && !Be(p) && h < 0)
            try {
                var f = l(p)
                  , _ = s(f);
                if ((p === _ || Math.abs((p - _) / p) < 1e-14) && f.d % 2 === 1)
                    return (f.n % 2 === 0 ? 1 : -1) * Math.pow(-h, p)
            } catch {}
        return r.predictable && (h < -1 && p === 1 / 0 || h > -1 && h < 0 && p === -1 / 0) ? NaN : Be(p) || h >= 0 || r.predictable ? p4(h, p) : h * h < 1 && p === 1 / 0 || h * h > 1 && p === -1 / 0 ? 0 : new u(h,0).pow(p, 0)
    }
    function d(h, p) {
        if (!Be(p))
            throw new TypeError("For A^b, b must be an integer (value is " + p + ")");
        var f = it(h);
        if (f.length !== 2)
            throw new Error("For A^b, A must be 2 dimensional (A has " + f.length + " dimensions)");
        if (f[0] !== f[1])
            throw new Error("For A^b, A must be square (size is " + f[0] + "x" + f[1] + ")");
        if (p < 0)
            try {
                return d(o(h), -p)
            } catch (g) {
                throw g.message === "Cannot calculate inverse, determinant is zero" ? new TypeError("For A^b, when A is not invertible, b must be a positive integer (value is " + p + ")") : g
            }
        for (var _ = a(f[0]).valueOf(), y = h; p >= 1; )
            (p & 1) === 1 && (_ = n(y, _)),
            p >>= 1,
            y = n(y, y);
        return _
    }
    function v(h, p) {
        return i(d(h.valueOf(), p))
    }
}
)
  , tl = "Number of decimals in function round must be an integer"
  , B6 = "round"
  , Zz = ["typed", "matrix", "equalScalar", "zeros", "BigNumber", "DenseMatrix"]
  , Xz = j(B6, Zz, e => {
    var {typed: t, matrix: r, equalScalar: a, zeros: n, BigNumber: i, DenseMatrix: o} = e
      , s = Lr({
        typed: t,
        equalScalar: a
    })
      , l = Sr({
        typed: t,
        DenseMatrix: o
    })
      , u = jn({
        typed: t
    });
    return t(B6, {
        number: eb,
        "number, number": eb,
        "number, BigNumber": function(d, v) {
            if (!v.isInteger())
                throw new TypeError(tl);
            return new i(d).toDecimalPlaces(v.toNumber())
        },
        Complex: function(d) {
            return d.round()
        },
        "Complex, number": function(d, v) {
            if (v % 1)
                throw new TypeError(tl);
            return d.round(v)
        },
        "Complex, BigNumber": function(d, v) {
            if (!v.isInteger())
                throw new TypeError(tl);
            var h = v.toNumber();
            return d.round(h)
        },
        BigNumber: function(d) {
            return d.toDecimalPlaces(0)
        },
        "BigNumber, BigNumber": function(d, v) {
            if (!v.isInteger())
                throw new TypeError(tl);
            return d.toDecimalPlaces(v.toNumber())
        },
        Fraction: function(d) {
            return d.round()
        },
        "Fraction, number": function(d, v) {
            if (v % 1)
                throw new TypeError(tl);
            return d.round(v)
        },
        "Fraction, BigNumber": function(d, v) {
            if (!v.isInteger())
                throw new TypeError(tl);
            return d.round(v.toNumber())
        },
        "Array | Matrix": t.referToSelf(c => d => dt(d, c)),
        "SparseMatrix, number | BigNumber": t.referToSelf(c => (d, v) => s(d, v, c, !1)),
        "DenseMatrix, number | BigNumber": t.referToSelf(c => (d, v) => u(d, v, c, !1)),
        "Array, number | BigNumber": t.referToSelf(c => (d, v) => u(r(d), v, c, !1).valueOf()),
        "number | Complex | BigNumber | Fraction, SparseMatrix": t.referToSelf(c => (d, v) => a(d, 0) ? n(v.size(), v.storage()) : l(v, d, c, !0)),
        "number | Complex | BigNumber | Fraction, DenseMatrix": t.referToSelf(c => (d, v) => a(d, 0) ? n(v.size(), v.storage()) : u(v, d, c, !0)),
        "number | Complex | BigNumber | Fraction, Array": t.referToSelf(c => (d, v) => u(r(v), d, c, !0).valueOf())
    })
}
)
  , R6 = "log"
  , eG = ["config", "typed", "divideScalar", "Complex"]
  , tG = j(R6, eG, e => {
    var {typed: t, config: r, divideScalar: a, Complex: n} = e;
    return t(R6, {
        number: function(o) {
            return o >= 0 || r.predictable ? eL(o) : new n(o,0).log()
        },
        Complex: function(o) {
            return o.log()
        },
        BigNumber: function(o) {
            return !o.isNegative() || r.predictable ? o.ln() : new n(o.toNumber(),0).log()
        },
        "any, any": t.referToSelf(i => (o, s) => a(i(o), i(s)))
    })
}
)
  , L6 = "log1p"
  , rG = ["typed", "config", "divideScalar", "log", "Complex"]
  , aG = j(L6, rG, e => {
    var {typed: t, config: r, divideScalar: a, log: n, Complex: i} = e;
    return t(L6, {
        number: function(l) {
            return l >= -1 || r.predictable ? ZP(l) : o(new i(l,0))
        },
        Complex: o,
        BigNumber: function(l) {
            var u = l.plus(1);
            return !u.isNegative() || r.predictable ? u.ln() : o(new i(l.toNumber(),0))
        },
        "Array | Matrix": t.referToSelf(s => l => dt(l, s)),
        "any, any": t.referToSelf(s => (l, u) => a(s(l), n(u)))
    });
    function o(s) {
        var l = s.re + 1;
        return new i(Math.log(Math.sqrt(l * l + s.im * s.im)),Math.atan2(s.im, l))
    }
}
)
  , q6 = "nthRoots"
  , nG = ["config", "typed", "divideScalar", "Complex"]
  , iG = j(q6, nG, e => {
    var {typed: t, config: r, divideScalar: a, Complex: n} = e
      , i = [function(l) {
        return new n(l,0)
    }
    , function(l) {
        return new n(0,l)
    }
    , function(l) {
        return new n(-l,0)
    }
    , function(l) {
        return new n(0,-l)
    }
    ];
    function o(s, l) {
        if (l < 0)
            throw new Error("Root must be greater than zero");
        if (l === 0)
            throw new Error("Root must be non-zero");
        if (l % 1 !== 0)
            throw new Error("Root must be an integer");
        if (s === 0 || s.abs() === 0)
            return [new n(0,0)];
        var u = typeof s == "number", c;
        (u || s.re === 0 || s.im === 0) && (u ? c = 2 * +(s < 0) : s.im === 0 ? c = 2 * +(s.re < 0) : c = 2 * +(s.im < 0) + 1);
        for (var d = s.arg(), v = s.abs(), h = [], p = Math.pow(v, 1 / l), f = 0; f < l; f++) {
            var _ = (c + 4 * f) / l;
            if (_ === Math.round(_)) {
                h.push(i[_ % 4](p));
                continue
            }
            h.push(new n({
                r: p,
                phi: (d + 2 * Math.PI * f) / l
            }))
        }
        return h
    }
    return t(q6, {
        Complex: function(l) {
            return o(l, 2)
        },
        "Complex, number": o
    })
}
)
  , V6 = "dotPow"
  , oG = ["typed", "equalScalar", "matrix", "pow", "DenseMatrix", "concat"]
  , sG = j(V6, oG, e => {
    var {typed: t, equalScalar: r, matrix: a, pow: n, DenseMatrix: i, concat: o} = e
      , s = fa({
        typed: t
    })
      , l = hi({
        typed: t,
        DenseMatrix: i
    })
      , u = Lr({
        typed: t,
        equalScalar: r
    })
      , c = Sr({
        typed: t,
        DenseMatrix: i
    })
      , d = Vt({
        typed: t,
        matrix: a,
        concat: o
    })
      , v = {};
    for (var h in n.signatures)
        Object.prototype.hasOwnProperty.call(n.signatures, h) && !h.includes("Matrix") && !h.includes("Array") && (v[h] = n.signatures[h]);
    var p = t(v);
    return t(V6, d({
        elop: p,
        SS: l,
        DS: s,
        Ss: u,
        sS: c
    }))
}
)
  , $6 = "dotDivide"
  , lG = ["typed", "matrix", "equalScalar", "divideScalar", "DenseMatrix", "concat"]
  , uG = j($6, lG, e => {
    var {typed: t, matrix: r, equalScalar: a, divideScalar: n, DenseMatrix: i, concat: o} = e
      , s = Hn({
        typed: t,
        equalScalar: a
    })
      , l = fa({
        typed: t
    })
      , u = hi({
        typed: t,
        DenseMatrix: i
    })
      , c = Lr({
        typed: t,
        equalScalar: a
    })
      , d = Sr({
        typed: t,
        DenseMatrix: i
    })
      , v = Vt({
        typed: t,
        matrix: r,
        concat: o
    });
    return t($6, v({
        elop: n,
        SS: u,
        DS: l,
        SD: s,
        Ss: c,
        sS: d
    }))
}
);
function nd(e) {
    var {DenseMatrix: t} = e;
    return function(a, n, i) {
        var o = a.size();
        if (o.length !== 2)
            throw new RangeError("Matrix must be two dimensional (size: " + st(o) + ")");
        var s = o[0]
          , l = o[1];
        if (s !== l)
            throw new RangeError("Matrix must be square (size: " + st(o) + ")");
        var u = [];
        if (je(n)) {
            var c = n.size()
              , d = n._data;
            if (c.length === 1) {
                if (c[0] !== s)
                    throw new RangeError("Dimension mismatch. Matrix columns must match vector length.");
                for (var v = 0; v < s; v++)
                    u[v] = [d[v]];
                return new t({
                    data: u,
                    size: [s, 1],
                    datatype: n._datatype
                })
            }
            if (c.length === 2) {
                if (c[0] !== s || c[1] !== 1)
                    throw new RangeError("Dimension mismatch. Matrix columns must match vector length.");
                if (Ah(n)) {
                    if (i) {
                        u = [];
                        for (var h = 0; h < s; h++)
                            u[h] = [d[h][0]];
                        return new t({
                            data: u,
                            size: [s, 1],
                            datatype: n._datatype
                        })
                    }
                    return n
                }
                if (ds(n)) {
                    for (var p = 0; p < s; p++)
                        u[p] = [0];
                    for (var f = n._values, _ = n._index, y = n._ptr, g = y[1], m = y[0]; m < g; m++) {
                        var w = _[m];
                        u[w][0] = f[m]
                    }
                    return new t({
                        data: u,
                        size: [s, 1],
                        datatype: n._datatype
                    })
                }
            }
            throw new RangeError("Dimension mismatch. The right side has to be either 1- or 2-dimensional vector.")
        }
        if (At(n)) {
            var C = it(n);
            if (C.length === 1) {
                if (C[0] !== s)
                    throw new RangeError("Dimension mismatch. Matrix columns must match vector length.");
                for (var b = 0; b < s; b++)
                    u[b] = [n[b]];
                return new t({
                    data: u,
                    size: [s, 1]
                })
            }
            if (C.length === 2) {
                if (C[0] !== s || C[1] !== 1)
                    throw new RangeError("Dimension mismatch. Matrix columns must match vector length.");
                for (var x = 0; x < s; x++)
                    u[x] = [n[x][0]];
                return new t({
                    data: u,
                    size: [s, 1]
                })
            }
            throw new RangeError("Dimension mismatch. The right side has to be either 1- or 2-dimensional vector.")
        }
    }
}
var z6 = "lsolve"
  , cG = ["typed", "matrix", "divideScalar", "multiplyScalar", "subtract", "equalScalar", "DenseMatrix"]
  , dG = j(z6, cG, e => {
    var {typed: t, matrix: r, divideScalar: a, multiplyScalar: n, subtract: i, equalScalar: o, DenseMatrix: s} = e
      , l = nd({
        DenseMatrix: s
    });
    return t(z6, {
        "SparseMatrix, Array | Matrix": function(v, h) {
            return c(v, h)
        },
        "DenseMatrix, Array | Matrix": function(v, h) {
            return u(v, h)
        },
        "Array, Array | Matrix": function(v, h) {
            var p = r(v)
              , f = u(p, h);
            return f.valueOf()
        }
    });
    function u(d, v) {
        v = l(d, v, !0);
        for (var h = v._data, p = d._size[0], f = d._size[1], _ = [], y = d._data, g = 0; g < f; g++) {
            var m = h[g][0] || 0
              , w = void 0;
            if (o(m, 0))
                w = 0;
            else {
                var C = y[g][g];
                if (o(C, 0))
                    throw new Error("Linear system cannot be solved since matrix is singular");
                w = a(m, C);
                for (var b = g + 1; b < p; b++)
                    h[b] = [i(h[b][0] || 0, n(w, y[b][g]))]
            }
            _[g] = [w]
        }
        return new s({
            data: _,
            size: [p, 1]
        })
    }
    function c(d, v) {
        v = l(d, v, !0);
        for (var h = v._data, p = d._size[0], f = d._size[1], _ = d._values, y = d._index, g = d._ptr, m = [], w = 0; w < f; w++) {
            var C = h[w][0] || 0;
            if (o(C, 0))
                m[w] = [0];
            else {
                for (var b = 0, x = [], E = [], k = g[w], A = g[w + 1], I = k; I < A; I++) {
                    var T = y[I];
                    T === w ? b = _[I] : T > w && (x.push(_[I]),
                    E.push(T))
                }
                if (o(b, 0))
                    throw new Error("Linear system cannot be solved since matrix is singular");
                for (var F = a(C, b), R = 0, O = E.length; R < O; R++) {
                    var M = E[R];
                    h[M] = [i(h[M][0] || 0, n(F, x[R]))]
                }
                m[w] = [F]
            }
        }
        return new s({
            data: m,
            size: [p, 1]
        })
    }
}
)
  , G6 = "usolve"
  , vG = ["typed", "matrix", "divideScalar", "multiplyScalar", "subtract", "equalScalar", "DenseMatrix"]
  , hG = j(G6, vG, e => {
    var {typed: t, matrix: r, divideScalar: a, multiplyScalar: n, subtract: i, equalScalar: o, DenseMatrix: s} = e
      , l = nd({
        DenseMatrix: s
    });
    return t(G6, {
        "SparseMatrix, Array | Matrix": function(v, h) {
            return c(v, h)
        },
        "DenseMatrix, Array | Matrix": function(v, h) {
            return u(v, h)
        },
        "Array, Array | Matrix": function(v, h) {
            var p = r(v)
              , f = u(p, h);
            return f.valueOf()
        }
    });
    function u(d, v) {
        v = l(d, v, !0);
        for (var h = v._data, p = d._size[0], f = d._size[1], _ = [], y = d._data, g = f - 1; g >= 0; g--) {
            var m = h[g][0] || 0
              , w = void 0;
            if (o(m, 0))
                w = 0;
            else {
                var C = y[g][g];
                if (o(C, 0))
                    throw new Error("Linear system cannot be solved since matrix is singular");
                w = a(m, C);
                for (var b = g - 1; b >= 0; b--)
                    h[b] = [i(h[b][0] || 0, n(w, y[b][g]))]
            }
            _[g] = [w]
        }
        return new s({
            data: _,
            size: [p, 1]
        })
    }
    function c(d, v) {
        v = l(d, v, !0);
        for (var h = v._data, p = d._size[0], f = d._size[1], _ = d._values, y = d._index, g = d._ptr, m = [], w = f - 1; w >= 0; w--) {
            var C = h[w][0] || 0;
            if (o(C, 0))
                m[w] = [0];
            else {
                for (var b = 0, x = [], E = [], k = g[w], A = g[w + 1], I = A - 1; I >= k; I--) {
                    var T = y[I];
                    T === w ? b = _[I] : T < w && (x.push(_[I]),
                    E.push(T))
                }
                if (o(b, 0))
                    throw new Error("Linear system cannot be solved since matrix is singular");
                for (var F = a(C, b), R = 0, O = E.length; R < O; R++) {
                    var M = E[R];
                    h[M] = [i(h[M][0], n(F, x[R]))]
                }
                m[w] = [F]
            }
        }
        return new s({
            data: m,
            size: [p, 1]
        })
    }
}
)
  , j6 = "lsolveAll"
  , mG = ["typed", "matrix", "divideScalar", "multiplyScalar", "subtract", "equalScalar", "DenseMatrix"]
  , fG = j(j6, mG, e => {
    var {typed: t, matrix: r, divideScalar: a, multiplyScalar: n, subtract: i, equalScalar: o, DenseMatrix: s} = e
      , l = nd({
        DenseMatrix: s
    });
    return t(j6, {
        "SparseMatrix, Array | Matrix": function(v, h) {
            return c(v, h)
        },
        "DenseMatrix, Array | Matrix": function(v, h) {
            return u(v, h)
        },
        "Array, Array | Matrix": function(v, h) {
            var p = r(v)
              , f = u(p, h);
            return f.map(_ => _.valueOf())
        }
    });
    function u(d, v) {
        for (var h = [l(d, v, !0)._data.map(E => E[0])], p = d._data, f = d._size[0], _ = d._size[1], y = 0; y < _; y++)
            for (var g = h.length, m = 0; m < g; m++) {
                var w = h[m];
                if (o(p[y][y], 0))
                    if (o(w[y], 0)) {
                        if (m === 0) {
                            var b = [...w];
                            b[y] = 1;
                            for (var x = y + 1; x < _; x++)
                                b[x] = i(b[x], p[x][y]);
                            h.push(b)
                        }
                    } else {
                        if (m === 0)
                            return [];
                        h.splice(m, 1),
                        m -= 1,
                        g -= 1
                    }
                else {
                    w[y] = a(w[y], p[y][y]);
                    for (var C = y + 1; C < _; C++)
                        w[C] = i(w[C], n(w[y], p[C][y]))
                }
            }
        return h.map(E => new s({
            data: E.map(k => [k]),
            size: [f, 1]
        }))
    }
    function c(d, v) {
        for (var h = [l(d, v, !0)._data.map(J => J[0])], p = d._size[0], f = d._size[1], _ = d._values, y = d._index, g = d._ptr, m = 0; m < f; m++)
            for (var w = h.length, C = 0; C < w; C++) {
                for (var b = h[C], x = [], E = [], k = g[m], A = g[m + 1], I = 0, T = k; T < A; T++) {
                    var F = y[T];
                    F === m ? I = _[T] : F > m && (x.push(_[T]),
                    E.push(F))
                }
                if (o(I, 0))
                    if (o(b[m], 0)) {
                        if (C === 0) {
                            var N = [...b];
                            N[m] = 1;
                            for (var B = 0, D = E.length; B < D; B++) {
                                var V = E[B];
                                N[V] = i(N[V], x[B])
                            }
                            h.push(N)
                        }
                    } else {
                        if (C === 0)
                            return [];
                        h.splice(C, 1),
                        C -= 1,
                        w -= 1
                    }
                else {
                    b[m] = a(b[m], I);
                    for (var R = 0, O = E.length; R < O; R++) {
                        var M = E[R];
                        b[M] = i(b[M], n(b[m], x[R]))
                    }
                }
            }
        return h.map(J => new s({
            data: J.map(Y => [Y]),
            size: [p, 1]
        }))
    }
}
)
  , H6 = "usolveAll"
  , pG = ["typed", "matrix", "divideScalar", "multiplyScalar", "subtract", "equalScalar", "DenseMatrix"]
  , yG = j(H6, pG, e => {
    var {typed: t, matrix: r, divideScalar: a, multiplyScalar: n, subtract: i, equalScalar: o, DenseMatrix: s} = e
      , l = nd({
        DenseMatrix: s
    });
    return t(H6, {
        "SparseMatrix, Array | Matrix": function(v, h) {
            return c(v, h)
        },
        "DenseMatrix, Array | Matrix": function(v, h) {
            return u(v, h)
        },
        "Array, Array | Matrix": function(v, h) {
            var p = r(v)
              , f = u(p, h);
            return f.map(_ => _.valueOf())
        }
    });
    function u(d, v) {
        for (var h = [l(d, v, !0)._data.map(E => E[0])], p = d._data, f = d._size[0], _ = d._size[1], y = _ - 1; y >= 0; y--)
            for (var g = h.length, m = 0; m < g; m++) {
                var w = h[m];
                if (o(p[y][y], 0))
                    if (o(w[y], 0)) {
                        if (m === 0) {
                            var b = [...w];
                            b[y] = 1;
                            for (var x = y - 1; x >= 0; x--)
                                b[x] = i(b[x], p[x][y]);
                            h.push(b)
                        }
                    } else {
                        if (m === 0)
                            return [];
                        h.splice(m, 1),
                        m -= 1,
                        g -= 1
                    }
                else {
                    w[y] = a(w[y], p[y][y]);
                    for (var C = y - 1; C >= 0; C--)
                        w[C] = i(w[C], n(w[y], p[C][y]))
                }
            }
        return h.map(E => new s({
            data: E.map(k => [k]),
            size: [f, 1]
        }))
    }
    function c(d, v) {
        for (var h = [l(d, v, !0)._data.map(J => J[0])], p = d._size[0], f = d._size[1], _ = d._values, y = d._index, g = d._ptr, m = f - 1; m >= 0; m--)
            for (var w = h.length, C = 0; C < w; C++) {
                for (var b = h[C], x = [], E = [], k = g[m], A = g[m + 1], I = 0, T = A - 1; T >= k; T--) {
                    var F = y[T];
                    F === m ? I = _[T] : F < m && (x.push(_[T]),
                    E.push(F))
                }
                if (o(I, 0))
                    if (o(b[m], 0)) {
                        if (C === 0) {
                            var N = [...b];
                            N[m] = 1;
                            for (var B = 0, D = E.length; B < D; B++) {
                                var V = E[B];
                                N[V] = i(N[V], x[B])
                            }
                            h.push(N)
                        }
                    } else {
                        if (C === 0)
                            return [];
                        h.splice(C, 1),
                        C -= 1,
                        w -= 1
                    }
                else {
                    b[m] = a(b[m], I);
                    for (var R = 0, O = E.length; R < O; R++) {
                        var M = E[R];
                        b[M] = i(b[M], n(b[m], x[R]))
                    }
                }
            }
        return h.map(J => new s({
            data: J.map(Y => [Y]),
            size: [p, 1]
        }))
    }
}
)
  , wG = "matAlgo08xS0Sid"
  , gG = ["typed", "equalScalar"]
  , f2 = j(wG, gG, e => {
    var {typed: t, equalScalar: r} = e;
    return function(n, i, o) {
        var s = n._values
          , l = n._index
          , u = n._ptr
          , c = n._size
          , d = n._datatype
          , v = i._values
          , h = i._index
          , p = i._ptr
          , f = i._size
          , _ = i._datatype;
        if (c.length !== f.length)
            throw new ut(c.length,f.length);
        if (c[0] !== f[0] || c[1] !== f[1])
            throw new RangeError("Dimension mismatch. Matrix A (" + c + ") must match Matrix B (" + f + ")");
        if (!s || !v)
            throw new Error("Cannot perform operation on Pattern Sparse Matrices");
        var y = c[0], g = c[1], m, w = r, C = 0, b = o;
        typeof d == "string" && d === _ && (m = d,
        w = t.find(r, [m, m]),
        C = t.convert(0, m),
        b = t.find(o, [m, m]));
        for (var x = [], E = [], k = [], A = [], I = [], T, F, R, O, M = 0; M < g; M++) {
            k[M] = E.length;
            var N = M + 1;
            for (F = u[M],
            R = u[M + 1],
            T = F; T < R; T++)
                O = l[T],
                I[O] = N,
                A[O] = s[T],
                E.push(O);
            for (F = p[M],
            R = p[M + 1],
            T = F; T < R; T++)
                O = h[T],
                I[O] === N && (A[O] = b(A[O], v[T]));
            for (T = k[M]; T < E.length; ) {
                O = E[T];
                var B = A[O];
                w(B, C) ? E.splice(T, 1) : (x.push(B),
                T++)
            }
        }
        return k[g] = E.length,
        n.createSparseMatrix({
            values: x,
            index: E,
            ptr: k,
            size: [y, g],
            datatype: m
        })
    }
}
)
  , p2 = j("useMatrixForArrayScalar", ["typed", "matrix"], e => {
    var {typed: t, matrix: r} = e;
    return {
        "Array, number": t.referTo("DenseMatrix, number", a => (n, i) => a(r(n), i).valueOf()),
        "Array, BigNumber": t.referTo("DenseMatrix, BigNumber", a => (n, i) => a(r(n), i).valueOf()),
        "number, Array": t.referTo("number, DenseMatrix", a => (n, i) => a(n, r(i)).valueOf()),
        "BigNumber, Array": t.referTo("BigNumber, DenseMatrix", a => (n, i) => a(n, r(i)).valueOf())
    }
}
)
  , W6 = "leftShift"
  , _G = ["typed", "matrix", "equalScalar", "zeros", "DenseMatrix", "concat"]
  , bG = j(W6, _G, e => {
    var {typed: t, matrix: r, equalScalar: a, zeros: n, DenseMatrix: i, concat: o} = e
      , s = zo({
        typed: t
    })
      , l = Hn({
        typed: t,
        equalScalar: a
    })
      , u = f2({
        typed: t,
        equalScalar: a
    })
      , c = Ns({
        typed: t,
        DenseMatrix: i
    })
      , d = Lr({
        typed: t,
        equalScalar: a
    })
      , v = jn({
        typed: t
    })
      , h = Vt({
        typed: t,
        matrix: r,
        concat: o
    })
      , p = p2({
        typed: t,
        matrix: r
    });
    return t(W6, {
        "number, number": b4,
        "BigNumber, BigNumber": qV,
        "SparseMatrix, number | BigNumber": t.referToSelf(f => (_, y) => a(y, 0) ? _.clone() : d(_, y, f, !1)),
        "DenseMatrix, number | BigNumber": t.referToSelf(f => (_, y) => a(y, 0) ? _.clone() : v(_, y, f, !1)),
        "number | BigNumber, SparseMatrix": t.referToSelf(f => (_, y) => a(_, 0) ? n(y.size(), y.storage()) : c(y, _, f, !0)),
        "number | BigNumber, DenseMatrix": t.referToSelf(f => (_, y) => a(_, 0) ? n(y.size(), y.storage()) : v(y, _, f, !0))
    }, p, h({
        SS: u,
        DS: s,
        SD: l
    }))
}
)
  , Y6 = "rightArithShift"
  , CG = ["typed", "matrix", "equalScalar", "zeros", "DenseMatrix", "concat"]
  , SG = j(Y6, CG, e => {
    var {typed: t, matrix: r, equalScalar: a, zeros: n, DenseMatrix: i, concat: o} = e
      , s = zo({
        typed: t
    })
      , l = Hn({
        typed: t,
        equalScalar: a
    })
      , u = f2({
        typed: t,
        equalScalar: a
    })
      , c = Ns({
        typed: t,
        DenseMatrix: i
    })
      , d = Lr({
        typed: t,
        equalScalar: a
    })
      , v = jn({
        typed: t
    })
      , h = Vt({
        typed: t,
        matrix: r,
        concat: o
    })
      , p = p2({
        typed: t,
        matrix: r
    });
    return t(Y6, {
        "number, number": C4,
        "BigNumber, BigNumber": VV,
        "SparseMatrix, number | BigNumber": t.referToSelf(f => (_, y) => a(y, 0) ? _.clone() : d(_, y, f, !1)),
        "DenseMatrix, number | BigNumber": t.referToSelf(f => (_, y) => a(y, 0) ? _.clone() : v(_, y, f, !1)),
        "number | BigNumber, SparseMatrix": t.referToSelf(f => (_, y) => a(_, 0) ? n(y.size(), y.storage()) : c(y, _, f, !0)),
        "number | BigNumber, DenseMatrix": t.referToSelf(f => (_, y) => a(_, 0) ? n(y.size(), y.storage()) : v(y, _, f, !0))
    }, p, h({
        SS: u,
        DS: s,
        SD: l
    }))
}
)
  , J6 = "rightLogShift"
  , xG = ["typed", "matrix", "equalScalar", "zeros", "DenseMatrix", "concat"]
  , AG = j(J6, xG, e => {
    var {typed: t, matrix: r, equalScalar: a, zeros: n, DenseMatrix: i, concat: o} = e
      , s = zo({
        typed: t
    })
      , l = Hn({
        typed: t,
        equalScalar: a
    })
      , u = f2({
        typed: t,
        equalScalar: a
    })
      , c = Ns({
        typed: t,
        DenseMatrix: i
    })
      , d = Lr({
        typed: t,
        equalScalar: a
    })
      , v = jn({
        typed: t
    })
      , h = Vt({
        typed: t,
        matrix: r,
        concat: o
    })
      , p = p2({
        typed: t,
        matrix: r
    });
    return t(J6, {
        "number, number": S4,
        "SparseMatrix, number | BigNumber": t.referToSelf(f => (_, y) => a(y, 0) ? _.clone() : d(_, y, f, !1)),
        "DenseMatrix, number | BigNumber": t.referToSelf(f => (_, y) => a(y, 0) ? _.clone() : v(_, y, f, !1)),
        "number | BigNumber, SparseMatrix": t.referToSelf(f => (_, y) => a(_, 0) ? n(y.size(), y.storage()) : c(y, _, f, !0)),
        "number | BigNumber, DenseMatrix": t.referToSelf(f => (_, y) => a(_, 0) ? n(y.size(), y.storage()) : v(y, _, f, !0))
    }, p, h({
        SS: u,
        DS: s,
        SD: l
    }))
}
)
  , K6 = "and"
  , EG = ["typed", "matrix", "equalScalar", "zeros", "not", "concat"]
  , kG = j(K6, EG, e => {
    var {typed: t, matrix: r, equalScalar: a, zeros: n, not: i, concat: o} = e
      , s = Hn({
        typed: t,
        equalScalar: a
    })
      , l = tf({
        typed: t,
        equalScalar: a
    })
      , u = Lr({
        typed: t,
        equalScalar: a
    })
      , c = jn({
        typed: t
    })
      , d = Vt({
        typed: t,
        matrix: r,
        concat: o
    });
    return t(K6, {
        "number, number": T4,
        "Complex, Complex": function(h, p) {
            return (h.re !== 0 || h.im !== 0) && (p.re !== 0 || p.im !== 0)
        },
        "BigNumber, BigNumber": function(h, p) {
            return !h.isZero() && !p.isZero() && !h.isNaN() && !p.isNaN()
        },
        "Unit, Unit": t.referToSelf(v => (h, p) => v(h.value || 0, p.value || 0)),
        "SparseMatrix, any": t.referToSelf(v => (h, p) => i(p) ? n(h.size(), h.storage()) : u(h, p, v, !1)),
        "DenseMatrix, any": t.referToSelf(v => (h, p) => i(p) ? n(h.size(), h.storage()) : c(h, p, v, !1)),
        "any, SparseMatrix": t.referToSelf(v => (h, p) => i(h) ? n(h.size(), h.storage()) : u(p, h, v, !0)),
        "any, DenseMatrix": t.referToSelf(v => (h, p) => i(h) ? n(h.size(), h.storage()) : c(p, h, v, !0)),
        "Array, any": t.referToSelf(v => (h, p) => v(r(h), p).valueOf()),
        "any, Array": t.referToSelf(v => (h, p) => v(h, r(p)).valueOf())
    }, d({
        SS: l,
        DS: s
    }))
}
)
  , Lh = "compare"
  , TG = ["typed", "config", "matrix", "equalScalar", "BigNumber", "Fraction", "DenseMatrix", "concat"]
  , NG = j(Lh, TG, e => {
    var {typed: t, config: r, equalScalar: a, matrix: n, BigNumber: i, Fraction: o, DenseMatrix: s, concat: l} = e
      , u = fa({
        typed: t
    })
      , c = ef({
        typed: t,
        equalScalar: a
    })
      , d = Sr({
        typed: t,
        DenseMatrix: s
    })
      , v = Vt({
        typed: t,
        matrix: n,
        concat: l
    })
      , h = du({
        typed: t
    });
    return t(Lh, MG({
        typed: t,
        config: r
    }), {
        "boolean, boolean": function(f, _) {
            return f === _ ? 0 : f > _ ? 1 : -1
        },
        "BigNumber, BigNumber": function(f, _) {
            return di(f, _, r.epsilon) ? new i(0) : new i(f.cmp(_))
        },
        "Fraction, Fraction": function(f, _) {
            return new o(f.compare(_))
        },
        "Complex, Complex": function() {
            throw new TypeError("No ordering relation is defined for complex numbers")
        }
    }, h, v({
        SS: c,
        DS: u,
        Ss: d
    }))
}
)
  , MG = j(Lh, ["typed", "config"], e => {
    var {typed: t, config: r} = e;
    return t(Lh, {
        "number, number": function(n, i) {
            return ja(n, i, r.epsilon) ? 0 : n > i ? 1 : -1
        }
    })
}
)
  , IG = function e(t, r) {
    var a = /(^([+\-]?(?:0|[1-9]\d*)(?:\.\d*)?(?:[eE][+\-]?\d+)?)?$|^0x[0-9a-f]+$|\d+)/gi, n = /(^[ ]*|[ ]*$)/g, i = /(^([\w ]+,?[\w ]+)?[\w ]+,?[\w ]+\d+:\d+(:\d+)?[\w ]?|^\d{1,4}[\/\-]\d{1,4}[\/\-]\d{1,4}|^\w+, \w+ \d+, \d{4})/, o = /^0x[0-9a-f]+$/i, s = /^0/, l = function(m) {
        return e.insensitive && ("" + m).toLowerCase() || "" + m
    }, u = l(t).replace(n, "") || "", c = l(r).replace(n, "") || "", d = u.replace(a, "\0$1\0").replace(/\0$/, "").replace(/^\0/, "").split("\0"), v = c.replace(a, "\0$1\0").replace(/\0$/, "").replace(/^\0/, "").split("\0"), h = parseInt(u.match(o), 16) || d.length !== 1 && u.match(i) && Date.parse(u), p = parseInt(c.match(o), 16) || h && c.match(i) && Date.parse(c) || null, f, _;
    if (p) {
        if (h < p)
            return -1;
        if (h > p)
            return 1
    }
    for (var y = 0, g = Math.max(d.length, v.length); y < g; y++) {
        if (f = !(d[y] || "").match(s) && parseFloat(d[y]) || d[y] || 0,
        _ = !(v[y] || "").match(s) && parseFloat(v[y]) || v[y] || 0,
        isNaN(f) !== isNaN(_))
            return isNaN(f) ? 1 : -1;
        if (typeof f != typeof _ && (f += "",
        _ += ""),
        f < _)
            return -1;
        if (f > _)
            return 1
    }
    return 0
};
const rl = vi(IG);
var Q6 = "compareNatural"
  , DG = ["typed", "compare"]
  , UG = j(Q6, DG, e => {
    var {typed: t, compare: r} = e
      , a = r.signatures["boolean,boolean"];
    return t(Q6, {
        "any, any": n
    });
    function n(l, u) {
        var c = Bt(l), d = Bt(u), v;
        if ((c === "number" || c === "BigNumber" || c === "Fraction") && (d === "number" || d === "BigNumber" || d === "Fraction"))
            return v = r(l, u),
            v.toString() !== "0" ? v > 0 ? 1 : -1 : rl(c, d);
        var h = ["Array", "DenseMatrix", "SparseMatrix"];
        if (h.includes(c) || h.includes(d))
            return v = i(n, l, u),
            v !== 0 ? v : rl(c, d);
        if (c !== d)
            return rl(c, d);
        if (c === "Complex")
            return FG(l, u);
        if (c === "Unit")
            return l.equalBase(u) ? n(l.value, u.value) : o(n, l.formatUnits(), u.formatUnits());
        if (c === "boolean")
            return a(l, u);
        if (c === "string")
            return rl(l, u);
        if (c === "Object")
            return s(n, l, u);
        if (c === "null" || c === "undefined")
            return 0;
        throw new TypeError('Unsupported type of value "' + c + '"')
    }
    function i(l, u, c) {
        return ds(u) && ds(c) ? o(l, u.toJSON().values, c.toJSON().values) : ds(u) ? i(l, u.toArray(), c) : ds(c) ? i(l, u, c.toArray()) : Ah(u) ? i(l, u.toJSON().data, c) : Ah(c) ? i(l, u, c.toJSON().data) : Array.isArray(u) ? Array.isArray(c) ? o(l, u, c) : i(l, u, [c]) : i(l, [u], c)
    }
    function o(l, u, c) {
        for (var d = 0, v = Math.min(u.length, c.length); d < v; d++) {
            var h = l(u[d], c[d]);
            if (h !== 0)
                return h
        }
        return u.length > c.length ? 1 : u.length < c.length ? -1 : 0
    }
    function s(l, u, c) {
        var d = Object.keys(u)
          , v = Object.keys(c);
        d.sort(rl),
        v.sort(rl);
        var h = o(l, d, v);
        if (h !== 0)
            return h;
        for (var p = 0; p < d.length; p++) {
            var f = l(u[d[p]], c[v[p]]);
            if (f !== 0)
                return f
        }
        return 0
    }
}
);
function FG(e, t) {
    return e.re > t.re ? 1 : e.re < t.re ? -1 : e.im > t.im ? 1 : e.im < t.im ? -1 : 0
}
var Z6 = "compareText"
  , OG = ["typed", "matrix", "concat"];
sw.signature = "any, any";
var PG = j(Z6, OG, e => {
    var {typed: t, matrix: r, concat: a} = e
      , n = Vt({
        typed: t,
        matrix: r,
        concat: a
    });
    return t(Z6, sw, n({
        elop: sw,
        Ds: !0
    }))
}
)
  , qh = "equal"
  , BG = ["typed", "matrix", "equalScalar", "DenseMatrix", "concat"]
  , RG = j(qh, BG, e => {
    var {typed: t, matrix: r, equalScalar: a, DenseMatrix: n, concat: i} = e
      , o = fa({
        typed: t
    })
      , s = hi({
        typed: t,
        DenseMatrix: n
    })
      , l = Sr({
        typed: t,
        DenseMatrix: n
    })
      , u = Vt({
        typed: t,
        matrix: r,
        concat: i
    });
    return t(qh, LG({
        typed: t,
        equalScalar: a
    }), u({
        elop: a,
        SS: s,
        DS: o,
        Ss: l
    }))
}
)
  , LG = j(qh, ["typed", "equalScalar"], e => {
    var {typed: t, equalScalar: r} = e;
    return t(qh, {
        "any, any": function(n, i) {
            return n === null ? i === null : i === null ? n === null : n === void 0 ? i === void 0 : i === void 0 ? n === void 0 : r(n, i)
        }
    })
}
)
  , X6 = "equalText"
  , qG = ["typed", "compareText", "isZero"]
  , VG = j(X6, qG, e => {
    var {typed: t, compareText: r, isZero: a} = e;
    return t(X6, {
        "any, any": function(i, o) {
            return a(r(i, o))
        }
    })
}
)
  , Vh = "smaller"
  , $G = ["typed", "config", "matrix", "DenseMatrix", "concat"]
  , zG = j(Vh, $G, e => {
    var {typed: t, config: r, matrix: a, DenseMatrix: n, concat: i} = e
      , o = fa({
        typed: t
    })
      , s = hi({
        typed: t,
        DenseMatrix: n
    })
      , l = Sr({
        typed: t,
        DenseMatrix: n
    })
      , u = Vt({
        typed: t,
        matrix: a,
        concat: i
    })
      , c = du({
        typed: t
    });
    return t(Vh, GG({
        typed: t,
        config: r
    }), {
        "boolean, boolean": (d, v) => d < v,
        "BigNumber, BigNumber": function(v, h) {
            return v.lt(h) && !di(v, h, r.epsilon)
        },
        "Fraction, Fraction": (d, v) => d.compare(v) === -1,
        "Complex, Complex": function(v, h) {
            throw new TypeError("No ordering relation is defined for complex numbers")
        }
    }, c, u({
        SS: s,
        DS: o,
        Ss: l
    }))
}
)
  , GG = j(Vh, ["typed", "config"], e => {
    var {typed: t, config: r} = e;
    return t(Vh, {
        "number, number": function(n, i) {
            return n < i && !ja(n, i, r.epsilon)
        }
    })
}
)
  , $h = "smallerEq"
  , jG = ["typed", "config", "matrix", "DenseMatrix", "concat"]
  , HG = j($h, jG, e => {
    var {typed: t, config: r, matrix: a, DenseMatrix: n, concat: i} = e
      , o = fa({
        typed: t
    })
      , s = hi({
        typed: t,
        DenseMatrix: n
    })
      , l = Sr({
        typed: t,
        DenseMatrix: n
    })
      , u = Vt({
        typed: t,
        matrix: a,
        concat: i
    })
      , c = du({
        typed: t
    });
    return t($h, WG({
        typed: t,
        config: r
    }), {
        "boolean, boolean": (d, v) => d <= v,
        "BigNumber, BigNumber": function(v, h) {
            return v.lte(h) || di(v, h, r.epsilon)
        },
        "Fraction, Fraction": (d, v) => d.compare(v) !== 1,
        "Complex, Complex": function() {
            throw new TypeError("No ordering relation is defined for complex numbers")
        }
    }, c, u({
        SS: s,
        DS: o,
        Ss: l
    }))
}
)
  , WG = j($h, ["typed", "config"], e => {
    var {typed: t, config: r} = e;
    return t($h, {
        "number, number": function(n, i) {
            return n <= i || ja(n, i, r.epsilon)
        }
    })
}
)
  , zh = "larger"
  , YG = ["typed", "config", "matrix", "DenseMatrix", "concat"]
  , JG = j(zh, YG, e => {
    var {typed: t, config: r, matrix: a, DenseMatrix: n, concat: i} = e
      , o = fa({
        typed: t
    })
      , s = hi({
        typed: t,
        DenseMatrix: n
    })
      , l = Sr({
        typed: t,
        DenseMatrix: n
    })
      , u = Vt({
        typed: t,
        matrix: a,
        concat: i
    })
      , c = du({
        typed: t
    });
    return t(zh, KG({
        typed: t,
        config: r
    }), {
        "boolean, boolean": (d, v) => d > v,
        "BigNumber, BigNumber": function(v, h) {
            return v.gt(h) && !di(v, h, r.epsilon)
        },
        "Fraction, Fraction": (d, v) => d.compare(v) === 1,
        "Complex, Complex": function() {
            throw new TypeError("No ordering relation is defined for complex numbers")
        }
    }, c, u({
        SS: s,
        DS: o,
        Ss: l
    }))
}
)
  , KG = j(zh, ["typed", "config"], e => {
    var {typed: t, config: r} = e;
    return t(zh, {
        "number, number": function(n, i) {
            return n > i && !ja(n, i, r.epsilon)
        }
    })
}
)
  , Gh = "largerEq"
  , QG = ["typed", "config", "matrix", "DenseMatrix", "concat"]
  , ZG = j(Gh, QG, e => {
    var {typed: t, config: r, matrix: a, DenseMatrix: n, concat: i} = e
      , o = fa({
        typed: t
    })
      , s = hi({
        typed: t,
        DenseMatrix: n
    })
      , l = Sr({
        typed: t,
        DenseMatrix: n
    })
      , u = Vt({
        typed: t,
        matrix: a,
        concat: i
    })
      , c = du({
        typed: t
    });
    return t(Gh, XG({
        typed: t,
        config: r
    }), {
        "boolean, boolean": (d, v) => d >= v,
        "BigNumber, BigNumber": function(v, h) {
            return v.gte(h) || di(v, h, r.epsilon)
        },
        "Fraction, Fraction": (d, v) => d.compare(v) !== -1,
        "Complex, Complex": function() {
            throw new TypeError("No ordering relation is defined for complex numbers")
        }
    }, c, u({
        SS: s,
        DS: o,
        Ss: l
    }))
}
)
  , XG = j(Gh, ["typed", "config"], e => {
    var {typed: t, config: r} = e;
    return t(Gh, {
        "number, number": function(n, i) {
            return n >= i || ja(n, i, r.epsilon)
        }
    })
}
)
  , eC = "deepEqual"
  , ej = ["typed", "equal"]
  , tj = j(eC, ej, e => {
    var {typed: t, equal: r} = e;
    return t(eC, {
        "any, any": function(i, o) {
            return a(i.valueOf(), o.valueOf())
        }
    });
    function a(n, i) {
        if (Array.isArray(n))
            if (Array.isArray(i)) {
                var o = n.length;
                if (o !== i.length)
                    return !1;
                for (var s = 0; s < o; s++)
                    if (!a(n[s], i[s]))
                        return !1;
                return !0
            } else
                return !1;
        else
            return Array.isArray(i) ? !1 : r(n, i)
    }
}
)
  , jh = "unequal"
  , rj = ["typed", "config", "equalScalar", "matrix", "DenseMatrix", "concat"]
  , aj = j(jh, rj, e => {
    var {typed: t, config: r, equalScalar: a, matrix: n, DenseMatrix: i, concat: o} = e
      , s = fa({
        typed: t
    })
      , l = hi({
        typed: t,
        DenseMatrix: i
    })
      , u = Sr({
        typed: t,
        DenseMatrix: i
    })
      , c = Vt({
        typed: t,
        matrix: n,
        concat: o
    });
    return t(jh, nj({
        typed: t,
        equalScalar: a
    }), c({
        elop: d,
        SS: l,
        DS: s,
        Ss: u
    }));
    function d(v, h) {
        return !a(v, h)
    }
}
)
  , nj = j(jh, ["typed", "equalScalar"], e => {
    var {typed: t, equalScalar: r} = e;
    return t(jh, {
        "any, any": function(n, i) {
            return n === null ? i !== null : i === null ? n !== null : n === void 0 ? i !== void 0 : i === void 0 ? n !== void 0 : !r(n, i)
        }
    })
}
)
  , tC = "partitionSelect"
  , ij = ["typed", "isNumeric", "isNaN", "compare"]
  , oj = j(tC, ij, e => {
    var {typed: t, isNumeric: r, isNaN: a, compare: n} = e
      , i = n
      , o = (u, c) => -n(u, c);
    return t(tC, {
        "Array | Matrix, number": function(c, d) {
            return s(c, d, i)
        },
        "Array | Matrix, number, string": function(c, d, v) {
            if (v === "asc")
                return s(c, d, i);
            if (v === "desc")
                return s(c, d, o);
            throw new Error('Compare string must be "asc" or "desc"')
        },
        "Array | Matrix, number, function": s
    });
    function s(u, c, d) {
        if (!Be(c) || c < 0)
            throw new Error("k must be a non-negative integer");
        if (je(u)) {
            var v = u.size();
            if (v.length > 1)
                throw new Error("Only one dimensional matrices supported");
            return l(u.valueOf(), c, d)
        }
        if (Array.isArray(u))
            return l(u, c, d)
    }
    function l(u, c, d) {
        if (c >= u.length)
            throw new Error("k out of bounds");
        for (var v = 0; v < u.length; v++)
            if (r(u[v]) && a(u[v]))
                return u[v];
        for (var h = 0, p = u.length - 1; h < p; ) {
            for (var f = h, _ = p, y = u[Math.floor(Math.random() * (p - h + 1)) + h]; f < _; )
                if (d(u[f], y) >= 0) {
                    var g = u[_];
                    u[_] = u[f],
                    u[f] = g,
                    --_
                } else
                    ++f;
            d(u[f], y) > 0 && --f,
            c <= f ? p = f : h = f + 1
        }
        return u[c]
    }
}
)
  , rC = "sort"
  , sj = ["typed", "matrix", "compare", "compareNatural"]
  , lj = j(rC, sj, e => {
    var {typed: t, matrix: r, compare: a, compareNatural: n} = e
      , i = a
      , o = (c, d) => -a(c, d);
    return t(rC, {
        Array: function(d) {
            return l(d),
            d.sort(i)
        },
        Matrix: function(d) {
            return u(d),
            r(d.toArray().sort(i), d.storage())
        },
        "Array, function": function(d, v) {
            return l(d),
            d.sort(v)
        },
        "Matrix, function": function(d, v) {
            return u(d),
            r(d.toArray().sort(v), d.storage())
        },
        "Array, string": function(d, v) {
            return l(d),
            d.sort(s(v))
        },
        "Matrix, string": function(d, v) {
            return u(d),
            r(d.toArray().sort(s(v)), d.storage())
        }
    });
    function s(c) {
        if (c === "asc")
            return i;
        if (c === "desc")
            return o;
        if (c === "natural")
            return n;
        throw new Error('String "asc", "desc", or "natural" expected')
    }
    function l(c) {
        if (it(c).length !== 1)
            throw new Error("One dimensional array expected")
    }
    function u(c) {
        if (c.size().length !== 1)
            throw new Error("One dimensional matrix expected")
    }
}
)
  , aC = "max"
  , uj = ["typed", "config", "numeric", "larger"]
  , ck = j(aC, uj, e => {
    var {typed: t, config: r, numeric: a, larger: n} = e;
    return t(aC, {
        "Array | Matrix": o,
        "Array | Matrix, number | BigNumber": function(l, u) {
            return Zm(l, u.valueOf(), i)
        },
        "...": function(l) {
            if (uu(l))
                throw new TypeError("Scalar values expected in function max");
            return o(l)
        }
    });
    function i(s, l) {
        try {
            return n(s, l) ? s : l
        } catch (u) {
            throw da(u, "max", l)
        }
    }
    function o(s) {
        var l;
        if (Gi(s, function(u) {
            try {
                isNaN(u) && typeof u == "number" ? l = NaN : (l === void 0 || n(u, l)) && (l = u)
            } catch (c) {
                throw da(c, "max", u)
            }
        }),
        l === void 0)
            throw new Error("Cannot calculate max of an empty array");
        return typeof l == "string" && (l = a(l, r.number)),
        l
    }
}
)
  , nC = "min"
  , cj = ["typed", "config", "numeric", "smaller"]
  , dk = j(nC, cj, e => {
    var {typed: t, config: r, numeric: a, smaller: n} = e;
    return t(nC, {
        "Array | Matrix": o,
        "Array | Matrix, number | BigNumber": function(l, u) {
            return Zm(l, u.valueOf(), i)
        },
        "...": function(l) {
            if (uu(l))
                throw new TypeError("Scalar values expected in function min");
            return o(l)
        }
    });
    function i(s, l) {
        try {
            return n(s, l) ? s : l
        } catch (u) {
            throw da(u, "min", l)
        }
    }
    function o(s) {
        var l;
        if (Gi(s, function(u) {
            try {
                isNaN(u) && typeof u == "number" ? l = NaN : (l === void 0 || n(u, l)) && (l = u)
            } catch (c) {
                throw da(c, "min", u)
            }
        }),
        l === void 0)
            throw new Error("Cannot calculate min of an empty array");
        return typeof l == "string" && (l = a(l, r.number)),
        l
    }
}
)
  , dj = "ImmutableDenseMatrix"
  , vj = ["smaller", "DenseMatrix"]
  , hj = j(dj, vj, e => {
    var {smaller: t, DenseMatrix: r} = e;
    function a(n, i) {
        if (!(this instanceof a))
            throw new SyntaxError("Constructor must be called with the new operator");
        if (i && !Wr(i))
            throw new Error("Invalid datatype: " + i);
        if (je(n) || At(n)) {
            var o = new r(n,i);
            this._data = o._data,
            this._size = o._size,
            this._datatype = o._datatype,
            this._min = null,
            this._max = null
        } else if (n && At(n.data) && At(n.size))
            this._data = n.data,
            this._size = n.size,
            this._datatype = n.datatype,
            this._min = typeof n.min < "u" ? n.min : null,
            this._max = typeof n.max < "u" ? n.max : null;
        else {
            if (n)
                throw new TypeError("Unsupported type of data (" + Bt(n) + ")");
            this._data = [],
            this._size = [0],
            this._datatype = i,
            this._min = null,
            this._max = null
        }
    }
    return a.prototype = new r,
    a.prototype.type = "ImmutableDenseMatrix",
    a.prototype.isImmutableDenseMatrix = !0,
    a.prototype.subset = function(n) {
        switch (arguments.length) {
        case 1:
            {
                var i = r.prototype.subset.call(this, n);
                return je(i) ? new a({
                    data: i._data,
                    size: i._size,
                    datatype: i._datatype
                }) : i
            }
        case 2:
        case 3:
            throw new Error("Cannot invoke set subset on an Immutable Matrix instance");
        default:
            throw new SyntaxError("Wrong number of arguments")
        }
    }
    ,
    a.prototype.set = function() {
        throw new Error("Cannot invoke set on an Immutable Matrix instance")
    }
    ,
    a.prototype.resize = function() {
        throw new Error("Cannot invoke resize on an Immutable Matrix instance")
    }
    ,
    a.prototype.reshape = function() {
        throw new Error("Cannot invoke reshape on an Immutable Matrix instance")
    }
    ,
    a.prototype.clone = function() {
        return new a({
            data: Qe(this._data),
            size: Qe(this._size),
            datatype: this._datatype
        })
    }
    ,
    a.prototype.toJSON = function() {
        return {
            mathjs: "ImmutableDenseMatrix",
            data: this._data,
            size: this._size,
            datatype: this._datatype
        }
    }
    ,
    a.fromJSON = function(n) {
        return new a(n)
    }
    ,
    a.prototype.swapRows = function() {
        throw new Error("Cannot invoke swapRows on an Immutable Matrix instance")
    }
    ,
    a.prototype.min = function() {
        if (this._min === null) {
            var n = null;
            this.forEach(function(i) {
                (n === null || t(i, n)) && (n = i)
            }),
            this._min = n !== null ? n : void 0
        }
        return this._min
    }
    ,
    a.prototype.max = function() {
        if (this._max === null) {
            var n = null;
            this.forEach(function(i) {
                (n === null || t(n, i)) && (n = i)
            }),
            this._max = n !== null ? n : void 0
        }
        return this._max
    }
    ,
    a
}
, {
    isClass: !0
})
  , mj = "Index"
  , fj = ["ImmutableDenseMatrix", "getMatrixDataType"]
  , pj = j(mj, fj, e => {
    var {ImmutableDenseMatrix: t, getMatrixDataType: r} = e;
    function a(i) {
        if (!(this instanceof a))
            throw new SyntaxError("Constructor must be called with the new operator");
        this._dimensions = [],
        this._sourceSize = [],
        this._isScalar = !0;
        for (var o = 0, s = arguments.length; o < s; o++) {
            var l = arguments[o]
              , u = At(l)
              , c = je(l)
              , d = null;
            if (r2(l))
                this._dimensions.push(l),
                this._isScalar = !1;
            else if (u || c) {
                var v = void 0;
                r(l) === "boolean" ? (u && (v = n(iC(l).valueOf())),
                c && (v = n(iC(l._data).valueOf())),
                d = l.valueOf().length) : v = n(l.valueOf()),
                this._dimensions.push(v);
                var h = v.size();
                (h.length !== 1 || h[0] !== 1 || d !== null) && (this._isScalar = !1)
            } else if (typeof l == "number")
                this._dimensions.push(n([l]));
            else if (typeof l == "string")
                this._dimensions.push(l);
            else
                throw new TypeError("Dimension must be an Array, Matrix, number, string, or Range");
            this._sourceSize.push(d)
        }
    }
    a.prototype.type = "Index",
    a.prototype.isIndex = !0;
    function n(i) {
        for (var o = 0, s = i.length; o < s; o++)
            if (typeof i[o] != "number" || !Be(i[o]))
                throw new TypeError("Index parameters must be positive integer numbers");
        return new t(i)
    }
    return a.prototype.clone = function() {
        var i = new a;
        return i._dimensions = Qe(this._dimensions),
        i._isScalar = this._isScalar,
        i._sourceSize = this._sourceSize,
        i
    }
    ,
    a.create = function(i) {
        var o = new a;
        return a.apply(o, i),
        o
    }
    ,
    a.prototype.size = function() {
        for (var i = [], o = 0, s = this._dimensions.length; o < s; o++) {
            var l = this._dimensions[o];
            i[o] = typeof l == "string" ? 1 : l.size()[0]
        }
        return i
    }
    ,
    a.prototype.max = function() {
        for (var i = [], o = 0, s = this._dimensions.length; o < s; o++) {
            var l = this._dimensions[o];
            i[o] = typeof l == "string" ? l : l.max()
        }
        return i
    }
    ,
    a.prototype.min = function() {
        for (var i = [], o = 0, s = this._dimensions.length; o < s; o++) {
            var l = this._dimensions[o];
            i[o] = typeof l == "string" ? l : l.min()
        }
        return i
    }
    ,
    a.prototype.forEach = function(i) {
        for (var o = 0, s = this._dimensions.length; o < s; o++)
            i(this._dimensions[o], o, this)
    }
    ,
    a.prototype.dimension = function(i) {
        return this._dimensions[i] || null
    }
    ,
    a.prototype.isObjectProperty = function() {
        return this._dimensions.length === 1 && typeof this._dimensions[0] == "string"
    }
    ,
    a.prototype.getObjectProperty = function() {
        return this.isObjectProperty() ? this._dimensions[0] : null
    }
    ,
    a.prototype.isScalar = function() {
        return this._isScalar
    }
    ,
    a.prototype.toArray = function() {
        for (var i = [], o = 0, s = this._dimensions.length; o < s; o++) {
            var l = this._dimensions[o];
            i.push(typeof l == "string" ? l : l.toArray())
        }
        return i
    }
    ,
    a.prototype.valueOf = a.prototype.toArray,
    a.prototype.toString = function() {
        for (var i = [], o = 0, s = this._dimensions.length; o < s; o++) {
            var l = this._dimensions[o];
            typeof l == "string" ? i.push(JSON.stringify(l)) : i.push(l.toString())
        }
        return "[" + i.join(", ") + "]"
    }
    ,
    a.prototype.toJSON = function() {
        return {
            mathjs: "Index",
            dimensions: this._dimensions
        }
    }
    ,
    a.fromJSON = function(i) {
        return a.create(i.dimensions)
    }
    ,
    a
}
, {
    isClass: !0
});
function iC(e) {
    var t = [];
    return e.forEach( (r, a) => {
        r && t.push(a)
    }
    ),
    t
}
var yj = "FibonacciHeap"
  , wj = ["smaller", "larger"]
  , gj = j(yj, wj, e => {
    var {smaller: t, larger: r} = e
      , a = 1 / Math.log((1 + Math.sqrt(5)) / 2);
    function n() {
        if (!(this instanceof n))
            throw new SyntaxError("Constructor must be called with the new operator");
        this._minimum = null,
        this._size = 0
    }
    n.prototype.type = "FibonacciHeap",
    n.prototype.isFibonacciHeap = !0,
    n.prototype.insert = function(c, d) {
        var v = {
            key: c,
            value: d,
            degree: 0
        };
        if (this._minimum) {
            var h = this._minimum;
            v.left = h,
            v.right = h.right,
            h.right = v,
            v.right.left = v,
            t(c, h.key) && (this._minimum = v)
        } else
            v.left = v,
            v.right = v,
            this._minimum = v;
        return this._size++,
        v
    }
    ,
    n.prototype.size = function() {
        return this._size
    }
    ,
    n.prototype.clear = function() {
        this._minimum = null,
        this._size = 0
    }
    ,
    n.prototype.isEmpty = function() {
        return this._size === 0
    }
    ,
    n.prototype.extractMinimum = function() {
        var c = this._minimum;
        if (c === null)
            return c;
        for (var d = this._minimum, v = c.degree, h = c.child; v > 0; ) {
            var p = h.right;
            h.left.right = h.right,
            h.right.left = h.left,
            h.left = d,
            h.right = d.right,
            d.right = h,
            h.right.left = h,
            h.parent = null,
            h = p,
            v--
        }
        return c.left.right = c.right,
        c.right.left = c.left,
        c === c.right ? d = null : (d = c.right,
        d = u(d, this._size)),
        this._size--,
        this._minimum = d,
        c
    }
    ,
    n.prototype.remove = function(c) {
        this._minimum = i(this._minimum, c, -1),
        this.extractMinimum()
    }
    ;
    function i(c, d, v) {
        d.key = v;
        var h = d.parent;
        return h && t(d.key, h.key) && (o(c, d, h),
        s(c, h)),
        t(d.key, c.key) && (c = d),
        c
    }
    function o(c, d, v) {
        d.left.right = d.right,
        d.right.left = d.left,
        v.degree--,
        v.child === d && (v.child = d.right),
        v.degree === 0 && (v.child = null),
        d.left = c,
        d.right = c.right,
        c.right = d,
        d.right.left = d,
        d.parent = null,
        d.mark = !1
    }
    function s(c, d) {
        var v = d.parent;
        v && (d.mark ? (o(c, d, v),
        s(v)) : d.mark = !0)
    }
    var l = function(d, v) {
        d.left.right = d.right,
        d.right.left = d.left,
        d.parent = v,
        v.child ? (d.left = v.child,
        d.right = v.child.right,
        v.child.right = d,
        d.right.left = d) : (v.child = d,
        d.right = d,
        d.left = d),
        v.degree++,
        d.mark = !1
    };
    function u(c, d) {
        var v = Math.floor(Math.log(d) * a) + 1
          , h = new Array(v)
          , p = 0
          , f = c;
        if (f)
            for (p++,
            f = f.right; f !== c; )
                p++,
                f = f.right;
        for (var _; p > 0; ) {
            for (var y = f.degree, g = f.right; _ = h[y],
            !!_; ) {
                if (r(f.key, _.key)) {
                    var m = _;
                    _ = f,
                    f = m
                }
                l(_, f),
                h[y] = null,
                y++
            }
            h[y] = f,
            f = g,
            p--
        }
        c = null;
        for (var w = 0; w < v; w++)
            _ = h[w],
            _ && (c ? (_.left.right = _.right,
            _.right.left = _.left,
            _.left = c,
            _.right = c.right,
            c.right = _,
            _.right.left = _,
            t(_.key, c.key) && (c = _)) : c = _);
        return c
    }
    return n
}
, {
    isClass: !0
})
  , _j = "Spa"
  , bj = ["addScalar", "equalScalar", "FibonacciHeap"]
  , Cj = j(_j, bj, e => {
    var {addScalar: t, equalScalar: r, FibonacciHeap: a} = e;
    function n() {
        if (!(this instanceof n))
            throw new SyntaxError("Constructor must be called with the new operator");
        this._values = [],
        this._heap = new a
    }
    return n.prototype.type = "Spa",
    n.prototype.isSpa = !0,
    n.prototype.set = function(i, o) {
        if (this._values[i])
            this._values[i].value = o;
        else {
            var s = this._heap.insert(i, o);
            this._values[i] = s
        }
    }
    ,
    n.prototype.get = function(i) {
        var o = this._values[i];
        return o ? o.value : 0
    }
    ,
    n.prototype.accumulate = function(i, o) {
        var s = this._values[i];
        s ? s.value = t(s.value, o) : (s = this._heap.insert(i, o),
        this._values[i] = s)
    }
    ,
    n.prototype.forEach = function(i, o, s) {
        var l = this._heap
          , u = this._values
          , c = []
          , d = l.extractMinimum();
        for (d && c.push(d); d && d.key <= o; )
            d.key >= i && (r(d.value, 0) || s(d.key, d.value, this)),
            d = l.extractMinimum(),
            d && c.push(d);
        for (var v = 0; v < c.length; v++) {
            var h = c[v];
            d = l.insert(h.key, h.value),
            u[d.key] = d
        }
    }
    ,
    n.prototype.swap = function(i, o) {
        var s = this._values[i]
          , l = this._values[o];
        if (!s && l)
            s = this._heap.insert(i, l.value),
            this._heap.remove(l),
            this._values[i] = s,
            this._values[o] = void 0;
        else if (s && !l)
            l = this._heap.insert(o, s.value),
            this._heap.remove(s),
            this._values[o] = l,
            this._values[i] = void 0;
        else if (s && l) {
            var u = s.value;
            s.value = l.value,
            l.value = u
        }
    }
    ,
    n
}
, {
    isClass: !0
})
  , Sj = rd(function(e) {
    return new e(1).exp()
}, {
    hasher: rf
})
  , xj = rd(function(e) {
    return new e(1).plus(new e(5).sqrt()).div(2)
}, {
    hasher: rf
})
  , y2 = rd(function(e) {
    return e.acos(-1)
}, {
    hasher: rf
})
  , Aj = rd(function(e) {
    return y2(e).times(2)
}, {
    hasher: rf
});
function rf(e) {
    return e[0].precision
}
function oC(e, t) {
    var r = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var a = Object.getOwnPropertySymbols(e);
        t && (a = a.filter(function(n) {
            return Object.getOwnPropertyDescriptor(e, n).enumerable
        })),
        r.push.apply(r, a)
    }
    return r
}
function Ap(e) {
    for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t] != null ? arguments[t] : {};
        t % 2 ? oC(Object(r), !0).forEach(function(a) {
            Ze(e, a, r[a])
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : oC(Object(r)).forEach(function(a) {
            Object.defineProperty(e, a, Object.getOwnPropertyDescriptor(r, a))
        })
    }
    return e
}
var Ej = "Unit"
  , kj = ["?on", "config", "addScalar", "subtract", "multiplyScalar", "divideScalar", "pow", "abs", "fix", "round", "equal", "isNumeric", "format", "number", "Complex", "BigNumber", "Fraction"]
  , Tj = j(Ej, kj, e => {
    var {on: t, config: r, addScalar: a, subtract: n, multiplyScalar: i, divideScalar: o, pow: s, abs: l, fix: u, round: c, equal: d, isNumeric: v, format: h, number: p, Complex: f, BigNumber: _, Fraction: y} = e
      , g = p;
    function m(H, Q) {
        if (!(this instanceof m))
            throw new Error("Constructor must be called with the new operator");
        if (!(H == null || v(H) || Oi(H)))
            throw new TypeError("First parameter in Unit constructor must be number, BigNumber, Fraction, Complex, or undefined");
        if (this.fixPrefix = !1,
        this.skipAutomaticSimplification = !0,
        Q === void 0)
            this.units = [],
            this.dimensions = B.map(P => 0);
        else if (typeof Q == "string") {
            var z = m.parse(Q);
            this.units = z.units,
            this.dimensions = z.dimensions
        } else if (ln(Q) && Q.value === null)
            this.fixPrefix = Q.fixPrefix,
            this.skipAutomaticSimplification = Q.skipAutomaticSimplification,
            this.dimensions = Q.dimensions.slice(0),
            this.units = Q.units.map(P => Ie({}, P));
        else
            throw new TypeError("Second parameter in Unit constructor must be a string or valueless Unit");
        this.value = this._normalize(H)
    }
    Object.defineProperty(m, "name", {
        value: "Unit"
    }),
    m.prototype.constructor = m,
    m.prototype.type = "Unit",
    m.prototype.isUnit = !0;
    var w, C, b;
    function x() {
        for (; b === " " || b === "	"; )
            A()
    }
    function E(H) {
        return H >= "0" && H <= "9" || H === "."
    }
    function k(H) {
        return H >= "0" && H <= "9"
    }
    function A() {
        C++,
        b = w.charAt(C)
    }
    function I(H) {
        C = H,
        b = w.charAt(C)
    }
    function T() {
        var H = ""
          , Q = C;
        if (b === "+" ? A() : b === "-" && (H += b,
        A()),
        !E(b))
            return I(Q),
            null;
        if (b === ".") {
            if (H += b,
            A(),
            !k(b))
                return I(Q),
                null
        } else {
            for (; k(b); )
                H += b,
                A();
            b === "." && (H += b,
            A())
        }
        for (; k(b); )
            H += b,
            A();
        if (b === "E" || b === "e") {
            var z = ""
              , P = C;
            if (z += b,
            A(),
            (b === "+" || b === "-") && (z += b,
            A()),
            !k(b))
                return I(P),
                H;
            for (H = H + z; k(b); )
                H += b,
                A()
        }
        return H
    }
    function F() {
        for (var H = ""; k(b) || m.isValidAlpha(b); )
            H += b,
            A();
        var Q = H.charAt(0);
        return m.isValidAlpha(Q) ? H : null
    }
    function R(H) {
        return b === H ? (A(),
        H) : null
    }
    m.parse = function(H, Q) {
        if (Q = Q || {},
        w = H,
        C = -1,
        b = "",
        typeof w != "string")
            throw new TypeError("Invalid argument in Unit.parse, string expected");
        var z = new m;
        z.units = [];
        var P = 1
          , $ = !1;
        A(),
        x();
        var K = T()
          , ae = null;
        if (K) {
            if (r.number === "BigNumber")
                ae = new _(K);
            else if (r.number === "Fraction")
                try {
                    ae = new y(K)
                } catch {
                    ae = parseFloat(K)
                }
            else
                ae = parseFloat(K);
            x(),
            R("*") ? (P = 1,
            $ = !0) : R("/") && (P = -1,
            $ = !0)
        }
        for (var te = [], L = 1; ; ) {
            for (x(); b === "("; )
                te.push(P),
                L *= P,
                P = 1,
                A(),
                x();
            var W = void 0;
            if (b) {
                var ne = b;
                if (W = F(),
                W === null)
                    throw new SyntaxError('Unexpected "' + ne + '" in "' + w + '" at index ' + C.toString())
            } else
                break;
            var le = O(W);
            if (le === null)
                throw new SyntaxError('Unit "' + W + '" not found.');
            var he = P * L;
            if (x(),
            R("^")) {
                x();
                var ve = T();
                if (ve === null)
                    throw new SyntaxError('In "' + H + '", "^" must be followed by a floating-point number');
                he *= ve
            }
            z.units.push({
                unit: le.unit,
                prefix: le.prefix,
                power: he
            });
            for (var we = 0; we < B.length; we++)
                z.dimensions[we] += (le.unit.dimensions[we] || 0) * he;
            for (x(); b === ")"; ) {
                if (te.length === 0)
                    throw new SyntaxError('Unmatched ")" in "' + w + '" at index ' + C.toString());
                L /= te.pop(),
                A(),
                x()
            }
            if ($ = !1,
            R("*") ? (P = 1,
            $ = !0) : R("/") ? (P = -1,
            $ = !0) : P = 1,
            le.unit.base) {
                var ye = le.unit.base.key;
                re.auto[ye] = {
                    unit: le.unit,
                    prefix: le.prefix
                }
            }
        }
        if (x(),
        b)
            throw new SyntaxError('Could not parse: "' + H + '"');
        if ($)
            throw new SyntaxError('Trailing characters: "' + H + '"');
        if (te.length !== 0)
            throw new SyntaxError('Unmatched "(" in "' + w + '"');
        if (z.units.length === 0 && !Q.allowNoUnits)
            throw new SyntaxError('"' + H + '" contains no units');
        return z.value = ae !== void 0 ? z._normalize(ae) : null,
        z
    }
    ,
    m.prototype.clone = function() {
        var H = new m;
        H.fixPrefix = this.fixPrefix,
        H.skipAutomaticSimplification = this.skipAutomaticSimplification,
        H.value = Qe(this.value),
        H.dimensions = this.dimensions.slice(0),
        H.units = [];
        for (var Q = 0; Q < this.units.length; Q++) {
            H.units[Q] = {};
            for (var z in this.units[Q])
                Ue(this.units[Q], z) && (H.units[Q][z] = this.units[Q][z])
        }
        return H
    }
    ,
    m.prototype.valueType = function() {
        return Bt(this.value)
    }
    ,
    m.prototype._isDerived = function() {
        return this.units.length === 0 ? !1 : this.units.length > 1 || Math.abs(this.units[0].power - 1) > 1e-15
    }
    ,
    m.prototype._normalize = function(H) {
        if (H == null || this.units.length === 0)
            return H;
        for (var Q = H, z = m._getNumberConverter(Bt(H)), P = 0; P < this.units.length; P++) {
            var $ = z(this.units[P].unit.value)
              , K = z(this.units[P].prefix.value)
              , ae = z(this.units[P].power);
            Q = i(Q, s(i($, K), ae))
        }
        return Q
    }
    ,
    m.prototype._denormalize = function(H, Q) {
        if (H == null || this.units.length === 0)
            return H;
        for (var z = H, P = m._getNumberConverter(Bt(H)), $ = 0; $ < this.units.length; $++) {
            var K = P(this.units[$].unit.value)
              , ae = P(this.units[$].prefix.value)
              , te = P(this.units[$].power);
            z = o(z, s(i(K, ae), te))
        }
        return z
    }
    ;
    var O = rd(H => {
        if (Ue(G, H)) {
            var Q = G[H]
              , z = Q.prefixes[""];
            return {
                unit: Q,
                prefix: z
            }
        }
        for (var P in G)
            if (Ue(G, P) && fB(H, P)) {
                var $ = G[P]
                  , K = H.length - P.length
                  , ae = H.substring(0, K)
                  , te = Ue($.prefixes, ae) ? $.prefixes[ae] : void 0;
                if (te !== void 0)
                    return {
                        unit: $,
                        prefix: te
                    }
            }
        return null
    }
    , {
        hasher: H => H[0],
        limit: 100
    });
    m.isValuelessUnit = function(H) {
        return O(H) !== null
    }
    ,
    m.prototype.hasBase = function(H) {
        if (typeof H == "string" && (H = D[H]),
        !H)
            return !1;
        for (var Q = 0; Q < B.length; Q++)
            if (Math.abs((this.dimensions[Q] || 0) - (H.dimensions[Q] || 0)) > 1e-12)
                return !1;
        return !0
    }
    ,
    m.prototype.equalBase = function(H) {
        for (var Q = 0; Q < B.length; Q++)
            if (Math.abs((this.dimensions[Q] || 0) - (H.dimensions[Q] || 0)) > 1e-12)
                return !1;
        return !0
    }
    ,
    m.prototype.equals = function(H) {
        return this.equalBase(H) && d(this.value, H.value)
    }
    ,
    m.prototype.multiply = function(H) {
        for (var Q = this.clone(), z = ln(H) ? H : new m(H), P = 0; P < B.length; P++)
            Q.dimensions[P] = (this.dimensions[P] || 0) + (z.dimensions[P] || 0);
        for (var $ = 0; $ < z.units.length; $++) {
            var K = Ap({}, z.units[$]);
            Q.units.push(K)
        }
        if (this.value !== null || z.value !== null) {
            var ae = this.value === null ? this._normalize(1) : this.value
              , te = z.value === null ? z._normalize(1) : z.value;
            Q.value = i(ae, te)
        } else
            Q.value = null;
        return ln(H) && (Q.skipAutomaticSimplification = !1),
        M(Q)
    }
    ,
    m.prototype.divideInto = function(H) {
        return new m(H).divide(this)
    }
    ,
    m.prototype.divide = function(H) {
        for (var Q = this.clone(), z = ln(H) ? H : new m(H), P = 0; P < B.length; P++)
            Q.dimensions[P] = (this.dimensions[P] || 0) - (z.dimensions[P] || 0);
        for (var $ = 0; $ < z.units.length; $++) {
            var K = Ap(Ap({}, z.units[$]), {}, {
                power: -z.units[$].power
            });
            Q.units.push(K)
        }
        if (this.value !== null || z.value !== null) {
            var ae = this.value === null ? this._normalize(1) : this.value
              , te = z.value === null ? z._normalize(1) : z.value;
            Q.value = o(ae, te)
        } else
            Q.value = null;
        return ln(H) && (Q.skipAutomaticSimplification = !1),
        M(Q)
    }
    ,
    m.prototype.pow = function(H) {
        for (var Q = this.clone(), z = 0; z < B.length; z++)
            Q.dimensions[z] = (this.dimensions[z] || 0) * H;
        for (var P = 0; P < Q.units.length; P++)
            Q.units[P].power *= H;
        return Q.value !== null ? Q.value = s(Q.value, H) : Q.value = null,
        Q.skipAutomaticSimplification = !1,
        M(Q)
    }
    ;
    function M(H) {
        return H.equalBase(D.NONE) && H.value !== null && !r.predictable ? H.value : H
    }
    m.prototype.abs = function() {
        var H = this.clone();
        if (H.value !== null)
            if (H._isDerived() || H.units[0].unit.offset === 0)
                H.value = l(H.value);
            else {
                var Q = H._numberConverter()
                  , z = Q(H.units[0].unit.value)
                  , P = Q(H.units[0].unit.offset)
                  , $ = i(z, P);
                H.value = n(l(a(H.value, $)), $)
            }
        for (var K in H.units)
            (H.units[K].unit.name === "VA" || H.units[K].unit.name === "VAR") && (H.units[K].unit = G.W);
        return H
    }
    ,
    m.prototype.to = function(H) {
        var Q = this.value === null ? this._normalize(1) : this.value, z;
        if (typeof H == "string")
            z = m.parse(H);
        else if (ln(H))
            z = H.clone();
        else
            throw new Error("String or Unit expected as parameter");
        if (!this.equalBase(z))
            throw new Error("Units do not match ('".concat(z.toString(), "' != '").concat(this.toString(), "')"));
        if (z.value !== null)
            throw new Error("Cannot convert to a unit with a value");
        if (this.value === null || this._isDerived() || this.units[0].unit.offset === z.units[0].unit.offset)
            z.value = Qe(Q);
        else {
            var P = m._getNumberConverter(Bt(Q))
              , $ = this.units[0].unit.value
              , K = this.units[0].unit.offset
              , ae = i($, K)
              , te = z.units[0].unit.value
              , L = z.units[0].unit.offset
              , W = i(te, L);
            z.value = a(Q, P(n(ae, W)))
        }
        return z.fixPrefix = !0,
        z.skipAutomaticSimplification = !0,
        z
    }
    ,
    m.prototype.toNumber = function(H) {
        return g(this.toNumeric(H))
    }
    ,
    m.prototype.toNumeric = function(H) {
        var Q;
        return H ? Q = this.to(H) : Q = this.clone(),
        Q._isDerived() || Q.units.length === 0 ? Q._denormalize(Q.value) : Q._denormalize(Q.value, Q.units[0].prefix.value)
    }
    ,
    m.prototype.toString = function() {
        return this.format()
    }
    ,
    m.prototype.toJSON = function() {
        return {
            mathjs: "Unit",
            value: this._denormalize(this.value),
            unit: this.formatUnits(),
            fixPrefix: this.fixPrefix
        }
    }
    ,
    m.fromJSON = function(H) {
        var Q = new m(H.value,H.unit);
        return Q.fixPrefix = H.fixPrefix || !1,
        Q
    }
    ,
    m.prototype.valueOf = m.prototype.toString,
    m.prototype.simplify = function() {
        var H = this.clone(), Q = [], z;
        for (var P in se)
            if (Ue(se, P) && H.hasBase(D[P])) {
                z = P;
                break
            }
        if (z === "NONE")
            H.units = [];
        else {
            var $;
            if (z && Ue(se, z) && ($ = se[z]),
            $)
                H.units = [{
                    unit: $.unit,
                    prefix: $.prefix,
                    power: 1
                }];
            else {
                for (var K = !1, ae = 0; ae < B.length; ae++) {
                    var te = B[ae];
                    Math.abs(H.dimensions[ae] || 0) > 1e-12 && (Ue(se, te) ? Q.push({
                        unit: se[te].unit,
                        prefix: se[te].prefix,
                        power: H.dimensions[ae] || 0
                    }) : K = !0)
                }
                Q.length < H.units.length && !K && (H.units = Q)
            }
        }
        return H
    }
    ,
    m.prototype.toSI = function() {
        for (var H = this.clone(), Q = [], z = 0; z < B.length; z++) {
            var P = B[z];
            if (Math.abs(H.dimensions[z] || 0) > 1e-12)
                if (Ue(re.si, P))
                    Q.push({
                        unit: re.si[P].unit,
                        prefix: re.si[P].prefix,
                        power: H.dimensions[z] || 0
                    });
                else
                    throw new Error("Cannot express custom unit " + P + " in SI units")
        }
        return H.units = Q,
        H.fixPrefix = !0,
        H.skipAutomaticSimplification = !0,
        H
    }
    ,
    m.prototype.formatUnits = function() {
        for (var H = "", Q = "", z = 0, P = 0, $ = 0; $ < this.units.length; $++)
            this.units[$].power > 0 ? (z++,
            H += " " + this.units[$].prefix.name + this.units[$].unit.name,
            Math.abs(this.units[$].power - 1) > 1e-15 && (H += "^" + this.units[$].power)) : this.units[$].power < 0 && P++;
        if (P > 0)
            for (var K = 0; K < this.units.length; K++)
                this.units[K].power < 0 && (z > 0 ? (Q += " " + this.units[K].prefix.name + this.units[K].unit.name,
                Math.abs(this.units[K].power + 1) > 1e-15 && (Q += "^" + -this.units[K].power)) : (Q += " " + this.units[K].prefix.name + this.units[K].unit.name,
                Q += "^" + this.units[K].power));
        H = H.substr(1),
        Q = Q.substr(1),
        z > 1 && P > 0 && (H = "(" + H + ")"),
        P > 1 && z > 0 && (Q = "(" + Q + ")");
        var ae = H;
        return z > 0 && P > 0 && (ae += " / "),
        ae += Q,
        ae
    }
    ,
    m.prototype.format = function(H) {
        var Q = this.skipAutomaticSimplification || this.value === null ? this.clone() : this.simplify()
          , z = !1;
        typeof Q.value < "u" && Q.value !== null && Oi(Q.value) && (z = Math.abs(Q.value.re) < 1e-14);
        for (var P in Q.units)
            Ue(Q.units, P) && Q.units[P].unit && (Q.units[P].unit.name === "VA" && z ? Q.units[P].unit = G.VAR : Q.units[P].unit.name === "VAR" && !z && (Q.units[P].unit = G.VA));
        Q.units.length === 1 && !Q.fixPrefix && Math.abs(Q.units[0].power - Math.round(Q.units[0].power)) < 1e-14 && (Q.units[0].prefix = Q._bestPrefix());
        var $ = Q._denormalize(Q.value)
          , K = Q.value !== null ? h($, H || {}) : ""
          , ae = Q.formatUnits();
        return Q.value && Oi(Q.value) && (K = "(" + K + ")"),
        ae.length > 0 && K.length > 0 && (K += " "),
        K += ae,
        K
    }
    ,
    m.prototype._bestPrefix = function() {
        if (this.units.length !== 1)
            throw new Error("Can only compute the best prefix for single units with integer powers, like kg, s^2, N^-1, and so forth!");
        if (Math.abs(this.units[0].power - Math.round(this.units[0].power)) >= 1e-14)
            throw new Error("Can only compute the best prefix for single units with integer powers, like kg, s^2, N^-1, and so forth!");
        var H = this.value !== null ? l(this.value) : 0
          , Q = l(this.units[0].unit.value)
          , z = this.units[0].prefix;
        if (H === 0)
            return z;
        var P = this.units[0].power
          , $ = Math.log(H / Math.pow(z.value * Q, P)) / Math.LN10 - 1.2;
        if ($ > -2.200001 && $ < 1.800001)
            return z;
        $ = Math.abs($);
        var K = this.units[0].unit.prefixes;
        for (var ae in K)
            if (Ue(K, ae)) {
                var te = K[ae];
                if (te.scientific) {
                    var L = Math.abs(Math.log(H / Math.pow(te.value * Q, P)) / Math.LN10 - 1.2);
                    (L < $ || L === $ && te.name.length < z.name.length) && (z = te,
                    $ = L)
                }
            }
        return z
    }
    ,
    m.prototype.splitUnit = function(H) {
        for (var Q = this.clone(), z = [], P = 0; P < H.length && (Q = Q.to(H[P]),
        P !== H.length - 1); P++) {
            var $ = Q.toNumeric()
              , K = c($)
              , ae = void 0
              , te = d(K, $);
            te ? ae = K : ae = u(Q.toNumeric());
            var L = new m(ae,H[P].toString());
            z.push(L),
            Q = n(Q, L)
        }
        for (var W = 0, ne = 0; ne < z.length; ne++)
            W = a(W, z[ne].value);
        return d(W, this.value) && (Q.value = 0),
        z.push(Q),
        z
    }
    ;
    var N = {
        NONE: {
            "": {
                name: "",
                value: 1,
                scientific: !0
            }
        },
        SHORT: {
            "": {
                name: "",
                value: 1,
                scientific: !0
            },
            da: {
                name: "da",
                value: 10,
                scientific: !1
            },
            h: {
                name: "h",
                value: 100,
                scientific: !1
            },
            k: {
                name: "k",
                value: 1e3,
                scientific: !0
            },
            M: {
                name: "M",
                value: 1e6,
                scientific: !0
            },
            G: {
                name: "G",
                value: 1e9,
                scientific: !0
            },
            T: {
                name: "T",
                value: 1e12,
                scientific: !0
            },
            P: {
                name: "P",
                value: 1e15,
                scientific: !0
            },
            E: {
                name: "E",
                value: 1e18,
                scientific: !0
            },
            Z: {
                name: "Z",
                value: 1e21,
                scientific: !0
            },
            Y: {
                name: "Y",
                value: 1e24,
                scientific: !0
            },
            d: {
                name: "d",
                value: .1,
                scientific: !1
            },
            c: {
                name: "c",
                value: .01,
                scientific: !1
            },
            m: {
                name: "m",
                value: .001,
                scientific: !0
            },
            u: {
                name: "u",
                value: 1e-6,
                scientific: !0
            },
            n: {
                name: "n",
                value: 1e-9,
                scientific: !0
            },
            p: {
                name: "p",
                value: 1e-12,
                scientific: !0
            },
            f: {
                name: "f",
                value: 1e-15,
                scientific: !0
            },
            a: {
                name: "a",
                value: 1e-18,
                scientific: !0
            },
            z: {
                name: "z",
                value: 1e-21,
                scientific: !0
            },
            y: {
                name: "y",
                value: 1e-24,
                scientific: !0
            }
        },
        LONG: {
            "": {
                name: "",
                value: 1,
                scientific: !0
            },
            deca: {
                name: "deca",
                value: 10,
                scientific: !1
            },
            hecto: {
                name: "hecto",
                value: 100,
                scientific: !1
            },
            kilo: {
                name: "kilo",
                value: 1e3,
                scientific: !0
            },
            mega: {
                name: "mega",
                value: 1e6,
                scientific: !0
            },
            giga: {
                name: "giga",
                value: 1e9,
                scientific: !0
            },
            tera: {
                name: "tera",
                value: 1e12,
                scientific: !0
            },
            peta: {
                name: "peta",
                value: 1e15,
                scientific: !0
            },
            exa: {
                name: "exa",
                value: 1e18,
                scientific: !0
            },
            zetta: {
                name: "zetta",
                value: 1e21,
                scientific: !0
            },
            yotta: {
                name: "yotta",
                value: 1e24,
                scientific: !0
            },
            deci: {
                name: "deci",
                value: .1,
                scientific: !1
            },
            centi: {
                name: "centi",
                value: .01,
                scientific: !1
            },
            milli: {
                name: "milli",
                value: .001,
                scientific: !0
            },
            micro: {
                name: "micro",
                value: 1e-6,
                scientific: !0
            },
            nano: {
                name: "nano",
                value: 1e-9,
                scientific: !0
            },
            pico: {
                name: "pico",
                value: 1e-12,
                scientific: !0
            },
            femto: {
                name: "femto",
                value: 1e-15,
                scientific: !0
            },
            atto: {
                name: "atto",
                value: 1e-18,
                scientific: !0
            },
            zepto: {
                name: "zepto",
                value: 1e-21,
                scientific: !0
            },
            yocto: {
                name: "yocto",
                value: 1e-24,
                scientific: !0
            }
        },
        SQUARED: {
            "": {
                name: "",
                value: 1,
                scientific: !0
            },
            da: {
                name: "da",
                value: 100,
                scientific: !1
            },
            h: {
                name: "h",
                value: 1e4,
                scientific: !1
            },
            k: {
                name: "k",
                value: 1e6,
                scientific: !0
            },
            M: {
                name: "M",
                value: 1e12,
                scientific: !0
            },
            G: {
                name: "G",
                value: 1e18,
                scientific: !0
            },
            T: {
                name: "T",
                value: 1e24,
                scientific: !0
            },
            P: {
                name: "P",
                value: 1e30,
                scientific: !0
            },
            E: {
                name: "E",
                value: 1e36,
                scientific: !0
            },
            Z: {
                name: "Z",
                value: 1e42,
                scientific: !0
            },
            Y: {
                name: "Y",
                value: 1e48,
                scientific: !0
            },
            d: {
                name: "d",
                value: .01,
                scientific: !1
            },
            c: {
                name: "c",
                value: 1e-4,
                scientific: !1
            },
            m: {
                name: "m",
                value: 1e-6,
                scientific: !0
            },
            u: {
                name: "u",
                value: 1e-12,
                scientific: !0
            },
            n: {
                name: "n",
                value: 1e-18,
                scientific: !0
            },
            p: {
                name: "p",
                value: 1e-24,
                scientific: !0
            },
            f: {
                name: "f",
                value: 1e-30,
                scientific: !0
            },
            a: {
                name: "a",
                value: 1e-36,
                scientific: !0
            },
            z: {
                name: "z",
                value: 1e-42,
                scientific: !0
            },
            y: {
                name: "y",
                value: 1e-48,
                scientific: !0
            }
        },
        CUBIC: {
            "": {
                name: "",
                value: 1,
                scientific: !0
            },
            da: {
                name: "da",
                value: 1e3,
                scientific: !1
            },
            h: {
                name: "h",
                value: 1e6,
                scientific: !1
            },
            k: {
                name: "k",
                value: 1e9,
                scientific: !0
            },
            M: {
                name: "M",
                value: 1e18,
                scientific: !0
            },
            G: {
                name: "G",
                value: 1e27,
                scientific: !0
            },
            T: {
                name: "T",
                value: 1e36,
                scientific: !0
            },
            P: {
                name: "P",
                value: 1e45,
                scientific: !0
            },
            E: {
                name: "E",
                value: 1e54,
                scientific: !0
            },
            Z: {
                name: "Z",
                value: 1e63,
                scientific: !0
            },
            Y: {
                name: "Y",
                value: 1e72,
                scientific: !0
            },
            d: {
                name: "d",
                value: .001,
                scientific: !1
            },
            c: {
                name: "c",
                value: 1e-6,
                scientific: !1
            },
            m: {
                name: "m",
                value: 1e-9,
                scientific: !0
            },
            u: {
                name: "u",
                value: 1e-18,
                scientific: !0
            },
            n: {
                name: "n",
                value: 1e-27,
                scientific: !0
            },
            p: {
                name: "p",
                value: 1e-36,
                scientific: !0
            },
            f: {
                name: "f",
                value: 1e-45,
                scientific: !0
            },
            a: {
                name: "a",
                value: 1e-54,
                scientific: !0
            },
            z: {
                name: "z",
                value: 1e-63,
                scientific: !0
            },
            y: {
                name: "y",
                value: 1e-72,
                scientific: !0
            }
        },
        BINARY_SHORT_SI: {
            "": {
                name: "",
                value: 1,
                scientific: !0
            },
            k: {
                name: "k",
                value: 1e3,
                scientific: !0
            },
            M: {
                name: "M",
                value: 1e6,
                scientific: !0
            },
            G: {
                name: "G",
                value: 1e9,
                scientific: !0
            },
            T: {
                name: "T",
                value: 1e12,
                scientific: !0
            },
            P: {
                name: "P",
                value: 1e15,
                scientific: !0
            },
            E: {
                name: "E",
                value: 1e18,
                scientific: !0
            },
            Z: {
                name: "Z",
                value: 1e21,
                scientific: !0
            },
            Y: {
                name: "Y",
                value: 1e24,
                scientific: !0
            }
        },
        BINARY_SHORT_IEC: {
            "": {
                name: "",
                value: 1,
                scientific: !0
            },
            Ki: {
                name: "Ki",
                value: 1024,
                scientific: !0
            },
            Mi: {
                name: "Mi",
                value: Math.pow(1024, 2),
                scientific: !0
            },
            Gi: {
                name: "Gi",
                value: Math.pow(1024, 3),
                scientific: !0
            },
            Ti: {
                name: "Ti",
                value: Math.pow(1024, 4),
                scientific: !0
            },
            Pi: {
                name: "Pi",
                value: Math.pow(1024, 5),
                scientific: !0
            },
            Ei: {
                name: "Ei",
                value: Math.pow(1024, 6),
                scientific: !0
            },
            Zi: {
                name: "Zi",
                value: Math.pow(1024, 7),
                scientific: !0
            },
            Yi: {
                name: "Yi",
                value: Math.pow(1024, 8),
                scientific: !0
            }
        },
        BINARY_LONG_SI: {
            "": {
                name: "",
                value: 1,
                scientific: !0
            },
            kilo: {
                name: "kilo",
                value: 1e3,
                scientific: !0
            },
            mega: {
                name: "mega",
                value: 1e6,
                scientific: !0
            },
            giga: {
                name: "giga",
                value: 1e9,
                scientific: !0
            },
            tera: {
                name: "tera",
                value: 1e12,
                scientific: !0
            },
            peta: {
                name: "peta",
                value: 1e15,
                scientific: !0
            },
            exa: {
                name: "exa",
                value: 1e18,
                scientific: !0
            },
            zetta: {
                name: "zetta",
                value: 1e21,
                scientific: !0
            },
            yotta: {
                name: "yotta",
                value: 1e24,
                scientific: !0
            }
        },
        BINARY_LONG_IEC: {
            "": {
                name: "",
                value: 1,
                scientific: !0
            },
            kibi: {
                name: "kibi",
                value: 1024,
                scientific: !0
            },
            mebi: {
                name: "mebi",
                value: Math.pow(1024, 2),
                scientific: !0
            },
            gibi: {
                name: "gibi",
                value: Math.pow(1024, 3),
                scientific: !0
            },
            tebi: {
                name: "tebi",
                value: Math.pow(1024, 4),
                scientific: !0
            },
            pebi: {
                name: "pebi",
                value: Math.pow(1024, 5),
                scientific: !0
            },
            exi: {
                name: "exi",
                value: Math.pow(1024, 6),
                scientific: !0
            },
            zebi: {
                name: "zebi",
                value: Math.pow(1024, 7),
                scientific: !0
            },
            yobi: {
                name: "yobi",
                value: Math.pow(1024, 8),
                scientific: !0
            }
        },
        BTU: {
            "": {
                name: "",
                value: 1,
                scientific: !0
            },
            MM: {
                name: "MM",
                value: 1e6,
                scientific: !0
            }
        }
    };
    N.SHORTLONG = Ie({}, N.SHORT, N.LONG),
    N.BINARY_SHORT = Ie({}, N.BINARY_SHORT_SI, N.BINARY_SHORT_IEC),
    N.BINARY_LONG = Ie({}, N.BINARY_LONG_SI, N.BINARY_LONG_IEC);
    var B = ["MASS", "LENGTH", "TIME", "CURRENT", "TEMPERATURE", "LUMINOUS_INTENSITY", "AMOUNT_OF_SUBSTANCE", "ANGLE", "BIT"]
      , D = {
        NONE: {
            dimensions: [0, 0, 0, 0, 0, 0, 0, 0, 0]
        },
        MASS: {
            dimensions: [1, 0, 0, 0, 0, 0, 0, 0, 0]
        },
        LENGTH: {
            dimensions: [0, 1, 0, 0, 0, 0, 0, 0, 0]
        },
        TIME: {
            dimensions: [0, 0, 1, 0, 0, 0, 0, 0, 0]
        },
        CURRENT: {
            dimensions: [0, 0, 0, 1, 0, 0, 0, 0, 0]
        },
        TEMPERATURE: {
            dimensions: [0, 0, 0, 0, 1, 0, 0, 0, 0]
        },
        LUMINOUS_INTENSITY: {
            dimensions: [0, 0, 0, 0, 0, 1, 0, 0, 0]
        },
        AMOUNT_OF_SUBSTANCE: {
            dimensions: [0, 0, 0, 0, 0, 0, 1, 0, 0]
        },
        FORCE: {
            dimensions: [1, 1, -2, 0, 0, 0, 0, 0, 0]
        },
        SURFACE: {
            dimensions: [0, 2, 0, 0, 0, 0, 0, 0, 0]
        },
        VOLUME: {
            dimensions: [0, 3, 0, 0, 0, 0, 0, 0, 0]
        },
        ENERGY: {
            dimensions: [1, 2, -2, 0, 0, 0, 0, 0, 0]
        },
        POWER: {
            dimensions: [1, 2, -3, 0, 0, 0, 0, 0, 0]
        },
        PRESSURE: {
            dimensions: [1, -1, -2, 0, 0, 0, 0, 0, 0]
        },
        ELECTRIC_CHARGE: {
            dimensions: [0, 0, 1, 1, 0, 0, 0, 0, 0]
        },
        ELECTRIC_CAPACITANCE: {
            dimensions: [-1, -2, 4, 2, 0, 0, 0, 0, 0]
        },
        ELECTRIC_POTENTIAL: {
            dimensions: [1, 2, -3, -1, 0, 0, 0, 0, 0]
        },
        ELECTRIC_RESISTANCE: {
            dimensions: [1, 2, -3, -2, 0, 0, 0, 0, 0]
        },
        ELECTRIC_INDUCTANCE: {
            dimensions: [1, 2, -2, -2, 0, 0, 0, 0, 0]
        },
        ELECTRIC_CONDUCTANCE: {
            dimensions: [-1, -2, 3, 2, 0, 0, 0, 0, 0]
        },
        MAGNETIC_FLUX: {
            dimensions: [1, 2, -2, -1, 0, 0, 0, 0, 0]
        },
        MAGNETIC_FLUX_DENSITY: {
            dimensions: [1, 0, -2, -1, 0, 0, 0, 0, 0]
        },
        FREQUENCY: {
            dimensions: [0, 0, -1, 0, 0, 0, 0, 0, 0]
        },
        ANGLE: {
            dimensions: [0, 0, 0, 0, 0, 0, 0, 1, 0]
        },
        BIT: {
            dimensions: [0, 0, 0, 0, 0, 0, 0, 0, 1]
        }
    };
    for (var V in D)
        Ue(D, V) && (D[V].key = V);
    var J = {}
      , Y = {
        name: "",
        base: J,
        value: 1,
        offset: 0,
        dimensions: B.map(H => 0)
    }
      , G = {
        meter: {
            name: "meter",
            base: D.LENGTH,
            prefixes: N.LONG,
            value: 1,
            offset: 0
        },
        inch: {
            name: "inch",
            base: D.LENGTH,
            prefixes: N.NONE,
            value: .0254,
            offset: 0
        },
        foot: {
            name: "foot",
            base: D.LENGTH,
            prefixes: N.NONE,
            value: .3048,
            offset: 0
        },
        yard: {
            name: "yard",
            base: D.LENGTH,
            prefixes: N.NONE,
            value: .9144,
            offset: 0
        },
        mile: {
            name: "mile",
            base: D.LENGTH,
            prefixes: N.NONE,
            value: 1609.344,
            offset: 0
        },
        link: {
            name: "link",
            base: D.LENGTH,
            prefixes: N.NONE,
            value: .201168,
            offset: 0
        },
        rod: {
            name: "rod",
            base: D.LENGTH,
            prefixes: N.NONE,
            value: 5.0292,
            offset: 0
        },
        chain: {
            name: "chain",
            base: D.LENGTH,
            prefixes: N.NONE,
            value: 20.1168,
            offset: 0
        },
        angstrom: {
            name: "angstrom",
            base: D.LENGTH,
            prefixes: N.NONE,
            value: 1e-10,
            offset: 0
        },
        m: {
            name: "m",
            base: D.LENGTH,
            prefixes: N.SHORT,
            value: 1,
            offset: 0
        },
        in: {
            name: "in",
            base: D.LENGTH,
            prefixes: N.NONE,
            value: .0254,
            offset: 0
        },
        ft: {
            name: "ft",
            base: D.LENGTH,
            prefixes: N.NONE,
            value: .3048,
            offset: 0
        },
        yd: {
            name: "yd",
            base: D.LENGTH,
            prefixes: N.NONE,
            value: .9144,
            offset: 0
        },
        mi: {
            name: "mi",
            base: D.LENGTH,
            prefixes: N.NONE,
            value: 1609.344,
            offset: 0
        },
        li: {
            name: "li",
            base: D.LENGTH,
            prefixes: N.NONE,
            value: .201168,
            offset: 0
        },
        rd: {
            name: "rd",
            base: D.LENGTH,
            prefixes: N.NONE,
            value: 5.02921,
            offset: 0
        },
        ch: {
            name: "ch",
            base: D.LENGTH,
            prefixes: N.NONE,
            value: 20.1168,
            offset: 0
        },
        mil: {
            name: "mil",
            base: D.LENGTH,
            prefixes: N.NONE,
            value: 254e-7,
            offset: 0
        },
        m2: {
            name: "m2",
            base: D.SURFACE,
            prefixes: N.SQUARED,
            value: 1,
            offset: 0
        },
        sqin: {
            name: "sqin",
            base: D.SURFACE,
            prefixes: N.NONE,
            value: 64516e-8,
            offset: 0
        },
        sqft: {
            name: "sqft",
            base: D.SURFACE,
            prefixes: N.NONE,
            value: .09290304,
            offset: 0
        },
        sqyd: {
            name: "sqyd",
            base: D.SURFACE,
            prefixes: N.NONE,
            value: .83612736,
            offset: 0
        },
        sqmi: {
            name: "sqmi",
            base: D.SURFACE,
            prefixes: N.NONE,
            value: 2589988110336e-6,
            offset: 0
        },
        sqrd: {
            name: "sqrd",
            base: D.SURFACE,
            prefixes: N.NONE,
            value: 25.29295,
            offset: 0
        },
        sqch: {
            name: "sqch",
            base: D.SURFACE,
            prefixes: N.NONE,
            value: 404.6873,
            offset: 0
        },
        sqmil: {
            name: "sqmil",
            base: D.SURFACE,
            prefixes: N.NONE,
            value: 64516e-14,
            offset: 0
        },
        acre: {
            name: "acre",
            base: D.SURFACE,
            prefixes: N.NONE,
            value: 4046.86,
            offset: 0
        },
        hectare: {
            name: "hectare",
            base: D.SURFACE,
            prefixes: N.NONE,
            value: 1e4,
            offset: 0
        },
        m3: {
            name: "m3",
            base: D.VOLUME,
            prefixes: N.CUBIC,
            value: 1,
            offset: 0
        },
        L: {
            name: "L",
            base: D.VOLUME,
            prefixes: N.SHORT,
            value: .001,
            offset: 0
        },
        l: {
            name: "l",
            base: D.VOLUME,
            prefixes: N.SHORT,
            value: .001,
            offset: 0
        },
        litre: {
            name: "litre",
            base: D.VOLUME,
            prefixes: N.LONG,
            value: .001,
            offset: 0
        },
        cuin: {
            name: "cuin",
            base: D.VOLUME,
            prefixes: N.NONE,
            value: 16387064e-12,
            offset: 0
        },
        cuft: {
            name: "cuft",
            base: D.VOLUME,
            prefixes: N.NONE,
            value: .028316846592,
            offset: 0
        },
        cuyd: {
            name: "cuyd",
            base: D.VOLUME,
            prefixes: N.NONE,
            value: .764554857984,
            offset: 0
        },
        teaspoon: {
            name: "teaspoon",
            base: D.VOLUME,
            prefixes: N.NONE,
            value: 5e-6,
            offset: 0
        },
        tablespoon: {
            name: "tablespoon",
            base: D.VOLUME,
            prefixes: N.NONE,
            value: 15e-6,
            offset: 0
        },
        drop: {
            name: "drop",
            base: D.VOLUME,
            prefixes: N.NONE,
            value: 5e-8,
            offset: 0
        },
        gtt: {
            name: "gtt",
            base: D.VOLUME,
            prefixes: N.NONE,
            value: 5e-8,
            offset: 0
        },
        minim: {
            name: "minim",
            base: D.VOLUME,
            prefixes: N.NONE,
            value: 6161152e-14,
            offset: 0
        },
        fluiddram: {
            name: "fluiddram",
            base: D.VOLUME,
            prefixes: N.NONE,
            value: 36966911e-13,
            offset: 0
        },
        fluidounce: {
            name: "fluidounce",
            base: D.VOLUME,
            prefixes: N.NONE,
            value: 2957353e-11,
            offset: 0
        },
        gill: {
            name: "gill",
            base: D.VOLUME,
            prefixes: N.NONE,
            value: .0001182941,
            offset: 0
        },
        cc: {
            name: "cc",
            base: D.VOLUME,
            prefixes: N.NONE,
            value: 1e-6,
            offset: 0
        },
        cup: {
            name: "cup",
            base: D.VOLUME,
            prefixes: N.NONE,
            value: .0002365882,
            offset: 0
        },
        pint: {
            name: "pint",
            base: D.VOLUME,
            prefixes: N.NONE,
            value: .0004731765,
            offset: 0
        },
        quart: {
            name: "quart",
            base: D.VOLUME,
            prefixes: N.NONE,
            value: .0009463529,
            offset: 0
        },
        gallon: {
            name: "gallon",
            base: D.VOLUME,
            prefixes: N.NONE,
            value: .003785412,
            offset: 0
        },
        beerbarrel: {
            name: "beerbarrel",
            base: D.VOLUME,
            prefixes: N.NONE,
            value: .1173478,
            offset: 0
        },
        oilbarrel: {
            name: "oilbarrel",
            base: D.VOLUME,
            prefixes: N.NONE,
            value: .1589873,
            offset: 0
        },
        hogshead: {
            name: "hogshead",
            base: D.VOLUME,
            prefixes: N.NONE,
            value: .238481,
            offset: 0
        },
        fldr: {
            name: "fldr",
            base: D.VOLUME,
            prefixes: N.NONE,
            value: 36966911e-13,
            offset: 0
        },
        floz: {
            name: "floz",
            base: D.VOLUME,
            prefixes: N.NONE,
            value: 2957353e-11,
            offset: 0
        },
        gi: {
            name: "gi",
            base: D.VOLUME,
            prefixes: N.NONE,
            value: .0001182941,
            offset: 0
        },
        cp: {
            name: "cp",
            base: D.VOLUME,
            prefixes: N.NONE,
            value: .0002365882,
            offset: 0
        },
        pt: {
            name: "pt",
            base: D.VOLUME,
            prefixes: N.NONE,
            value: .0004731765,
            offset: 0
        },
        qt: {
            name: "qt",
            base: D.VOLUME,
            prefixes: N.NONE,
            value: .0009463529,
            offset: 0
        },
        gal: {
            name: "gal",
            base: D.VOLUME,
            prefixes: N.NONE,
            value: .003785412,
            offset: 0
        },
        bbl: {
            name: "bbl",
            base: D.VOLUME,
            prefixes: N.NONE,
            value: .1173478,
            offset: 0
        },
        obl: {
            name: "obl",
            base: D.VOLUME,
            prefixes: N.NONE,
            value: .1589873,
            offset: 0
        },
        g: {
            name: "g",
            base: D.MASS,
            prefixes: N.SHORT,
            value: .001,
            offset: 0
        },
        gram: {
            name: "gram",
            base: D.MASS,
            prefixes: N.LONG,
            value: .001,
            offset: 0
        },
        ton: {
            name: "ton",
            base: D.MASS,
            prefixes: N.SHORT,
            value: 907.18474,
            offset: 0
        },
        t: {
            name: "t",
            base: D.MASS,
            prefixes: N.SHORT,
            value: 1e3,
            offset: 0
        },
        tonne: {
            name: "tonne",
            base: D.MASS,
            prefixes: N.LONG,
            value: 1e3,
            offset: 0
        },
        grain: {
            name: "grain",
            base: D.MASS,
            prefixes: N.NONE,
            value: 6479891e-11,
            offset: 0
        },
        dram: {
            name: "dram",
            base: D.MASS,
            prefixes: N.NONE,
            value: .0017718451953125,
            offset: 0
        },
        ounce: {
            name: "ounce",
            base: D.MASS,
            prefixes: N.NONE,
            value: .028349523125,
            offset: 0
        },
        poundmass: {
            name: "poundmass",
            base: D.MASS,
            prefixes: N.NONE,
            value: .45359237,
            offset: 0
        },
        hundredweight: {
            name: "hundredweight",
            base: D.MASS,
            prefixes: N.NONE,
            value: 45.359237,
            offset: 0
        },
        stick: {
            name: "stick",
            base: D.MASS,
            prefixes: N.NONE,
            value: .115,
            offset: 0
        },
        stone: {
            name: "stone",
            base: D.MASS,
            prefixes: N.NONE,
            value: 6.35029318,
            offset: 0
        },
        gr: {
            name: "gr",
            base: D.MASS,
            prefixes: N.NONE,
            value: 6479891e-11,
            offset: 0
        },
        dr: {
            name: "dr",
            base: D.MASS,
            prefixes: N.NONE,
            value: .0017718451953125,
            offset: 0
        },
        oz: {
            name: "oz",
            base: D.MASS,
            prefixes: N.NONE,
            value: .028349523125,
            offset: 0
        },
        lbm: {
            name: "lbm",
            base: D.MASS,
            prefixes: N.NONE,
            value: .45359237,
            offset: 0
        },
        cwt: {
            name: "cwt",
            base: D.MASS,
            prefixes: N.NONE,
            value: 45.359237,
            offset: 0
        },
        s: {
            name: "s",
            base: D.TIME,
            prefixes: N.SHORT,
            value: 1,
            offset: 0
        },
        min: {
            name: "min",
            base: D.TIME,
            prefixes: N.NONE,
            value: 60,
            offset: 0
        },
        h: {
            name: "h",
            base: D.TIME,
            prefixes: N.NONE,
            value: 3600,
            offset: 0
        },
        second: {
            name: "second",
            base: D.TIME,
            prefixes: N.LONG,
            value: 1,
            offset: 0
        },
        sec: {
            name: "sec",
            base: D.TIME,
            prefixes: N.LONG,
            value: 1,
            offset: 0
        },
        minute: {
            name: "minute",
            base: D.TIME,
            prefixes: N.NONE,
            value: 60,
            offset: 0
        },
        hour: {
            name: "hour",
            base: D.TIME,
            prefixes: N.NONE,
            value: 3600,
            offset: 0
        },
        day: {
            name: "day",
            base: D.TIME,
            prefixes: N.NONE,
            value: 86400,
            offset: 0
        },
        week: {
            name: "week",
            base: D.TIME,
            prefixes: N.NONE,
            value: 7 * 86400,
            offset: 0
        },
        month: {
            name: "month",
            base: D.TIME,
            prefixes: N.NONE,
            value: 2629800,
            offset: 0
        },
        year: {
            name: "year",
            base: D.TIME,
            prefixes: N.NONE,
            value: 31557600,
            offset: 0
        },
        decade: {
            name: "decade",
            base: D.TIME,
            prefixes: N.NONE,
            value: 315576e3,
            offset: 0
        },
        century: {
            name: "century",
            base: D.TIME,
            prefixes: N.NONE,
            value: 315576e4,
            offset: 0
        },
        millennium: {
            name: "millennium",
            base: D.TIME,
            prefixes: N.NONE,
            value: 315576e5,
            offset: 0
        },
        hertz: {
            name: "Hertz",
            base: D.FREQUENCY,
            prefixes: N.LONG,
            value: 1,
            offset: 0,
            reciprocal: !0
        },
        Hz: {
            name: "Hz",
            base: D.FREQUENCY,
            prefixes: N.SHORT,
            value: 1,
            offset: 0,
            reciprocal: !0
        },
        rad: {
            name: "rad",
            base: D.ANGLE,
            prefixes: N.SHORT,
            value: 1,
            offset: 0
        },
        radian: {
            name: "radian",
            base: D.ANGLE,
            prefixes: N.LONG,
            value: 1,
            offset: 0
        },
        deg: {
            name: "deg",
            base: D.ANGLE,
            prefixes: N.SHORT,
            value: null,
            offset: 0
        },
        degree: {
            name: "degree",
            base: D.ANGLE,
            prefixes: N.LONG,
            value: null,
            offset: 0
        },
        grad: {
            name: "grad",
            base: D.ANGLE,
            prefixes: N.SHORT,
            value: null,
            offset: 0
        },
        gradian: {
            name: "gradian",
            base: D.ANGLE,
            prefixes: N.LONG,
            value: null,
            offset: 0
        },
        cycle: {
            name: "cycle",
            base: D.ANGLE,
            prefixes: N.NONE,
            value: null,
            offset: 0
        },
        arcsec: {
            name: "arcsec",
            base: D.ANGLE,
            prefixes: N.NONE,
            value: null,
            offset: 0
        },
        arcmin: {
            name: "arcmin",
            base: D.ANGLE,
            prefixes: N.NONE,
            value: null,
            offset: 0
        },
        A: {
            name: "A",
            base: D.CURRENT,
            prefixes: N.SHORT,
            value: 1,
            offset: 0
        },
        ampere: {
            name: "ampere",
            base: D.CURRENT,
            prefixes: N.LONG,
            value: 1,
            offset: 0
        },
        K: {
            name: "K",
            base: D.TEMPERATURE,
            prefixes: N.SHORT,
            value: 1,
            offset: 0
        },
        degC: {
            name: "degC",
            base: D.TEMPERATURE,
            prefixes: N.SHORT,
            value: 1,
            offset: 273.15
        },
        degF: {
            name: "degF",
            base: D.TEMPERATURE,
            prefixes: N.SHORT,
            value: new y(5,9),
            offset: 459.67
        },
        degR: {
            name: "degR",
            base: D.TEMPERATURE,
            prefixes: N.SHORT,
            value: new y(5,9),
            offset: 0
        },
        kelvin: {
            name: "kelvin",
            base: D.TEMPERATURE,
            prefixes: N.LONG,
            value: 1,
            offset: 0
        },
        celsius: {
            name: "celsius",
            base: D.TEMPERATURE,
            prefixes: N.LONG,
            value: 1,
            offset: 273.15
        },
        fahrenheit: {
            name: "fahrenheit",
            base: D.TEMPERATURE,
            prefixes: N.LONG,
            value: new y(5,9),
            offset: 459.67
        },
        rankine: {
            name: "rankine",
            base: D.TEMPERATURE,
            prefixes: N.LONG,
            value: new y(5,9),
            offset: 0
        },
        mol: {
            name: "mol",
            base: D.AMOUNT_OF_SUBSTANCE,
            prefixes: N.SHORT,
            value: 1,
            offset: 0
        },
        mole: {
            name: "mole",
            base: D.AMOUNT_OF_SUBSTANCE,
            prefixes: N.LONG,
            value: 1,
            offset: 0
        },
        cd: {
            name: "cd",
            base: D.LUMINOUS_INTENSITY,
            prefixes: N.SHORT,
            value: 1,
            offset: 0
        },
        candela: {
            name: "candela",
            base: D.LUMINOUS_INTENSITY,
            prefixes: N.LONG,
            value: 1,
            offset: 0
        },
        N: {
            name: "N",
            base: D.FORCE,
            prefixes: N.SHORT,
            value: 1,
            offset: 0
        },
        newton: {
            name: "newton",
            base: D.FORCE,
            prefixes: N.LONG,
            value: 1,
            offset: 0
        },
        dyn: {
            name: "dyn",
            base: D.FORCE,
            prefixes: N.SHORT,
            value: 1e-5,
            offset: 0
        },
        dyne: {
            name: "dyne",
            base: D.FORCE,
            prefixes: N.LONG,
            value: 1e-5,
            offset: 0
        },
        lbf: {
            name: "lbf",
            base: D.FORCE,
            prefixes: N.NONE,
            value: 4.4482216152605,
            offset: 0
        },
        poundforce: {
            name: "poundforce",
            base: D.FORCE,
            prefixes: N.NONE,
            value: 4.4482216152605,
            offset: 0
        },
        kip: {
            name: "kip",
            base: D.FORCE,
            prefixes: N.LONG,
            value: 4448.2216,
            offset: 0
        },
        kilogramforce: {
            name: "kilogramforce",
            base: D.FORCE,
            prefixes: N.NONE,
            value: 9.80665,
            offset: 0
        },
        J: {
            name: "J",
            base: D.ENERGY,
            prefixes: N.SHORT,
            value: 1,
            offset: 0
        },
        joule: {
            name: "joule",
            base: D.ENERGY,
            prefixes: N.LONG,
            value: 1,
            offset: 0
        },
        erg: {
            name: "erg",
            base: D.ENERGY,
            prefixes: N.SHORTLONG,
            value: 1e-7,
            offset: 0
        },
        Wh: {
            name: "Wh",
            base: D.ENERGY,
            prefixes: N.SHORT,
            value: 3600,
            offset: 0
        },
        BTU: {
            name: "BTU",
            base: D.ENERGY,
            prefixes: N.BTU,
            value: 1055.05585262,
            offset: 0
        },
        eV: {
            name: "eV",
            base: D.ENERGY,
            prefixes: N.SHORT,
            value: 1602176565e-28,
            offset: 0
        },
        electronvolt: {
            name: "electronvolt",
            base: D.ENERGY,
            prefixes: N.LONG,
            value: 1602176565e-28,
            offset: 0
        },
        W: {
            name: "W",
            base: D.POWER,
            prefixes: N.SHORT,
            value: 1,
            offset: 0
        },
        watt: {
            name: "watt",
            base: D.POWER,
            prefixes: N.LONG,
            value: 1,
            offset: 0
        },
        hp: {
            name: "hp",
            base: D.POWER,
            prefixes: N.NONE,
            value: 745.6998715386,
            offset: 0
        },
        VAR: {
            name: "VAR",
            base: D.POWER,
            prefixes: N.SHORT,
            value: f.I,
            offset: 0
        },
        VA: {
            name: "VA",
            base: D.POWER,
            prefixes: N.SHORT,
            value: 1,
            offset: 0
        },
        Pa: {
            name: "Pa",
            base: D.PRESSURE,
            prefixes: N.SHORT,
            value: 1,
            offset: 0
        },
        psi: {
            name: "psi",
            base: D.PRESSURE,
            prefixes: N.NONE,
            value: 6894.75729276459,
            offset: 0
        },
        atm: {
            name: "atm",
            base: D.PRESSURE,
            prefixes: N.NONE,
            value: 101325,
            offset: 0
        },
        bar: {
            name: "bar",
            base: D.PRESSURE,
            prefixes: N.SHORTLONG,
            value: 1e5,
            offset: 0
        },
        torr: {
            name: "torr",
            base: D.PRESSURE,
            prefixes: N.NONE,
            value: 133.322,
            offset: 0
        },
        mmHg: {
            name: "mmHg",
            base: D.PRESSURE,
            prefixes: N.NONE,
            value: 133.322,
            offset: 0
        },
        mmH2O: {
            name: "mmH2O",
            base: D.PRESSURE,
            prefixes: N.NONE,
            value: 9.80665,
            offset: 0
        },
        cmH2O: {
            name: "cmH2O",
            base: D.PRESSURE,
            prefixes: N.NONE,
            value: 98.0665,
            offset: 0
        },
        coulomb: {
            name: "coulomb",
            base: D.ELECTRIC_CHARGE,
            prefixes: N.LONG,
            value: 1,
            offset: 0
        },
        C: {
            name: "C",
            base: D.ELECTRIC_CHARGE,
            prefixes: N.SHORT,
            value: 1,
            offset: 0
        },
        farad: {
            name: "farad",
            base: D.ELECTRIC_CAPACITANCE,
            prefixes: N.LONG,
            value: 1,
            offset: 0
        },
        F: {
            name: "F",
            base: D.ELECTRIC_CAPACITANCE,
            prefixes: N.SHORT,
            value: 1,
            offset: 0
        },
        volt: {
            name: "volt",
            base: D.ELECTRIC_POTENTIAL,
            prefixes: N.LONG,
            value: 1,
            offset: 0
        },
        V: {
            name: "V",
            base: D.ELECTRIC_POTENTIAL,
            prefixes: N.SHORT,
            value: 1,
            offset: 0
        },
        ohm: {
            name: "ohm",
            base: D.ELECTRIC_RESISTANCE,
            prefixes: N.SHORTLONG,
            value: 1,
            offset: 0
        },
        henry: {
            name: "henry",
            base: D.ELECTRIC_INDUCTANCE,
            prefixes: N.LONG,
            value: 1,
            offset: 0
        },
        H: {
            name: "H",
            base: D.ELECTRIC_INDUCTANCE,
            prefixes: N.SHORT,
            value: 1,
            offset: 0
        },
        siemens: {
            name: "siemens",
            base: D.ELECTRIC_CONDUCTANCE,
            prefixes: N.LONG,
            value: 1,
            offset: 0
        },
        S: {
            name: "S",
            base: D.ELECTRIC_CONDUCTANCE,
            prefixes: N.SHORT,
            value: 1,
            offset: 0
        },
        weber: {
            name: "weber",
            base: D.MAGNETIC_FLUX,
            prefixes: N.LONG,
            value: 1,
            offset: 0
        },
        Wb: {
            name: "Wb",
            base: D.MAGNETIC_FLUX,
            prefixes: N.SHORT,
            value: 1,
            offset: 0
        },
        tesla: {
            name: "tesla",
            base: D.MAGNETIC_FLUX_DENSITY,
            prefixes: N.LONG,
            value: 1,
            offset: 0
        },
        T: {
            name: "T",
            base: D.MAGNETIC_FLUX_DENSITY,
            prefixes: N.SHORT,
            value: 1,
            offset: 0
        },
        b: {
            name: "b",
            base: D.BIT,
            prefixes: N.BINARY_SHORT,
            value: 1,
            offset: 0
        },
        bits: {
            name: "bits",
            base: D.BIT,
            prefixes: N.BINARY_LONG,
            value: 1,
            offset: 0
        },
        B: {
            name: "B",
            base: D.BIT,
            prefixes: N.BINARY_SHORT,
            value: 8,
            offset: 0
        },
        bytes: {
            name: "bytes",
            base: D.BIT,
            prefixes: N.BINARY_LONG,
            value: 8,
            offset: 0
        }
    }
      , Z = {
        meters: "meter",
        inches: "inch",
        feet: "foot",
        yards: "yard",
        miles: "mile",
        links: "link",
        rods: "rod",
        chains: "chain",
        angstroms: "angstrom",
        lt: "l",
        litres: "litre",
        liter: "litre",
        liters: "litre",
        teaspoons: "teaspoon",
        tablespoons: "tablespoon",
        minims: "minim",
        fluiddrams: "fluiddram",
        fluidounces: "fluidounce",
        gills: "gill",
        cups: "cup",
        pints: "pint",
        quarts: "quart",
        gallons: "gallon",
        beerbarrels: "beerbarrel",
        oilbarrels: "oilbarrel",
        hogsheads: "hogshead",
        gtts: "gtt",
        grams: "gram",
        tons: "ton",
        tonnes: "tonne",
        grains: "grain",
        drams: "dram",
        ounces: "ounce",
        poundmasses: "poundmass",
        hundredweights: "hundredweight",
        sticks: "stick",
        lb: "lbm",
        lbs: "lbm",
        kips: "kip",
        kgf: "kilogramforce",
        acres: "acre",
        hectares: "hectare",
        sqfeet: "sqft",
        sqyard: "sqyd",
        sqmile: "sqmi",
        sqmiles: "sqmi",
        mmhg: "mmHg",
        mmh2o: "mmH2O",
        cmh2o: "cmH2O",
        seconds: "second",
        secs: "second",
        minutes: "minute",
        mins: "minute",
        hours: "hour",
        hr: "hour",
        hrs: "hour",
        days: "day",
        weeks: "week",
        months: "month",
        years: "year",
        decades: "decade",
        centuries: "century",
        millennia: "millennium",
        hertz: "hertz",
        radians: "radian",
        degrees: "degree",
        gradians: "gradian",
        cycles: "cycle",
        arcsecond: "arcsec",
        arcseconds: "arcsec",
        arcminute: "arcmin",
        arcminutes: "arcmin",
        BTUs: "BTU",
        watts: "watt",
        joules: "joule",
        amperes: "ampere",
        amps: "ampere",
        amp: "ampere",
        coulombs: "coulomb",
        volts: "volt",
        ohms: "ohm",
        farads: "farad",
        webers: "weber",
        teslas: "tesla",
        electronvolts: "electronvolt",
        moles: "mole",
        bit: "bits",
        byte: "bytes"
    };
    function ie(H) {
        if (H.number === "BigNumber") {
            var Q = y2(_);
            G.rad.value = new _(1),
            G.deg.value = Q.div(180),
            G.grad.value = Q.div(200),
            G.cycle.value = Q.times(2),
            G.arcsec.value = Q.div(648e3),
            G.arcmin.value = Q.div(10800)
        } else
            G.rad.value = 1,
            G.deg.value = Math.PI / 180,
            G.grad.value = Math.PI / 200,
            G.cycle.value = Math.PI * 2,
            G.arcsec.value = Math.PI / 648e3,
            G.arcmin.value = Math.PI / 10800;
        G.radian.value = G.rad.value,
        G.degree.value = G.deg.value,
        G.gradian.value = G.grad.value
    }
    ie(r),
    t && t("config", function(H, Q) {
        H.number !== Q.number && ie(H)
    });
    var re = {
        si: {
            NONE: {
                unit: Y,
                prefix: N.NONE[""]
            },
            LENGTH: {
                unit: G.m,
                prefix: N.SHORT[""]
            },
            MASS: {
                unit: G.g,
                prefix: N.SHORT.k
            },
            TIME: {
                unit: G.s,
                prefix: N.SHORT[""]
            },
            CURRENT: {
                unit: G.A,
                prefix: N.SHORT[""]
            },
            TEMPERATURE: {
                unit: G.K,
                prefix: N.SHORT[""]
            },
            LUMINOUS_INTENSITY: {
                unit: G.cd,
                prefix: N.SHORT[""]
            },
            AMOUNT_OF_SUBSTANCE: {
                unit: G.mol,
                prefix: N.SHORT[""]
            },
            ANGLE: {
                unit: G.rad,
                prefix: N.SHORT[""]
            },
            BIT: {
                unit: G.bits,
                prefix: N.SHORT[""]
            },
            FORCE: {
                unit: G.N,
                prefix: N.SHORT[""]
            },
            ENERGY: {
                unit: G.J,
                prefix: N.SHORT[""]
            },
            POWER: {
                unit: G.W,
                prefix: N.SHORT[""]
            },
            PRESSURE: {
                unit: G.Pa,
                prefix: N.SHORT[""]
            },
            ELECTRIC_CHARGE: {
                unit: G.C,
                prefix: N.SHORT[""]
            },
            ELECTRIC_CAPACITANCE: {
                unit: G.F,
                prefix: N.SHORT[""]
            },
            ELECTRIC_POTENTIAL: {
                unit: G.V,
                prefix: N.SHORT[""]
            },
            ELECTRIC_RESISTANCE: {
                unit: G.ohm,
                prefix: N.SHORT[""]
            },
            ELECTRIC_INDUCTANCE: {
                unit: G.H,
                prefix: N.SHORT[""]
            },
            ELECTRIC_CONDUCTANCE: {
                unit: G.S,
                prefix: N.SHORT[""]
            },
            MAGNETIC_FLUX: {
                unit: G.Wb,
                prefix: N.SHORT[""]
            },
            MAGNETIC_FLUX_DENSITY: {
                unit: G.T,
                prefix: N.SHORT[""]
            },
            FREQUENCY: {
                unit: G.Hz,
                prefix: N.SHORT[""]
            }
        }
    };
    re.cgs = JSON.parse(JSON.stringify(re.si)),
    re.cgs.LENGTH = {
        unit: G.m,
        prefix: N.SHORT.c
    },
    re.cgs.MASS = {
        unit: G.g,
        prefix: N.SHORT[""]
    },
    re.cgs.FORCE = {
        unit: G.dyn,
        prefix: N.SHORT[""]
    },
    re.cgs.ENERGY = {
        unit: G.erg,
        prefix: N.NONE[""]
    },
    re.us = JSON.parse(JSON.stringify(re.si)),
    re.us.LENGTH = {
        unit: G.ft,
        prefix: N.NONE[""]
    },
    re.us.MASS = {
        unit: G.lbm,
        prefix: N.NONE[""]
    },
    re.us.TEMPERATURE = {
        unit: G.degF,
        prefix: N.NONE[""]
    },
    re.us.FORCE = {
        unit: G.lbf,
        prefix: N.NONE[""]
    },
    re.us.ENERGY = {
        unit: G.BTU,
        prefix: N.BTU[""]
    },
    re.us.POWER = {
        unit: G.hp,
        prefix: N.NONE[""]
    },
    re.us.PRESSURE = {
        unit: G.psi,
        prefix: N.NONE[""]
    },
    re.auto = JSON.parse(JSON.stringify(re.si));
    var se = re.auto;
    m.setUnitSystem = function(H) {
        if (Ue(re, H))
            se = re[H];
        else
            throw new Error("Unit system " + H + " does not exist. Choices are: " + Object.keys(re).join(", "))
    }
    ,
    m.getUnitSystem = function() {
        for (var H in re)
            if (Ue(re, H) && re[H] === se)
                return H
    }
    ,
    m.typeConverters = {
        BigNumber: function(Q) {
            return Q != null && Q.isFraction ? new _(Q.n).div(Q.d).times(Q.s) : new _(Q + "")
        },
        Fraction: function(Q) {
            return new y(Q)
        },
        Complex: function(Q) {
            return Q
        },
        number: function(Q) {
            return Q != null && Q.isFraction ? p(Q) : Q
        }
    },
    m.prototype._numberConverter = function() {
        var H = m.typeConverters[this.valueType()];
        if (H)
            return H;
        throw new TypeError('Unsupported Unit value type "' + this.valueType() + '"')
    }
    ,
    m._getNumberConverter = function(H) {
        if (!m.typeConverters[H])
            throw new TypeError('Unsupported type "' + H + '"');
        return m.typeConverters[H]
    }
    ;
    for (var ce in G)
        if (Ue(G, ce)) {
            var ue = G[ce];
            ue.dimensions = ue.base.dimensions
        }
    for (var oe in Z)
        if (Ue(Z, oe)) {
            var me = G[Z[oe]]
              , xe = {};
            for (var pe in me)
                Ue(me, pe) && (xe[pe] = me[pe]);
            xe.name = oe,
            G[oe] = xe
        }
    m.isValidAlpha = function(Q) {
        return /^[a-zA-Z]$/.test(Q)
    }
    ;
    function be(H) {
        for (var Q = 0; Q < H.length; Q++) {
            if (b = H.charAt(Q),
            Q === 0 && !m.isValidAlpha(b))
                throw new Error('Invalid unit name (must begin with alpha character): "' + H + '"');
            if (Q > 0 && !(m.isValidAlpha(b) || k(b)))
                throw new Error('Invalid unit name (only alphanumeric characters are allowed): "' + H + '"')
        }
    }
    return m.createUnit = function(H, Q) {
        if (typeof H != "object")
            throw new TypeError("createUnit expects first parameter to be of type 'Object'");
        if (Q && Q.override) {
            for (var z in H)
                if (Ue(H, z) && m.deleteUnit(z),
                H[z].aliases)
                    for (var P = 0; P < H[z].aliases.length; P++)
                        m.deleteUnit(H[z].aliases[P])
        }
        var $;
        for (var K in H)
            Ue(H, K) && ($ = m.createUnitSingle(K, H[K]));
        return $
    }
    ,
    m.createUnitSingle = function(H, Q) {
        if ((typeof Q > "u" || Q === null) && (Q = {}),
        typeof H != "string")
            throw new TypeError("createUnitSingle expects first parameter to be of type 'string'");
        if (Ue(G, H))
            throw new Error('Cannot create unit "' + H + '": a unit with that name already exists');
        be(H);
        var z = null, P = [], $ = 0, K, ae, te;
        if (Q && Q.type === "Unit")
            z = Q.clone();
        else if (typeof Q == "string")
            Q !== "" && (K = Q);
        else if (typeof Q == "object")
            K = Q.definition,
            ae = Q.prefixes,
            $ = Q.offset,
            te = Q.baseName,
            Q.aliases && (P = Q.aliases.valueOf());
        else
            throw new TypeError('Cannot create unit "' + H + '" from "' + Q.toString() + '": expecting "string" or "Unit" or "Object"');
        if (P) {
            for (var L = 0; L < P.length; L++)
                if (Ue(G, P[L]))
                    throw new Error('Cannot create alias "' + P[L] + '": a unit with that name already exists')
        }
        if (K && typeof K == "string" && !z)
            try {
                z = m.parse(K, {
                    allowNoUnits: !0
                })
            } catch (St) {
                throw St.message = 'Could not create unit "' + H + '" from "' + K + '": ' + St.message,
                St
            }
        else
            K && K.type === "Unit" && (z = K.clone());
        P = P || [],
        $ = $ || 0,
        ae && ae.toUpperCase ? ae = N[ae.toUpperCase()] || N.NONE : ae = N.NONE;
        var W = {};
        if (z) {
            W = {
                name: H,
                value: z.value,
                dimensions: z.dimensions.slice(0),
                prefixes: ae,
                offset: $
            };
            var ve = !1;
            for (var we in D)
                if (Ue(D, we)) {
                    for (var ye = !0, Ce = 0; Ce < B.length; Ce++)
                        if (Math.abs((W.dimensions[Ce] || 0) - (D[we].dimensions[Ce] || 0)) > 1e-12) {
                            ye = !1;
                            break
                        }
                    if (ye) {
                        ve = !0,
                        W.base = D[we];
                        break
                    }
                }
            if (!ve) {
                te = te || H + "_STUFF";
                var ge = {
                    dimensions: z.dimensions.slice(0)
                };
                ge.key = te,
                D[te] = ge,
                se[te] = {
                    unit: W,
                    prefix: N.NONE[""]
                },
                W.base = D[te]
            }
        } else {
            if (te = te || H + "_STUFF",
            B.indexOf(te) >= 0)
                throw new Error('Cannot create new base unit "' + H + '": a base unit with that name already exists (and cannot be overridden)');
            B.push(te);
            for (var ne in D)
                Ue(D, ne) && (D[ne].dimensions[B.length - 1] = 0);
            for (var le = {
                dimensions: []
            }, he = 0; he < B.length; he++)
                le.dimensions[he] = 0;
            le.dimensions[B.length - 1] = 1,
            le.key = te,
            D[te] = le,
            W = {
                name: H,
                value: 1,
                dimensions: D[te].dimensions.slice(0),
                prefixes: ae,
                offset: $,
                base: D[te]
            },
            se[te] = {
                unit: W,
                prefix: N.NONE[""]
            }
        }
        m.UNITS[H] = W;
        for (var We = 0; We < P.length; We++) {
            var He = P[We]
              , $e = {};
            for (var Ge in W)
                Ue(W, Ge) && ($e[Ge] = W[Ge]);
            $e.name = He,
            m.UNITS[He] = $e
        }
        return delete O.cache,
        new m(null,H)
    }
    ,
    m.deleteUnit = function(H) {
        delete m.UNITS[H]
    }
    ,
    m.PREFIXES = N,
    m.BASE_DIMENSIONS = B,
    m.BASE_UNITS = D,
    m.UNIT_SYSTEMS = re,
    m.UNITS = G,
    m
}
, {
    isClass: !0
})
  , sC = "unit"
  , Nj = ["typed", "Unit"]
  , Mj = j(sC, Nj, e => {
    var {typed: t, Unit: r} = e;
    return t(sC, {
        Unit: function(n) {
            return n.clone()
        },
        string: function(n) {
            return r.isValuelessUnit(n) ? new r(null,n) : r.parse(n, {
                allowNoUnits: !0
            })
        },
        "number | BigNumber | Fraction | Complex, string | Unit": function(n, i) {
            return new r(n,i)
        },
        "number | BigNumber | Fraction": function(n) {
            return new r(n)
        },
        "Array | Matrix": t.referToSelf(a => n => dt(n, a))
    })
}
)
  , lC = "sparse"
  , Ij = ["typed", "SparseMatrix"]
  , Dj = j(lC, Ij, e => {
    var {typed: t, SparseMatrix: r} = e;
    return t(lC, {
        "": function() {
            return new r([])
        },
        string: function(n) {
            return new r([],n)
        },
        "Array | Matrix": function(n) {
            return new r(n)
        },
        "Array | Matrix, string": function(n, i) {
            return new r(n,i)
        }
    })
}
)
  , uC = "createUnit"
  , Uj = ["typed", "Unit"]
  , Fj = j(uC, Uj, e => {
    var {typed: t, Unit: r} = e;
    return t(uC, {
        "Object, Object": function(n, i) {
            return r.createUnit(n, i)
        },
        Object: function(n) {
            return r.createUnit(n, {})
        },
        "string, Unit | string | Object, Object": function(n, i, o) {
            var s = {};
            return s[n] = i,
            r.createUnit(s, o)
        },
        "string, Unit | string | Object": function(n, i) {
            var o = {};
            return o[n] = i,
            r.createUnit(o, {})
        },
        string: function(n) {
            var i = {};
            return i[n] = {},
            r.createUnit(i, {})
        }
    })
}
)
  , cC = "acos"
  , Oj = ["typed", "config", "Complex"]
  , Pj = j(cC, Oj, e => {
    var {typed: t, config: r, Complex: a} = e;
    return t(cC, {
        number: function(i) {
            return i >= -1 && i <= 1 || r.predictable ? Math.acos(i) : new a(i,0).acos()
        },
        Complex: function(i) {
            return i.acos()
        },
        BigNumber: function(i) {
            return i.acos()
        }
    })
}
)
  , dC = "acosh"
  , Bj = ["typed", "config", "Complex"]
  , Rj = j(dC, Bj, e => {
    var {typed: t, config: r, Complex: a} = e;
    return t(dC, {
        number: function(i) {
            return i >= 1 || r.predictable ? I4(i) : i <= -1 ? new a(Math.log(Math.sqrt(i * i - 1) - i),Math.PI) : new a(i,0).acosh()
        },
        Complex: function(i) {
            return i.acosh()
        },
        BigNumber: function(i) {
            return i.acosh()
        }
    })
}
)
  , vC = "acot"
  , Lj = ["typed", "BigNumber"]
  , qj = j(vC, Lj, e => {
    var {typed: t, BigNumber: r} = e;
    return t(vC, {
        number: D4,
        Complex: function(n) {
            return n.acot()
        },
        BigNumber: function(n) {
            return new r(1).div(n).atan()
        }
    })
}
)
  , hC = "acoth"
  , Vj = ["typed", "config", "Complex", "BigNumber"]
  , $j = j(hC, Vj, e => {
    var {typed: t, config: r, Complex: a, BigNumber: n} = e;
    return t(hC, {
        number: function(o) {
            return o >= 1 || o <= -1 || r.predictable ? U4(o) : new a(o,0).acoth()
        },
        Complex: function(o) {
            return o.acoth()
        },
        BigNumber: function(o) {
            return new n(1).div(o).atanh()
        }
    })
}
)
  , mC = "acsc"
  , zj = ["typed", "config", "Complex", "BigNumber"]
  , Gj = j(mC, zj, e => {
    var {typed: t, config: r, Complex: a, BigNumber: n} = e;
    return t(mC, {
        number: function(o) {
            return o <= -1 || o >= 1 || r.predictable ? F4(o) : new a(o,0).acsc()
        },
        Complex: function(o) {
            return o.acsc()
        },
        BigNumber: function(o) {
            return new n(1).div(o).asin()
        }
    })
}
)
  , fC = "acsch"
  , jj = ["typed", "BigNumber"]
  , Hj = j(fC, jj, e => {
    var {typed: t, BigNumber: r} = e;
    return t(fC, {
        number: O4,
        Complex: function(n) {
            return n.acsch()
        },
        BigNumber: function(n) {
            return new r(1).div(n).asinh()
        }
    })
}
)
  , pC = "asec"
  , Wj = ["typed", "config", "Complex", "BigNumber"]
  , Yj = j(pC, Wj, e => {
    var {typed: t, config: r, Complex: a, BigNumber: n} = e;
    return t(pC, {
        number: function(o) {
            return o <= -1 || o >= 1 || r.predictable ? P4(o) : new a(o,0).asec()
        },
        Complex: function(o) {
            return o.asec()
        },
        BigNumber: function(o) {
            return new n(1).div(o).acos()
        }
    })
}
)
  , yC = "asech"
  , Jj = ["typed", "config", "Complex", "BigNumber"]
  , Kj = j(yC, Jj, e => {
    var {typed: t, config: r, Complex: a, BigNumber: n} = e;
    return t(yC, {
        number: function(o) {
            if (o <= 1 && o >= -1 || r.predictable) {
                var s = 1 / o;
                if (s > 0 || r.predictable)
                    return B4(o);
                var l = Math.sqrt(s * s - 1);
                return new a(Math.log(l - s),Math.PI)
            }
            return new a(o,0).asech()
        },
        Complex: function(o) {
            return o.asech()
        },
        BigNumber: function(o) {
            return new n(1).div(o).acosh()
        }
    })
}
)
  , wC = "asin"
  , Qj = ["typed", "config", "Complex"]
  , Zj = j(wC, Qj, e => {
    var {typed: t, config: r, Complex: a} = e;
    return t(wC, {
        number: function(i) {
            return i >= -1 && i <= 1 || r.predictable ? Math.asin(i) : new a(i,0).asin()
        },
        Complex: function(i) {
            return i.asin()
        },
        BigNumber: function(i) {
            return i.asin()
        }
    })
}
)
  , Xj = "asinh"
  , eH = ["typed"]
  , tH = j(Xj, eH, e => {
    var {typed: t} = e;
    return t("asinh", {
        number: R4,
        Complex: function(a) {
            return a.asinh()
        },
        BigNumber: function(a) {
            return a.asinh()
        }
    })
}
)
  , rH = "atan"
  , aH = ["typed"]
  , nH = j(rH, aH, e => {
    var {typed: t} = e;
    return t("atan", {
        number: function(a) {
            return Math.atan(a)
        },
        Complex: function(a) {
            return a.atan()
        },
        BigNumber: function(a) {
            return a.atan()
        }
    })
}
)
  , gC = "atan2"
  , iH = ["typed", "matrix", "equalScalar", "BigNumber", "DenseMatrix", "concat"]
  , oH = j(gC, iH, e => {
    var {typed: t, matrix: r, equalScalar: a, BigNumber: n, DenseMatrix: i, concat: o} = e
      , s = Hn({
        typed: t,
        equalScalar: a
    })
      , l = fa({
        typed: t
    })
      , u = X4({
        typed: t,
        equalScalar: a
    })
      , c = Lr({
        typed: t,
        equalScalar: a
    })
      , d = Sr({
        typed: t,
        DenseMatrix: i
    })
      , v = Vt({
        typed: t,
        matrix: r,
        concat: o
    });
    return t(gC, {
        "number, number": Math.atan2,
        "BigNumber, BigNumber": (h, p) => n.atan2(h, p)
    }, v({
        scalar: "number | BigNumber",
        SS: u,
        DS: l,
        SD: s,
        Ss: c,
        sS: d
    }))
}
)
  , _C = "atanh"
  , sH = ["typed", "config", "Complex"]
  , lH = j(_C, sH, e => {
    var {typed: t, config: r, Complex: a} = e;
    return t(_C, {
        number: function(i) {
            return i <= 1 && i >= -1 || r.predictable ? L4(i) : new a(i,0).atanh()
        },
        Complex: function(i) {
            return i.atanh()
        },
        BigNumber: function(i) {
            return i.atanh()
        }
    })
}
)
  , hu = j("trigUnit", ["typed"], e => {
    var {typed: t} = e;
    return {
        Unit: t.referToSelf(r => a => {
            if (!a.hasBase(a.constructor.BASE_UNITS.ANGLE))
                throw new TypeError("Unit in function cot is no angle");
            return t.find(r, a.valueType())(a.value)
        }
        )
    }
}
)
  , bC = "cos"
  , uH = ["typed"]
  , cH = j(bC, uH, e => {
    var {typed: t} = e
      , r = hu({
        typed: t
    });
    return t(bC, {
        number: Math.cos,
        "Complex | BigNumber": a => a.cos()
    }, r)
}
)
  , CC = "cosh"
  , dH = ["typed"]
  , vH = j(CC, dH, e => {
    var {typed: t} = e;
    return t(CC, {
        number: lB,
        "Complex | BigNumber": r => r.cosh()
    })
}
)
  , SC = "cot"
  , hH = ["typed", "BigNumber"]
  , mH = j(SC, hH, e => {
    var {typed: t, BigNumber: r} = e
      , a = hu({
        typed: t
    });
    return t(SC, {
        number: q4,
        Complex: n => n.cot(),
        BigNumber: n => new r(1).div(n.tan())
    }, a)
}
)
  , xC = "coth"
  , fH = ["typed", "BigNumber"]
  , pH = j(xC, fH, e => {
    var {typed: t, BigNumber: r} = e;
    return t(xC, {
        number: V4,
        Complex: a => a.coth(),
        BigNumber: a => new r(1).div(a.tanh())
    })
}
)
  , AC = "csc"
  , yH = ["typed", "BigNumber"]
  , wH = j(AC, yH, e => {
    var {typed: t, BigNumber: r} = e
      , a = hu({
        typed: t
    });
    return t(AC, {
        number: $4,
        Complex: n => n.csc(),
        BigNumber: n => new r(1).div(n.sin())
    }, a)
}
)
  , EC = "csch"
  , gH = ["typed", "BigNumber"]
  , _H = j(EC, gH, e => {
    var {typed: t, BigNumber: r} = e;
    return t(EC, {
        number: z4,
        Complex: a => a.csch(),
        BigNumber: a => new r(1).div(a.sinh())
    })
}
)
  , kC = "sec"
  , bH = ["typed", "BigNumber"]
  , CH = j(kC, bH, e => {
    var {typed: t, BigNumber: r} = e
      , a = hu({
        typed: t
    });
    return t(kC, {
        number: G4,
        Complex: n => n.sec(),
        BigNumber: n => new r(1).div(n.cos())
    }, a)
}
)
  , TC = "sech"
  , SH = ["typed", "BigNumber"]
  , xH = j(TC, SH, e => {
    var {typed: t, BigNumber: r} = e;
    return t(TC, {
        number: j4,
        Complex: a => a.sech(),
        BigNumber: a => new r(1).div(a.cosh())
    })
}
)
  , NC = "sin"
  , AH = ["typed"]
  , EH = j(NC, AH, e => {
    var {typed: t} = e
      , r = hu({
        typed: t
    });
    return t(NC, {
        number: Math.sin,
        "Complex | BigNumber": a => a.sin()
    }, r)
}
)
  , MC = "sinh"
  , kH = ["typed"]
  , TH = j(MC, kH, e => {
    var {typed: t} = e;
    return t(MC, {
        number: H4,
        "Complex | BigNumber": r => r.sinh()
    })
}
)
  , IC = "tan"
  , NH = ["typed"]
  , MH = j(IC, NH, e => {
    var {typed: t} = e
      , r = hu({
        typed: t
    });
    return t(IC, {
        number: Math.tan,
        "Complex | BigNumber": a => a.tan()
    }, r)
}
)
  , IH = "tanh"
  , DH = ["typed"]
  , UH = j(IH, DH, e => {
    var {typed: t} = e;
    return t("tanh", {
        number: cB,
        "Complex | BigNumber": r => r.tanh()
    })
}
)
  , DC = "setCartesian"
  , FH = ["typed", "size", "subset", "compareNatural", "Index", "DenseMatrix"]
  , OH = j(DC, FH, e => {
    var {typed: t, size: r, subset: a, compareNatural: n, Index: i, DenseMatrix: o} = e;
    return t(DC, {
        "Array | Matrix, Array | Matrix": function(l, u) {
            var c = [];
            if (a(r(l), new i(0)) !== 0 && a(r(u), new i(0)) !== 0) {
                var d = bt(Array.isArray(l) ? l : l.toArray()).sort(n)
                  , v = bt(Array.isArray(u) ? u : u.toArray()).sort(n);
                c = [];
                for (var h = 0; h < d.length; h++)
                    for (var p = 0; p < v.length; p++)
                        c.push([d[h], v[p]])
            }
            return Array.isArray(l) && Array.isArray(u) ? c : new o(c)
        }
    })
}
)
  , UC = "setDifference"
  , PH = ["typed", "size", "subset", "compareNatural", "Index", "DenseMatrix"]
  , BH = j(UC, PH, e => {
    var {typed: t, size: r, subset: a, compareNatural: n, Index: i, DenseMatrix: o} = e;
    return t(UC, {
        "Array | Matrix, Array | Matrix": function(l, u) {
            var c;
            if (a(r(l), new i(0)) === 0)
                c = [];
            else {
                if (a(r(u), new i(0)) === 0)
                    return bt(l.toArray());
                var d = Hl(bt(Array.isArray(l) ? l : l.toArray()).sort(n))
                  , v = Hl(bt(Array.isArray(u) ? u : u.toArray()).sort(n));
                c = [];
                for (var h, p = 0; p < d.length; p++) {
                    h = !1;
                    for (var f = 0; f < v.length; f++)
                        if (n(d[p].value, v[f].value) === 0 && d[p].identifier === v[f].identifier) {
                            h = !0;
                            break
                        }
                    h || c.push(d[p])
                }
            }
            return Array.isArray(l) && Array.isArray(u) ? Nh(c) : new o(Nh(c))
        }
    })
}
)
  , FC = "setDistinct"
  , RH = ["typed", "size", "subset", "compareNatural", "Index", "DenseMatrix"]
  , LH = j(FC, RH, e => {
    var {typed: t, size: r, subset: a, compareNatural: n, Index: i, DenseMatrix: o} = e;
    return t(FC, {
        "Array | Matrix": function(l) {
            var u;
            if (a(r(l), new i(0)) === 0)
                u = [];
            else {
                var c = bt(Array.isArray(l) ? l : l.toArray()).sort(n);
                u = [],
                u.push(c[0]);
                for (var d = 1; d < c.length; d++)
                    n(c[d], c[d - 1]) !== 0 && u.push(c[d])
            }
            return Array.isArray(l) ? u : new o(u)
        }
    })
}
)
  , OC = "setIntersect"
  , qH = ["typed", "size", "subset", "compareNatural", "Index", "DenseMatrix"]
  , VH = j(OC, qH, e => {
    var {typed: t, size: r, subset: a, compareNatural: n, Index: i, DenseMatrix: o} = e;
    return t(OC, {
        "Array | Matrix, Array | Matrix": function(l, u) {
            var c;
            if (a(r(l), new i(0)) === 0 || a(r(u), new i(0)) === 0)
                c = [];
            else {
                var d = Hl(bt(Array.isArray(l) ? l : l.toArray()).sort(n))
                  , v = Hl(bt(Array.isArray(u) ? u : u.toArray()).sort(n));
                c = [];
                for (var h = 0; h < d.length; h++)
                    for (var p = 0; p < v.length; p++)
                        if (n(d[h].value, v[p].value) === 0 && d[h].identifier === v[p].identifier) {
                            c.push(d[h]);
                            break
                        }
            }
            return Array.isArray(l) && Array.isArray(u) ? Nh(c) : new o(Nh(c))
        }
    })
}
)
  , PC = "setIsSubset"
  , $H = ["typed", "size", "subset", "compareNatural", "Index"]
  , zH = j(PC, $H, e => {
    var {typed: t, size: r, subset: a, compareNatural: n, Index: i} = e;
    return t(PC, {
        "Array | Matrix, Array | Matrix": function(s, l) {
            if (a(r(s), new i(0)) === 0)
                return !0;
            if (a(r(l), new i(0)) === 0)
                return !1;
            for (var u = Hl(bt(Array.isArray(s) ? s : s.toArray()).sort(n)), c = Hl(bt(Array.isArray(l) ? l : l.toArray()).sort(n)), d, v = 0; v < u.length; v++) {
                d = !1;
                for (var h = 0; h < c.length; h++)
                    if (n(u[v].value, c[h].value) === 0 && u[v].identifier === c[h].identifier) {
                        d = !0;
                        break
                    }
                if (d === !1)
                    return !1
            }
            return !0
        }
    })
}
)
  , BC = "setMultiplicity"
  , GH = ["typed", "size", "subset", "compareNatural", "Index"]
  , jH = j(BC, GH, e => {
    var {typed: t, size: r, subset: a, compareNatural: n, Index: i} = e;
    return t(BC, {
        "number | BigNumber | Fraction | Complex, Array | Matrix": function(s, l) {
            if (a(r(l), new i(0)) === 0)
                return 0;
            for (var u = bt(Array.isArray(l) ? l : l.toArray()), c = 0, d = 0; d < u.length; d++)
                n(u[d], s) === 0 && c++;
            return c
        }
    })
}
)
  , RC = "setPowerset"
  , HH = ["typed", "size", "subset", "compareNatural", "Index"]
  , WH = j(RC, HH, e => {
    var {typed: t, size: r, subset: a, compareNatural: n, Index: i} = e;
    return t(RC, {
        "Array | Matrix": function(u) {
            if (a(r(u), new i(0)) === 0)
                return [];
            for (var c = bt(Array.isArray(u) ? u : u.toArray()).sort(n), d = [], v = 0; v.toString(2).length <= c.length; )
                d.push(o(c, v.toString(2).split("").reverse())),
                v++;
            return s(d)
        }
    });
    function o(l, u) {
        for (var c = [], d = 0; d < u.length; d++)
            u[d] === "1" && c.push(l[d]);
        return c
    }
    function s(l) {
        for (var u = [], c = l.length - 1; c > 0; c--)
            for (var d = 0; d < c; d++)
                l[d].length > l[d + 1].length && (u = l[d],
                l[d] = l[d + 1],
                l[d + 1] = u);
        return l
    }
}
)
  , LC = "setSize"
  , YH = ["typed", "compareNatural"]
  , JH = j(LC, YH, e => {
    var {typed: t, compareNatural: r} = e;
    return t(LC, {
        "Array | Matrix": function(n) {
            return Array.isArray(n) ? bt(n).length : bt(n.toArray()).length
        },
        "Array | Matrix, boolean": function(n, i) {
            if (i === !1 || n.length === 0)
                return Array.isArray(n) ? bt(n).length : bt(n.toArray()).length;
            for (var o = bt(Array.isArray(n) ? n : n.toArray()).sort(r), s = 1, l = 1; l < o.length; l++)
                r(o[l], o[l - 1]) !== 0 && s++;
            return s
        }
    })
}
)
  , qC = "setSymDifference"
  , KH = ["typed", "size", "concat", "subset", "setDifference", "Index"]
  , QH = j(qC, KH, e => {
    var {typed: t, size: r, concat: a, subset: n, setDifference: i, Index: o} = e;
    return t(qC, {
        "Array | Matrix, Array | Matrix": function(l, u) {
            if (n(r(l), new o(0)) === 0)
                return bt(u);
            if (n(r(u), new o(0)) === 0)
                return bt(l);
            var c = bt(l)
              , d = bt(u);
            return a(i(c, d), i(d, c))
        }
    })
}
)
  , VC = "setUnion"
  , ZH = ["typed", "size", "concat", "subset", "setIntersect", "setSymDifference", "Index"]
  , XH = j(VC, ZH, e => {
    var {typed: t, size: r, concat: a, subset: n, setIntersect: i, setSymDifference: o, Index: s} = e;
    return t(VC, {
        "Array | Matrix, Array | Matrix": function(u, c) {
            if (n(r(u), new s(0)) === 0)
                return bt(c);
            if (n(r(c), new s(0)) === 0)
                return bt(u);
            var d = bt(u)
              , v = bt(c);
            return a(o(d, v), i(d, v))
        }
    })
}
)
  , $C = "add"
  , eW = ["typed", "matrix", "addScalar", "equalScalar", "DenseMatrix", "SparseMatrix", "concat"]
  , tW = j($C, eW, e => {
    var {typed: t, matrix: r, addScalar: a, equalScalar: n, DenseMatrix: i, SparseMatrix: o, concat: s} = e
      , l = zo({
        typed: t
    })
      , u = v2({
        typed: t,
        equalScalar: n
    })
      , c = Ns({
        typed: t,
        DenseMatrix: i
    })
      , d = Vt({
        typed: t,
        matrix: r,
        concat: s
    });
    return t($C, {
        "any, any": a,
        "any, any, ...any": t.referToSelf(v => (h, p, f) => {
            for (var _ = v(h, p), y = 0; y < f.length; y++)
                _ = v(_, f[y]);
            return _
        }
        )
    }, d({
        elop: a,
        DS: l,
        SS: u,
        Ss: c
    }))
}
)
  , zC = "hypot"
  , rW = ["typed", "abs", "addScalar", "divideScalar", "multiplyScalar", "sqrt", "smaller", "isPositive"]
  , aW = j(zC, rW, e => {
    var {typed: t, abs: r, addScalar: a, divideScalar: n, multiplyScalar: i, sqrt: o, smaller: s, isPositive: l} = e;
    return t(zC, {
        "... number | BigNumber": u,
        Array: u,
        Matrix: c => u(bt(c.toArray()))
    });
    function u(c) {
        for (var d = 0, v = 0, h = 0; h < c.length; h++) {
            if (Oi(c[h]))
                throw new TypeError("Unexpected type of argument to hypot");
            var p = r(c[h]);
            s(v, p) ? (d = i(d, i(n(v, p), n(v, p))),
            d = a(d, 1),
            v = p) : d = a(d, l(p) ? i(n(p, v), n(p, v)) : p)
        }
        return i(v, o(d))
    }
}
)
  , GC = "norm"
  , nW = ["typed", "abs", "add", "pow", "conj", "sqrt", "multiply", "equalScalar", "larger", "smaller", "matrix", "ctranspose", "eigs"]
  , iW = j(GC, nW, e => {
    var {typed: t, abs: r, add: a, pow: n, conj: i, sqrt: o, multiply: s, equalScalar: l, larger: u, smaller: c, matrix: d, ctranspose: v, eigs: h} = e;
    return t(GC, {
        number: Math.abs,
        Complex: function(E) {
            return E.abs()
        },
        BigNumber: function(E) {
            return E.abs()
        },
        boolean: function(E) {
            return Math.abs(E)
        },
        Array: function(E) {
            return b(d(E), 2)
        },
        Matrix: function(E) {
            return b(E, 2)
        },
        "Array, number | BigNumber | string": function(E, k) {
            return b(d(E), k)
        },
        "Matrix, number | BigNumber | string": function(E, k) {
            return b(E, k)
        }
    });
    function p(x) {
        var E = 0;
        return x.forEach(function(k) {
            var A = r(k);
            u(A, E) && (E = A)
        }, !0),
        E
    }
    function f(x) {
        var E;
        return x.forEach(function(k) {
            var A = r(k);
            (!E || c(A, E)) && (E = A)
        }, !0),
        E || 0
    }
    function _(x, E) {
        if (E === Number.POSITIVE_INFINITY || E === "inf")
            return p(x);
        if (E === Number.NEGATIVE_INFINITY || E === "-inf")
            return f(x);
        if (E === "fro")
            return b(x, 2);
        if (typeof E == "number" && !isNaN(E)) {
            if (!l(E, 0)) {
                var k = 0;
                return x.forEach(function(A) {
                    k = a(n(r(A), E), k)
                }, !0),
                n(k, 1 / E)
            }
            return Number.POSITIVE_INFINITY
        }
        throw new Error("Unsupported parameter value")
    }
    function y(x) {
        var E = 0;
        return x.forEach(function(k, A) {
            E = a(E, s(k, i(k)))
        }),
        r(o(E))
    }
    function g(x) {
        var E = []
          , k = 0;
        return x.forEach(function(A, I) {
            var T = I[1]
              , F = a(E[T] || 0, r(A));
            u(F, k) && (k = F),
            E[T] = F
        }, !0),
        k
    }
    function m(x) {
        var E = x.size();
        if (E[0] !== E[1])
            throw new RangeError("Invalid matrix dimensions");
        var k = v(x)
          , A = s(k, x)
          , I = h(A).values.toArray()
          , T = I[I.length - 1];
        return r(o(T))
    }
    function w(x) {
        var E = []
          , k = 0;
        return x.forEach(function(A, I) {
            var T = I[0]
              , F = a(E[T] || 0, r(A));
            u(F, k) && (k = F),
            E[T] = F
        }, !0),
        k
    }
    function C(x, E) {
        if (E === 1)
            return g(x);
        if (E === Number.POSITIVE_INFINITY || E === "inf")
            return w(x);
        if (E === "fro")
            return y(x);
        if (E === 2)
            return m(x);
        throw new Error("Unsupported parameter value " + E)
    }
    function b(x, E) {
        var k = x.size();
        if (k.length === 1)
            return _(x, E);
        if (k.length === 2) {
            if (k[0] && k[1])
                return C(x, E);
            throw new RangeError("Invalid matrix dimensions")
        }
    }
}
)
  , jC = "dot"
  , oW = ["typed", "addScalar", "multiplyScalar", "conj", "size"]
  , sW = j(jC, oW, e => {
    var {typed: t, addScalar: r, multiplyScalar: a, conj: n, size: i} = e;
    return t(jC, {
        "Array | DenseMatrix, Array | DenseMatrix": s,
        "SparseMatrix, SparseMatrix": l
    });
    function o(c, d) {
        var v = u(c), h = u(d), p, f;
        if (v.length === 1)
            p = v[0];
        else if (v.length === 2 && v[1] === 1)
            p = v[0];
        else
            throw new RangeError("Expected a column vector, instead got a matrix of size (" + v.join(", ") + ")");
        if (h.length === 1)
            f = h[0];
        else if (h.length === 2 && h[1] === 1)
            f = h[0];
        else
            throw new RangeError("Expected a column vector, instead got a matrix of size (" + h.join(", ") + ")");
        if (p !== f)
            throw new RangeError("Vectors must have equal length (" + p + " != " + f + ")");
        if (p === 0)
            throw new RangeError("Cannot calculate the dot product of empty vectors");
        return p
    }
    function s(c, d) {
        var v = o(c, d)
          , h = je(c) ? c._data : c
          , p = je(c) ? c._datatype : void 0
          , f = je(d) ? d._data : d
          , _ = je(d) ? d._datatype : void 0
          , y = u(c).length === 2
          , g = u(d).length === 2
          , m = r
          , w = a;
        if (p && _ && p === _ && typeof p == "string") {
            var C = p;
            m = t.find(r, [C, C]),
            w = t.find(a, [C, C])
        }
        if (!y && !g) {
            for (var b = w(n(h[0]), f[0]), x = 1; x < v; x++)
                b = m(b, w(n(h[x]), f[x]));
            return b
        }
        if (!y && g) {
            for (var E = w(n(h[0]), f[0][0]), k = 1; k < v; k++)
                E = m(E, w(n(h[k]), f[k][0]));
            return E
        }
        if (y && !g) {
            for (var A = w(n(h[0][0]), f[0]), I = 1; I < v; I++)
                A = m(A, w(n(h[I][0]), f[I]));
            return A
        }
        if (y && g) {
            for (var T = w(n(h[0][0]), f[0][0]), F = 1; F < v; F++)
                T = m(T, w(n(h[F][0]), f[F][0]));
            return T
        }
    }
    function l(c, d) {
        o(c, d);
        for (var v = c._index, h = c._values, p = d._index, f = d._values, _ = 0, y = r, g = a, m = 0, w = 0; m < v.length && w < p.length; ) {
            var C = v[m]
              , b = p[w];
            if (C < b) {
                m++;
                continue
            }
            if (C > b) {
                w++;
                continue
            }
            C === b && (_ = y(_, g(h[m], f[w])),
            m++,
            w++)
        }
        return _
    }
    function u(c) {
        return je(c) ? c.size() : i(c)
    }
}
)
  , lW = "trace"
  , uW = ["typed", "matrix", "add"]
  , cW = j(lW, uW, e => {
    var {typed: t, matrix: r, add: a} = e;
    return t("trace", {
        Array: function(s) {
            return n(r(s))
        },
        SparseMatrix: i,
        DenseMatrix: n,
        any: Qe
    });
    function n(o) {
        var s = o._size
          , l = o._data;
        switch (s.length) {
        case 1:
            if (s[0] === 1)
                return Qe(l[0]);
            throw new RangeError("Matrix must be square (size: " + st(s) + ")");
        case 2:
            {
                var u = s[0]
                  , c = s[1];
                if (u === c) {
                    for (var d = 0, v = 0; v < u; v++)
                        d = a(d, l[v][v]);
                    return d
                } else
                    throw new RangeError("Matrix must be square (size: " + st(s) + ")")
            }
        default:
            throw new RangeError("Matrix must be two dimensional (size: " + st(s) + ")")
        }
    }
    function i(o) {
        var s = o._values
          , l = o._index
          , u = o._ptr
          , c = o._size
          , d = c[0]
          , v = c[1];
        if (d === v) {
            var h = 0;
            if (s.length > 0)
                for (var p = 0; p < v; p++)
                    for (var f = u[p], _ = u[p + 1], y = f; y < _; y++) {
                        var g = l[y];
                        if (g === p) {
                            h = a(h, s[y]);
                            break
                        }
                        if (g > p)
                            break
                    }
            return h
        }
        throw new RangeError("Matrix must be square (size: " + st(c) + ")")
    }
}
)
  , HC = "index"
  , dW = ["typed", "Index"]
  , vW = j(HC, dW, e => {
    var {typed: t, Index: r} = e;
    return t(HC, {
        "...number | string | BigNumber | Range | Array | Matrix": function(n) {
            var i = n.map(function(s) {
                return vt(s) ? s.toNumber() : At(s) || je(s) ? s.map(function(l) {
                    return vt(l) ? l.toNumber() : l
                }) : s
            })
              , o = new r;
            return r.apply(o, i),
            o
        }
    })
}
)
  , vk = new Set(["end"])
  , hW = "Node"
  , mW = ["mathWithTransform"]
  , fW = j(hW, mW, e => {
    var {mathWithTransform: t} = e;
    function r(n) {
        for (var i of [...vk])
            if (n.has(i))
                throw new Error('Scope contains an illegal symbol, "' + i + '" is a reserved keyword')
    }
    class a {
        get type() {
            return "Node"
        }
        get isNode() {
            return !0
        }
        evaluate(i) {
            return this.compile().evaluate(i)
        }
        compile() {
            var i = this._compile(t, {})
              , o = {}
              , s = null;
            function l(u) {
                var c = Dl(u);
                return r(c),
                i(c, o, s)
            }
            return {
                evaluate: l
            }
        }
        _compile(i, o) {
            throw new Error("Method _compile must be implemented by type " + this.type)
        }
        forEach(i) {
            throw new Error("Cannot run forEach on a Node interface")
        }
        map(i) {
            throw new Error("Cannot run map on a Node interface")
        }
        _ifNode(i) {
            if (!Ft(i))
                throw new TypeError("Callback function must return a Node");
            return i
        }
        traverse(i) {
            i(this, null, null);
            function o(s, l) {
                s.forEach(function(u, c, d) {
                    l(u, c, d),
                    o(u, l)
                })
            }
            o(this, i)
        }
        transform(i) {
            function o(s, l, u) {
                var c = i(s, l, u);
                return c !== s ? c : s.map(o)
            }
            return o(this, null, null)
        }
        filter(i) {
            var o = [];
            return this.traverse(function(s, l, u) {
                i(s, l, u) && o.push(s)
            }),
            o
        }
        clone() {
            throw new Error("Cannot clone a Node interface")
        }
        cloneDeep() {
            return this.map(function(i) {
                return i.cloneDeep()
            })
        }
        equals(i) {
            return i ? this.type === i.type && Cs(this, i) : !1
        }
        toString(i) {
            var o = this._getCustomString(i);
            return typeof o < "u" ? o : this._toString(i)
        }
        toJSON() {
            throw new Error("Cannot serialize object: toJSON not implemented by " + this.type)
        }
        toHTML(i) {
            var o = this._getCustomString(i);
            return typeof o < "u" ? o : this.toHTML(i)
        }
        _toString() {
            throw new Error("_toString not implemented for " + this.type)
        }
        toTex(i) {
            var o = this._getCustomString(i);
            return typeof o < "u" ? o : this._toTex(i)
        }
        _toTex(i) {
            throw new Error("_toTex not implemented for " + this.type)
        }
        _getCustomString(i) {
            if (i && typeof i == "object")
                switch (typeof i.handler) {
                case "object":
                case "undefined":
                    return;
                case "function":
                    return i.handler(this, i);
                default:
                    throw new TypeError("Object or function expected as callback")
                }
        }
        getIdentifier() {
            return this.type
        }
        getContent() {
            return this
        }
    }
    return a
}
, {
    isClass: !0,
    isNode: !0
});
function pa(e) {
    return e && e.isIndexError ? new zn(e.index + 1,e.min + 1,e.max !== void 0 ? e.max + 1 : void 0) : e
}
function hk(e) {
    var {subset: t} = e;
    return function(a, n) {
        try {
            if (Array.isArray(a))
                return t(a, n);
            if (a && typeof a.subset == "function")
                return a.subset(n);
            if (typeof a == "string")
                return t(a, n);
            if (typeof a == "object") {
                if (!n.isObjectProperty())
                    throw new TypeError("Cannot apply a numeric index as object property");
                return la(a, n.getObjectProperty())
            } else
                throw new TypeError("Cannot apply index: unsupported type of object")
        } catch (i) {
            throw pa(i)
        }
    }
}
var Zd = "AccessorNode"
  , pW = ["subset", "Node"]
  , yW = j(Zd, pW, e => {
    var {subset: t, Node: r} = e
      , a = hk({
        subset: t
    });
    function n(o) {
        return !(bs(o) || an(o) || _t(o) || Oo(o) || jm(o) || zi(o) || Er(o))
    }
    class i extends r {
        constructor(s, l) {
            if (super(),
            !Ft(s))
                throw new TypeError('Node expected for parameter "object"');
            if (!lu(l))
                throw new TypeError('IndexNode expected for parameter "index"');
            this.object = s,
            this.index = l
        }
        get name() {
            return this.index ? this.index.isObjectProperty() ? this.index.getObjectProperty() : "" : this.object.name || ""
        }
        get type() {
            return Zd
        }
        get isAccessorNode() {
            return !0
        }
        _compile(s, l) {
            var u = this.object._compile(s, l)
              , c = this.index._compile(s, l);
            if (this.index.isObjectProperty()) {
                var d = this.index.getObjectProperty();
                return function(h, p, f) {
                    return la(u(h, p, f), d)
                }
            } else
                return function(h, p, f) {
                    var _ = u(h, p, f)
                      , y = c(h, p, _);
                    return a(_, y)
                }
        }
        forEach(s) {
            s(this.object, "object", this),
            s(this.index, "index", this)
        }
        map(s) {
            return new i(this._ifNode(s(this.object, "object", this)),this._ifNode(s(this.index, "index", this)))
        }
        clone() {
            return new i(this.object,this.index)
        }
        _toString(s) {
            var l = this.object.toString(s);
            return n(this.object) && (l = "(" + l + ")"),
            l + this.index.toString(s)
        }
        toHTML(s) {
            var l = this.object.toHTML(s);
            return n(this.object) && (l = '<span class="math-parenthesis math-round-parenthesis">(</span>' + l + '<span class="math-parenthesis math-round-parenthesis">)</span>'),
            l + this.index.toHTML(s)
        }
        _toTex(s) {
            var l = this.object.toTex(s);
            return n(this.object) && (l = "\\left(' + object + '\\right)"),
            l + this.index.toTex(s)
        }
        toJSON() {
            return {
                mathjs: Zd,
                object: this.object,
                index: this.index
            }
        }
        static fromJSON(s) {
            return new i(s.object,s.index)
        }
    }
    return Ze(i, "name", Zd),
    i
}
, {
    isClass: !0,
    isNode: !0
})
  , Xd = "ArrayNode"
  , wW = ["Node"]
  , gW = j(Xd, wW, e => {
    var {Node: t} = e;
    class r extends t {
        constructor(n) {
            if (super(),
            this.items = n || [],
            !Array.isArray(this.items) || !this.items.every(Ft))
                throw new TypeError("Array containing Nodes expected")
        }
        get type() {
            return Xd
        }
        get isArrayNode() {
            return !0
        }
        _compile(n, i) {
            var o = Pi(this.items, function(u) {
                return u._compile(n, i)
            })
              , s = n.config.matrix !== "Array";
            if (s) {
                var l = n.matrix;
                return function(c, d, v) {
                    return l(Pi(o, function(h) {
                        return h(c, d, v)
                    }))
                }
            } else
                return function(c, d, v) {
                    return Pi(o, function(h) {
                        return h(c, d, v)
                    })
                }
        }
        forEach(n) {
            for (var i = 0; i < this.items.length; i++) {
                var o = this.items[i];
                n(o, "items[" + i + "]", this)
            }
        }
        map(n) {
            for (var i = [], o = 0; o < this.items.length; o++)
                i[o] = this._ifNode(n(this.items[o], "items[" + o + "]", this));
            return new r(i)
        }
        clone() {
            return new r(this.items.slice(0))
        }
        _toString(n) {
            var i = this.items.map(function(o) {
                return o.toString(n)
            });
            return "[" + i.join(", ") + "]"
        }
        toJSON() {
            return {
                mathjs: Xd,
                items: this.items
            }
        }
        static fromJSON(n) {
            return new r(n.items)
        }
        toHTML(n) {
            var i = this.items.map(function(o) {
                return o.toHTML(n)
            });
            return '<span class="math-parenthesis math-square-parenthesis">[</span>' + i.join('<span class="math-separator">,</span>') + '<span class="math-parenthesis math-square-parenthesis">]</span>'
        }
        _toTex(n) {
            function i(o, s) {
                var l = o.some(an) && !o.every(an)
                  , u = s || l
                  , c = u ? "&" : "\\\\"
                  , d = o.map(function(v) {
                    return v.items ? i(v.items, !s) : v.toTex(n)
                }).join(c);
                return l || !u || u && !s ? "\\begin{bmatrix}" + d + "\\end{bmatrix}" : d
            }
            return i(this.items, !1)
        }
    }
    return Ze(r, "name", Xd),
    r
}
, {
    isClass: !0,
    isNode: !0
});
function _W(e) {
    var {subset: t, matrix: r} = e;
    return function(n, i, o) {
        try {
            if (Array.isArray(n)) {
                var s = r(n).subset(i, o).valueOf();
                return s.forEach( (l, u) => {
                    n[u] = l
                }
                ),
                n
            } else {
                if (n && typeof n.subset == "function")
                    return n.subset(i, o);
                if (typeof n == "string")
                    return t(n, i, o);
                if (typeof n == "object") {
                    if (!i.isObjectProperty())
                        throw TypeError("Cannot apply a numeric index as object property");
                    return Wl(n, i.getObjectProperty(), o),
                    n
                } else
                    throw new TypeError("Cannot apply index: unsupported type of object")
            }
        } catch (l) {
            throw pa(l)
        }
    }
}
var Dn = [{
    AssignmentNode: {},
    FunctionAssignmentNode: {}
}, {
    ConditionalNode: {
        latexLeftParens: !1,
        latexRightParens: !1,
        latexParens: !1
    }
}, {
    "OperatorNode:or": {
        op: "or",
        associativity: "left",
        associativeWith: []
    }
}, {
    "OperatorNode:xor": {
        op: "xor",
        associativity: "left",
        associativeWith: []
    }
}, {
    "OperatorNode:and": {
        op: "and",
        associativity: "left",
        associativeWith: []
    }
}, {
    "OperatorNode:bitOr": {
        op: "|",
        associativity: "left",
        associativeWith: []
    }
}, {
    "OperatorNode:bitXor": {
        op: "^|",
        associativity: "left",
        associativeWith: []
    }
}, {
    "OperatorNode:bitAnd": {
        op: "&",
        associativity: "left",
        associativeWith: []
    }
}, {
    "OperatorNode:equal": {
        op: "==",
        associativity: "left",
        associativeWith: []
    },
    "OperatorNode:unequal": {
        op: "!=",
        associativity: "left",
        associativeWith: []
    },
    "OperatorNode:smaller": {
        op: "<",
        associativity: "left",
        associativeWith: []
    },
    "OperatorNode:larger": {
        op: ">",
        associativity: "left",
        associativeWith: []
    },
    "OperatorNode:smallerEq": {
        op: "<=",
        associativity: "left",
        associativeWith: []
    },
    "OperatorNode:largerEq": {
        op: ">=",
        associativity: "left",
        associativeWith: []
    },
    RelationalNode: {
        associativity: "left",
        associativeWith: []
    }
}, {
    "OperatorNode:leftShift": {
        op: "<<",
        associativity: "left",
        associativeWith: []
    },
    "OperatorNode:rightArithShift": {
        op: ">>",
        associativity: "left",
        associativeWith: []
    },
    "OperatorNode:rightLogShift": {
        op: ">>>",
        associativity: "left",
        associativeWith: []
    }
}, {
    "OperatorNode:to": {
        op: "to",
        associativity: "left",
        associativeWith: []
    }
}, {
    RangeNode: {}
}, {
    "OperatorNode:add": {
        op: "+",
        associativity: "left",
        associativeWith: ["OperatorNode:add", "OperatorNode:subtract"]
    },
    "OperatorNode:subtract": {
        op: "-",
        associativity: "left",
        associativeWith: []
    }
}, {
    "OperatorNode:multiply": {
        op: "*",
        associativity: "left",
        associativeWith: ["OperatorNode:multiply", "OperatorNode:divide", "Operator:dotMultiply", "Operator:dotDivide"]
    },
    "OperatorNode:divide": {
        op: "/",
        associativity: "left",
        associativeWith: [],
        latexLeftParens: !1,
        latexRightParens: !1,
        latexParens: !1
    },
    "OperatorNode:dotMultiply": {
        op: ".*",
        associativity: "left",
        associativeWith: ["OperatorNode:multiply", "OperatorNode:divide", "OperatorNode:dotMultiply", "OperatorNode:doDivide"]
    },
    "OperatorNode:dotDivide": {
        op: "./",
        associativity: "left",
        associativeWith: []
    },
    "OperatorNode:mod": {
        op: "mod",
        associativity: "left",
        associativeWith: []
    }
}, {
    "OperatorNode:multiply": {
        associativity: "left",
        associativeWith: ["OperatorNode:multiply", "OperatorNode:divide", "Operator:dotMultiply", "Operator:dotDivide"]
    }
}, {
    "OperatorNode:unaryPlus": {
        op: "+",
        associativity: "right"
    },
    "OperatorNode:unaryMinus": {
        op: "-",
        associativity: "right"
    },
    "OperatorNode:bitNot": {
        op: "~",
        associativity: "right"
    },
    "OperatorNode:not": {
        op: "not",
        associativity: "right"
    }
}, {
    "OperatorNode:pow": {
        op: "^",
        associativity: "right",
        associativeWith: [],
        latexRightParens: !1
    },
    "OperatorNode:dotPow": {
        op: ".^",
        associativity: "right",
        associativeWith: []
    }
}, {
    "OperatorNode:factorial": {
        op: "!",
        associativity: "left"
    }
}, {
    "OperatorNode:ctranspose": {
        op: "'",
        associativity: "left"
    }
}];
function ev(e, t) {
    if (!t || t !== "auto")
        return e;
    for (var r = e; zi(r); )
        r = r.content;
    return r
}
function Pt(e, t, r, a) {
    var n = e;
    t !== "keep" && (n = e.getContent());
    for (var i = n.getIdentifier(), o = null, s = 0; s < Dn.length; s++)
        if (i in Dn[s]) {
            o = s;
            break
        }
    if (i === "OperatorNode:multiply" && n.implicit && r !== "show") {
        var l = ev(n.args[0], t);
        !(_t(l) && a && a.getIdentifier() === "OperatorNode:divide" && ow(ev(a.args[0], t))) && !(l.getIdentifier() === "OperatorNode:divide" && ow(ev(l.args[0], t)) && _t(ev(l.args[1]))) && (o += 1)
    }
    return o
}
function qu(e, t) {
    var r = e;
    t !== "keep" && (r = e.getContent());
    var a = r.getIdentifier()
      , n = Pt(r, t);
    if (n === null)
        return null;
    var i = Dn[n][a];
    if (Ue(i, "associativity")) {
        if (i.associativity === "left")
            return "left";
        if (i.associativity === "right")
            return "right";
        throw Error("'" + a + "' has the invalid associativity '" + i.associativity + "'.")
    }
    return null
}
function Ep(e, t, r) {
    var a = r !== "keep" ? e.getContent() : e
      , n = r !== "keep" ? e.getContent() : t
      , i = a.getIdentifier()
      , o = n.getIdentifier()
      , s = Pt(a, r);
    if (s === null)
        return null;
    var l = Dn[s][i];
    if (Ue(l, "associativeWith") && l.associativeWith instanceof Array) {
        for (var u = 0; u < l.associativeWith.length; u++)
            if (l.associativeWith[u] === o)
                return !0;
        return !1
    }
    return null
}
function bW(e) {
    var t = "OperatorNode:" + e;
    for (var r of Dn)
        if (t in r)
            return r[t].op;
    return null
}
var tv = "AssignmentNode"
  , CW = ["subset", "?matrix", "Node"]
  , SW = j(tv, CW, e => {
    var {subset: t, matrix: r, Node: a} = e
      , n = hk({
        subset: t
    })
      , i = _W({
        subset: t,
        matrix: r
    });
    function o(l, u, c) {
        u || (u = "keep");
        var d = Pt(l, u, c)
          , v = Pt(l.value, u, c);
        return u === "all" || v !== null && v <= d
    }
    class s extends a {
        constructor(u, c, d) {
            if (super(),
            this.object = u,
            this.index = d ? c : null,
            this.value = d || c,
            !Er(u) && !bs(u))
                throw new TypeError('SymbolNode or AccessorNode expected as "object"');
            if (Er(u) && u.name === "end")
                throw new Error('Cannot assign to symbol "end"');
            if (this.index && !lu(this.index))
                throw new TypeError('IndexNode expected as "index"');
            if (!Ft(this.value))
                throw new TypeError('Node expected as "value"')
        }
        get name() {
            return this.index ? this.index.isObjectProperty() ? this.index.getObjectProperty() : "" : this.object.name || ""
        }
        get type() {
            return tv
        }
        get isAssignmentNode() {
            return !0
        }
        _compile(u, c) {
            var d = this.object._compile(u, c)
              , v = this.index ? this.index._compile(u, c) : null
              , h = this.value._compile(u, c)
              , p = this.object.name;
            if (this.index)
                if (this.index.isObjectProperty()) {
                    var f = this.index.getObjectProperty();
                    return function(w, C, b) {
                        var x = d(w, C, b)
                          , E = h(w, C, b);
                        return Wl(x, f, E),
                        E
                    }
                } else {
                    if (Er(this.object))
                        return function(w, C, b) {
                            var x = d(w, C, b)
                              , E = h(w, C, b)
                              , k = v(w, C, x);
                            return w.set(p, i(x, k, E)),
                            E
                        }
                        ;
                    var _ = this.object.object._compile(u, c);
                    if (this.object.index.isObjectProperty()) {
                        var y = this.object.index.getObjectProperty();
                        return function(w, C, b) {
                            var x = _(w, C, b)
                              , E = la(x, y)
                              , k = v(w, C, E)
                              , A = h(w, C, b);
                            return Wl(x, y, i(E, k, A)),
                            A
                        }
                    } else {
                        var g = this.object.index._compile(u, c);
                        return function(w, C, b) {
                            var x = _(w, C, b)
                              , E = g(w, C, x)
                              , k = n(x, E)
                              , A = v(w, C, k)
                              , I = h(w, C, b);
                            return i(x, E, i(k, A, I)),
                            I
                        }
                    }
                }
            else {
                if (!Er(this.object))
                    throw new TypeError("SymbolNode expected as object");
                return function(w, C, b) {
                    var x = h(w, C, b);
                    return w.set(p, x),
                    x
                }
            }
        }
        forEach(u) {
            u(this.object, "object", this),
            this.index && u(this.index, "index", this),
            u(this.value, "value", this)
        }
        map(u) {
            var c = this._ifNode(u(this.object, "object", this))
              , d = this.index ? this._ifNode(u(this.index, "index", this)) : null
              , v = this._ifNode(u(this.value, "value", this));
            return new s(c,d,v)
        }
        clone() {
            return new s(this.object,this.index,this.value)
        }
        _toString(u) {
            var c = this.object.toString(u)
              , d = this.index ? this.index.toString(u) : ""
              , v = this.value.toString(u);
            return o(this, u && u.parenthesis, u && u.implicit) && (v = "(" + v + ")"),
            c + d + " = " + v
        }
        toJSON() {
            return {
                mathjs: tv,
                object: this.object,
                index: this.index,
                value: this.value
            }
        }
        static fromJSON(u) {
            return new s(u.object,u.index,u.value)
        }
        toHTML(u) {
            var c = this.object.toHTML(u)
              , d = this.index ? this.index.toHTML(u) : ""
              , v = this.value.toHTML(u);
            return o(this, u && u.parenthesis, u && u.implicit) && (v = '<span class="math-paranthesis math-round-parenthesis">(</span>' + v + '<span class="math-paranthesis math-round-parenthesis">)</span>'),
            c + d + '<span class="math-operator math-assignment-operator math-variable-assignment-operator math-binary-operator">=</span>' + v
        }
        _toTex(u) {
            var c = this.object.toTex(u)
              , d = this.index ? this.index.toTex(u) : ""
              , v = this.value.toTex(u);
            return o(this, u && u.parenthesis, u && u.implicit) && (v = "\\left(".concat(v, "\\right)")),
            c + d + ":=" + v
        }
    }
    return Ze(s, "name", tv),
    s
}
, {
    isClass: !0,
    isNode: !0
})
  , rv = "BlockNode"
  , xW = ["ResultSet", "Node"]
  , AW = j(rv, xW, e => {
    var {ResultSet: t, Node: r} = e;
    class a extends r {
        constructor(i) {
            if (super(),
            !Array.isArray(i))
                throw new Error("Array expected");
            this.blocks = i.map(function(o) {
                var s = o && o.node
                  , l = o && o.visible !== void 0 ? o.visible : !0;
                if (!Ft(s))
                    throw new TypeError('Property "node" must be a Node');
                if (typeof l != "boolean")
                    throw new TypeError('Property "visible" must be a boolean');
                return {
                    node: s,
                    visible: l
                }
            })
        }
        get type() {
            return rv
        }
        get isBlockNode() {
            return !0
        }
        _compile(i, o) {
            var s = Pi(this.blocks, function(l) {
                return {
                    evaluate: l.node._compile(i, o),
                    visible: l.visible
                }
            });
            return function(u, c, d) {
                var v = [];
                return Ym(s, function(p) {
                    var f = p.evaluate(u, c, d);
                    p.visible && v.push(f)
                }),
                new t(v)
            }
        }
        forEach(i) {
            for (var o = 0; o < this.blocks.length; o++)
                i(this.blocks[o].node, "blocks[" + o + "].node", this)
        }
        map(i) {
            for (var o = [], s = 0; s < this.blocks.length; s++) {
                var l = this.blocks[s]
                  , u = this._ifNode(i(l.node, "blocks[" + s + "].node", this));
                o[s] = {
                    node: u,
                    visible: l.visible
                }
            }
            return new a(o)
        }
        clone() {
            var i = this.blocks.map(function(o) {
                return {
                    node: o.node,
                    visible: o.visible
                }
            });
            return new a(i)
        }
        _toString(i) {
            return this.blocks.map(function(o) {
                return o.node.toString(i) + (o.visible ? "" : ";")
            }).join(`
`)
        }
        toJSON() {
            return {
                mathjs: rv,
                blocks: this.blocks
            }
        }
        static fromJSON(i) {
            return new a(i.blocks)
        }
        toHTML(i) {
            return this.blocks.map(function(o) {
                return o.node.toHTML(i) + (o.visible ? "" : '<span class="math-separator">;</span>')
            }).join('<span class="math-separator"><br /></span>')
        }
        _toTex(i) {
            return this.blocks.map(function(o) {
                return o.node.toTex(i) + (o.visible ? "" : ";")
            }).join(`\\;\\;
`)
        }
    }
    return Ze(a, "name", rv),
    a
}
, {
    isClass: !0,
    isNode: !0
})
  , av = "ConditionalNode"
  , EW = ["Node"]
  , kW = j(av, EW, e => {
    var {Node: t} = e;
    function r(n) {
        if (typeof n == "number" || typeof n == "boolean" || typeof n == "string")
            return !!n;
        if (n) {
            if (vt(n))
                return !n.isZero();
            if (Oi(n))
                return !!(n.re || n.im);
            if (ln(n))
                return !!n.value
        }
        if (n == null)
            return !1;
        throw new TypeError('Unsupported type of condition "' + Bt(n) + '"')
    }
    class a extends t {
        constructor(i, o, s) {
            if (super(),
            !Ft(i))
                throw new TypeError("Parameter condition must be a Node");
            if (!Ft(o))
                throw new TypeError("Parameter trueExpr must be a Node");
            if (!Ft(s))
                throw new TypeError("Parameter falseExpr must be a Node");
            this.condition = i,
            this.trueExpr = o,
            this.falseExpr = s
        }
        get type() {
            return av
        }
        get isConditionalNode() {
            return !0
        }
        _compile(i, o) {
            var s = this.condition._compile(i, o)
              , l = this.trueExpr._compile(i, o)
              , u = this.falseExpr._compile(i, o);
            return function(d, v, h) {
                return r(s(d, v, h)) ? l(d, v, h) : u(d, v, h)
            }
        }
        forEach(i) {
            i(this.condition, "condition", this),
            i(this.trueExpr, "trueExpr", this),
            i(this.falseExpr, "falseExpr", this)
        }
        map(i) {
            return new a(this._ifNode(i(this.condition, "condition", this)),this._ifNode(i(this.trueExpr, "trueExpr", this)),this._ifNode(i(this.falseExpr, "falseExpr", this)))
        }
        clone() {
            return new a(this.condition,this.trueExpr,this.falseExpr)
        }
        _toString(i) {
            var o = i && i.parenthesis ? i.parenthesis : "keep"
              , s = Pt(this, o, i && i.implicit)
              , l = this.condition.toString(i)
              , u = Pt(this.condition, o, i && i.implicit);
            (o === "all" || this.condition.type === "OperatorNode" || u !== null && u <= s) && (l = "(" + l + ")");
            var c = this.trueExpr.toString(i)
              , d = Pt(this.trueExpr, o, i && i.implicit);
            (o === "all" || this.trueExpr.type === "OperatorNode" || d !== null && d <= s) && (c = "(" + c + ")");
            var v = this.falseExpr.toString(i)
              , h = Pt(this.falseExpr, o, i && i.implicit);
            return (o === "all" || this.falseExpr.type === "OperatorNode" || h !== null && h <= s) && (v = "(" + v + ")"),
            l + " ? " + c + " : " + v
        }
        toJSON() {
            return {
                mathjs: av,
                condition: this.condition,
                trueExpr: this.trueExpr,
                falseExpr: this.falseExpr
            }
        }
        static fromJSON(i) {
            return new a(i.condition,i.trueExpr,i.falseExpr)
        }
        toHTML(i) {
            var o = i && i.parenthesis ? i.parenthesis : "keep"
              , s = Pt(this, o, i && i.implicit)
              , l = this.condition.toHTML(i)
              , u = Pt(this.condition, o, i && i.implicit);
            (o === "all" || this.condition.type === "OperatorNode" || u !== null && u <= s) && (l = '<span class="math-parenthesis math-round-parenthesis">(</span>' + l + '<span class="math-parenthesis math-round-parenthesis">)</span>');
            var c = this.trueExpr.toHTML(i)
              , d = Pt(this.trueExpr, o, i && i.implicit);
            (o === "all" || this.trueExpr.type === "OperatorNode" || d !== null && d <= s) && (c = '<span class="math-parenthesis math-round-parenthesis">(</span>' + c + '<span class="math-parenthesis math-round-parenthesis">)</span>');
            var v = this.falseExpr.toHTML(i)
              , h = Pt(this.falseExpr, o, i && i.implicit);
            return (o === "all" || this.falseExpr.type === "OperatorNode" || h !== null && h <= s) && (v = '<span class="math-parenthesis math-round-parenthesis">(</span>' + v + '<span class="math-parenthesis math-round-parenthesis">)</span>'),
            l + '<span class="math-operator math-conditional-operator">?</span>' + c + '<span class="math-operator math-conditional-operator">:</span>' + v
        }
        _toTex(i) {
            return "\\begin{cases} {" + this.trueExpr.toTex(i) + "}, &\\quad{\\text{if }\\;" + this.condition.toTex(i) + "}\\\\{" + this.falseExpr.toTex(i) + "}, &\\quad{\\text{otherwise}}\\end{cases}"
        }
    }
    return Ze(a, "name", av),
    a
}
, {
    isClass: !0,
    isNode: !0
})
  , ww = Object.assign || function(e) {
    for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t];
        for (var a in r)
            Object.prototype.hasOwnProperty.call(r, a) && (e[a] = r[a])
    }
    return e
}
  , TW = {
    "{": "\\{",
    "}": "\\}",
    "\\": "\\textbackslash{}",
    "#": "\\#",
    $: "\\$",
    "%": "\\%",
    "&": "\\&",
    "^": "\\textasciicircum{}",
    _: "\\_",
    "~": "\\textasciitilde{}"
}
  , NW = {
    "–": "\\--",
    "—": "\\---",
    " ": "~",
    "	": "\\qquad{}",
    "\r\n": "\\newline{}",
    "\n": "\\newline{}"
}
  , MW = function(t, r) {
    return ww({}, t, r)
}
  , IW = function(e) {
    for (var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, r = t.preserveFormatting, a = r === void 0 ? !1 : r, n = t.escapeMapFn, i = n === void 0 ? MW : n, o = String(e), s = "", l = i(ww({}, TW), a ? ww({}, NW) : {}), u = Object.keys(l), c = function() {
        var v = !1;
        u.forEach(function(h, p) {
            v || o.length >= h.length && o.slice(0, h.length) === h && (s += l[u[p]],
            o = o.slice(h.length, o.length),
            v = !0)
        }),
        v || (s += o.slice(0, 1),
        o = o.slice(1, o.length))
    }; o; )
        c();
    return s
};
const DW = vi(IW);
var gw = {
    Alpha: "A",
    alpha: "\\alpha",
    Beta: "B",
    beta: "\\beta",
    Gamma: "\\Gamma",
    gamma: "\\gamma",
    Delta: "\\Delta",
    delta: "\\delta",
    Epsilon: "E",
    epsilon: "\\epsilon",
    varepsilon: "\\varepsilon",
    Zeta: "Z",
    zeta: "\\zeta",
    Eta: "H",
    eta: "\\eta",
    Theta: "\\Theta",
    theta: "\\theta",
    vartheta: "\\vartheta",
    Iota: "I",
    iota: "\\iota",
    Kappa: "K",
    kappa: "\\kappa",
    varkappa: "\\varkappa",
    Lambda: "\\Lambda",
    lambda: "\\lambda",
    Mu: "M",
    mu: "\\mu",
    Nu: "N",
    nu: "\\nu",
    Xi: "\\Xi",
    xi: "\\xi",
    Omicron: "O",
    omicron: "o",
    Pi: "\\Pi",
    pi: "\\pi",
    varpi: "\\varpi",
    Rho: "P",
    rho: "\\rho",
    varrho: "\\varrho",
    Sigma: "\\Sigma",
    sigma: "\\sigma",
    varsigma: "\\varsigma",
    Tau: "T",
    tau: "\\tau",
    Upsilon: "\\Upsilon",
    upsilon: "\\upsilon",
    Phi: "\\Phi",
    phi: "\\phi",
    varphi: "\\varphi",
    Chi: "X",
    chi: "\\chi",
    Psi: "\\Psi",
    psi: "\\psi",
    Omega: "\\Omega",
    omega: "\\omega",
    true: "\\mathrm{True}",
    false: "\\mathrm{False}",
    i: "i",
    inf: "\\infty",
    Inf: "\\infty",
    infinity: "\\infty",
    Infinity: "\\infty",
    oo: "\\infty",
    lim: "\\lim",
    undefined: "\\mathbf{?}"
}
  , gt = {
    transpose: "^\\top",
    ctranspose: "^H",
    factorial: "!",
    pow: "^",
    dotPow: ".^\\wedge",
    unaryPlus: "+",
    unaryMinus: "-",
    bitNot: "\\~",
    not: "\\neg",
    multiply: "\\cdot",
    divide: "\\frac",
    dotMultiply: ".\\cdot",
    dotDivide: ".:",
    mod: "\\mod",
    add: "+",
    subtract: "-",
    to: "\\rightarrow",
    leftShift: "<<",
    rightArithShift: ">>",
    rightLogShift: ">>>",
    equal: "=",
    unequal: "\\neq",
    smaller: "<",
    larger: ">",
    smallerEq: "\\leq",
    largerEq: "\\geq",
    bitAnd: "\\&",
    bitXor: "\\underline{|}",
    bitOr: "|",
    and: "\\wedge",
    xor: "\\veebar",
    or: "\\vee"
}
  , WC = {
    abs: {
        1: "\\left|${args[0]}\\right|"
    },
    add: {
        2: "\\left(${args[0]}".concat(gt.add, "${args[1]}\\right)")
    },
    cbrt: {
        1: "\\sqrt[3]{${args[0]}}"
    },
    ceil: {
        1: "\\left\\lceil${args[0]}\\right\\rceil"
    },
    cube: {
        1: "\\left(${args[0]}\\right)^3"
    },
    divide: {
        2: "\\frac{${args[0]}}{${args[1]}}"
    },
    dotDivide: {
        2: "\\left(${args[0]}".concat(gt.dotDivide, "${args[1]}\\right)")
    },
    dotMultiply: {
        2: "\\left(${args[0]}".concat(gt.dotMultiply, "${args[1]}\\right)")
    },
    dotPow: {
        2: "\\left(${args[0]}".concat(gt.dotPow, "${args[1]}\\right)")
    },
    exp: {
        1: "\\exp\\left(${args[0]}\\right)"
    },
    expm1: "\\left(e".concat(gt.pow, "{${args[0]}}-1\\right)"),
    fix: {
        1: "\\mathrm{${name}}\\left(${args[0]}\\right)"
    },
    floor: {
        1: "\\left\\lfloor${args[0]}\\right\\rfloor"
    },
    gcd: "\\gcd\\left(${args}\\right)",
    hypot: "\\hypot\\left(${args}\\right)",
    log: {
        1: "\\ln\\left(${args[0]}\\right)",
        2: "\\log_{${args[1]}}\\left(${args[0]}\\right)"
    },
    log10: {
        1: "\\log_{10}\\left(${args[0]}\\right)"
    },
    log1p: {
        1: "\\ln\\left(${args[0]}+1\\right)",
        2: "\\log_{${args[1]}}\\left(${args[0]}+1\\right)"
    },
    log2: "\\log_{2}\\left(${args[0]}\\right)",
    mod: {
        2: "\\left(${args[0]}".concat(gt.mod, "${args[1]}\\right)")
    },
    multiply: {
        2: "\\left(${args[0]}".concat(gt.multiply, "${args[1]}\\right)")
    },
    norm: {
        1: "\\left\\|${args[0]}\\right\\|",
        2: void 0
    },
    nthRoot: {
        2: "\\sqrt[${args[1]}]{${args[0]}}"
    },
    nthRoots: {
        2: "\\{y : $y^{args[1]} = {${args[0]}}\\}"
    },
    pow: {
        2: "\\left(${args[0]}\\right)".concat(gt.pow, "{${args[1]}}")
    },
    round: {
        1: "\\left\\lfloor${args[0]}\\right\\rceil",
        2: void 0
    },
    sign: {
        1: "\\mathrm{${name}}\\left(${args[0]}\\right)"
    },
    sqrt: {
        1: "\\sqrt{${args[0]}}"
    },
    square: {
        1: "\\left(${args[0]}\\right)^2"
    },
    subtract: {
        2: "\\left(${args[0]}".concat(gt.subtract, "${args[1]}\\right)")
    },
    unaryMinus: {
        1: "".concat(gt.unaryMinus, "\\left(${args[0]}\\right)")
    },
    unaryPlus: {
        1: "".concat(gt.unaryPlus, "\\left(${args[0]}\\right)")
    },
    bitAnd: {
        2: "\\left(${args[0]}".concat(gt.bitAnd, "${args[1]}\\right)")
    },
    bitNot: {
        1: gt.bitNot + "\\left(${args[0]}\\right)"
    },
    bitOr: {
        2: "\\left(${args[0]}".concat(gt.bitOr, "${args[1]}\\right)")
    },
    bitXor: {
        2: "\\left(${args[0]}".concat(gt.bitXor, "${args[1]}\\right)")
    },
    leftShift: {
        2: "\\left(${args[0]}".concat(gt.leftShift, "${args[1]}\\right)")
    },
    rightArithShift: {
        2: "\\left(${args[0]}".concat(gt.rightArithShift, "${args[1]}\\right)")
    },
    rightLogShift: {
        2: "\\left(${args[0]}".concat(gt.rightLogShift, "${args[1]}\\right)")
    },
    bellNumbers: {
        1: "\\mathrm{B}_{${args[0]}}"
    },
    catalan: {
        1: "\\mathrm{C}_{${args[0]}}"
    },
    stirlingS2: {
        2: "\\mathrm{S}\\left(${args}\\right)"
    },
    arg: {
        1: "\\arg\\left(${args[0]}\\right)"
    },
    conj: {
        1: "\\left(${args[0]}\\right)^*"
    },
    im: {
        1: "\\Im\\left\\lbrace${args[0]}\\right\\rbrace"
    },
    re: {
        1: "\\Re\\left\\lbrace${args[0]}\\right\\rbrace"
    },
    and: {
        2: "\\left(${args[0]}".concat(gt.and, "${args[1]}\\right)")
    },
    not: {
        1: gt.not + "\\left(${args[0]}\\right)"
    },
    or: {
        2: "\\left(${args[0]}".concat(gt.or, "${args[1]}\\right)")
    },
    xor: {
        2: "\\left(${args[0]}".concat(gt.xor, "${args[1]}\\right)")
    },
    cross: {
        2: "\\left(${args[0]}\\right)\\times\\left(${args[1]}\\right)"
    },
    ctranspose: {
        1: "\\left(${args[0]}\\right)".concat(gt.ctranspose)
    },
    det: {
        1: "\\det\\left(${args[0]}\\right)"
    },
    dot: {
        2: "\\left(${args[0]}\\cdot${args[1]}\\right)"
    },
    expm: {
        1: "\\exp\\left(${args[0]}\\right)"
    },
    inv: {
        1: "\\left(${args[0]}\\right)^{-1}"
    },
    pinv: {
        1: "\\left(${args[0]}\\right)^{+}"
    },
    sqrtm: {
        1: "{${args[0]}}".concat(gt.pow, "{\\frac{1}{2}}")
    },
    trace: {
        1: "\\mathrm{tr}\\left(${args[0]}\\right)"
    },
    transpose: {
        1: "\\left(${args[0]}\\right)".concat(gt.transpose)
    },
    combinations: {
        2: "\\binom{${args[0]}}{${args[1]}}"
    },
    combinationsWithRep: {
        2: "\\left(\\!\\!{\\binom{${args[0]}}{${args[1]}}}\\!\\!\\right)"
    },
    factorial: {
        1: "\\left(${args[0]}\\right)".concat(gt.factorial)
    },
    gamma: {
        1: "\\Gamma\\left(${args[0]}\\right)"
    },
    lgamma: {
        1: "\\ln\\Gamma\\left(${args[0]}\\right)"
    },
    equal: {
        2: "\\left(${args[0]}".concat(gt.equal, "${args[1]}\\right)")
    },
    larger: {
        2: "\\left(${args[0]}".concat(gt.larger, "${args[1]}\\right)")
    },
    largerEq: {
        2: "\\left(${args[0]}".concat(gt.largerEq, "${args[1]}\\right)")
    },
    smaller: {
        2: "\\left(${args[0]}".concat(gt.smaller, "${args[1]}\\right)")
    },
    smallerEq: {
        2: "\\left(${args[0]}".concat(gt.smallerEq, "${args[1]}\\right)")
    },
    unequal: {
        2: "\\left(${args[0]}".concat(gt.unequal, "${args[1]}\\right)")
    },
    erf: {
        1: "erf\\left(${args[0]}\\right)"
    },
    max: "\\max\\left(${args}\\right)",
    min: "\\min\\left(${args}\\right)",
    variance: "\\mathrm{Var}\\left(${args}\\right)",
    acos: {
        1: "\\cos^{-1}\\left(${args[0]}\\right)"
    },
    acosh: {
        1: "\\cosh^{-1}\\left(${args[0]}\\right)"
    },
    acot: {
        1: "\\cot^{-1}\\left(${args[0]}\\right)"
    },
    acoth: {
        1: "\\coth^{-1}\\left(${args[0]}\\right)"
    },
    acsc: {
        1: "\\csc^{-1}\\left(${args[0]}\\right)"
    },
    acsch: {
        1: "\\mathrm{csch}^{-1}\\left(${args[0]}\\right)"
    },
    asec: {
        1: "\\sec^{-1}\\left(${args[0]}\\right)"
    },
    asech: {
        1: "\\mathrm{sech}^{-1}\\left(${args[0]}\\right)"
    },
    asin: {
        1: "\\sin^{-1}\\left(${args[0]}\\right)"
    },
    asinh: {
        1: "\\sinh^{-1}\\left(${args[0]}\\right)"
    },
    atan: {
        1: "\\tan^{-1}\\left(${args[0]}\\right)"
    },
    atan2: {
        2: "\\mathrm{atan2}\\left(${args}\\right)"
    },
    atanh: {
        1: "\\tanh^{-1}\\left(${args[0]}\\right)"
    },
    cos: {
        1: "\\cos\\left(${args[0]}\\right)"
    },
    cosh: {
        1: "\\cosh\\left(${args[0]}\\right)"
    },
    cot: {
        1: "\\cot\\left(${args[0]}\\right)"
    },
    coth: {
        1: "\\coth\\left(${args[0]}\\right)"
    },
    csc: {
        1: "\\csc\\left(${args[0]}\\right)"
    },
    csch: {
        1: "\\mathrm{csch}\\left(${args[0]}\\right)"
    },
    sec: {
        1: "\\sec\\left(${args[0]}\\right)"
    },
    sech: {
        1: "\\mathrm{sech}\\left(${args[0]}\\right)"
    },
    sin: {
        1: "\\sin\\left(${args[0]}\\right)"
    },
    sinh: {
        1: "\\sinh\\left(${args[0]}\\right)"
    },
    tan: {
        1: "\\tan\\left(${args[0]}\\right)"
    },
    tanh: {
        1: "\\tanh\\left(${args[0]}\\right)"
    },
    to: {
        2: "\\left(${args[0]}".concat(gt.to, "${args[1]}\\right)")
    },
    numeric: function(t, r) {
        return t.args[0].toTex()
    },
    number: {
        0: "0",
        1: "\\left(${args[0]}\\right)",
        2: "\\left(\\left(${args[0]}\\right)${args[1]}\\right)"
    },
    string: {
        0: '\\mathtt{""}',
        1: "\\mathrm{string}\\left(${args[0]}\\right)"
    },
    bignumber: {
        0: "0",
        1: "\\left(${args[0]}\\right)"
    },
    complex: {
        0: "0",
        1: "\\left(${args[0]}\\right)",
        2: "\\left(\\left(${args[0]}\\right)+".concat(gw.i, "\\cdot\\left(${args[1]}\\right)\\right)")
    },
    matrix: {
        0: "\\begin{bmatrix}\\end{bmatrix}",
        1: "\\left(${args[0]}\\right)",
        2: "\\left(${args[0]}\\right)"
    },
    sparse: {
        0: "\\begin{bsparse}\\end{bsparse}",
        1: "\\left(${args[0]}\\right)"
    },
    unit: {
        1: "\\left(${args[0]}\\right)",
        2: "\\left(\\left(${args[0]}\\right)${args[1]}\\right)"
    }
}
  , UW = "\\mathrm{${name}}\\left(${args}\\right)"
  , YC = {
    deg: "^\\circ"
};
function _w(e) {
    return DW(e, {
        preserveFormatting: !0
    })
}
function mk(e, t) {
    return t = typeof t > "u" ? !1 : t,
    t ? Ue(YC, e) ? YC[e] : "\\mathrm{" + _w(e) + "}" : Ue(gw, e) ? gw[e] : _w(e)
}
var nv = "ConstantNode"
  , FW = ["Node"]
  , OW = j(nv, FW, e => {
    var {Node: t} = e;
    class r extends t {
        constructor(n) {
            super(),
            this.value = n
        }
        get type() {
            return nv
        }
        get isConstantNode() {
            return !0
        }
        _compile(n, i) {
            var o = this.value;
            return function() {
                return o
            }
        }
        forEach(n) {}
        map(n) {
            return this.clone()
        }
        clone() {
            return new r(this.value)
        }
        _toString(n) {
            return st(this.value, n)
        }
        toHTML(n) {
            var i = this._toString(n);
            switch (Bt(this.value)) {
            case "number":
            case "BigNumber":
            case "Fraction":
                return '<span class="math-number">' + i + "</span>";
            case "string":
                return '<span class="math-string">' + i + "</span>";
            case "boolean":
                return '<span class="math-boolean">' + i + "</span>";
            case "null":
                return '<span class="math-null-symbol">' + i + "</span>";
            case "undefined":
                return '<span class="math-undefined">' + i + "</span>";
            default:
                return '<span class="math-symbol">' + i + "</span>"
            }
        }
        toJSON() {
            return {
                mathjs: nv,
                value: this.value
            }
        }
        static fromJSON(n) {
            return new r(n.value)
        }
        _toTex(n) {
            var i = this._toString(n);
            switch (Bt(this.value)) {
            case "string":
                return "\\mathtt{" + _w(i) + "}";
            case "number":
            case "BigNumber":
                {
                    if (!isFinite(this.value))
                        return this.value.valueOf() < 0 ? "-\\infty" : "\\infty";
                    var o = i.toLowerCase().indexOf("e");
                    if (o !== -1)
                        return i.substring(0, o) + "\\cdot10^{" + i.substring(o + 1) + "}"
                }
                return i;
            case "Fraction":
                return this.value.toLatex();
            default:
                return i
            }
        }
    }
    return Ze(r, "name", nv),
    r
}
, {
    isClass: !0,
    isNode: !0
})
  , iv = "FunctionAssignmentNode"
  , PW = ["typed", "Node"]
  , BW = j(iv, PW, e => {
    var {typed: t, Node: r} = e;
    function a(i, o, s) {
        var l = Pt(i, o, s)
          , u = Pt(i.expr, o, s);
        return o === "all" || u !== null && u <= l
    }
    class n extends r {
        constructor(o, s, l) {
            if (super(),
            typeof o != "string")
                throw new TypeError('String expected for parameter "name"');
            if (!Array.isArray(s))
                throw new TypeError('Array containing strings or objects expected for parameter "params"');
            if (!Ft(l))
                throw new TypeError('Node expected for parameter "expr"');
            if (vk.has(o))
                throw new Error('Illegal function name, "' + o + '" is a reserved keyword');
            var u = new Set;
            for (var c of s) {
                var d = typeof c == "string" ? c : c.name;
                if (u.has(d))
                    throw new Error('Duplicate parameter name "'.concat(d, '"'));
                u.add(d)
            }
            this.name = o,
            this.params = s.map(function(v) {
                return v && v.name || v
            }),
            this.types = s.map(function(v) {
                return v && v.type || "any"
            }),
            this.expr = l
        }
        get type() {
            return iv
        }
        get isFunctionAssignmentNode() {
            return !0
        }
        _compile(o, s) {
            var l = Object.create(s);
            Ym(this.params, function(p) {
                l[p] = !0
            });
            var u = this.expr._compile(o, l)
              , c = this.name
              , d = this.params
              , v = G1(this.types, ",")
              , h = c + "(" + G1(this.params, ", ") + ")";
            return function(f, _, y) {
                var g = {};
                g[v] = function() {
                    for (var w = Object.create(_), C = 0; C < d.length; C++)
                        w[d[C]] = arguments[C];
                    return u(f, w, y)
                }
                ;
                var m = t(c, g);
                return m.syntax = h,
                f.set(c, m),
                m
            }
        }
        forEach(o) {
            o(this.expr, "expr", this)
        }
        map(o) {
            var s = this._ifNode(o(this.expr, "expr", this));
            return new n(this.name,this.params.slice(0),s)
        }
        clone() {
            return new n(this.name,this.params.slice(0),this.expr)
        }
        _toString(o) {
            var s = o && o.parenthesis ? o.parenthesis : "keep"
              , l = this.expr.toString(o);
            return a(this, s, o && o.implicit) && (l = "(" + l + ")"),
            this.name + "(" + this.params.join(", ") + ") = " + l
        }
        toJSON() {
            var o = this.types;
            return {
                mathjs: iv,
                name: this.name,
                params: this.params.map(function(s, l) {
                    return {
                        name: s,
                        type: o[l]
                    }
                }),
                expr: this.expr
            }
        }
        static fromJSON(o) {
            return new n(o.name,o.params,o.expr)
        }
        toHTML(o) {
            for (var s = o && o.parenthesis ? o.parenthesis : "keep", l = [], u = 0; u < this.params.length; u++)
                l.push('<span class="math-symbol math-parameter">' + cn(this.params[u]) + "</span>");
            var c = this.expr.toHTML(o);
            return a(this, s, o && o.implicit) && (c = '<span class="math-parenthesis math-round-parenthesis">(</span>' + c + '<span class="math-parenthesis math-round-parenthesis">)</span>'),
            '<span class="math-function">' + cn(this.name) + '</span><span class="math-parenthesis math-round-parenthesis">(</span>' + l.join('<span class="math-separator">,</span>') + '<span class="math-parenthesis math-round-parenthesis">)</span><span class="math-operator math-assignment-operator math-variable-assignment-operator math-binary-operator">=</span>' + c
        }
        _toTex(o) {
            var s = o && o.parenthesis ? o.parenthesis : "keep"
              , l = this.expr.toTex(o);
            return a(this, s, o && o.implicit) && (l = "\\left(".concat(l, "\\right)")),
            "\\mathrm{" + this.name + "}\\left(" + this.params.map(mk).join(",") + "\\right):=" + l
        }
    }
    return Ze(n, "name", iv),
    n
}
, {
    isClass: !0,
    isNode: !0
})
  , ov = "IndexNode"
  , RW = ["Node", "size"]
  , LW = j(ov, RW, e => {
    var {Node: t, size: r} = e;
    class a extends t {
        constructor(i, o) {
            if (super(),
            this.dimensions = i,
            this.dotNotation = o || !1,
            !Array.isArray(i) || !i.every(Ft))
                throw new TypeError('Array containing Nodes expected for parameter "dimensions"');
            if (this.dotNotation && !this.isObjectProperty())
                throw new Error("dotNotation only applicable for object properties")
        }
        get type() {
            return ov
        }
        get isIndexNode() {
            return !0
        }
        _compile(i, o) {
            var s = Pi(this.dimensions, function(u, c) {
                var d = u.filter(p => p.isSymbolNode && p.name === "end").length > 0;
                if (d) {
                    var v = Object.create(o);
                    v.end = !0;
                    var h = u._compile(i, v);
                    return function(f, _, y) {
                        if (!je(y) && !At(y) && !Wr(y))
                            throw new TypeError('Cannot resolve "end": context must be a Matrix, Array, or string but is ' + Bt(y));
                        var g = r(y).valueOf()
                          , m = Object.create(_);
                        return m.end = g[c],
                        h(f, m, y)
                    }
                } else
                    return u._compile(i, o)
            })
              , l = la(i, "index");
            return function(c, d, v) {
                var h = Pi(s, function(p) {
                    return p(c, d, v)
                });
                return l(...h)
            }
        }
        forEach(i) {
            for (var o = 0; o < this.dimensions.length; o++)
                i(this.dimensions[o], "dimensions[" + o + "]", this)
        }
        map(i) {
            for (var o = [], s = 0; s < this.dimensions.length; s++)
                o[s] = this._ifNode(i(this.dimensions[s], "dimensions[" + s + "]", this));
            return new a(o,this.dotNotation)
        }
        clone() {
            return new a(this.dimensions.slice(0),this.dotNotation)
        }
        isObjectProperty() {
            return this.dimensions.length === 1 && _t(this.dimensions[0]) && typeof this.dimensions[0].value == "string"
        }
        getObjectProperty() {
            return this.isObjectProperty() ? this.dimensions[0].value : null
        }
        _toString(i) {
            return this.dotNotation ? "." + this.getObjectProperty() : "[" + this.dimensions.join(", ") + "]"
        }
        toJSON() {
            return {
                mathjs: ov,
                dimensions: this.dimensions,
                dotNotation: this.dotNotation
            }
        }
        static fromJSON(i) {
            return new a(i.dimensions,i.dotNotation)
        }
        toHTML(i) {
            for (var o = [], s = 0; s < this.dimensions.length; s++)
                o[s] = this.dimensions[s].toHTML();
            return this.dotNotation ? '<span class="math-operator math-accessor-operator">.</span><span class="math-symbol math-property">' + cn(this.getObjectProperty()) + "</span>" : '<span class="math-parenthesis math-square-parenthesis">[</span>' + o.join('<span class="math-separator">,</span>') + '<span class="math-parenthesis math-square-parenthesis">]</span>'
        }
        _toTex(i) {
            var o = this.dimensions.map(function(s) {
                return s.toTex(i)
            });
            return this.dotNotation ? "." + this.getObjectProperty() : "_{" + o.join(",") + "}"
        }
    }
    return Ze(a, "name", ov),
    a
}
, {
    isClass: !0,
    isNode: !0
})
  , sv = "ObjectNode"
  , qW = ["Node"]
  , VW = j(sv, qW, e => {
    var {Node: t} = e;
    class r extends t {
        constructor(n) {
            if (super(),
            this.properties = n || {},
            n && (typeof n != "object" || !Object.keys(n).every(function(i) {
                return Ft(n[i])
            })))
                throw new TypeError("Object containing Nodes expected")
        }
        get type() {
            return sv
        }
        get isObjectNode() {
            return !0
        }
        _compile(n, i) {
            var o = {};
            for (var s in this.properties)
                if (Ue(this.properties, s)) {
                    var l = Jd(s)
                      , u = JSON.parse(l)
                      , c = la(this.properties, s);
                    o[u] = c._compile(n, i)
                }
            return function(v, h, p) {
                var f = {};
                for (var _ in o)
                    Ue(o, _) && (f[_] = o[_](v, h, p));
                return f
            }
        }
        forEach(n) {
            for (var i in this.properties)
                Ue(this.properties, i) && n(this.properties[i], "properties[" + Jd(i) + "]", this)
        }
        map(n) {
            var i = {};
            for (var o in this.properties)
                Ue(this.properties, o) && (i[o] = this._ifNode(n(this.properties[o], "properties[" + Jd(o) + "]", this)));
            return new r(i)
        }
        clone() {
            var n = {};
            for (var i in this.properties)
                Ue(this.properties, i) && (n[i] = this.properties[i]);
            return new r(n)
        }
        _toString(n) {
            var i = [];
            for (var o in this.properties)
                Ue(this.properties, o) && i.push(Jd(o) + ": " + this.properties[o].toString(n));
            return "{" + i.join(", ") + "}"
        }
        toJSON() {
            return {
                mathjs: sv,
                properties: this.properties
            }
        }
        static fromJSON(n) {
            return new r(n.properties)
        }
        toHTML(n) {
            var i = [];
            for (var o in this.properties)
                Ue(this.properties, o) && i.push('<span class="math-symbol math-property">' + cn(o) + '</span><span class="math-operator math-assignment-operator math-property-assignment-operator math-binary-operator">:</span>' + this.properties[o].toHTML(n));
            return '<span class="math-parenthesis math-curly-parenthesis">{</span>' + i.join('<span class="math-separator">,</span>') + '<span class="math-parenthesis math-curly-parenthesis">}</span>'
        }
        _toTex(n) {
            var i = [];
            for (var o in this.properties)
                Ue(this.properties, o) && i.push("\\mathbf{" + o + ":} & " + this.properties[o].toTex(n) + "\\\\");
            var s = "\\left\\{\\begin{array}{ll}" + i.join(`
`) + "\\end{array}\\right\\}";
            return s
        }
    }
    return Ze(r, "name", sv),
    r
}
, {
    isClass: !0,
    isNode: !0
})
  , lv = "OperatorNode"
  , $W = ["Node"]
  , zW = j(lv, $W, e => {
    var {Node: t} = e;
    function r(i, o) {
        var s = i;
        if (o === "auto")
            for (; zi(s); )
                s = s.content;
        return _t(s) ? !0 : vr(s) ? r(s.args[0], o) : !1
    }
    function a(i, o, s, l, u) {
        var c = Pt(i, o, s)
          , d = qu(i, o);
        if (o === "all" || l.length > 2 && i.getIdentifier() !== "OperatorNode:add" && i.getIdentifier() !== "OperatorNode:multiply")
            return l.map(function(A) {
                switch (A.getContent().type) {
                case "ArrayNode":
                case "ConstantNode":
                case "SymbolNode":
                case "ParenthesisNode":
                    return !1;
                default:
                    return !0
                }
            });
        var v;
        switch (l.length) {
        case 0:
            v = [];
            break;
        case 1:
            {
                var h = Pt(l[0], o, s, i);
                if (u && h !== null) {
                    var p, f;
                    if (o === "keep" ? (p = l[0].getIdentifier(),
                    f = i.getIdentifier()) : (p = l[0].getContent().getIdentifier(),
                    f = i.getContent().getIdentifier()),
                    Dn[c][f].latexLeftParens === !1) {
                        v = [!1];
                        break
                    }
                    if (Dn[h][p].latexParens === !1) {
                        v = [!1];
                        break
                    }
                }
                if (h === null) {
                    v = [!1];
                    break
                }
                if (h <= c) {
                    v = [!0];
                    break
                }
                v = [!1]
            }
            break;
        case 2:
            {
                var _, y = Pt(l[0], o, s, i), g = Ep(i, l[0], o);
                y === null ? _ = !1 : y === c && d === "right" && !g || y < c ? _ = !0 : _ = !1;
                var m, w = Pt(l[1], o, s, i), C = Ep(i, l[1], o);
                if (w === null ? m = !1 : w === c && d === "left" && !C || w < c ? m = !0 : m = !1,
                u) {
                    var b, x, E;
                    o === "keep" ? (b = i.getIdentifier(),
                    x = i.args[0].getIdentifier(),
                    E = i.args[1].getIdentifier()) : (b = i.getContent().getIdentifier(),
                    x = i.args[0].getContent().getIdentifier(),
                    E = i.args[1].getContent().getIdentifier()),
                    y !== null && (Dn[c][b].latexLeftParens === !1 && (_ = !1),
                    Dn[y][x].latexParens === !1 && (_ = !1)),
                    w !== null && (Dn[c][b].latexRightParens === !1 && (m = !1),
                    Dn[w][E].latexParens === !1 && (m = !1))
                }
                v = [_, m]
            }
            break;
        default:
            (i.getIdentifier() === "OperatorNode:add" || i.getIdentifier() === "OperatorNode:multiply") && (v = l.map(function(A) {
                var I = Pt(A, o, s, i)
                  , T = Ep(i, A, o)
                  , F = qu(A, o);
                return I === null ? !1 : c === I && d === F && !T ? !0 : I < c
            }));
            break
        }
        if (l.length >= 2 && i.getIdentifier() === "OperatorNode:multiply" && i.implicit && o !== "all" && s === "hide")
            for (var k = 1; k < v.length; ++k)
                r(l[k], o) && !v[k - 1] && (o !== "keep" || !zi(l[k - 1])) && (v[k] = !0);
        return v
    }
    class n extends t {
        constructor(o, s, l, u, c) {
            if (super(),
            typeof o != "string")
                throw new TypeError('string expected for parameter "op"');
            if (typeof s != "string")
                throw new TypeError('string expected for parameter "fn"');
            if (!Array.isArray(l) || !l.every(Ft))
                throw new TypeError('Array containing Nodes expected for parameter "args"');
            this.implicit = u === !0,
            this.isPercentage = c === !0,
            this.op = o,
            this.fn = s,
            this.args = l || []
        }
        get type() {
            return lv
        }
        get isOperatorNode() {
            return !0
        }
        _compile(o, s) {
            if (typeof this.fn != "string" || !o2(o, this.fn))
                throw o[this.fn] ? new Error('No access to function "' + this.fn + '"') : new Error("Function " + this.fn + ' missing in provided namespace "math"');
            var l = la(o, this.fn)
              , u = Pi(this.args, function(h) {
                return h._compile(o, s)
            });
            if (u.length === 1) {
                var c = u[0];
                return function(p, f, _) {
                    return l(c(p, f, _))
                }
            } else if (u.length === 2) {
                var d = u[0]
                  , v = u[1];
                return function(p, f, _) {
                    return l(d(p, f, _), v(p, f, _))
                }
            } else
                return function(p, f, _) {
                    return l.apply(null, Pi(u, function(y) {
                        return y(p, f, _)
                    }))
                }
        }
        forEach(o) {
            for (var s = 0; s < this.args.length; s++)
                o(this.args[s], "args[" + s + "]", this)
        }
        map(o) {
            for (var s = [], l = 0; l < this.args.length; l++)
                s[l] = this._ifNode(o(this.args[l], "args[" + l + "]", this));
            return new n(this.op,this.fn,s,this.implicit,this.isPercentage)
        }
        clone() {
            return new n(this.op,this.fn,this.args.slice(0),this.implicit,this.isPercentage)
        }
        isUnary() {
            return this.args.length === 1
        }
        isBinary() {
            return this.args.length === 2
        }
        _toString(o) {
            var s = o && o.parenthesis ? o.parenthesis : "keep"
              , l = o && o.implicit ? o.implicit : "hide"
              , u = this.args
              , c = a(this, s, l, u, !1);
            if (u.length === 1) {
                var d = qu(this, s)
                  , v = u[0].toString(o);
                c[0] && (v = "(" + v + ")");
                var h = /[a-zA-Z]+/.test(this.op);
                return d === "right" ? this.op + (h ? " " : "") + v : d === "left" ? v + (h ? " " : "") + this.op : v + this.op
            } else if (u.length === 2) {
                var p = u[0].toString(o)
                  , f = u[1].toString(o);
                return c[0] && (p = "(" + p + ")"),
                c[1] && (f = "(" + f + ")"),
                this.implicit && this.getIdentifier() === "OperatorNode:multiply" && l === "hide" ? p + " " + f : p + " " + this.op + " " + f
            } else if (u.length > 2 && (this.getIdentifier() === "OperatorNode:add" || this.getIdentifier() === "OperatorNode:multiply")) {
                var _ = u.map(function(y, g) {
                    return y = y.toString(o),
                    c[g] && (y = "(" + y + ")"),
                    y
                });
                return this.implicit && this.getIdentifier() === "OperatorNode:multiply" && l === "hide" ? _.join(" ") : _.join(" " + this.op + " ")
            } else
                return this.fn + "(" + this.args.join(", ") + ")"
        }
        toJSON() {
            return {
                mathjs: lv,
                op: this.op,
                fn: this.fn,
                args: this.args,
                implicit: this.implicit,
                isPercentage: this.isPercentage
            }
        }
        static fromJSON(o) {
            return new n(o.op,o.fn,o.args,o.implicit,o.isPercentage)
        }
        toHTML(o) {
            var s = o && o.parenthesis ? o.parenthesis : "keep"
              , l = o && o.implicit ? o.implicit : "hide"
              , u = this.args
              , c = a(this, s, l, u, !1);
            if (u.length === 1) {
                var d = qu(this, s)
                  , v = u[0].toHTML(o);
                return c[0] && (v = '<span class="math-parenthesis math-round-parenthesis">(</span>' + v + '<span class="math-parenthesis math-round-parenthesis">)</span>'),
                d === "right" ? '<span class="math-operator math-unary-operator math-lefthand-unary-operator">' + cn(this.op) + "</span>" + v : v + '<span class="math-operator math-unary-operator math-righthand-unary-operator">' + cn(this.op) + "</span>"
            } else if (u.length === 2) {
                var h = u[0].toHTML(o)
                  , p = u[1].toHTML(o);
                return c[0] && (h = '<span class="math-parenthesis math-round-parenthesis">(</span>' + h + '<span class="math-parenthesis math-round-parenthesis">)</span>'),
                c[1] && (p = '<span class="math-parenthesis math-round-parenthesis">(</span>' + p + '<span class="math-parenthesis math-round-parenthesis">)</span>'),
                this.implicit && this.getIdentifier() === "OperatorNode:multiply" && l === "hide" ? h + '<span class="math-operator math-binary-operator math-implicit-binary-operator"></span>' + p : h + '<span class="math-operator math-binary-operator math-explicit-binary-operator">' + cn(this.op) + "</span>" + p
            } else {
                var f = u.map(function(_, y) {
                    return _ = _.toHTML(o),
                    c[y] && (_ = '<span class="math-parenthesis math-round-parenthesis">(</span>' + _ + '<span class="math-parenthesis math-round-parenthesis">)</span>'),
                    _
                });
                return u.length > 2 && (this.getIdentifier() === "OperatorNode:add" || this.getIdentifier() === "OperatorNode:multiply") ? this.implicit && this.getIdentifier() === "OperatorNode:multiply" && l === "hide" ? f.join('<span class="math-operator math-binary-operator math-implicit-binary-operator"></span>') : f.join('<span class="math-operator math-binary-operator math-explicit-binary-operator">' + cn(this.op) + "</span>") : '<span class="math-function">' + cn(this.fn) + '</span><span class="math-paranthesis math-round-parenthesis">(</span>' + f.join('<span class="math-separator">,</span>') + '<span class="math-paranthesis math-round-parenthesis">)</span>'
            }
        }
        _toTex(o) {
            var s = o && o.parenthesis ? o.parenthesis : "keep"
              , l = o && o.implicit ? o.implicit : "hide"
              , u = this.args
              , c = a(this, s, l, u, !0)
              , d = gt[this.fn];
            if (d = typeof d > "u" ? this.op : d,
            u.length === 1) {
                var v = qu(this, s)
                  , h = u[0].toTex(o);
                return c[0] && (h = "\\left(".concat(h, "\\right)")),
                v === "right" ? d + h : h + d
            } else if (u.length === 2) {
                var p = u[0]
                  , f = p.toTex(o);
                c[0] && (f = "\\left(".concat(f, "\\right)"));
                var _ = u[1]
                  , y = _.toTex(o);
                c[1] && (y = "\\left(".concat(y, "\\right)"));
                var g;
                switch (s === "keep" ? g = p.getIdentifier() : g = p.getContent().getIdentifier(),
                this.getIdentifier()) {
                case "OperatorNode:divide":
                    return d + "{" + f + "}{" + y + "}";
                case "OperatorNode:pow":
                    switch (f = "{" + f + "}",
                    y = "{" + y + "}",
                    g) {
                    case "ConditionalNode":
                    case "OperatorNode:divide":
                        f = "\\left(".concat(f, "\\right)")
                    }
                    break;
                case "OperatorNode:multiply":
                    if (this.implicit && l === "hide")
                        return f + "~" + y
                }
                return f + d + y
            } else if (u.length > 2 && (this.getIdentifier() === "OperatorNode:add" || this.getIdentifier() === "OperatorNode:multiply")) {
                var m = u.map(function(w, C) {
                    return w = w.toTex(o),
                    c[C] && (w = "\\left(".concat(w, "\\right)")),
                    w
                });
                return this.getIdentifier() === "OperatorNode:multiply" && this.implicit && l === "hide" ? m.join("~") : m.join(d)
            } else
                return "\\mathrm{" + this.fn + "}\\left(" + u.map(function(w) {
                    return w.toTex(o)
                }).join(",") + "\\right)"
        }
        getIdentifier() {
            return this.type + ":" + this.fn
        }
    }
    return Ze(n, "name", lv),
    n
}
, {
    isClass: !0,
    isNode: !0
})
  , uv = "ParenthesisNode"
  , GW = ["Node"]
  , jW = j(uv, GW, e => {
    var {Node: t} = e;
    class r extends t {
        constructor(n) {
            if (super(),
            !Ft(n))
                throw new TypeError('Node expected for parameter "content"');
            this.content = n
        }
        get type() {
            return uv
        }
        get isParenthesisNode() {
            return !0
        }
        _compile(n, i) {
            return this.content._compile(n, i)
        }
        getContent() {
            return this.content.getContent()
        }
        forEach(n) {
            n(this.content, "content", this)
        }
        map(n) {
            var i = n(this.content, "content", this);
            return new r(i)
        }
        clone() {
            return new r(this.content)
        }
        _toString(n) {
            return !n || n && !n.parenthesis || n && n.parenthesis === "keep" ? "(" + this.content.toString(n) + ")" : this.content.toString(n)
        }
        toJSON() {
            return {
                mathjs: uv,
                content: this.content
            }
        }
        static fromJSON(n) {
            return new r(n.content)
        }
        toHTML(n) {
            return !n || n && !n.parenthesis || n && n.parenthesis === "keep" ? '<span class="math-parenthesis math-round-parenthesis">(</span>' + this.content.toHTML(n) + '<span class="math-parenthesis math-round-parenthesis">)</span>' : this.content.toHTML(n)
        }
        _toTex(n) {
            return !n || n && !n.parenthesis || n && n.parenthesis === "keep" ? "\\left(".concat(this.content.toTex(n), "\\right)") : this.content.toTex(n)
        }
    }
    return Ze(r, "name", uv),
    r
}
, {
    isClass: !0,
    isNode: !0
})
  , cv = "RangeNode"
  , HW = ["Node"]
  , WW = j(cv, HW, e => {
    var {Node: t} = e;
    function r(n, i, o) {
        var s = Pt(n, i, o)
          , l = {}
          , u = Pt(n.start, i, o);
        if (l.start = u !== null && u <= s || i === "all",
        n.step) {
            var c = Pt(n.step, i, o);
            l.step = c !== null && c <= s || i === "all"
        }
        var d = Pt(n.end, i, o);
        return l.end = d !== null && d <= s || i === "all",
        l
    }
    class a extends t {
        constructor(i, o, s) {
            if (super(),
            !Ft(i))
                throw new TypeError("Node expected");
            if (!Ft(o))
                throw new TypeError("Node expected");
            if (s && !Ft(s))
                throw new TypeError("Node expected");
            if (arguments.length > 3)
                throw new Error("Too many arguments");
            this.start = i,
            this.end = o,
            this.step = s || null
        }
        get type() {
            return cv
        }
        get isRangeNode() {
            return !0
        }
        needsEnd() {
            var i = this.filter(function(o) {
                return Er(o) && o.name === "end"
            });
            return i.length > 0
        }
        _compile(i, o) {
            var s = i.range
              , l = this.start._compile(i, o)
              , u = this.end._compile(i, o);
            if (this.step) {
                var c = this.step._compile(i, o);
                return function(v, h, p) {
                    return s(l(v, h, p), u(v, h, p), c(v, h, p))
                }
            } else
                return function(v, h, p) {
                    return s(l(v, h, p), u(v, h, p))
                }
        }
        forEach(i) {
            i(this.start, "start", this),
            i(this.end, "end", this),
            this.step && i(this.step, "step", this)
        }
        map(i) {
            return new a(this._ifNode(i(this.start, "start", this)),this._ifNode(i(this.end, "end", this)),this.step && this._ifNode(i(this.step, "step", this)))
        }
        clone() {
            return new a(this.start,this.end,this.step && this.step)
        }
        _toString(i) {
            var o = i && i.parenthesis ? i.parenthesis : "keep", s = r(this, o, i && i.implicit), l, u = this.start.toString(i);
            if (s.start && (u = "(" + u + ")"),
            l = u,
            this.step) {
                var c = this.step.toString(i);
                s.step && (c = "(" + c + ")"),
                l += ":" + c
            }
            var d = this.end.toString(i);
            return s.end && (d = "(" + d + ")"),
            l += ":" + d,
            l
        }
        toJSON() {
            return {
                mathjs: cv,
                start: this.start,
                end: this.end,
                step: this.step
            }
        }
        static fromJSON(i) {
            return new a(i.start,i.end,i.step)
        }
        toHTML(i) {
            var o = i && i.parenthesis ? i.parenthesis : "keep", s = r(this, o, i && i.implicit), l, u = this.start.toHTML(i);
            if (s.start && (u = '<span class="math-parenthesis math-round-parenthesis">(</span>' + u + '<span class="math-parenthesis math-round-parenthesis">)</span>'),
            l = u,
            this.step) {
                var c = this.step.toHTML(i);
                s.step && (c = '<span class="math-parenthesis math-round-parenthesis">(</span>' + c + '<span class="math-parenthesis math-round-parenthesis">)</span>'),
                l += '<span class="math-operator math-range-operator">:</span>' + c
            }
            var d = this.end.toHTML(i);
            return s.end && (d = '<span class="math-parenthesis math-round-parenthesis">(</span>' + d + '<span class="math-parenthesis math-round-parenthesis">)</span>'),
            l += '<span class="math-operator math-range-operator">:</span>' + d,
            l
        }
        _toTex(i) {
            var o = i && i.parenthesis ? i.parenthesis : "keep"
              , s = r(this, o, i && i.implicit)
              , l = this.start.toTex(i);
            if (s.start && (l = "\\left(".concat(l, "\\right)")),
            this.step) {
                var u = this.step.toTex(i);
                s.step && (u = "\\left(".concat(u, "\\right)")),
                l += ":" + u
            }
            var c = this.end.toTex(i);
            return s.end && (c = "\\left(".concat(c, "\\right)")),
            l += ":" + c,
            l
        }
    }
    return Ze(a, "name", cv),
    a
}
, {
    isClass: !0,
    isNode: !0
})
  , dv = "RelationalNode"
  , YW = ["Node"]
  , JW = j(dv, YW, e => {
    var {Node: t} = e
      , r = {
        equal: "==",
        unequal: "!=",
        smaller: "<",
        larger: ">",
        smallerEq: "<=",
        largerEq: ">="
    };
    class a extends t {
        constructor(i, o) {
            if (super(),
            !Array.isArray(i))
                throw new TypeError("Parameter conditionals must be an array");
            if (!Array.isArray(o))
                throw new TypeError("Parameter params must be an array");
            if (i.length !== o.length - 1)
                throw new TypeError("Parameter params must contain exactly one more element than parameter conditionals");
            this.conditionals = i,
            this.params = o
        }
        get type() {
            return dv
        }
        get isRelationalNode() {
            return !0
        }
        _compile(i, o) {
            var s = this
              , l = this.params.map(u => u._compile(i, o));
            return function(c, d, v) {
                for (var h, p = l[0](c, d, v), f = 0; f < s.conditionals.length; f++) {
                    h = p,
                    p = l[f + 1](c, d, v);
                    var _ = la(i, s.conditionals[f]);
                    if (!_(h, p))
                        return !1
                }
                return !0
            }
        }
        forEach(i) {
            this.params.forEach( (o, s) => i(o, "params[" + s + "]", this), this)
        }
        map(i) {
            return new a(this.conditionals.slice(),this.params.map( (o, s) => this._ifNode(i(o, "params[" + s + "]", this)), this))
        }
        clone() {
            return new a(this.conditionals,this.params)
        }
        _toString(i) {
            for (var o = i && i.parenthesis ? i.parenthesis : "keep", s = Pt(this, o, i && i.implicit), l = this.params.map(function(d, v) {
                var h = Pt(d, o, i && i.implicit);
                return o === "all" || h !== null && h <= s ? "(" + d.toString(i) + ")" : d.toString(i)
            }), u = l[0], c = 0; c < this.conditionals.length; c++)
                u += " " + r[this.conditionals[c]],
                u += " " + l[c + 1];
            return u
        }
        toJSON() {
            return {
                mathjs: dv,
                conditionals: this.conditionals,
                params: this.params
            }
        }
        static fromJSON(i) {
            return new a(i.conditionals,i.params)
        }
        toHTML(i) {
            for (var o = i && i.parenthesis ? i.parenthesis : "keep", s = Pt(this, o, i && i.implicit), l = this.params.map(function(d, v) {
                var h = Pt(d, o, i && i.implicit);
                return o === "all" || h !== null && h <= s ? '<span class="math-parenthesis math-round-parenthesis">(</span>' + d.toHTML(i) + '<span class="math-parenthesis math-round-parenthesis">)</span>' : d.toHTML(i)
            }), u = l[0], c = 0; c < this.conditionals.length; c++)
                u += '<span class="math-operator math-binary-operator math-explicit-binary-operator">' + cn(r[this.conditionals[c]]) + "</span>" + l[c + 1];
            return u
        }
        _toTex(i) {
            for (var o = i && i.parenthesis ? i.parenthesis : "keep", s = Pt(this, o, i && i.implicit), l = this.params.map(function(d, v) {
                var h = Pt(d, o, i && i.implicit);
                return o === "all" || h !== null && h <= s ? "\\left(" + d.toTex(i) + "\right)" : d.toTex(i)
            }), u = l[0], c = 0; c < this.conditionals.length; c++)
                u += gt[this.conditionals[c]] + l[c + 1];
            return u
        }
    }
    return Ze(a, "name", dv),
    a
}
, {
    isClass: !0,
    isNode: !0
})
  , KW = "SymbolNode"
  , QW = ["math", "?Unit", "Node"]
  , ZW = j(KW, QW, e => {
    var {math: t, Unit: r, Node: a} = e;
    function n(o) {
        return r ? r.isValuelessUnit(o) : !1
    }
    class i extends a {
        constructor(s) {
            if (super(),
            typeof s != "string")
                throw new TypeError('String expected for parameter "name"');
            this.name = s
        }
        get type() {
            return "SymbolNode"
        }
        get isSymbolNode() {
            return !0
        }
        _compile(s, l) {
            var u = this.name;
            if (l[u] === !0)
                return function(d, v, h) {
                    return la(v, u)
                }
                ;
            if (u in s)
                return function(d, v, h) {
                    return d.has(u) ? d.get(u) : la(s, u)
                }
                ;
            var c = n(u);
            return function(d, v, h) {
                return d.has(u) ? d.get(u) : c ? new r(null,u) : i.onUndefinedSymbol(u)
            }
        }
        forEach(s) {}
        map(s) {
            return this.clone()
        }
        static onUndefinedSymbol(s) {
            throw new Error("Undefined symbol " + s)
        }
        clone() {
            return new i(this.name)
        }
        _toString(s) {
            return this.name
        }
        toHTML(s) {
            var l = cn(this.name);
            return l === "true" || l === "false" ? '<span class="math-symbol math-boolean">' + l + "</span>" : l === "i" ? '<span class="math-symbol math-imaginary-symbol">' + l + "</span>" : l === "Infinity" ? '<span class="math-symbol math-infinity-symbol">' + l + "</span>" : l === "NaN" ? '<span class="math-symbol math-nan-symbol">' + l + "</span>" : l === "null" ? '<span class="math-symbol math-null-symbol">' + l + "</span>" : l === "undefined" ? '<span class="math-symbol math-undefined-symbol">' + l + "</span>" : '<span class="math-symbol">' + l + "</span>"
        }
        toJSON() {
            return {
                mathjs: "SymbolNode",
                name: this.name
            }
        }
        static fromJSON(s) {
            return new i(s.name)
        }
        _toTex(s) {
            var l = !1;
            typeof t[this.name] > "u" && n(this.name) && (l = !0);
            var u = mk(this.name, l);
            return u[0] === "\\" ? u : " " + u
        }
    }
    return i
}
, {
    isClass: !0,
    isNode: !0
});
function Qu(e) {
    for (var t = arguments.length, r = new Array(t > 1 ? t - 1 : 0), a = 1; a < t; a++)
        r[a - 1] = arguments[a];
    return typeof e.createSubScope == "function" ? H1(e.createSubScope(), ...r) : H1(Yl(), e, ...r)
}
var vv = "FunctionNode"
  , XW = ["math", "Node", "SymbolNode"]
  , eY = j(vv, XW, e => {
    var t, {math: r, Node: a, SymbolNode: n} = e, i = l => st(l, {
        truncate: 78
    });
    function o(l, u, c) {
        for (var d = "", v = /\$(?:\{([a-z_][a-z_0-9]*)(?:\[([0-9]+)\])?\}|\$)/gi, h = 0, p; (p = v.exec(l)) !== null; )
            if (d += l.substring(h, p.index),
            h = p.index,
            p[0] === "$$")
                d += "$",
                h++;
            else {
                h += p[0].length;
                var f = u[p[1]];
                if (!f)
                    throw new ReferenceError("Template: Property " + p[1] + " does not exist.");
                if (p[2] === void 0)
                    switch (typeof f) {
                    case "string":
                        d += f;
                        break;
                    case "object":
                        if (Ft(f))
                            d += f.toTex(c);
                        else if (Array.isArray(f))
                            d += f.map(function(_, y) {
                                if (Ft(_))
                                    return _.toTex(c);
                                throw new TypeError("Template: " + p[1] + "[" + y + "] is not a Node.")
                            }).join(",");
                        else
                            throw new TypeError("Template: " + p[1] + " has to be a Node, String or array of Nodes");
                        break;
                    default:
                        throw new TypeError("Template: " + p[1] + " has to be a Node, String or array of Nodes")
                    }
                else if (Ft(f[p[2]] && f[p[2]]))
                    d += f[p[2]].toTex(c);
                else
                    throw new TypeError("Template: " + p[1] + "[" + p[2] + "] is not a Node.")
            }
        return d += l.slice(h),
        d
    }
    class s extends a {
        constructor(u, c) {
            if (super(),
            typeof u == "string" && (u = new n(u)),
            !Ft(u))
                throw new TypeError('Node expected as parameter "fn"');
            if (!Array.isArray(c) || !c.every(Ft))
                throw new TypeError('Array containing Nodes expected for parameter "args"');
            this.fn = u,
            this.args = c || []
        }
        get name() {
            return this.fn.name || ""
        }
        get type() {
            return vv
        }
        get isFunctionNode() {
            return !0
        }
        _compile(u, c) {
            var d = this.args.map(E => E._compile(u, c));
            if (Er(this.fn)) {
                var v = this.fn.name;
                if (c[v]) {
                    var y = this.args;
                    return function(k, A, I) {
                        var T = la(A, v);
                        if (typeof T != "function")
                            throw new TypeError("Argument '".concat(v, "' was not a function; received: ").concat(i(T)));
                        if (T.rawArgs)
                            return T(y, u, Qu(k, A), k);
                        var F = d.map(R => R(k, A, I));
                        return T.apply(T, F)
                    }
                } else {
                    var h = v in u ? la(u, v) : void 0
                      , p = typeof h == "function" && h.rawArgs === !0
                      , f = E => {
                        var k;
                        if (E.has(v))
                            k = E.get(v);
                        else if (v in u)
                            k = la(u, v);
                        else
                            return s.onUndefinedFunction(v);
                        if (typeof k == "function")
                            return k;
                        throw new TypeError("'".concat(v, `' is not a function; its value is:
  `).concat(i(k)))
                    }
                    ;
                    if (p) {
                        var _ = this.args;
                        return function(k, A, I) {
                            var T = f(k);
                            return T(_, u, Qu(k, A), k)
                        }
                    } else
                        switch (d.length) {
                        case 0:
                            return function(k, A, I) {
                                var T = f(k);
                                return T()
                            }
                            ;
                        case 1:
                            return function(k, A, I) {
                                var T = f(k)
                                  , F = d[0];
                                return T(F(k, A, I))
                            }
                            ;
                        case 2:
                            return function(k, A, I) {
                                var T = f(k)
                                  , F = d[0]
                                  , R = d[1];
                                return T(F(k, A, I), R(k, A, I))
                            }
                            ;
                        default:
                            return function(k, A, I) {
                                var T = f(k)
                                  , F = d.map(R => R(k, A, I));
                                return T(...F)
                            }
                        }
                }
            } else if (bs(this.fn) && lu(this.fn.index) && this.fn.index.isObjectProperty()) {
                var g = this.fn.object._compile(u, c)
                  , m = this.fn.index.getObjectProperty()
                  , w = this.args;
                return function(k, A, I) {
                    var T = g(k, A, I)
                      , F = EB(T, m);
                    if (F != null && F.rawArgs)
                        return F(w, u, Qu(k, A), k);
                    var R = d.map(O => O(k, A, I));
                    return F.apply(T, R)
                }
            } else {
                var C = this.fn.toString()
                  , b = this.fn._compile(u, c)
                  , x = this.args;
                return function(k, A, I) {
                    var T = b(k, A, I);
                    if (typeof T != "function")
                        throw new TypeError("Expression '".concat(C, "' did not evaluate to a function; value is:") + `
  `.concat(i(T)));
                    if (T.rawArgs)
                        return T(x, u, Qu(k, A), k);
                    var F = d.map(R => R(k, A, I));
                    return T.apply(T, F)
                }
            }
        }
        forEach(u) {
            u(this.fn, "fn", this);
            for (var c = 0; c < this.args.length; c++)
                u(this.args[c], "args[" + c + "]", this)
        }
        map(u) {
            for (var c = this._ifNode(u(this.fn, "fn", this)), d = [], v = 0; v < this.args.length; v++)
                d[v] = this._ifNode(u(this.args[v], "args[" + v + "]", this));
            return new s(c,d)
        }
        clone() {
            return new s(this.fn,this.args.slice(0))
        }
        toString(u) {
            var c, d = this.fn.toString(u);
            return u && typeof u.handler == "object" && Ue(u.handler, d) && (c = u.handler[d](this, u)),
            typeof c < "u" ? c : super.toString(u)
        }
        _toString(u) {
            var c = this.args.map(function(v) {
                return v.toString(u)
            })
              , d = td(this.fn) ? "(" + this.fn.toString(u) + ")" : this.fn.toString(u);
            return d + "(" + c.join(", ") + ")"
        }
        toJSON() {
            return {
                mathjs: vv,
                fn: this.fn,
                args: this.args
            }
        }
        toHTML(u) {
            var c = this.args.map(function(d) {
                return d.toHTML(u)
            });
            return '<span class="math-function">' + cn(this.fn) + '</span><span class="math-paranthesis math-round-parenthesis">(</span>' + c.join('<span class="math-separator">,</span>') + '<span class="math-paranthesis math-round-parenthesis">)</span>'
        }
        toTex(u) {
            var c;
            return u && typeof u.handler == "object" && Ue(u.handler, this.name) && (c = u.handler[this.name](this, u)),
            typeof c < "u" ? c : super.toTex(u)
        }
        _toTex(u) {
            var c = this.args.map(function(h) {
                return h.toTex(u)
            }), d;
            WC[this.name] && (d = WC[this.name]),
            r[this.name] && (typeof r[this.name].toTex == "function" || typeof r[this.name].toTex == "object" || typeof r[this.name].toTex == "string") && (d = r[this.name].toTex);
            var v;
            switch (typeof d) {
            case "function":
                v = d(this, u);
                break;
            case "string":
                v = o(d, this, u);
                break;
            case "object":
                switch (typeof d[c.length]) {
                case "function":
                    v = d[c.length](this, u);
                    break;
                case "string":
                    v = o(d[c.length], this, u);
                    break
                }
            }
            return typeof v < "u" ? v : o(UW, this, u)
        }
        getIdentifier() {
            return this.type + ":" + this.name
        }
    }
    return t = s,
    Ze(s, "name", vv),
    Ze(s, "onUndefinedFunction", function(l) {
        throw new Error("Undefined function " + l)
    }),
    Ze(s, "fromJSON", function(l) {
        return new t(l.fn,l.args)
    }),
    s
}
, {
    isClass: !0,
    isNode: !0
})
  , JC = "parse"
  , tY = ["typed", "numeric", "config", "AccessorNode", "ArrayNode", "AssignmentNode", "BlockNode", "ConditionalNode", "ConstantNode", "FunctionAssignmentNode", "FunctionNode", "IndexNode", "ObjectNode", "OperatorNode", "ParenthesisNode", "RangeNode", "RelationalNode", "SymbolNode"]
  , rY = j(JC, tY, e => {
    var {typed: t, numeric: r, config: a, AccessorNode: n, ArrayNode: i, AssignmentNode: o, BlockNode: s, ConditionalNode: l, ConstantNode: u, FunctionAssignmentNode: c, FunctionNode: d, IndexNode: v, ObjectNode: h, OperatorNode: p, ParenthesisNode: f, RangeNode: _, RelationalNode: y, SymbolNode: g} = e
      , m = t(JC, {
        string: function(X) {
            return V(X, {})
        },
        "Array | Matrix": function(X) {
            return w(X, {})
        },
        "string, Object": function(X, de) {
            var Ae = de.nodes !== void 0 ? de.nodes : {};
            return V(X, Ae)
        },
        "Array | Matrix, Object": w
    });
    function w(U) {
        var X = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}
          , de = X.nodes !== void 0 ? X.nodes : {};
        return dt(U, function(Ae) {
            if (typeof Ae != "string")
                throw new TypeError("String expected");
            return V(Ae, de)
        })
    }
    var C = {
        NULL: 0,
        DELIMITER: 1,
        NUMBER: 2,
        SYMBOL: 3,
        UNKNOWN: 4
    }
      , b = {
        ",": !0,
        "(": !0,
        ")": !0,
        "[": !0,
        "]": !0,
        "{": !0,
        "}": !0,
        '"': !0,
        "'": !0,
        ";": !0,
        "+": !0,
        "-": !0,
        "*": !0,
        ".*": !0,
        "/": !0,
        "./": !0,
        "%": !0,
        "^": !0,
        ".^": !0,
        "~": !0,
        "!": !0,
        "&": !0,
        "|": !0,
        "^|": !0,
        "=": !0,
        ":": !0,
        "?": !0,
        "==": !0,
        "!=": !0,
        "<": !0,
        ">": !0,
        "<=": !0,
        ">=": !0,
        "<<": !0,
        ">>": !0,
        ">>>": !0
    }
      , x = {
        mod: !0,
        to: !0,
        in: !0,
        and: !0,
        xor: !0,
        or: !0,
        not: !0
    }
      , E = {
        true: !0,
        false: !1,
        null: null,
        undefined: void 0
    }
      , k = ["NaN", "Infinity"];
    function A() {
        return {
            extraNodes: {},
            expression: "",
            comment: "",
            index: 0,
            token: "",
            tokenType: C.NULL,
            nestingLevel: 0,
            conditionalLevel: null
        }
    }
    function I(U, X) {
        return U.expression.substr(U.index, X)
    }
    function T(U) {
        return I(U, 1)
    }
    function F(U) {
        U.index++
    }
    function R(U) {
        return U.expression.charAt(U.index - 1)
    }
    function O(U) {
        return U.expression.charAt(U.index + 1)
    }
    function M(U) {
        for (U.tokenType = C.NULL,
        U.token = "",
        U.comment = ""; ; ) {
            if (T(U) === "#")
                for (; T(U) !== `
` && T(U) !== ""; )
                    U.comment += T(U),
                    F(U);
            if (m.isWhitespace(T(U), U.nestingLevel))
                F(U);
            else
                break
        }
        if (T(U) === "") {
            U.tokenType = C.DELIMITER;
            return
        }
        if (T(U) === `
` && !U.nestingLevel) {
            U.tokenType = C.DELIMITER,
            U.token = T(U),
            F(U);
            return
        }
        var X = T(U)
          , de = I(U, 2)
          , Ae = I(U, 3);
        if (Ae.length === 3 && b[Ae]) {
            U.tokenType = C.DELIMITER,
            U.token = Ae,
            F(U),
            F(U),
            F(U);
            return
        }
        if (de.length === 2 && b[de]) {
            U.tokenType = C.DELIMITER,
            U.token = de,
            F(U),
            F(U);
            return
        }
        if (b[X]) {
            U.tokenType = C.DELIMITER,
            U.token = X,
            F(U);
            return
        }
        if (m.isDigitDot(X)) {
            U.tokenType = C.NUMBER;
            var ze = I(U, 2);
            if (ze === "0b" || ze === "0o" || ze === "0x") {
                for (U.token += T(U),
                F(U),
                U.token += T(U),
                F(U); m.isHexDigit(T(U)); )
                    U.token += T(U),
                    F(U);
                if (T(U) === ".")
                    for (U.token += ".",
                    F(U); m.isHexDigit(T(U)); )
                        U.token += T(U),
                        F(U);
                else if (T(U) === "i")
                    for (U.token += "i",
                    F(U); m.isDigit(T(U)); )
                        U.token += T(U),
                        F(U);
                return
            }
            if (T(U) === ".") {
                if (U.token += T(U),
                F(U),
                !m.isDigit(T(U))) {
                    U.tokenType = C.DELIMITER;
                    return
                }
            } else {
                for (; m.isDigit(T(U)); )
                    U.token += T(U),
                    F(U);
                m.isDecimalMark(T(U), O(U)) && (U.token += T(U),
                F(U))
            }
            for (; m.isDigit(T(U)); )
                U.token += T(U),
                F(U);
            if (T(U) === "E" || T(U) === "e") {
                if (m.isDigit(O(U)) || O(U) === "-" || O(U) === "+") {
                    if (U.token += T(U),
                    F(U),
                    (T(U) === "+" || T(U) === "-") && (U.token += T(U),
                    F(U)),
                    !m.isDigit(T(U)))
                        throw Ge(U, 'Digit expected, got "' + T(U) + '"');
                    for (; m.isDigit(T(U)); )
                        U.token += T(U),
                        F(U);
                    if (m.isDecimalMark(T(U), O(U)))
                        throw Ge(U, 'Digit expected, got "' + T(U) + '"')
                } else if (O(U) === ".")
                    throw F(U),
                    Ge(U, 'Digit expected, got "' + T(U) + '"')
            }
            return
        }
        if (m.isAlpha(T(U), R(U), O(U))) {
            for (; m.isAlpha(T(U), R(U), O(U)) || m.isDigit(T(U)); )
                U.token += T(U),
                F(U);
            Ue(x, U.token) ? U.tokenType = C.DELIMITER : U.tokenType = C.SYMBOL;
            return
        }
        for (U.tokenType = C.UNKNOWN; T(U) !== ""; )
            U.token += T(U),
            F(U);
        throw Ge(U, 'Syntax error in part "' + U.token + '"')
    }
    function N(U) {
        do
            M(U);
        while (U.token === `
`)
    }
    function B(U) {
        U.nestingLevel++
    }
    function D(U) {
        U.nestingLevel--
    }
    m.isAlpha = function(X, de, Ae) {
        return m.isValidLatinOrGreek(X) || m.isValidMathSymbol(X, Ae) || m.isValidMathSymbol(de, X)
    }
    ,
    m.isValidLatinOrGreek = function(X) {
        return /^[a-zA-Z_$\u00C0-\u02AF\u0370-\u03FF\u2100-\u214F]$/.test(X)
    }
    ,
    m.isValidMathSymbol = function(X, de) {
        return /^[\uD835]$/.test(X) && /^[\uDC00-\uDFFF]$/.test(de) && /^[^\uDC55\uDC9D\uDCA0\uDCA1\uDCA3\uDCA4\uDCA7\uDCA8\uDCAD\uDCBA\uDCBC\uDCC4\uDD06\uDD0B\uDD0C\uDD15\uDD1D\uDD3A\uDD3F\uDD45\uDD47-\uDD49\uDD51\uDEA6\uDEA7\uDFCC\uDFCD]$/.test(de)
    }
    ,
    m.isWhitespace = function(X, de) {
        return X === " " || X === "	" || X === `
` && de > 0
    }
    ,
    m.isDecimalMark = function(X, de) {
        return X === "." && de !== "/" && de !== "*" && de !== "^"
    }
    ,
    m.isDigitDot = function(X) {
        return X >= "0" && X <= "9" || X === "."
    }
    ,
    m.isDigit = function(X) {
        return X >= "0" && X <= "9"
    }
    ,
    m.isHexDigit = function(X) {
        return X >= "0" && X <= "9" || X >= "a" && X <= "f" || X >= "A" && X <= "F"
    }
    ;
    function V(U, X) {
        var de = A();
        Ie(de, {
            expression: U,
            extraNodes: X
        }),
        M(de);
        var Ae = J(de);
        if (de.token !== "")
            throw de.tokenType === C.DELIMITER ? St(de, "Unexpected operator " + de.token) : Ge(de, 'Unexpected part "' + de.token + '"');
        return Ae
    }
    function J(U) {
        var X, de = [], Ae;
        for (U.token !== "" && U.token !== `
` && U.token !== ";" && (X = Y(U),
        U.comment && (X.comment = U.comment)); U.token === `
` || U.token === ";"; )
            de.length === 0 && X && (Ae = U.token !== ";",
            de.push({
                node: X,
                visible: Ae
            })),
            M(U),
            U.token !== `
` && U.token !== ";" && U.token !== "" && (X = Y(U),
            U.comment && (X.comment = U.comment),
            Ae = U.token !== ";",
            de.push({
                node: X,
                visible: Ae
            }));
        return de.length > 0 ? new s(de) : (X || (X = new u(void 0),
        U.comment && (X.comment = U.comment)),
        X)
    }
    function Y(U) {
        var X, de, Ae, ze, Oe = G(U);
        if (U.token === "=") {
            if (Er(Oe))
                return X = Oe.name,
                N(U),
                Ae = Y(U),
                new o(new g(X),Ae);
            if (bs(Oe))
                return N(U),
                Ae = Y(U),
                new o(Oe.object,Oe.index,Ae);
            if (Oo(Oe) && Er(Oe.fn) && (ze = !0,
            de = [],
            X = Oe.name,
            Oe.args.forEach(function(Xe, qr) {
                Er(Xe) ? de[qr] = Xe.name : ze = !1
            }),
            ze))
                return N(U),
                Ae = Y(U),
                new c(X,de,Ae);
            throw Ge(U, "Invalid left hand side of assignment operator =")
        }
        return Oe
    }
    function G(U) {
        for (var X = Z(U); U.token === "?"; ) {
            var de = U.conditionalLevel;
            U.conditionalLevel = U.nestingLevel,
            N(U);
            var Ae = X
              , ze = Y(U);
            if (U.token !== ":")
                throw Ge(U, "False part of conditional expression expected");
            U.conditionalLevel = null,
            N(U);
            var Oe = Y(U);
            X = new l(Ae,ze,Oe),
            U.conditionalLevel = de
        }
        return X
    }
    function Z(U) {
        for (var X = ie(U); U.token === "or"; )
            N(U),
            X = new p("or","or",[X, ie(U)]);
        return X
    }
    function ie(U) {
        for (var X = re(U); U.token === "xor"; )
            N(U),
            X = new p("xor","xor",[X, re(U)]);
        return X
    }
    function re(U) {
        for (var X = se(U); U.token === "and"; )
            N(U),
            X = new p("and","and",[X, se(U)]);
        return X
    }
    function se(U) {
        for (var X = ce(U); U.token === "|"; )
            N(U),
            X = new p("|","bitOr",[X, ce(U)]);
        return X
    }
    function ce(U) {
        for (var X = ue(U); U.token === "^|"; )
            N(U),
            X = new p("^|","bitXor",[X, ue(U)]);
        return X
    }
    function ue(U) {
        for (var X = oe(U); U.token === "&"; )
            N(U),
            X = new p("&","bitAnd",[X, oe(U)]);
        return X
    }
    function oe(U) {
        for (var X = [me(U)], de = [], Ae = {
            "==": "equal",
            "!=": "unequal",
            "<": "smaller",
            ">": "larger",
            "<=": "smallerEq",
            ">=": "largerEq"
        }; Ue(Ae, U.token); ) {
            var ze = {
                name: U.token,
                fn: Ae[U.token]
            };
            de.push(ze),
            N(U),
            X.push(me(U))
        }
        return X.length === 1 ? X[0] : X.length === 2 ? new p(de[0].name,de[0].fn,X) : new y(de.map(Oe => Oe.fn),X)
    }
    function me(U) {
        var X, de, Ae, ze;
        X = xe(U);
        for (var Oe = {
            "<<": "leftShift",
            ">>": "rightArithShift",
            ">>>": "rightLogShift"
        }; Ue(Oe, U.token); )
            de = U.token,
            Ae = Oe[de],
            N(U),
            ze = [X, xe(U)],
            X = new p(de,Ae,ze);
        return X
    }
    function xe(U) {
        var X, de, Ae, ze;
        X = pe(U);
        for (var Oe = {
            to: "to",
            in: "to"
        }; Ue(Oe, U.token); )
            de = U.token,
            Ae = Oe[de],
            N(U),
            de === "in" && U.token === "" ? X = new p("*","multiply",[X, new g("in")],!0) : (ze = [X, pe(U)],
            X = new p(de,Ae,ze));
        return X
    }
    function pe(U) {
        var X, de = [];
        if (U.token === ":" ? X = new u(1) : X = be(U),
        U.token === ":" && U.conditionalLevel !== U.nestingLevel) {
            for (de.push(X); U.token === ":" && de.length < 3; )
                N(U),
                U.token === ")" || U.token === "]" || U.token === "," || U.token === "" ? de.push(new g("end")) : de.push(be(U));
            de.length === 3 ? X = new _(de[0],de[2],de[1]) : X = new _(de[0],de[1])
        }
        return X
    }
    function be(U) {
        var X, de, Ae, ze;
        X = H(U);
        for (var Oe = {
            "+": "add",
            "-": "subtract"
        }; Ue(Oe, U.token); ) {
            de = U.token,
            Ae = Oe[de],
            N(U);
            var Xe = H(U);
            Xe.isPercentage ? ze = [X, new p("*","multiply",[X, Xe])] : ze = [X, Xe],
            X = new p(de,Ae,ze)
        }
        return X
    }
    function H(U) {
        var X, de, Ae, ze;
        X = Q(U),
        de = X;
        for (var Oe = {
            "*": "multiply",
            ".*": "dotMultiply",
            "/": "divide",
            "./": "dotDivide"
        }; Ue(Oe, U.token); )
            Ae = U.token,
            ze = Oe[Ae],
            N(U),
            de = Q(U),
            X = new p(Ae,ze,[X, de]);
        return X
    }
    function Q(U) {
        var X, de;
        for (X = z(U),
        de = X; U.tokenType === C.SYMBOL || U.token === "in" && _t(X) || U.tokenType === C.NUMBER && !_t(de) && (!vr(de) || de.op === "!") || U.token === "("; )
            de = z(U),
            X = new p("*","multiply",[X, de],!0);
        return X
    }
    function z(U) {
        for (var X = P(U), de = X, Ae = []; U.token === "/" && ow(de); )
            if (Ae.push(Ie({}, U)),
            N(U),
            U.tokenType === C.NUMBER)
                if (Ae.push(Ie({}, U)),
                N(U),
                U.tokenType === C.SYMBOL || U.token === "(")
                    Ie(U, Ae.pop()),
                    Ae.pop(),
                    de = P(U),
                    X = new p("/","divide",[X, de]);
                else {
                    Ae.pop(),
                    Ie(U, Ae.pop());
                    break
                }
            else {
                Ie(U, Ae.pop());
                break
            }
        return X
    }
    function P(U) {
        var X, de, Ae, ze;
        X = $(U);
        for (var Oe = {
            "%": "mod",
            mod: "mod"
        }; Ue(Oe, U.token); )
            de = U.token,
            Ae = Oe[de],
            N(U),
            de === "%" && U.tokenType === C.DELIMITER && U.token !== "(" ? X = new p("/","divide",[X, new u(100)],!1,!0) : (ze = [X, $(U)],
            X = new p(de,Ae,ze));
        return X
    }
    function $(U) {
        var X, de, Ae, ze = {
            "-": "unaryMinus",
            "+": "unaryPlus",
            "~": "bitNot",
            not: "not"
        };
        return Ue(ze, U.token) ? (Ae = ze[U.token],
        X = U.token,
        N(U),
        de = [$(U)],
        new p(X,Ae,de)) : K(U)
    }
    function K(U) {
        var X, de, Ae, ze;
        return X = ae(U),
        (U.token === "^" || U.token === ".^") && (de = U.token,
        Ae = de === "^" ? "pow" : "dotPow",
        N(U),
        ze = [X, $(U)],
        X = new p(de,Ae,ze)),
        X
    }
    function ae(U) {
        var X, de, Ae, ze;
        X = te(U);
        for (var Oe = {
            "!": "factorial",
            "'": "ctranspose"
        }; Ue(Oe, U.token); )
            de = U.token,
            Ae = Oe[de],
            M(U),
            ze = [X],
            X = new p(de,Ae,ze),
            X = W(U, X);
        return X
    }
    function te(U) {
        var X = [];
        if (U.tokenType === C.SYMBOL && Ue(U.extraNodes, U.token)) {
            var de = U.extraNodes[U.token];
            if (M(U),
            U.token === "(") {
                if (X = [],
                B(U),
                M(U),
                U.token !== ")")
                    for (X.push(Y(U)); U.token === ","; )
                        M(U),
                        X.push(Y(U));
                if (U.token !== ")")
                    throw Ge(U, "Parenthesis ) expected");
                D(U),
                M(U)
            }
            return new de(X)
        }
        return L(U)
    }
    function L(U) {
        var X, de;
        return U.tokenType === C.SYMBOL || U.tokenType === C.DELIMITER && U.token in x ? (de = U.token,
        M(U),
        Ue(E, de) ? X = new u(E[de]) : k.indexOf(de) !== -1 ? X = new u(r(de, "number")) : X = new g(de),
        X = W(U, X),
        X) : ne(U)
    }
    function W(U, X, de) {
        for (var Ae; (U.token === "(" || U.token === "[" || U.token === ".") && (!de || de.indexOf(U.token) !== -1); )
            if (Ae = [],
            U.token === "(")
                if (Er(X) || bs(X)) {
                    if (B(U),
                    M(U),
                    U.token !== ")")
                        for (Ae.push(Y(U)); U.token === ","; )
                            M(U),
                            Ae.push(Y(U));
                    if (U.token !== ")")
                        throw Ge(U, "Parenthesis ) expected");
                    D(U),
                    M(U),
                    X = new d(X,Ae)
                } else
                    return X;
            else if (U.token === "[") {
                if (B(U),
                M(U),
                U.token !== "]")
                    for (Ae.push(Y(U)); U.token === ","; )
                        M(U),
                        Ae.push(Y(U));
                if (U.token !== "]")
                    throw Ge(U, "Parenthesis ] expected");
                D(U),
                M(U),
                X = new n(X,new v(Ae))
            } else {
                if (M(U),
                U.tokenType !== C.SYMBOL)
                    throw Ge(U, "Property name expected after dot");
                Ae.push(new u(U.token)),
                M(U);
                var ze = !0;
                X = new n(X,new v(Ae,ze))
            }
        return X
    }
    function ne(U) {
        var X, de;
        return U.token === '"' ? (de = le(U),
        X = new u(de),
        X = W(U, X),
        X) : he(U)
    }
    function le(U) {
        for (var X = ""; T(U) !== "" && T(U) !== '"'; )
            T(U) === "\\" && (X += T(U),
            F(U)),
            X += T(U),
            F(U);
        if (M(U),
        U.token !== '"')
            throw Ge(U, 'End of string " expected');
        return M(U),
        JSON.parse('"' + X + '"')
    }
    function he(U) {
        var X, de;
        return U.token === "'" ? (de = ve(U),
        X = new u(de),
        X = W(U, X),
        X) : we(U)
    }
    function ve(U) {
        for (var X = ""; T(U) !== "" && T(U) !== "'"; )
            T(U) === "\\" && (X += T(U),
            F(U)),
            X += T(U),
            F(U);
        if (M(U),
        U.token !== "'")
            throw Ge(U, "End of string ' expected");
        return M(U),
        JSON.parse('"' + X + '"')
    }
    function we(U) {
        var X, de, Ae, ze;
        if (U.token === "[") {
            if (B(U),
            M(U),
            U.token !== "]") {
                var Oe = ye(U);
                if (U.token === ";") {
                    for (Ae = 1,
                    de = [Oe]; U.token === ";"; )
                        M(U),
                        de[Ae] = ye(U),
                        Ae++;
                    if (U.token !== "]")
                        throw Ge(U, "End of matrix ] expected");
                    D(U),
                    M(U),
                    ze = de[0].items.length;
                    for (var Xe = 1; Xe < Ae; Xe++)
                        if (de[Xe].items.length !== ze)
                            throw St(U, "Column dimensions mismatch (" + de[Xe].items.length + " !== " + ze + ")");
                    X = new i(de)
                } else {
                    if (U.token !== "]")
                        throw Ge(U, "End of matrix ] expected");
                    D(U),
                    M(U),
                    X = Oe
                }
            } else
                D(U),
                M(U),
                X = new i([]);
            return W(U, X)
        }
        return Ce(U)
    }
    function ye(U) {
        for (var X = [Y(U)], de = 1; U.token === ","; )
            M(U),
            X[de] = Y(U),
            de++;
        return new i(X)
    }
    function Ce(U) {
        if (U.token === "{") {
            B(U);
            var X, de = {};
            do
                if (M(U),
                U.token !== "}") {
                    if (U.token === '"')
                        X = le(U);
                    else if (U.token === "'")
                        X = ve(U);
                    else if (U.tokenType === C.SYMBOL || U.tokenType === C.DELIMITER && U.token in x)
                        X = U.token,
                        M(U);
                    else
                        throw Ge(U, "Symbol or string expected as object key");
                    if (U.token !== ":")
                        throw Ge(U, "Colon : expected after object key");
                    M(U),
                    de[X] = Y(U)
                }
            while (U.token === ",");
            if (U.token !== "}")
                throw Ge(U, "Comma , or bracket } expected after object value");
            D(U),
            M(U);
            var Ae = new h(de);
            return Ae = W(U, Ae),
            Ae
        }
        return ge(U)
    }
    function ge(U) {
        var X;
        return U.tokenType === C.NUMBER ? (X = U.token,
        M(U),
        new u(r(X, a.number))) : We(U)
    }
    function We(U) {
        var X;
        if (U.token === "(") {
            if (B(U),
            M(U),
            X = Y(U),
            U.token !== ")")
                throw Ge(U, "Parenthesis ) expected");
            return D(U),
            M(U),
            X = new f(X),
            X = W(U, X),
            X
        }
        return He(U)
    }
    function He(U) {
        throw U.token === "" ? Ge(U, "Unexpected end of expression") : Ge(U, "Value expected")
    }
    function $e(U) {
        return U.index - U.token.length + 1
    }
    function Ge(U, X) {
        var de = $e(U)
          , Ae = new SyntaxError(X + " (char " + de + ")");
        return Ae.char = de,
        Ae
    }
    function St(U, X) {
        var de = $e(U)
          , Ae = new SyntaxError(X + " (char " + de + ")");
        return Ae.char = de,
        Ae
    }
    return t.addConversion({
        from: "string",
        to: "Node",
        convert: m
    }),
    m
}
)
  , KC = "compile"
  , aY = ["typed", "parse"]
  , nY = j(KC, aY, e => {
    var {typed: t, parse: r} = e;
    return t(KC, {
        string: function(n) {
            return r(n).compile()
        },
        "Array | Matrix": function(n) {
            return dt(n, function(i) {
                return r(i).compile()
            })
        }
    })
}
)
  , QC = "evaluate"
  , iY = ["typed", "parse"]
  , oY = j(QC, iY, e => {
    var {typed: t, parse: r} = e;
    return t(QC, {
        string: function(n) {
            var i = Yl();
            return r(n).compile().evaluate(i)
        },
        "string, Map | Object": function(n, i) {
            return r(n).compile().evaluate(i)
        },
        "Array | Matrix": function(n) {
            var i = Yl();
            return dt(n, function(o) {
                return r(o).compile().evaluate(i)
            })
        },
        "Array | Matrix, Map | Object": function(n, i) {
            return dt(n, function(o) {
                return r(o).compile().evaluate(i)
            })
        }
    })
}
)
  , sY = "Parser"
  , lY = ["evaluate"]
  , uY = j(sY, lY, e => {
    var {evaluate: t} = e;
    function r() {
        if (!(this instanceof r))
            throw new SyntaxError("Constructor must be called with the new operator");
        Object.defineProperty(this, "scope", {
            value: Yl(),
            writable: !1
        })
    }
    return r.prototype.type = "Parser",
    r.prototype.isParser = !0,
    r.prototype.evaluate = function(a) {
        return t(a, this.scope)
    }
    ,
    r.prototype.get = function(a) {
        if (this.scope.has(a))
            return this.scope.get(a)
    }
    ,
    r.prototype.getAll = function() {
        return NB(this.scope)
    }
    ,
    r.prototype.getAllAsMap = function() {
        return this.scope
    }
    ,
    r.prototype.set = function(a, n) {
        return this.scope.set(a, n),
        n
    }
    ,
    r.prototype.remove = function(a) {
        this.scope.delete(a)
    }
    ,
    r.prototype.clear = function() {
        this.scope.clear()
    }
    ,
    r
}
, {
    isClass: !0
})
  , ZC = "parser"
  , cY = ["typed", "Parser"]
  , dY = j(ZC, cY, e => {
    var {typed: t, Parser: r} = e;
    return t(ZC, {
        "": function() {
            return new r
        }
    })
}
)
  , XC = "lup"
  , vY = ["typed", "matrix", "abs", "addScalar", "divideScalar", "multiplyScalar", "subtract", "larger", "equalScalar", "unaryMinus", "DenseMatrix", "SparseMatrix", "Spa"]
  , hY = j(XC, vY, e => {
    var {typed: t, matrix: r, abs: a, addScalar: n, divideScalar: i, multiplyScalar: o, subtract: s, larger: l, equalScalar: u, unaryMinus: c, DenseMatrix: d, SparseMatrix: v, Spa: h} = e;
    return t(XC, {
        DenseMatrix: function(y) {
            return p(y)
        },
        SparseMatrix: function(y) {
            return f(y)
        },
        Array: function(y) {
            var g = r(y)
              , m = p(g);
            return {
                L: m.L.valueOf(),
                U: m.U.valueOf(),
                p: m.p
            }
        }
    });
    function p(_) {
        var y = _._size[0], g = _._size[1], m = Math.min(y, g), w = Qe(_._data), C = [], b = [y, m], x = [], E = [m, g], k, A, I, T = [];
        for (k = 0; k < y; k++)
            T[k] = k;
        for (A = 0; A < g; A++) {
            if (A > 0)
                for (k = 0; k < y; k++) {
                    var F = Math.min(k, A)
                      , R = 0;
                    for (I = 0; I < F; I++)
                        R = n(R, o(w[k][I], w[I][A]));
                    w[k][A] = s(w[k][A], R)
                }
            var O = A
              , M = 0
              , N = 0;
            for (k = A; k < y; k++) {
                var B = w[k][A]
                  , D = a(B);
                l(D, M) && (O = k,
                M = D,
                N = B)
            }
            if (A !== O && (T[A] = [T[O], T[O] = T[A]][0],
            d._swapRows(A, O, w)),
            A < y)
                for (k = A + 1; k < y; k++) {
                    var V = w[k][A];
                    u(V, 0) || (w[k][A] = i(w[k][A], N))
                }
        }
        for (A = 0; A < g; A++)
            for (k = 0; k < y; k++) {
                if (A === 0 && (k < g && (x[k] = []),
                C[k] = []),
                k < A) {
                    k < g && (x[k][A] = w[k][A]),
                    A < y && (C[k][A] = 0);
                    continue
                }
                if (k === A) {
                    k < g && (x[k][A] = w[k][A]),
                    A < y && (C[k][A] = 1);
                    continue
                }
                k < g && (x[k][A] = 0),
                A < y && (C[k][A] = w[k][A])
            }
        var J = new d({
            data: C,
            size: b
        })
          , Y = new d({
            data: x,
            size: E
        })
          , G = [];
        for (k = 0,
        m = T.length; k < m; k++)
            G[T[k]] = k;
        return {
            L: J,
            U: Y,
            p: G,
            toString: function() {
                return "L: " + this.L.toString() + `
U: ` + this.U.toString() + `
P: ` + this.p
            }
        }
    }
    function f(_) {
        var y = _._size[0], g = _._size[1], m = Math.min(y, g), w = _._values, C = _._index, b = _._ptr, x = [], E = [], k = [], A = [y, m], I = [], T = [], F = [], R = [m, g], O, M, N, B = [], D = [];
        for (O = 0; O < y; O++)
            B[O] = O,
            D[O] = O;
        var V = function(G, Z) {
            var ie = D[G]
              , re = D[Z];
            B[ie] = Z,
            B[re] = G,
            D[G] = re,
            D[Z] = ie
        }
          , J = function() {
            var G = new h;
            M < y && (k.push(x.length),
            x.push(1),
            E.push(M)),
            F.push(I.length);
            var Z = b[M]
              , ie = b[M + 1];
            for (N = Z; N < ie; N++)
                O = C[N],
                G.set(B[O], w[N]);
            M > 0 && G.forEach(0, M - 1, function(ue, oe) {
                v._forEachRow(ue, x, E, k, function(me, xe) {
                    me > ue && G.accumulate(me, c(o(xe, oe)))
                })
            });
            var re = M
              , se = G.get(M)
              , ce = a(se);
            G.forEach(M + 1, y - 1, function(ue, oe) {
                var me = a(oe);
                l(me, ce) && (re = ue,
                ce = me,
                se = oe)
            }),
            M !== re && (v._swapRows(M, re, A[1], x, E, k),
            v._swapRows(M, re, R[1], I, T, F),
            G.swap(M, re),
            V(M, re)),
            G.forEach(0, y - 1, function(ue, oe) {
                ue <= M ? (I.push(oe),
                T.push(ue)) : (oe = i(oe, se),
                u(oe, 0) || (x.push(oe),
                E.push(ue)))
            })
        };
        for (M = 0; M < g; M++)
            J();
        return F.push(I.length),
        k.push(x.length),
        {
            L: new v({
                values: x,
                index: E,
                ptr: k,
                size: A
            }),
            U: new v({
                values: I,
                index: T,
                ptr: F,
                size: R
            }),
            p: B,
            toString: function() {
                return "L: " + this.L.toString() + `
U: ` + this.U.toString() + `
P: ` + this.p
            }
        }
    }
}
)
  , eS = "qr"
  , mY = ["typed", "matrix", "zeros", "identity", "isZero", "equal", "sign", "sqrt", "conj", "unaryMinus", "addScalar", "divideScalar", "multiplyScalar", "subtract", "complex"]
  , fY = j(eS, mY, e => {
    var {typed: t, matrix: r, zeros: a, identity: n, isZero: i, equal: o, sign: s, sqrt: l, conj: u, unaryMinus: c, addScalar: d, divideScalar: v, multiplyScalar: h, subtract: p, complex: f} = e;
    return Ie(t(eS, {
        DenseMatrix: function(w) {
            return y(w)
        },
        SparseMatrix: function(w) {
            return g()
        },
        Array: function(w) {
            var C = r(w)
              , b = y(C);
            return {
                Q: b.Q.valueOf(),
                R: b.R.valueOf()
            }
        }
    }), {
        _denseQRimpl: _
    });
    function _(m) {
        var w = m._size[0], C = m._size[1], b = n([w], "dense"), x = b._data, E = m.clone(), k = E._data, A, I, T, F = a([w], "");
        for (T = 0; T < Math.min(C, w); ++T) {
            var R = k[T][T]
              , O = c(o(R, 0) ? 1 : s(R))
              , M = u(O)
              , N = 0;
            for (A = T; A < w; A++)
                N = d(N, h(k[A][T], u(k[A][T])));
            var B = h(O, l(N));
            if (!i(B)) {
                var D = p(R, B);
                for (F[T] = 1,
                A = T + 1; A < w; A++)
                    F[A] = v(k[A][T], D);
                var V = c(u(v(D, B)))
                  , J = void 0;
                for (I = T; I < C; I++) {
                    for (J = 0,
                    A = T; A < w; A++)
                        J = d(J, h(u(F[A]), k[A][I]));
                    for (J = h(J, V),
                    A = T; A < w; A++)
                        k[A][I] = h(p(k[A][I], h(F[A], J)), M)
                }
                for (A = 0; A < w; A++) {
                    for (J = 0,
                    I = T; I < w; I++)
                        J = d(J, h(x[A][I], F[I]));
                    for (J = h(J, V),
                    I = T; I < w; ++I)
                        x[A][I] = v(p(x[A][I], h(J, u(F[I]))), M)
                }
            }
        }
        return {
            Q: b,
            R: E,
            toString: function() {
                return "Q: " + this.Q.toString() + `
R: ` + this.R.toString()
            }
        }
    }
    function y(m) {
        var w = _(m)
          , C = w.R._data;
        if (m._data.length > 0)
            for (var b = C[0][0].type === "Complex" ? f(0) : 0, x = 0; x < C.length; ++x)
                for (var E = 0; E < x && E < (C[0] || []).length; ++E)
                    C[x][E] = b;
        return w
    }
    function g(m) {
        throw new Error("qr not implemented for sparse matrices yet")
    }
}
);
function pY(e, t, r, a) {
    for (var n = e._values, i = e._index, o = e._ptr, s = e._size, l = e._datatype, u = s[0], c = s[1], d = a && e._values ? [] : null, v = [], h = [], p = 0, f = 0; f < c; f++) {
        h[f] = p;
        for (var _ = r ? r[f] : f, y = o[_], g = o[_ + 1], m = y; m < g; m++) {
            var w = t ? t[i[m]] : i[m];
            v[p] = w,
            d && (d[p] = n[m]),
            p++
        }
    }
    return h[c] = p,
    e.createSparseMatrix({
        values: d,
        index: v,
        ptr: h,
        size: [u, c],
        datatype: l
    })
}
function fk(e, t, r, a, n, i, o) {
    var s = 0;
    for (r[o] = e; s >= 0; ) {
        var l = r[o + s]
          , u = r[a + l];
        u === -1 ? (s--,
        i[t++] = l) : (r[a + l] = r[n + u],
        ++s,
        r[o + s] = u)
    }
    return t
}
function yY(e, t) {
    if (!e)
        return null;
    var r = 0, a, n = [], i = [], o = 0, s = t, l = 2 * t;
    for (a = 0; a < t; a++)
        i[o + a] = -1;
    for (a = t - 1; a >= 0; a--)
        e[a] !== -1 && (i[s + a] = i[o + e[a]],
        i[o + e[a]] = a);
    for (a = 0; a < t; a++)
        e[a] === -1 && (r = fk(a, r, i, o, s, n, l));
    return n
}
function wY(e, t) {
    if (!e)
        return null;
    var r = e._index, a = e._ptr, n = e._size, i = n[0], o = n[1], s = [], l = [], u = 0, c = o, d, v;
    if (t)
        for (d = 0; d < i; d++)
            l[c + d] = -1;
    for (var h = 0; h < o; h++) {
        s[h] = -1,
        l[u + h] = -1;
        for (var p = a[h], f = a[h + 1], _ = p; _ < f; _++) {
            var y = r[_];
            for (d = t ? l[c + y] : y; d !== -1 && d < h; d = v)
                v = l[u + d],
                l[u + d] = h,
                v === -1 && (s[d] = h);
            t && (l[c + y] = h)
        }
    }
    return s
}
function gY(e, t, r) {
    for (var a = e._values, n = e._index, i = e._ptr, o = e._size, s = o[1], l = 0, u = 0; u < s; u++) {
        var c = i[u];
        for (i[u] = l; c < i[u + 1]; c++)
            t(n[c], u, a ? a[c] : 1, r) && (n[l] = n[c],
            a && (a[l] = a[c]),
            l++)
    }
    return i[s] = l,
    n.splice(l, n.length - l),
    a && a.splice(l, a.length - l),
    l
}
function uo(e) {
    return -e - 2
}
var _Y = "csAmd"
  , bY = ["add", "multiply", "transpose"]
  , CY = j(_Y, bY, e => {
    var {add: t, multiply: r, transpose: a} = e;
    return function(c, d) {
        if (!d || c <= 0 || c > 3)
            return null;
        var v = d._size
          , h = v[0]
          , p = v[1]
          , f = 0
          , _ = Math.max(16, 10 * Math.sqrt(p));
        _ = Math.min(p - 2, _);
        var y = n(c, d, h, p, _);
        gY(y, l, null);
        for (var g = y._index, m = y._ptr, w = m[p], C = [], b = [], x = 0, E = p + 1, k = 2 * (p + 1), A = 3 * (p + 1), I = 4 * (p + 1), T = 5 * (p + 1), F = 6 * (p + 1), R = 7 * (p + 1), O = C, M = i(p, m, b, x, A, O, k, R, E, F, I, T), N = o(p, m, b, T, I, F, _, E, A, O, k), B = 0, D, V, J, Y, G, Z, ie, re, se, ce, ue, oe, me, xe, pe, be; N < p; ) {
            for (J = -1; B < p && (J = b[A + B]) === -1; B++)
                ;
            b[k + J] !== -1 && (O[b[k + J]] = -1),
            b[A + B] = b[k + J];
            var H = b[I + J]
              , Q = b[E + J];
            N += Q;
            var z = 0;
            b[E + J] = -Q;
            var P = m[J]
              , $ = H === 0 ? P : w
              , K = $;
            for (Y = 1; Y <= H + 1; Y++) {
                for (Y > H ? (Z = J,
                ie = P,
                re = b[x + J] - H) : (Z = g[P++],
                ie = m[Z],
                re = b[x + Z]),
                G = 1; G <= re; G++)
                    D = g[ie++],
                    !((se = b[E + D]) <= 0) && (z += se,
                    b[E + D] = -se,
                    g[K++] = D,
                    b[k + D] !== -1 && (O[b[k + D]] = O[D]),
                    O[D] !== -1 ? b[k + O[D]] = b[k + D] : b[A + b[T + D]] = b[k + D]);
                Z !== J && (m[Z] = uo(J),
                b[F + Z] = 0)
            }
            for (H !== 0 && (w = K),
            b[T + J] = z,
            m[J] = $,
            b[x + J] = K - $,
            b[I + J] = -2,
            M = s(M, f, b, F, p),
            ce = $; ce < K; ce++)
                if (D = g[ce],
                !((ue = b[I + D]) <= 0)) {
                    se = -b[E + D];
                    var ae = M - se;
                    for (P = m[D],
                    oe = m[D] + ue - 1; P <= oe; P++)
                        Z = g[P],
                        b[F + Z] >= M ? b[F + Z] -= se : b[F + Z] !== 0 && (b[F + Z] = b[T + Z] + ae)
                }
            for (ce = $; ce < K; ce++) {
                for (D = g[ce],
                oe = m[D],
                me = oe + b[I + D] - 1,
                xe = oe,
                pe = 0,
                be = 0,
                P = oe; P <= me; P++)
                    if (Z = g[P],
                    b[F + Z] !== 0) {
                        var te = b[F + Z] - M;
                        te > 0 ? (be += te,
                        g[xe++] = Z,
                        pe += Z) : (m[Z] = uo(J),
                        b[F + Z] = 0)
                    }
                b[I + D] = xe - oe + 1;
                var L = xe
                  , W = oe + b[x + D];
                for (P = me + 1; P < W; P++) {
                    V = g[P];
                    var ne = b[E + V];
                    ne <= 0 || (be += ne,
                    g[xe++] = V,
                    pe += V)
                }
                be === 0 ? (m[D] = uo(J),
                se = -b[E + D],
                z -= se,
                Q += se,
                N += se,
                b[E + D] = 0,
                b[I + D] = -1) : (b[T + D] = Math.min(b[T + D], be),
                g[xe] = g[L],
                g[L] = g[oe],
                g[oe] = J,
                b[x + D] = xe - oe + 1,
                pe = (pe < 0 ? -pe : pe) % p,
                b[k + D] = b[R + pe],
                b[R + pe] = D,
                O[D] = pe)
            }
            for (b[T + J] = z,
            f = Math.max(f, z),
            M = s(M + f, f, b, F, p),
            ce = $; ce < K; ce++)
                if (D = g[ce],
                !(b[E + D] >= 0))
                    for (pe = O[D],
                    D = b[R + pe],
                    b[R + pe] = -1; D !== -1 && b[k + D] !== -1; D = b[k + D],
                    M++) {
                        for (re = b[x + D],
                        ue = b[I + D],
                        P = m[D] + 1; P <= m[D] + re - 1; P++)
                            b[F + g[P]] = M;
                        var le = D;
                        for (V = b[k + D]; V !== -1; ) {
                            var he = b[x + V] === re && b[I + V] === ue;
                            for (P = m[V] + 1; he && P <= m[V] + re - 1; P++)
                                b[F + g[P]] !== M && (he = 0);
                            he ? (m[V] = uo(D),
                            b[E + D] += b[E + V],
                            b[E + V] = 0,
                            b[I + V] = -1,
                            V = b[k + V],
                            b[k + le] = V) : (le = V,
                            V = b[k + V])
                        }
                    }
            for (P = $,
            ce = $; ce < K; ce++)
                D = g[ce],
                !((se = -b[E + D]) <= 0) && (b[E + D] = se,
                be = b[T + D] + z - se,
                be = Math.min(be, p - N - se),
                b[A + be] !== -1 && (O[b[A + be]] = D),
                b[k + D] = b[A + be],
                O[D] = -1,
                b[A + be] = D,
                B = Math.min(B, be),
                b[T + D] = be,
                g[P++] = D);
            b[E + J] = Q,
            (b[x + J] = P - $) === 0 && (m[J] = -1,
            b[F + J] = 0),
            H !== 0 && (w = P)
        }
        for (D = 0; D < p; D++)
            m[D] = uo(m[D]);
        for (V = 0; V <= p; V++)
            b[A + V] = -1;
        for (V = p; V >= 0; V--)
            b[E + V] > 0 || (b[k + V] = b[A + m[V]],
            b[A + m[V]] = V);
        for (Z = p; Z >= 0; Z--)
            b[E + Z] <= 0 || m[Z] !== -1 && (b[k + Z] = b[A + m[Z]],
            b[A + m[Z]] = Z);
        for (J = 0,
        D = 0; D <= p; D++)
            m[D] === -1 && (J = fk(D, J, b, A, k, C, F));
        return C.splice(C.length - 1, 1),
        C
    }
    ;
    function n(u, c, d, v, h) {
        var p = a(c);
        if (u === 1 && v === d)
            return t(c, p);
        if (u === 2) {
            for (var f = p._index, _ = p._ptr, y = 0, g = 0; g < d; g++) {
                var m = _[g];
                if (_[g] = y,
                !(_[g + 1] - m > h))
                    for (var w = _[g + 1]; m < w; m++)
                        f[y++] = f[m]
            }
            return _[d] = y,
            c = a(p),
            r(p, c)
        }
        return r(p, c)
    }
    function i(u, c, d, v, h, p, f, _, y, g, m, w) {
        for (var C = 0; C < u; C++)
            d[v + C] = c[C + 1] - c[C];
        d[v + u] = 0;
        for (var b = 0; b <= u; b++)
            d[h + b] = -1,
            p[b] = -1,
            d[f + b] = -1,
            d[_ + b] = -1,
            d[y + b] = 1,
            d[g + b] = 1,
            d[m + b] = 0,
            d[w + b] = d[v + b];
        var x = s(0, 0, d, g, u);
        return d[m + u] = -2,
        c[u] = -1,
        d[g + u] = 0,
        x
    }
    function o(u, c, d, v, h, p, f, _, y, g, m) {
        for (var w = 0, C = 0; C < u; C++) {
            var b = d[v + C];
            if (b === 0)
                d[h + C] = -2,
                w++,
                c[C] = -1,
                d[p + C] = 0;
            else if (b > f)
                d[_ + C] = 0,
                d[h + C] = -1,
                w++,
                c[C] = uo(u),
                d[_ + u]++;
            else {
                var x = d[y + b];
                x !== -1 && (g[x] = C),
                d[m + C] = d[y + b],
                d[y + b] = C
            }
        }
        return w
    }
    function s(u, c, d, v, h) {
        if (u < 2 || u + c < 0) {
            for (var p = 0; p < h; p++)
                d[v + p] !== 0 && (d[v + p] = 1);
            u = 2
        }
        return u
    }
    function l(u, c) {
        return u !== c
    }
}
);
function SY(e, t, r, a, n, i, o) {
    var s, l, u = 0, c;
    if (e <= t || r[a + t] <= r[n + e])
        return -1;
    r[n + e] = r[a + t];
    var d = r[i + e];
    if (r[i + e] = t,
    d === -1)
        u = 1,
        c = e;
    else {
        for (u = 2,
        c = d; c !== r[o + c]; c = r[o + c])
            ;
        for (s = d; s !== c; s = l)
            l = r[o + s],
            r[o + s] = c
    }
    return {
        jleaf: u,
        q: c
    }
}
var xY = "csCounts"
  , AY = ["transpose"]
  , EY = j(xY, AY, e => {
    var {transpose: t} = e;
    return function(r, a, n, i) {
        if (!r || !a || !n)
            return null;
        var o = r._size, s = o[0], l = o[1], u, c, d, v, h, p, f, _ = 4 * l + (i ? l + s + 1 : 0), y = [], g = 0, m = l, w = 2 * l, C = 3 * l, b = 4 * l, x = 5 * l + 1;
        for (d = 0; d < _; d++)
            y[d] = -1;
        var E = []
          , k = t(r)
          , A = k._index
          , I = k._ptr;
        for (d = 0; d < l; d++)
            for (c = n[d],
            E[c] = y[C + c] === -1 ? 1 : 0; c !== -1 && y[C + c] === -1; c = a[c])
                y[C + c] = d;
        if (i) {
            for (d = 0; d < l; d++)
                y[n[d]] = d;
            for (u = 0; u < s; u++) {
                for (d = l,
                p = I[u],
                f = I[u + 1],
                h = p; h < f; h++)
                    d = Math.min(d, y[A[h]]);
                y[x + u] = y[b + d],
                y[b + d] = u
            }
        }
        for (u = 0; u < l; u++)
            y[g + u] = u;
        for (d = 0; d < l; d++) {
            for (c = n[d],
            a[c] !== -1 && E[a[c]]--,
            v = i ? y[b + d] : c; v !== -1; v = i ? y[x + v] : -1)
                for (h = I[v]; h < I[v + 1]; h++) {
                    u = A[h];
                    var T = SY(u, c, y, C, m, w, g);
                    T.jleaf >= 1 && E[c]++,
                    T.jleaf === 2 && E[T.q]--
                }
            a[c] !== -1 && (y[g + c] = a[c])
        }
        for (c = 0; c < l; c++)
            a[c] !== -1 && (E[a[c]] += E[c]);
        return E
    }
}
)
  , kY = "csSqr"
  , TY = ["add", "multiply", "transpose"]
  , NY = j(kY, TY, e => {
    var {add: t, multiply: r, transpose: a} = e
      , n = CY({
        add: t,
        multiply: r,
        transpose: a
    })
      , i = EY({
        transpose: a
    });
    return function(l, u, c) {
        var d = u._ptr, v = u._size, h = v[1], p, f = {};
        if (f.q = n(l, u),
        l && !f.q)
            return null;
        if (c) {
            var _ = l ? pY(u, null, f.q, 0) : u;
            f.parent = wY(_, 1);
            var y = yY(f.parent, h);
            if (f.cp = i(_, f.parent, y, 1),
            _ && f.parent && f.cp && o(_, f))
                for (f.unz = 0,
                p = 0; p < h; p++)
                    f.unz += f.cp[p]
        } else
            f.unz = 4 * d[h] + h,
            f.lnz = f.unz;
        return f
    }
    ;
    function o(s, l) {
        var u = s._ptr
          , c = s._index
          , d = s._size
          , v = d[0]
          , h = d[1];
        l.pinv = [],
        l.leftmost = [];
        var p = l.parent, f = l.pinv, _ = l.leftmost, y = [], g = 0, m = v, w = v + h, C = v + 2 * h, b, x, E, k, A;
        for (x = 0; x < h; x++)
            y[m + x] = -1,
            y[w + x] = -1,
            y[C + x] = 0;
        for (b = 0; b < v; b++)
            _[b] = -1;
        for (x = h - 1; x >= 0; x--)
            for (k = u[x],
            A = u[x + 1],
            E = k; E < A; E++)
                _[c[E]] = x;
        for (b = v - 1; b >= 0; b--)
            f[b] = -1,
            x = _[b],
            x !== -1 && (y[C + x]++ === 0 && (y[w + x] = b),
            y[g + b] = y[m + x],
            y[m + x] = b);
        for (l.lnz = 0,
        l.m2 = v,
        x = 0; x < h; x++)
            if (b = y[m + x],
            l.lnz++,
            b < 0 && (b = l.m2++),
            f[b] = x,
            !(--C[x] <= 0)) {
                l.lnz += y[C + x];
                var I = p[x];
                I !== -1 && (y[C + I] === 0 && (y[w + I] = y[w + x]),
                y[g + y[w + x]] = y[m + I],
                y[m + I] = y[g + b],
                y[C + I] += y[C + x])
            }
        for (b = 0; b < v; b++)
            f[b] < 0 && (f[b] = x++);
        return !0
    }
}
);
function bw(e, t) {
    return e[t] < 0
}
function pk(e, t) {
    e[t] = uo(e[t])
}
function tS(e) {
    return e < 0 ? uo(e) : e
}
function MY(e, t, r, a, n) {
    var i = t._index, o = t._ptr, s = t._size, l = s[1], u, c, d, v = 0;
    for (a[0] = e; v >= 0; ) {
        e = a[v];
        var h = n ? n[e] : e;
        bw(o, e) || (pk(o, e),
        a[l + v] = h < 0 ? 0 : tS(o[h]));
        var p = 1;
        for (c = a[l + v],
        d = h < 0 ? 0 : tS(o[h + 1]); c < d; c++)
            if (u = i[c],
            !bw(o, u)) {
                a[l + v] = c,
                a[++v] = u,
                p = 0;
                break
            }
        p && (v--,
        a[--r] = e)
    }
    return r
}
function IY(e, t, r, a, n) {
    var i = e._ptr, o = e._size, s = t._index, l = t._ptr, u = o[1], c, d, v, h = u;
    for (d = l[r],
    v = l[r + 1],
    c = d; c < v; c++) {
        var p = s[c];
        bw(i, p) || (h = MY(p, e, h, a, n))
    }
    for (c = h; c < u; c++)
        pk(i, a[c]);
    return h
}
var DY = "csSpsolve"
  , UY = ["divideScalar", "multiply", "subtract"]
  , FY = j(DY, UY, e => {
    var {divideScalar: t, multiply: r, subtract: a} = e;
    return function(i, o, s, l, u, c, d) {
        var v = i._values, h = i._index, p = i._ptr, f = i._size, _ = f[1], y = o._values, g = o._index, m = o._ptr, w, C, b, x, E = IY(i, o, s, l, c);
        for (w = E; w < _; w++)
            u[l[w]] = 0;
        for (C = m[s],
        b = m[s + 1],
        w = C; w < b; w++)
            u[g[w]] = y[w];
        for (var k = E; k < _; k++) {
            var A = l[k]
              , I = c ? c[A] : A;
            if (!(I < 0))
                for (C = p[I],
                b = p[I + 1],
                u[A] = t(u[A], v[d ? C : b - 1]),
                w = d ? C + 1 : C,
                x = d ? b : b - 1; w < x; w++) {
                    var T = h[w];
                    u[T] = a(u[T], r(v[w], u[A]))
                }
        }
        return E
    }
}
)
  , OY = "csLu"
  , PY = ["abs", "divideScalar", "multiply", "subtract", "larger", "largerEq", "SparseMatrix"]
  , BY = j(OY, PY, e => {
    var {abs: t, divideScalar: r, multiply: a, subtract: n, larger: i, largerEq: o, SparseMatrix: s} = e
      , l = FY({
        divideScalar: r,
        multiply: a,
        subtract: n
    });
    return function(c, d, v) {
        if (!c)
            return null;
        var h = c._size, p = h[1], f, _ = 100, y = 100;
        d && (f = d.q,
        _ = d.lnz || _,
        y = d.unz || y);
        var g = [], m = [], w = [], C = new s({
            values: g,
            index: m,
            ptr: w,
            size: [p, p]
        }), b = [], x = [], E = [], k = new s({
            values: b,
            index: x,
            ptr: E,
            size: [p, p]
        }), A = [], I, T, F = [], R = [];
        for (I = 0; I < p; I++)
            F[I] = 0,
            A[I] = -1,
            w[I + 1] = 0;
        _ = 0,
        y = 0;
        for (var O = 0; O < p; O++) {
            w[O] = _,
            E[O] = y;
            var M = f ? f[O] : O
              , N = l(C, c, M, R, F, A, 1)
              , B = -1
              , D = -1;
            for (T = N; T < p; T++)
                if (I = R[T],
                A[I] < 0) {
                    var V = t(F[I]);
                    i(V, D) && (D = V,
                    B = I)
                } else
                    x[y] = A[I],
                    b[y++] = F[I];
            if (B === -1 || D <= 0)
                return null;
            A[M] < 0 && o(t(F[M]), a(D, v)) && (B = M);
            var J = F[B];
            for (x[y] = O,
            b[y++] = J,
            A[B] = O,
            m[_] = B,
            g[_++] = 1,
            T = N; T < p; T++)
                I = R[T],
                A[I] < 0 && (m[_] = I,
                g[_++] = r(F[I], J)),
                F[I] = 0
        }
        for (w[p] = _,
        E[p] = y,
        T = 0; T < _; T++)
            m[T] = A[m[T]];
        return g.splice(_, g.length - _),
        m.splice(_, m.length - _),
        b.splice(y, b.length - y),
        x.splice(y, x.length - y),
        {
            L: C,
            U: k,
            pinv: A
        }
    }
}
)
  , rS = "slu"
  , RY = ["typed", "abs", "add", "multiply", "transpose", "divideScalar", "subtract", "larger", "largerEq", "SparseMatrix"]
  , LY = j(rS, RY, e => {
    var {typed: t, abs: r, add: a, multiply: n, transpose: i, divideScalar: o, subtract: s, larger: l, largerEq: u, SparseMatrix: c} = e
      , d = NY({
        add: a,
        multiply: n,
        transpose: i
    })
      , v = BY({
        abs: r,
        divideScalar: o,
        multiply: n,
        subtract: s,
        larger: l,
        largerEq: u,
        SparseMatrix: c
    });
    return t(rS, {
        "SparseMatrix, number, number": function(p, f, _) {
            if (!Be(f) || f < 0 || f > 3)
                throw new Error("Symbolic Ordering and Analysis order must be an integer number in the interval [0, 3]");
            if (_ < 0 || _ > 1)
                throw new Error("Partial pivoting threshold must be a number from 0 to 1");
            var y = d(f, p, !1)
              , g = v(p, y, _);
            return {
                L: g.L,
                U: g.U,
                p: g.pinv,
                q: y.q,
                toString: function() {
                    return "L: " + this.L.toString() + `
U: ` + this.U.toString() + `
p: ` + this.p.toString() + (this.q ? `
q: ` + this.q.toString() : "") + `
`
                }
            }
        }
    })
}
);
function aS(e, t) {
    var r, a = t.length, n = [];
    if (e)
        for (r = 0; r < a; r++)
            n[e[r]] = t[r];
    else
        for (r = 0; r < a; r++)
            n[r] = t[r];
    return n
}
var nS = "lusolve"
  , qY = ["typed", "matrix", "lup", "slu", "usolve", "lsolve", "DenseMatrix"]
  , VY = j(nS, qY, e => {
    var {typed: t, matrix: r, lup: a, slu: n, usolve: i, lsolve: o, DenseMatrix: s} = e
      , l = nd({
        DenseMatrix: s
    });
    return t(nS, {
        "Array, Array | Matrix": function(v, h) {
            v = r(v);
            var p = a(v)
              , f = c(p.L, p.U, p.p, null, h);
            return f.valueOf()
        },
        "DenseMatrix, Array | Matrix": function(v, h) {
            var p = a(v);
            return c(p.L, p.U, p.p, null, h)
        },
        "SparseMatrix, Array | Matrix": function(v, h) {
            var p = a(v);
            return c(p.L, p.U, p.p, null, h)
        },
        "SparseMatrix, Array | Matrix, number, number": function(v, h, p, f) {
            var _ = n(v, p, f);
            return c(_.L, _.U, _.p, _.q, h)
        },
        "Object, Array | Matrix": function(v, h) {
            return c(v.L, v.U, v.p, v.q, h)
        }
    });
    function u(d) {
        if (je(d))
            return d;
        if (At(d))
            return r(d);
        throw new TypeError("Invalid Matrix LU decomposition")
    }
    function c(d, v, h, p, f) {
        d = u(d),
        v = u(v),
        h && (f = l(d, f, !0),
        f._data = aS(h, f._data));
        var _ = o(d, f)
          , y = i(v, _);
        return p && (y._data = aS(p, y._data)),
        y
    }
}
)
  , iS = "polynomialRoot"
  , $Y = ["typed", "isZero", "equalScalar", "add", "subtract", "multiply", "divide", "sqrt", "unaryMinus", "cbrt", "typeOf", "im", "re"]
  , zY = j(iS, $Y, e => {
    var {typed: t, isZero: r, equalScalar: a, add: n, subtract: i, multiply: o, divide: s, sqrt: l, unaryMinus: u, cbrt: c, typeOf: d, im: v, re: h} = e;
    return t(iS, {
        "number|Complex, ...number|Complex": (p, f) => {
            for (var _ = [p, ...f]; _.length > 0 && r(_[_.length - 1]); )
                _.pop();
            if (_.length < 2)
                throw new RangeError("Polynomial [".concat(p, ", ").concat(f, "] must have a non-zero non-constant coefficient"));
            switch (_.length) {
            case 2:
                return [u(s(_[0], _[1]))];
            case 3:
                {
                    var [y,g,m] = _
                      , w = o(2, m)
                      , C = o(g, g)
                      , b = o(4, m, y);
                    if (a(C, b))
                        return [s(u(g), w)];
                    var x = l(i(C, b));
                    return [s(i(x, g), w), s(i(u(x), g), w)]
                }
            case 4:
                {
                    var [E,k,A,I] = _
                      , T = u(o(3, I))
                      , F = o(A, A)
                      , R = o(3, I, k)
                      , O = n(o(2, A, A, A), o(27, I, I, E))
                      , M = o(9, I, A, k);
                    if (a(F, R) && a(O, M))
                        return [s(A, T)];
                    var N = i(F, R)
                      , B = i(O, M)
                      , D = n(o(18, I, A, k, E), o(A, A, k, k))
                      , V = n(o(4, A, A, A, E), o(4, I, k, k, k), o(27, I, I, E, E));
                    if (a(D, V))
                        return [s(i(o(4, I, A, k), n(o(9, I, I, E), o(A, A, A))), o(I, N)), s(i(o(9, I, E), o(A, k)), o(2, N))];
                    var J;
                    a(F, R) ? J = B : J = s(n(B, l(i(o(B, B), o(4, N, N, N)))), 2);
                    var Y = !0
                      , G = c(J, Y).toArray().map(Z => s(n(A, Z, s(N, Z)), T));
                    return G.map(Z => d(Z) === "Complex" && a(h(Z), h(Z) + v(Z)) ? h(Z) : Z)
                }
            default:
                throw new RangeError("only implemented for cubic or lower-order polynomials, not ".concat(_))
            }
        }
    })
}
)
  , GY = "Help"
  , jY = ["parse"]
  , HY = j(GY, jY, e => {
    var {parse: t} = e;
    function r(a) {
        if (!(this instanceof r))
            throw new SyntaxError("Constructor must be called with the new operator");
        if (!a)
            throw new Error('Argument "doc" missing');
        this.doc = a
    }
    return r.prototype.type = "Help",
    r.prototype.isHelp = !0,
    r.prototype.toString = function() {
        var a = this.doc || {}
          , n = `
`;
        if (a.name && (n += "Name: " + a.name + `

`),
        a.category && (n += "Category: " + a.category + `

`),
        a.description && (n += `Description:
    ` + a.description + `

`),
        a.syntax && (n += `Syntax:
    ` + a.syntax.join(`
    `) + `

`),
        a.examples) {
            n += `Examples:
`;
            for (var i = {}, o = 0; o < a.examples.length; o++) {
                var s = a.examples[o];
                n += "    " + s + `
`;
                var l = void 0;
                try {
                    l = t(s).compile().evaluate(i)
                } catch (u) {
                    l = u
                }
                l !== void 0 && !xE(l) && (n += "        " + st(l, {
                    precision: 14
                }) + `
`)
            }
            n += `
`
        }
        return a.mayThrow && a.mayThrow.length && (n += "Throws: " + a.mayThrow.join(", ") + `

`),
        a.seealso && a.seealso.length && (n += "See also: " + a.seealso.join(", ") + `
`),
        n
    }
    ,
    r.prototype.toJSON = function() {
        var a = Qe(this.doc);
        return a.mathjs = "Help",
        a
    }
    ,
    r.fromJSON = function(a) {
        var n = {};
        return Object.keys(a).filter(i => i !== "mathjs").forEach(i => {
            n[i] = a[i]
        }
        ),
        new r(n)
    }
    ,
    r.prototype.valueOf = r.prototype.toString,
    r
}
, {
    isClass: !0
})
  , WY = "Chain"
  , YY = ["?on", "math", "typed"]
  , JY = j(WY, YY, e => {
    var {on: t, math: r, typed: a} = e;
    function n(u) {
        if (!(this instanceof n))
            throw new SyntaxError("Constructor must be called with the new operator");
        AE(u) ? this.value = u.value : this.value = u
    }
    n.prototype.type = "Chain",
    n.prototype.isChain = !0,
    n.prototype.done = function() {
        return this.value
    }
    ,
    n.prototype.valueOf = function() {
        return this.value
    }
    ,
    n.prototype.toString = function() {
        return st(this.value)
    }
    ,
    n.prototype.toJSON = function() {
        return {
            mathjs: "Chain",
            value: this.value
        }
    }
    ,
    n.fromJSON = function(u) {
        return new n(u.value)
    }
    ;
    function i(u, c) {
        typeof c == "function" && (n.prototype[u] = s(c))
    }
    function o(u, c) {
        HP(n.prototype, u, function() {
            var v = c();
            if (typeof v == "function")
                return s(v)
        })
    }
    function s(u) {
        return function() {
            if (arguments.length === 0)
                return new n(u(this.value));
            for (var c = [this.value], d = 0; d < arguments.length; d++)
                c[d + 1] = arguments[d];
            if (a.isTypedFunction(u)) {
                var v = a.resolve(u, c);
                if (v.params.length === 1)
                    throw new Error("chain function " + u.name + " cannot match rest parameter between chain value and additional arguments.");
                return new n(v.implementation.apply(u, c))
            }
            return new n(u.apply(u, c))
        }
    }
    n.createProxy = function(u, c) {
        if (typeof u == "string")
            i(u, c);
        else {
            var d = function(p) {
                Ue(u, p) && l[p] === void 0 && o(p, () => u[p])
            };
            for (var v in u)
                d(v)
        }
    }
    ;
    var l = {
        expression: !0,
        docs: !0,
        type: !0,
        classes: !0,
        json: !0,
        error: !0,
        isChain: !0
    };
    return n.createProxy(r),
    t && t("import", function(u, c, d) {
        d || o(u, c)
    }),
    n
}
, {
    isClass: !0
})
  , oS = {
    name: "e",
    category: "Constants",
    syntax: ["e"],
    description: "Euler's number, the base of the natural logarithm. Approximately equal to 2.71828",
    examples: ["e", "e ^ 2", "exp(2)", "log(e)"],
    seealso: ["exp"]
}
  , KY = {
    name: "false",
    category: "Constants",
    syntax: ["false"],
    description: "Boolean value false",
    examples: ["false"],
    seealso: ["true"]
}
  , QY = {
    name: "i",
    category: "Constants",
    syntax: ["i"],
    description: "Imaginary unit, defined as i*i=-1. A complex number is described as a + b*i, where a is the real part, and b is the imaginary part.",
    examples: ["i", "i * i", "sqrt(-1)"],
    seealso: []
}
  , ZY = {
    name: "Infinity",
    category: "Constants",
    syntax: ["Infinity"],
    description: "Infinity, a number which is larger than the maximum number that can be handled by a floating point number.",
    examples: ["Infinity", "1 / 0"],
    seealso: []
}
  , XY = {
    name: "LN10",
    category: "Constants",
    syntax: ["LN10"],
    description: "Returns the natural logarithm of 10, approximately equal to 2.302",
    examples: ["LN10", "log(10)"],
    seealso: []
}
  , eJ = {
    name: "LN2",
    category: "Constants",
    syntax: ["LN2"],
    description: "Returns the natural logarithm of 2, approximately equal to 0.693",
    examples: ["LN2", "log(2)"],
    seealso: []
}
  , tJ = {
    name: "LOG10E",
    category: "Constants",
    syntax: ["LOG10E"],
    description: "Returns the base-10 logarithm of E, approximately equal to 0.434",
    examples: ["LOG10E", "log(e, 10)"],
    seealso: []
}
  , rJ = {
    name: "LOG2E",
    category: "Constants",
    syntax: ["LOG2E"],
    description: "Returns the base-2 logarithm of E, approximately equal to 1.442",
    examples: ["LOG2E", "log(e, 2)"],
    seealso: []
}
  , aJ = {
    name: "NaN",
    category: "Constants",
    syntax: ["NaN"],
    description: "Not a number",
    examples: ["NaN", "0 / 0"],
    seealso: []
}
  , nJ = {
    name: "null",
    category: "Constants",
    syntax: ["null"],
    description: "Value null",
    examples: ["null"],
    seealso: ["true", "false"]
}
  , iJ = {
    name: "phi",
    category: "Constants",
    syntax: ["phi"],
    description: "Phi is the golden ratio. Two quantities are in the golden ratio if their ratio is the same as the ratio of their sum to the larger of the two quantities. Phi is defined as `(1 + sqrt(5)) / 2` and is approximately 1.618034...",
    examples: ["phi"],
    seealso: []
}
  , sS = {
    name: "pi",
    category: "Constants",
    syntax: ["pi"],
    description: "The number pi is a mathematical constant that is the ratio of a circle's circumference to its diameter, and is approximately equal to 3.14159",
    examples: ["pi", "sin(pi/2)"],
    seealso: ["tau"]
}
  , oJ = {
    name: "SQRT1_2",
    category: "Constants",
    syntax: ["SQRT1_2"],
    description: "Returns the square root of 1/2, approximately equal to 0.707",
    examples: ["SQRT1_2", "sqrt(1/2)"],
    seealso: []
}
  , sJ = {
    name: "SQRT2",
    category: "Constants",
    syntax: ["SQRT2"],
    description: "Returns the square root of 2, approximately equal to 1.414",
    examples: ["SQRT2", "sqrt(2)"],
    seealso: []
}
  , lJ = {
    name: "tau",
    category: "Constants",
    syntax: ["tau"],
    description: "Tau is the ratio constant of a circle's circumference to radius, equal to 2 * pi, approximately 6.2832.",
    examples: ["tau", "2 * pi"],
    seealso: ["pi"]
}
  , uJ = {
    name: "true",
    category: "Constants",
    syntax: ["true"],
    description: "Boolean value true",
    examples: ["true"],
    seealso: ["false"]
}
  , cJ = {
    name: "version",
    category: "Constants",
    syntax: ["version"],
    description: "A string with the version number of math.js",
    examples: ["version"],
    seealso: []
}
  , dJ = {
    name: "bignumber",
    category: "Construction",
    syntax: ["bignumber(x)"],
    description: "Create a big number from a number or string.",
    examples: ["0.1 + 0.2", "bignumber(0.1) + bignumber(0.2)", 'bignumber("7.2")', 'bignumber("7.2e500")', "bignumber([0.1, 0.2, 0.3])"],
    seealso: ["boolean", "complex", "fraction", "index", "matrix", "string", "unit"]
}
  , vJ = {
    name: "boolean",
    category: "Construction",
    syntax: ["x", "boolean(x)"],
    description: "Convert a string or number into a boolean.",
    examples: ["boolean(0)", "boolean(1)", "boolean(3)", 'boolean("true")', 'boolean("false")', "boolean([1, 0, 1, 1])"],
    seealso: ["bignumber", "complex", "index", "matrix", "number", "string", "unit"]
}
  , hJ = {
    name: "complex",
    category: "Construction",
    syntax: ["complex()", "complex(re, im)", "complex(string)"],
    description: "Create a complex number.",
    examples: ["complex()", "complex(2, 3)", 'complex("7 - 2i")'],
    seealso: ["bignumber", "boolean", "index", "matrix", "number", "string", "unit"]
}
  , mJ = {
    name: "createUnit",
    category: "Construction",
    syntax: ["createUnit(definitions)", "createUnit(name, definition)"],
    description: "Create a user-defined unit and register it with the Unit type.",
    examples: ['createUnit("foo")', 'createUnit("knot", {definition: "0.514444444 m/s", aliases: ["knots", "kt", "kts"]})', 'createUnit("mph", "1 mile/hour")'],
    seealso: ["unit", "splitUnit"]
}
  , fJ = {
    name: "fraction",
    category: "Construction",
    syntax: ["fraction(num)", "fraction(matrix)", "fraction(num,den)", "fraction({n: num, d: den})"],
    description: "Create a fraction from a number or from integer numerator and denominator.",
    examples: ["fraction(0.125)", "fraction(1, 3) + fraction(2, 5)", "fraction({n: 333, d: 53})", "fraction([sqrt(9), sqrt(10), sqrt(11)])"],
    seealso: ["bignumber", "boolean", "complex", "index", "matrix", "string", "unit"]
}
  , pJ = {
    name: "index",
    category: "Construction",
    syntax: ["[start]", "[start:end]", "[start:step:end]", "[start1, start 2, ...]", "[start1:end1, start2:end2, ...]", "[start1:step1:end1, start2:step2:end2, ...]"],
    description: "Create an index to get or replace a subset of a matrix",
    examples: ["A = [1, 2, 3; 4, 5, 6]", "A[1, :]", "A[1, 2] = 50", "A[1:2, 1:2] = 1", "B = [1, 2, 3]", "B[B>1 and B<3]"],
    seealso: ["bignumber", "boolean", "complex", "matrix,", "number", "range", "string", "unit"]
}
  , yJ = {
    name: "matrix",
    category: "Construction",
    syntax: ["[]", "[a1, b1, ...; a2, b2, ...]", "matrix()", 'matrix("dense")', "matrix([...])"],
    description: "Create a matrix.",
    examples: ["[]", "[1, 2, 3]", "[1, 2, 3; 4, 5, 6]", "matrix()", "matrix([3, 4])", 'matrix([3, 4; 5, 6], "sparse")', 'matrix([3, 4; 5, 6], "sparse", "number")'],
    seealso: ["bignumber", "boolean", "complex", "index", "number", "string", "unit", "sparse"]
}
  , wJ = {
    name: "number",
    category: "Construction",
    syntax: ["x", "number(x)", "number(unit, valuelessUnit)"],
    description: "Create a number or convert a string or boolean into a number.",
    examples: ["2", "2e3", "4.05", "number(2)", 'number("7.2")', "number(true)", "number([true, false, true, true])", 'number(unit("52cm"), "m")'],
    seealso: ["bignumber", "boolean", "complex", "fraction", "index", "matrix", "string", "unit"]
}
  , gJ = {
    name: "sparse",
    category: "Construction",
    syntax: ["sparse()", "sparse([a1, b1, ...; a1, b2, ...])", 'sparse([a1, b1, ...; a1, b2, ...], "number")'],
    description: "Create a sparse matrix.",
    examples: ["sparse()", "sparse([3, 4; 5, 6])", 'sparse([3, 0; 5, 0], "number")'],
    seealso: ["bignumber", "boolean", "complex", "index", "number", "string", "unit", "matrix"]
}
  , _J = {
    name: "splitUnit",
    category: "Construction",
    syntax: ["splitUnit(unit: Unit, parts: Unit[])"],
    description: "Split a unit in an array of units whose sum is equal to the original unit.",
    examples: ['splitUnit(1 m, ["feet", "inch"])'],
    seealso: ["unit", "createUnit"]
}
  , bJ = {
    name: "string",
    category: "Construction",
    syntax: ['"text"', "string(x)"],
    description: "Create a string or convert a value to a string",
    examples: ['"Hello World!"', "string(4.2)", "string(3 + 2i)"],
    seealso: ["bignumber", "boolean", "complex", "index", "matrix", "number", "unit"]
}
  , CJ = {
    name: "unit",
    category: "Construction",
    syntax: ["value unit", "unit(value, unit)", "unit(string)"],
    description: "Create a unit.",
    examples: ["5.5 mm", "3 inch", 'unit(7.1, "kilogram")', 'unit("23 deg")'],
    seealso: ["bignumber", "boolean", "complex", "index", "matrix", "number", "string"]
}
  , SJ = {
    name: "config",
    category: "Core",
    syntax: ["config()", "config(options)"],
    description: "Get configuration or change configuration.",
    examples: ["config()", "1/3 + 1/4", 'config({number: "Fraction"})', "1/3 + 1/4"],
    seealso: []
}
  , xJ = {
    name: "import",
    category: "Core",
    syntax: ["import(functions)", "import(functions, options)"],
    description: "Import functions or constants from an object.",
    examples: ["import({myFn: f(x)=x^2, myConstant: 32 })", "myFn(2)", "myConstant"],
    seealso: []
}
  , AJ = {
    name: "typed",
    category: "Core",
    syntax: ["typed(signatures)", "typed(name, signatures)"],
    description: "Create a typed function.",
    examples: ['double = typed({ "number": f(x)=x+x, "string": f(x)=concat(x,x) })', "double(2)", 'double("hello")'],
    seealso: []
}
  , EJ = {
    name: "derivative",
    category: "Algebra",
    syntax: ["derivative(expr, variable)", "derivative(expr, variable, {simplify: boolean})"],
    description: "Takes the derivative of an expression expressed in parser Nodes. The derivative will be taken over the supplied variable in the second parameter. If there are multiple variables in the expression, it will return a partial derivative.",
    examples: ['derivative("2x^3", "x")', 'derivative("2x^3", "x", {simplify: false})', 'derivative("2x^2 + 3x + 4", "x")', 'derivative("sin(2x)", "x")', 'f = parse("x^2 + x")', 'x = parse("x")', "df = derivative(f, x)", "df.evaluate({x: 3})"],
    seealso: ["simplify", "parse", "evaluate"]
}
  , kJ = {
    name: "leafCount",
    category: "Algebra",
    syntax: ["leafCount(expr)"],
    description: "Computes the number of leaves in the parse tree of the given expression",
    examples: ['leafCount("e^(i*pi)-1")', 'leafCount(parse("{a: 22/7, b: 10^(1/2)}"))'],
    seealso: ["simplify"]
}
  , TJ = {
    name: "lsolve",
    category: "Algebra",
    syntax: ["x=lsolve(L, b)"],
    description: "Finds one solution of the linear system L * x = b where L is an [n x n] lower triangular matrix and b is a [n] column vector.",
    examples: ["a = [-2, 3; 2, 1]", "b = [11, 9]", "x = lsolve(a, b)"],
    seealso: ["lsolveAll", "lup", "lusolve", "usolve", "matrix", "sparse"]
}
  , NJ = {
    name: "lsolveAll",
    category: "Algebra",
    syntax: ["x=lsolveAll(L, b)"],
    description: "Finds all solutions of the linear system L * x = b where L is an [n x n] lower triangular matrix and b is a [n] column vector.",
    examples: ["a = [-2, 3; 2, 1]", "b = [11, 9]", "x = lsolve(a, b)"],
    seealso: ["lsolve", "lup", "lusolve", "usolve", "matrix", "sparse"]
}
  , MJ = {
    name: "lup",
    category: "Algebra",
    syntax: ["lup(m)"],
    description: "Calculate the Matrix LU decomposition with partial pivoting. Matrix A is decomposed in three matrices (L, U, P) where P * A = L * U",
    examples: ["lup([[2, 1], [1, 4]])", "lup(matrix([[2, 1], [1, 4]]))", "lup(sparse([[2, 1], [1, 4]]))"],
    seealso: ["lusolve", "lsolve", "usolve", "matrix", "sparse", "slu", "qr"]
}
  , IJ = {
    name: "lusolve",
    category: "Algebra",
    syntax: ["x=lusolve(A, b)", "x=lusolve(lu, b)"],
    description: "Solves the linear system A * x = b where A is an [n x n] matrix and b is a [n] column vector.",
    examples: ["a = [-2, 3; 2, 1]", "b = [11, 9]", "x = lusolve(a, b)"],
    seealso: ["lup", "slu", "lsolve", "usolve", "matrix", "sparse"]
}
  , DJ = {
    name: "polynomialRoot",
    category: "Algebra",
    syntax: ["x=polynomialRoot(-6, 3)", "x=polynomialRoot(4, -4, 1)", "x=polynomialRoot(-8, 12, -6, 1)"],
    description: "Finds the roots of a univariate polynomial given by its coefficients starting from constant, linear, and so on, increasing in degree.",
    examples: ["a = polynomialRoot(-6, 11, -6, 1)"],
    seealso: ["cbrt", "sqrt"]
}
  , UJ = {
    name: "qr",
    category: "Algebra",
    syntax: ["qr(A)"],
    description: "Calculates the Matrix QR decomposition. Matrix `A` is decomposed in two matrices (`Q`, `R`) where `Q` is an orthogonal matrix and `R` is an upper triangular matrix.",
    examples: ["qr([[1, -1,  4], [1,  4, -2], [1,  4,  2], [1,  -1, 0]])"],
    seealso: ["lup", "slu", "matrix"]
}
  , FJ = {
    name: "rationalize",
    category: "Algebra",
    syntax: ["rationalize(expr)", "rationalize(expr, scope)", "rationalize(expr, scope, detailed)"],
    description: "Transform a rationalizable expression in a rational fraction. If rational fraction is one variable polynomial then converts the numerator and denominator in canonical form, with decreasing exponents, returning the coefficients of numerator.",
    examples: ['rationalize("2x/y - y/(x+1)")', 'rationalize("2x/y - y/(x+1)", true)'],
    seealso: ["simplify"]
}
  , OJ = {
    name: "resolve",
    category: "Algebra",
    syntax: ["resolve(node, scope)"],
    description: "Recursively substitute variables in an expression tree.",
    examples: ['resolve(parse("1 + x"), { x: 7 })', 'resolve(parse("size(text)"), { text: "Hello World" })', 'resolve(parse("x + y"), { x: parse("3z") })', 'resolve(parse("3x"), { x: parse("y+z"), z: parse("w^y") })'],
    seealso: ["simplify", "evaluate"],
    mayThrow: ["ReferenceError"]
}
  , PJ = {
    name: "simplify",
    category: "Algebra",
    syntax: ["simplify(expr)", "simplify(expr, rules)"],
    description: "Simplify an expression tree.",
    examples: ['simplify("3 + 2 / 4")', 'simplify("2x + x")', 'f = parse("x * (x + 2 + x)")', "simplified = simplify(f)", "simplified.evaluate({x: 2})"],
    seealso: ["simplifyCore", "derivative", "evaluate", "parse", "rationalize", "resolve"]
}
  , BJ = {
    name: "simplifyConstant",
    category: "Algebra",
    syntax: ["simplifyConstant(expr)", "simplifyConstant(expr, options)"],
    description: "Replace constant subexpressions of node with their values.",
    examples: ['simplifyConstant("(3-3)*x")', 'simplifyConstant(parse("z-cos(tau/8)"))'],
    seealso: ["simplify", "simplifyCore", "evaluate"]
}
  , RJ = {
    name: "simplifyCore",
    category: "Algebra",
    syntax: ["simplifyCore(node)"],
    description: "Perform simple one-pass simplifications on an expression tree.",
    examples: ['simplifyCore(parse("0*x"))', 'simplifyCore(parse("(x+0)*2"))'],
    seealso: ["simplify", "simplifyConstant", "evaluate"]
}
  , LJ = {
    name: "slu",
    category: "Algebra",
    syntax: ["slu(A, order, threshold)"],
    description: "Calculate the Matrix LU decomposition with full pivoting. Matrix A is decomposed in two matrices (L, U) and two permutation vectors (pinv, q) where P * A * Q = L * U",
    examples: ["slu(sparse([4.5, 0, 3.2, 0; 3.1, 2.9, 0, 0.9; 0, 1.7, 3, 0; 3.5, 0.4, 0, 1]), 1, 0.001)"],
    seealso: ["lusolve", "lsolve", "usolve", "matrix", "sparse", "lup", "qr"]
}
  , qJ = {
    name: "symbolicEqual",
    category: "Algebra",
    syntax: ["symbolicEqual(expr1, expr2)", "symbolicEqual(expr1, expr2, options)"],
    description: "Returns true if the difference of the expressions simplifies to 0",
    examples: ['symbolicEqual("x*y","y*x")', 'symbolicEqual("abs(x^2)", "x^2")', 'symbolicEqual("abs(x)", "x", {context: {abs: {trivial: true}}})'],
    seealso: ["simplify", "evaluate"]
}
  , VJ = {
    name: "usolve",
    category: "Algebra",
    syntax: ["x=usolve(U, b)"],
    description: "Finds one solution of the linear system U * x = b where U is an [n x n] upper triangular matrix and b is a [n] column vector.",
    examples: ["x=usolve(sparse([1, 1, 1, 1; 0, 1, 1, 1; 0, 0, 1, 1; 0, 0, 0, 1]), [1; 2; 3; 4])"],
    seealso: ["usolveAll", "lup", "lusolve", "lsolve", "matrix", "sparse"]
}
  , $J = {
    name: "usolveAll",
    category: "Algebra",
    syntax: ["x=usolve(U, b)"],
    description: "Finds all solutions of the linear system U * x = b where U is an [n x n] upper triangular matrix and b is a [n] column vector.",
    examples: ["x=usolve(sparse([1, 1, 1, 1; 0, 1, 1, 1; 0, 0, 1, 1; 0, 0, 0, 1]), [1; 2; 3; 4])"],
    seealso: ["usolve", "lup", "lusolve", "lsolve", "matrix", "sparse"]
}
  , zJ = {
    name: "abs",
    category: "Arithmetic",
    syntax: ["abs(x)"],
    description: "Compute the absolute value.",
    examples: ["abs(3.5)", "abs(-4.2)"],
    seealso: ["sign"]
}
  , GJ = {
    name: "add",
    category: "Operators",
    syntax: ["x + y", "add(x, y)"],
    description: "Add two values.",
    examples: ["a = 2.1 + 3.6", "a - 3.6", "3 + 2i", "3 cm + 2 inch", '"2.3" + "4"'],
    seealso: ["subtract"]
}
  , jJ = {
    name: "cbrt",
    category: "Arithmetic",
    syntax: ["cbrt(x)", "cbrt(x, allRoots)"],
    description: "Compute the cubic root value. If x = y * y * y, then y is the cubic root of x. When `x` is a number or complex number, an optional second argument `allRoots` can be provided to return all three cubic roots. If not provided, the principal root is returned",
    examples: ["cbrt(64)", "cube(4)", "cbrt(-8)", "cbrt(2 + 3i)", "cbrt(8i)", "cbrt(8i, true)", "cbrt(27 m^3)"],
    seealso: ["square", "sqrt", "cube", "multiply"]
}
  , HJ = {
    name: "ceil",
    category: "Arithmetic",
    syntax: ["ceil(x)"],
    description: "Round a value towards plus infinity. If x is complex, both real and imaginary part are rounded towards plus infinity.",
    examples: ["ceil(3.2)", "ceil(3.8)", "ceil(-4.2)"],
    seealso: ["floor", "fix", "round"]
}
  , WJ = {
    name: "cube",
    category: "Arithmetic",
    syntax: ["cube(x)"],
    description: "Compute the cube of a value. The cube of x is x * x * x.",
    examples: ["cube(2)", "2^3", "2 * 2 * 2"],
    seealso: ["multiply", "square", "pow"]
}
  , YJ = {
    name: "divide",
    category: "Operators",
    syntax: ["x / y", "divide(x, y)"],
    description: "Divide two values.",
    examples: ["a = 2 / 3", "a * 3", "4.5 / 2", "3 + 4 / 2", "(3 + 4) / 2", "18 km / 4.5"],
    seealso: ["multiply"]
}
  , JJ = {
    name: "dotDivide",
    category: "Operators",
    syntax: ["x ./ y", "dotDivide(x, y)"],
    description: "Divide two values element wise.",
    examples: ["a = [1, 2, 3; 4, 5, 6]", "b = [2, 1, 1; 3, 2, 5]", "a ./ b"],
    seealso: ["multiply", "dotMultiply", "divide"]
}
  , KJ = {
    name: "dotMultiply",
    category: "Operators",
    syntax: ["x .* y", "dotMultiply(x, y)"],
    description: "Multiply two values element wise.",
    examples: ["a = [1, 2, 3; 4, 5, 6]", "b = [2, 1, 1; 3, 2, 5]", "a .* b"],
    seealso: ["multiply", "divide", "dotDivide"]
}
  , QJ = {
    name: "dotPow",
    category: "Operators",
    syntax: ["x .^ y", "dotPow(x, y)"],
    description: "Calculates the power of x to y element wise.",
    examples: ["a = [1, 2, 3; 4, 5, 6]", "a .^ 2"],
    seealso: ["pow"]
}
  , ZJ = {
    name: "exp",
    category: "Arithmetic",
    syntax: ["exp(x)"],
    description: "Calculate the exponent of a value.",
    examples: ["exp(1.3)", "e ^ 1.3", "log(exp(1.3))", "x = 2.4", "(exp(i*x) == cos(x) + i*sin(x))   # Euler's formula"],
    seealso: ["expm", "expm1", "pow", "log"]
}
  , XJ = {
    name: "expm",
    category: "Arithmetic",
    syntax: ["exp(x)"],
    description: "Compute the matrix exponential, expm(A) = e^A. The matrix must be square. Not to be confused with exp(a), which performs element-wise exponentiation.",
    examples: ["expm([[0,2],[0,0]])"],
    seealso: ["exp"]
}
  , eK = {
    name: "expm1",
    category: "Arithmetic",
    syntax: ["expm1(x)"],
    description: "Calculate the value of subtracting 1 from the exponential value.",
    examples: ["expm1(2)", "pow(e, 2) - 1", "log(expm1(2) + 1)"],
    seealso: ["exp", "pow", "log"]
}
  , tK = {
    name: "fix",
    category: "Arithmetic",
    syntax: ["fix(x)"],
    description: "Round a value towards zero. If x is complex, both real and imaginary part are rounded towards zero.",
    examples: ["fix(3.2)", "fix(3.8)", "fix(-4.2)", "fix(-4.8)"],
    seealso: ["ceil", "floor", "round"]
}
  , rK = {
    name: "floor",
    category: "Arithmetic",
    syntax: ["floor(x)"],
    description: "Round a value towards minus infinity.If x is complex, both real and imaginary part are rounded towards minus infinity.",
    examples: ["floor(3.2)", "floor(3.8)", "floor(-4.2)"],
    seealso: ["ceil", "fix", "round"]
}
  , aK = {
    name: "gcd",
    category: "Arithmetic",
    syntax: ["gcd(a, b)", "gcd(a, b, c, ...)"],
    description: "Compute the greatest common divisor.",
    examples: ["gcd(8, 12)", "gcd(-4, 6)", "gcd(25, 15, -10)"],
    seealso: ["lcm", "xgcd"]
}
  , nK = {
    name: "hypot",
    category: "Arithmetic",
    syntax: ["hypot(a, b, c, ...)", "hypot([a, b, c, ...])"],
    description: "Calculate the hypotenusa of a list with values. ",
    examples: ["hypot(3, 4)", "sqrt(3^2 + 4^2)", "hypot(-2)", "hypot([3, 4, 5])"],
    seealso: ["abs", "norm"]
}
  , iK = {
    name: "invmod",
    category: "Arithmetic",
    syntax: ["invmod(a, b)"],
    description: "Calculate the (modular) multiplicative inverse of a modulo b. Solution to the equation ax ≣ 1 (mod b)",
    examples: ["invmod(8, 12)", "invmod(7, 13)", "invmod(15151, 15122)"],
    seealso: ["gcd", "xgcd"]
}
  , oK = {
    name: "lcm",
    category: "Arithmetic",
    syntax: ["lcm(x, y)"],
    description: "Compute the least common multiple.",
    examples: ["lcm(4, 6)", "lcm(6, 21)", "lcm(6, 21, 5)"],
    seealso: ["gcd"]
}
  , sK = {
    name: "log",
    category: "Arithmetic",
    syntax: ["log(x)", "log(x, base)"],
    description: "Compute the logarithm of a value. If no base is provided, the natural logarithm of x is calculated. If base if provided, the logarithm is calculated for the specified base. log(x, base) is defined as log(x) / log(base).",
    examples: ["log(3.5)", "a = log(2.4)", "exp(a)", "10 ^ 4", "log(10000, 10)", "log(10000) / log(10)", "b = log(1024, 2)", "2 ^ b"],
    seealso: ["exp", "log1p", "log2", "log10"]
}
  , lK = {
    name: "log10",
    category: "Arithmetic",
    syntax: ["log10(x)"],
    description: "Compute the 10-base logarithm of a value.",
    examples: ["log10(0.00001)", "log10(10000)", "10 ^ 4", "log(10000) / log(10)", "log(10000, 10)"],
    seealso: ["exp", "log"]
}
  , uK = {
    name: "log1p",
    category: "Arithmetic",
    syntax: ["log1p(x)", "log1p(x, base)"],
    description: "Calculate the logarithm of a `value+1`",
    examples: ["log1p(2.5)", "exp(log1p(1.4))", "pow(10, 4)", "log1p(9999, 10)", "log1p(9999) / log(10)"],
    seealso: ["exp", "log", "log2", "log10"]
}
  , cK = {
    name: "log2",
    category: "Arithmetic",
    syntax: ["log2(x)"],
    description: "Calculate the 2-base of a value. This is the same as calculating `log(x, 2)`.",
    examples: ["log2(0.03125)", "log2(16)", "log2(16) / log2(2)", "pow(2, 4)"],
    seealso: ["exp", "log1p", "log", "log10"]
}
  , dK = {
    name: "mod",
    category: "Operators",
    syntax: ["x % y", "x mod y", "mod(x, y)"],
    description: "Calculates the modulus, the remainder of an integer division.",
    examples: ["7 % 3", "11 % 2", "10 mod 4", "isOdd(x) = x % 2", "isOdd(2)", "isOdd(3)"],
    seealso: ["divide"]
}
  , vK = {
    name: "multiply",
    category: "Operators",
    syntax: ["x * y", "multiply(x, y)"],
    description: "multiply two values.",
    examples: ["a = 2.1 * 3.4", "a / 3.4", "2 * 3 + 4", "2 * (3 + 4)", "3 * 2.1 km"],
    seealso: ["divide"]
}
  , hK = {
    name: "norm",
    category: "Arithmetic",
    syntax: ["norm(x)", "norm(x, p)"],
    description: "Calculate the norm of a number, vector or matrix.",
    examples: ["abs(-3.5)", "norm(-3.5)", "norm(3 - 4i)", "norm([1, 2, -3], Infinity)", "norm([1, 2, -3], -Infinity)", "norm([3, 4], 2)", "norm([[1, 2], [3, 4]], 1)", 'norm([[1, 2], [3, 4]], "inf")', 'norm([[1, 2], [3, 4]], "fro")']
}
  , mK = {
    name: "nthRoot",
    category: "Arithmetic",
    syntax: ["nthRoot(a)", "nthRoot(a, root)"],
    description: 'Calculate the nth root of a value. The principal nth root of a positive real number A, is the positive real solution of the equation "x^root = A".',
    examples: ["4 ^ 3", "nthRoot(64, 3)", "nthRoot(9, 2)", "sqrt(9)"],
    seealso: ["nthRoots", "pow", "sqrt"]
}
  , fK = {
    name: "nthRoots",
    category: "Arithmetic",
    syntax: ["nthRoots(A)", "nthRoots(A, root)"],
    description: 'Calculate the nth roots of a value. An nth root of a positive real number A, is a positive real solution of the equation "x^root = A". This function returns an array of complex values.',
    examples: ["nthRoots(1)", "nthRoots(1, 3)"],
    seealso: ["sqrt", "pow", "nthRoot"]
}
  , pK = {
    name: "pow",
    category: "Operators",
    syntax: ["x ^ y", "pow(x, y)"],
    description: "Calculates the power of x to y, x^y.",
    examples: ["2^3", "2*2*2", "1 + e ^ (pi * i)", "pow([[1, 2], [4, 3]], 2)", "pow([[1, 2], [4, 3]], -1)"],
    seealso: ["multiply", "nthRoot", "nthRoots", "sqrt"]
}
  , yK = {
    name: "round",
    category: "Arithmetic",
    syntax: ["round(x)", "round(x, n)"],
    description: "round a value towards the nearest integer.If x is complex, both real and imaginary part are rounded towards the nearest integer. When n is specified, the value is rounded to n decimals.",
    examples: ["round(3.2)", "round(3.8)", "round(-4.2)", "round(-4.8)", "round(pi, 3)", "round(123.45678, 2)"],
    seealso: ["ceil", "floor", "fix"]
}
  , wK = {
    name: "sign",
    category: "Arithmetic",
    syntax: ["sign(x)"],
    description: "Compute the sign of a value. The sign of a value x is 1 when x>1, -1 when x<0, and 0 when x=0.",
    examples: ["sign(3.5)", "sign(-4.2)", "sign(0)"],
    seealso: ["abs"]
}
  , gK = {
    name: "sqrt",
    category: "Arithmetic",
    syntax: ["sqrt(x)"],
    description: "Compute the square root value. If x = y * y, then y is the square root of x.",
    examples: ["sqrt(25)", "5 * 5", "sqrt(-1)"],
    seealso: ["square", "sqrtm", "multiply", "nthRoot", "nthRoots", "pow"]
}
  , _K = {
    name: "sqrtm",
    category: "Arithmetic",
    syntax: ["sqrtm(x)"],
    description: "Calculate the principal square root of a square matrix. The principal square root matrix `X` of another matrix `A` is such that `X * X = A`.",
    examples: ["sqrtm([[33, 24], [48, 57]])"],
    seealso: ["sqrt", "abs", "square", "multiply"]
}
  , bK = {
    name: "sylvester",
    category: "Algebra",
    syntax: ["sylvester(A,B,C)"],
    description: "Solves the real-valued Sylvester equation AX+XB=C for X",
    examples: ["sylvester([[-1, -2], [1, 1]], [[-2, 1], [-1, 2]], [[-3, 2], [3, 0]])", "A = [[-1, -2], [1, 1]]; B = [[2, -1], [1, -2]]; C = [[-3, 2], [3, 0]]", "sylvester(A, B, C)"],
    seealso: ["schur", "lyap"]
}
  , CK = {
    name: "schur",
    category: "Algebra",
    syntax: ["schur(A)"],
    description: "Performs a real Schur decomposition of the real matrix A = UTU'",
    examples: ["schur([[1, 0], [-4, 3]])", "A = [[1, 0], [-4, 3]]", "schur(A)"],
    seealso: ["lyap", "sylvester"]
}
  , SK = {
    name: "lyap",
    category: "Algebra",
    syntax: ["lyap(A,Q)"],
    description: "Solves the Continuous-time Lyapunov equation AP+PA'+Q=0 for P",
    examples: ["lyap([[-2, 0], [1, -4]], [[3, 1], [1, 3]])", "A = [[-2, 0], [1, -4]]", "Q = [[3, 1], [1, 3]]", "lyap(A,Q)"],
    seealso: ["schur", "sylvester"]
}
  , xK = {
    name: "square",
    category: "Arithmetic",
    syntax: ["square(x)"],
    description: "Compute the square of a value. The square of x is x * x.",
    examples: ["square(3)", "sqrt(9)", "3^2", "3 * 3"],
    seealso: ["multiply", "pow", "sqrt", "cube"]
}
  , AK = {
    name: "subtract",
    category: "Operators",
    syntax: ["x - y", "subtract(x, y)"],
    description: "subtract two values.",
    examples: ["a = 5.3 - 2", "a + 2", "2/3 - 1/6", "2 * 3 - 3", "2.1 km - 500m"],
    seealso: ["add"]
}
  , EK = {
    name: "unaryMinus",
    category: "Operators",
    syntax: ["-x", "unaryMinus(x)"],
    description: "Inverse the sign of a value. Converts booleans and strings to numbers.",
    examples: ["-4.5", "-(-5.6)", '-"22"'],
    seealso: ["add", "subtract", "unaryPlus"]
}
  , kK = {
    name: "unaryPlus",
    category: "Operators",
    syntax: ["+x", "unaryPlus(x)"],
    description: "Converts booleans and strings to numbers.",
    examples: ["+true", '+"2"'],
    seealso: ["add", "subtract", "unaryMinus"]
}
  , TK = {
    name: "xgcd",
    category: "Arithmetic",
    syntax: ["xgcd(a, b)"],
    description: "Calculate the extended greatest common divisor for two values. The result is an array [d, x, y] with 3 entries, where d is the greatest common divisor, and d = x * a + y * b.",
    examples: ["xgcd(8, 12)", "gcd(8, 12)", "xgcd(36163, 21199)"],
    seealso: ["gcd", "lcm"]
}
  , NK = {
    name: "bitAnd",
    category: "Bitwise",
    syntax: ["x & y", "bitAnd(x, y)"],
    description: "Bitwise AND operation. Performs the logical AND operation on each pair of the corresponding bits of the two given values by multiplying them. If both bits in the compared position are 1, the bit in the resulting binary representation is 1, otherwise, the result is 0",
    examples: ["5 & 3", "bitAnd(53, 131)", "[1, 12, 31] & 42"],
    seealso: ["bitNot", "bitOr", "bitXor", "leftShift", "rightArithShift", "rightLogShift"]
}
  , MK = {
    name: "bitNot",
    category: "Bitwise",
    syntax: ["~x", "bitNot(x)"],
    description: "Bitwise NOT operation. Performs a logical negation on each bit of the given value. Bits that are 0 become 1, and those that are 1 become 0.",
    examples: ["~1", "~2", "bitNot([2, -3, 4])"],
    seealso: ["bitAnd", "bitOr", "bitXor", "leftShift", "rightArithShift", "rightLogShift"]
}
  , IK = {
    name: "bitOr",
    category: "Bitwise",
    syntax: ["x | y", "bitOr(x, y)"],
    description: "Bitwise OR operation. Performs the logical inclusive OR operation on each pair of corresponding bits of the two given values. The result in each position is 1 if the first bit is 1 or the second bit is 1 or both bits are 1, otherwise, the result is 0.",
    examples: ["5 | 3", "bitOr([1, 2, 3], 4)"],
    seealso: ["bitAnd", "bitNot", "bitXor", "leftShift", "rightArithShift", "rightLogShift"]
}
  , DK = {
    name: "bitXor",
    category: "Bitwise",
    syntax: ["bitXor(x, y)"],
    description: "Bitwise XOR operation, exclusive OR. Performs the logical exclusive OR operation on each pair of corresponding bits of the two given values. The result in each position is 1 if only the first bit is 1 or only the second bit is 1, but will be 0 if both are 0 or both are 1.",
    examples: ["bitOr(1, 2)", "bitXor([2, 3, 4], 4)"],
    seealso: ["bitAnd", "bitNot", "bitOr", "leftShift", "rightArithShift", "rightLogShift"]
}
  , UK = {
    name: "leftShift",
    category: "Bitwise",
    syntax: ["x << y", "leftShift(x, y)"],
    description: "Bitwise left logical shift of a value x by y number of bits.",
    examples: ["4 << 1", "8 >> 1"],
    seealso: ["bitAnd", "bitNot", "bitOr", "bitXor", "rightArithShift", "rightLogShift"]
}
  , FK = {
    name: "rightArithShift",
    category: "Bitwise",
    syntax: ["x >> y", "rightArithShift(x, y)"],
    description: "Bitwise right arithmetic shift of a value x by y number of bits.",
    examples: ["8 >> 1", "4 << 1", "-12 >> 2"],
    seealso: ["bitAnd", "bitNot", "bitOr", "bitXor", "leftShift", "rightLogShift"]
}
  , OK = {
    name: "rightLogShift",
    category: "Bitwise",
    syntax: ["x >>> y", "rightLogShift(x, y)"],
    description: "Bitwise right logical shift of a value x by y number of bits.",
    examples: ["8 >>> 1", "4 << 1", "-12 >>> 2"],
    seealso: ["bitAnd", "bitNot", "bitOr", "bitXor", "leftShift", "rightArithShift"]
}
  , PK = {
    name: "bellNumbers",
    category: "Combinatorics",
    syntax: ["bellNumbers(n)"],
    description: "The Bell Numbers count the number of partitions of a set. A partition is a pairwise disjoint subset of S whose union is S. `bellNumbers` only takes integer arguments. The following condition must be enforced: n >= 0.",
    examples: ["bellNumbers(3)", "bellNumbers(8)"],
    seealso: ["stirlingS2"]
}
  , BK = {
    name: "catalan",
    category: "Combinatorics",
    syntax: ["catalan(n)"],
    description: "The Catalan Numbers enumerate combinatorial structures of many different types. catalan only takes integer arguments. The following condition must be enforced: n >= 0.",
    examples: ["catalan(3)", "catalan(8)"],
    seealso: ["bellNumbers"]
}
  , RK = {
    name: "composition",
    category: "Combinatorics",
    syntax: ["composition(n, k)"],
    description: "The composition counts of n into k parts. composition only takes integer arguments. The following condition must be enforced: k <= n.",
    examples: ["composition(5, 3)"],
    seealso: ["combinations"]
}
  , LK = {
    name: "stirlingS2",
    category: "Combinatorics",
    syntax: ["stirlingS2(n, k)"],
    description: "he Stirling numbers of the second kind, counts the number of ways to partition a set of n labelled objects into k nonempty unlabelled subsets. `stirlingS2` only takes integer arguments. The following condition must be enforced: k <= n. If n = k or k = 1, then s(n,k) = 1.",
    examples: ["stirlingS2(5, 3)"],
    seealso: ["bellNumbers"]
}
  , qK = {
    name: "arg",
    category: "Complex",
    syntax: ["arg(x)"],
    description: "Compute the argument of a complex value. If x = a+bi, the argument is computed as atan2(b, a).",
    examples: ["arg(2 + 2i)", "atan2(3, 2)", "arg(2 + 3i)"],
    seealso: ["re", "im", "conj", "abs"]
}
  , VK = {
    name: "conj",
    category: "Complex",
    syntax: ["conj(x)"],
    description: "Compute the complex conjugate of a complex value. If x = a+bi, the complex conjugate is a-bi.",
    examples: ["conj(2 + 3i)", "conj(2 - 3i)", "conj(-5.2i)"],
    seealso: ["re", "im", "abs", "arg"]
}
  , $K = {
    name: "im",
    category: "Complex",
    syntax: ["im(x)"],
    description: "Get the imaginary part of a complex number.",
    examples: ["im(2 + 3i)", "re(2 + 3i)", "im(-5.2i)", "im(2.4)"],
    seealso: ["re", "conj", "abs", "arg"]
}
  , zK = {
    name: "re",
    category: "Complex",
    syntax: ["re(x)"],
    description: "Get the real part of a complex number.",
    examples: ["re(2 + 3i)", "im(2 + 3i)", "re(-5.2i)", "re(2.4)"],
    seealso: ["im", "conj", "abs", "arg"]
}
  , GK = {
    name: "evaluate",
    category: "Expression",
    syntax: ["evaluate(expression)", "evaluate(expression, scope)", "evaluate([expr1, expr2, expr3, ...])", "evaluate([expr1, expr2, expr3, ...], scope)"],
    description: "Evaluate an expression or an array with expressions.",
    examples: ['evaluate("2 + 3")', 'evaluate("sqrt(16)")', 'evaluate("2 inch to cm")', 'evaluate("sin(x * pi)", { "x": 1/2 })', 'evaluate(["width=2", "height=4","width*height"])'],
    seealso: []
}
  , jK = {
    name: "help",
    category: "Expression",
    syntax: ["help(object)", "help(string)"],
    description: "Display documentation on a function or data type.",
    examples: ["help(sqrt)", 'help("complex")'],
    seealso: []
}
  , HK = {
    name: "distance",
    category: "Geometry",
    syntax: ["distance([x1, y1], [x2, y2])", "distance([[x1, y1], [x2, y2]])"],
    description: "Calculates the Euclidean distance between two points.",
    examples: ["distance([0,0], [4,4])", "distance([[0,0], [4,4]])"],
    seealso: []
}
  , WK = {
    name: "intersect",
    category: "Geometry",
    syntax: ["intersect(expr1, expr2, expr3, expr4)", "intersect(expr1, expr2, expr3)"],
    description: "Computes the intersection point of lines and/or planes.",
    examples: ["intersect([0, 0], [10, 10], [10, 0], [0, 10])", "intersect([1, 0, 1],  [4, -2, 2], [1, 1, 1, 6])"],
    seealso: []
}
  , YK = {
    name: "and",
    category: "Logical",
    syntax: ["x and y", "and(x, y)"],
    description: "Logical and. Test whether two values are both defined with a nonzero/nonempty value.",
    examples: ["true and false", "true and true", "2 and 4"],
    seealso: ["not", "or", "xor"]
}
  , JK = {
    name: "not",
    category: "Logical",
    syntax: ["not x", "not(x)"],
    description: "Logical not. Flips the boolean value of given argument.",
    examples: ["not true", "not false", "not 2", "not 0"],
    seealso: ["and", "or", "xor"]
}
  , KK = {
    name: "or",
    category: "Logical",
    syntax: ["x or y", "or(x, y)"],
    description: "Logical or. Test if at least one value is defined with a nonzero/nonempty value.",
    examples: ["true or false", "false or false", "0 or 4"],
    seealso: ["not", "and", "xor"]
}
  , QK = {
    name: "xor",
    category: "Logical",
    syntax: ["x xor y", "xor(x, y)"],
    description: "Logical exclusive or, xor. Test whether one and only one value is defined with a nonzero/nonempty value.",
    examples: ["true xor false", "false xor false", "true xor true", "0 xor 4"],
    seealso: ["not", "and", "or"]
}
  , ZK = {
    name: "column",
    category: "Matrix",
    syntax: ["column(x, index)"],
    description: "Return a column from a matrix or array.",
    examples: ["A = [[1, 2], [3, 4]]", "column(A, 1)", "column(A, 2)"],
    seealso: ["row", "matrixFromColumns"]
}
  , XK = {
    name: "concat",
    category: "Matrix",
    syntax: ["concat(A, B, C, ...)", "concat(A, B, C, ..., dim)"],
    description: "Concatenate matrices. By default, the matrices are concatenated by the last dimension. The dimension on which to concatenate can be provided as last argument.",
    examples: ["A = [1, 2; 5, 6]", "B = [3, 4; 7, 8]", "concat(A, B)", "concat(A, B, 1)", "concat(A, B, 2)"],
    seealso: ["det", "diag", "identity", "inv", "ones", "range", "size", "squeeze", "subset", "trace", "transpose", "zeros"]
}
  , eQ = {
    name: "count",
    category: "Matrix",
    syntax: ["count(x)"],
    description: "Count the number of elements of a matrix, array or string.",
    examples: ["a = [1, 2; 3, 4; 5, 6]", "count(a)", "size(a)", 'count("hello world")'],
    seealso: ["size"]
}
  , tQ = {
    name: "cross",
    category: "Matrix",
    syntax: ["cross(A, B)"],
    description: "Calculate the cross product for two vectors in three dimensional space.",
    examples: ["cross([1, 1, 0],  [0, 1, 1])", "cross([3, -3, 1], [4, 9, 2])", "cross([2, 3, 4],  [5, 6, 7])"],
    seealso: ["multiply", "dot"]
}
  , rQ = {
    name: "ctranspose",
    category: "Matrix",
    syntax: ["x'", "ctranspose(x)"],
    description: "Complex Conjugate and Transpose a matrix",
    examples: ["a = [1, 2, 3; 4, 5, 6]", "a'", "ctranspose(a)"],
    seealso: ["concat", "det", "diag", "identity", "inv", "ones", "range", "size", "squeeze", "subset", "trace", "zeros"]
}
  , aQ = {
    name: "det",
    category: "Matrix",
    syntax: ["det(x)"],
    description: "Calculate the determinant of a matrix",
    examples: ["det([1, 2; 3, 4])", "det([-2, 2, 3; -1, 1, 3; 2, 0, -1])"],
    seealso: ["concat", "diag", "identity", "inv", "ones", "range", "size", "squeeze", "subset", "trace", "transpose", "zeros"]
}
  , nQ = {
    name: "diag",
    category: "Matrix",
    syntax: ["diag(x)", "diag(x, k)"],
    description: "Create a diagonal matrix or retrieve the diagonal of a matrix. When x is a vector, a matrix with the vector values on the diagonal will be returned. When x is a matrix, a vector with the diagonal values of the matrix is returned. When k is provided, the k-th diagonal will be filled in or retrieved, if k is positive, the values are placed on the super diagonal. When k is negative, the values are placed on the sub diagonal.",
    examples: ["diag(1:3)", "diag(1:3, 1)", "a = [1, 2, 3; 4, 5, 6; 7, 8, 9]", "diag(a)"],
    seealso: ["concat", "det", "identity", "inv", "ones", "range", "size", "squeeze", "subset", "trace", "transpose", "zeros"]
}
  , iQ = {
    name: "diff",
    category: "Matrix",
    syntax: ["diff(arr)", "diff(arr, dim)"],
    description: ["Create a new matrix or array with the difference of the passed matrix or array.", "Dim parameter is optional and used to indicant the dimension of the array/matrix to apply the difference", "If no dimension parameter is passed it is assumed as dimension 0", "Dimension is zero-based in javascript and one-based in the parser", "Arrays must be 'rectangular' meaning arrays like [1, 2]", "If something is passed as a matrix it will be returned as a matrix but other than that all matrices are converted to arrays"],
    examples: ["A = [1, 2, 4, 7, 0]", "diff(A)", "diff(A, 1)", "B = [[1, 2], [3, 4]]", "diff(B)", "diff(B, 1)", "diff(B, 2)", "diff(B, bignumber(2))", "diff([[1, 2], matrix([3, 4])], 2)"],
    seealso: ["subtract", "partitionSelect"]
}
  , oQ = {
    name: "dot",
    category: "Matrix",
    syntax: ["dot(A, B)", "A * B"],
    description: "Calculate the dot product of two vectors. The dot product of A = [a1, a2, a3, ..., an] and B = [b1, b2, b3, ..., bn] is defined as dot(A, B) = a1 * b1 + a2 * b2 + a3 * b3 + ... + an * bn",
    examples: ["dot([2, 4, 1], [2, 2, 3])", "[2, 4, 1] * [2, 2, 3]"],
    seealso: ["multiply", "cross"]
}
  , sQ = {
    name: "eigs",
    category: "Matrix",
    syntax: ["eigs(x)"],
    description: "Calculate the eigenvalues and eigenvectors of a real symmetric matrix",
    examples: ["eigs([[5, 2.3], [2.3, 1]])"],
    seealso: ["inv"]
}
  , lQ = {
    name: "filter",
    category: "Matrix",
    syntax: ["filter(x, test)"],
    description: "Filter items in a matrix.",
    examples: ["isPositive(x) = x > 0", "filter([6, -2, -1, 4, 3], isPositive)", "filter([6, -2, 0, 1, 0], x != 0)"],
    seealso: ["sort", "map", "forEach"]
}
  , uQ = {
    name: "flatten",
    category: "Matrix",
    syntax: ["flatten(x)"],
    description: "Flatten a multi dimensional matrix into a single dimensional matrix.",
    examples: ["a = [1, 2, 3; 4, 5, 6]", "size(a)", "b = flatten(a)", "size(b)"],
    seealso: ["concat", "resize", "size", "squeeze"]
}
  , cQ = {
    name: "forEach",
    category: "Matrix",
    syntax: ["forEach(x, callback)"],
    description: "Iterates over all elements of a matrix/array, and executes the given callback function.",
    examples: ["numberOfPets = {}", "addPet(n) = numberOfPets[n] = (numberOfPets[n] ? numberOfPets[n]:0 ) + 1;", 'forEach(["Dog","Cat","Cat"], addPet)', "numberOfPets"],
    seealso: ["map", "sort", "filter"]
}
  , dQ = {
    name: "getMatrixDataType",
    category: "Matrix",
    syntax: ["getMatrixDataType(x)"],
    description: 'Find the data type of all elements in a matrix or array, for example "number" if all items are a number and "Complex" if all values are complex numbers. If a matrix contains more than one data type, it will return "mixed".',
    examples: ["getMatrixDataType([1, 2, 3])", "getMatrixDataType([[5 cm], [2 inch]])", 'getMatrixDataType([1, "text"])', "getMatrixDataType([1, bignumber(4)])"],
    seealso: ["matrix", "sparse", "typeOf"]
}
  , vQ = {
    name: "identity",
    category: "Matrix",
    syntax: ["identity(n)", "identity(m, n)", "identity([m, n])"],
    description: "Returns the identity matrix with size m-by-n. The matrix has ones on the diagonal and zeros elsewhere.",
    examples: ["identity(3)", "identity(3, 5)", "a = [1, 2, 3; 4, 5, 6]", "identity(size(a))"],
    seealso: ["concat", "det", "diag", "inv", "ones", "range", "size", "squeeze", "subset", "trace", "transpose", "zeros"]
}
  , hQ = {
    name: "inv",
    category: "Matrix",
    syntax: ["inv(x)"],
    description: "Calculate the inverse of a matrix",
    examples: ["inv([1, 2; 3, 4])", "inv(4)", "1 / 4"],
    seealso: ["concat", "det", "diag", "identity", "ones", "range", "size", "squeeze", "subset", "trace", "transpose", "zeros"]
}
  , mQ = {
    name: "pinv",
    category: "Matrix",
    syntax: ["pinv(x)"],
    description: "Calculate the Moore–Penrose inverse of a matrix",
    examples: ["pinv([1, 2; 3, 4])", "pinv([[1, 0], [0, 1], [0, 1]])", "pinv(4)"],
    seealso: ["inv"]
}
  , fQ = {
    name: "kron",
    category: "Matrix",
    syntax: ["kron(x, y)"],
    description: "Calculates the kronecker product of 2 matrices or vectors.",
    examples: ["kron([[1, 0], [0, 1]], [[1, 2], [3, 4]])", "kron([1,1], [2,3,4])"],
    seealso: ["multiply", "dot", "cross"]
}
  , pQ = {
    name: "map",
    category: "Matrix",
    syntax: ["map(x, callback)"],
    description: "Create a new matrix or array with the results of the callback function executed on each entry of the matrix/array.",
    examples: ["map([1, 2, 3], square)"],
    seealso: ["filter", "forEach"]
}
  , yQ = {
    name: "matrixFromColumns",
    category: "Matrix",
    syntax: ["matrixFromColumns(...arr)", "matrixFromColumns(row1, row2)", "matrixFromColumns(row1, row2, row3)"],
    description: "Create a dense matrix from vectors as individual columns.",
    examples: ["matrixFromColumns([1, 2, 3], [[4],[5],[6]])"],
    seealso: ["matrix", "matrixFromRows", "matrixFromFunction", "zeros"]
}
  , wQ = {
    name: "matrixFromFunction",
    category: "Matrix",
    syntax: ["matrixFromFunction(size, fn)", "matrixFromFunction(size, fn, format)", "matrixFromFunction(size, fn, format, datatype)", "matrixFromFunction(size, format, fn)", "matrixFromFunction(size, format, datatype, fn)"],
    description: "Create a matrix by evaluating a generating function at each index.",
    examples: ["f(I) = I[1] - I[2]", "matrixFromFunction([3,3], f)", "g(I) = I[1] - I[2] == 1 ? 4 : 0", 'matrixFromFunction([100, 100], "sparse", g)', "matrixFromFunction([5], random)"],
    seealso: ["matrix", "matrixFromRows", "matrixFromColumns", "zeros"]
}
  , gQ = {
    name: "matrixFromRows",
    category: "Matrix",
    syntax: ["matrixFromRows(...arr)", "matrixFromRows(row1, row2)", "matrixFromRows(row1, row2, row3)"],
    description: "Create a dense matrix from vectors as individual rows.",
    examples: ["matrixFromRows([1, 2, 3], [[4],[5],[6]])"],
    seealso: ["matrix", "matrixFromColumns", "matrixFromFunction", "zeros"]
}
  , _Q = {
    name: "ones",
    category: "Matrix",
    syntax: ["ones(m)", "ones(m, n)", "ones(m, n, p, ...)", "ones([m])", "ones([m, n])", "ones([m, n, p, ...])"],
    description: "Create a matrix containing ones.",
    examples: ["ones(3)", "ones(3, 5)", "ones([2,3]) * 4.5", "a = [1, 2, 3; 4, 5, 6]", "ones(size(a))"],
    seealso: ["concat", "det", "diag", "identity", "inv", "range", "size", "squeeze", "subset", "trace", "transpose", "zeros"]
}
  , bQ = {
    name: "partitionSelect",
    category: "Matrix",
    syntax: ["partitionSelect(x, k)", "partitionSelect(x, k, compare)"],
    description: "Partition-based selection of an array or 1D matrix. Will find the kth smallest value, and mutates the input array. Uses Quickselect.",
    examples: ["partitionSelect([5, 10, 1], 2)", 'partitionSelect(["C", "B", "A", "D"], 1, compareText)', "arr = [5, 2, 1]", "partitionSelect(arr, 0) # returns 1, arr is now: [1, 2, 5]", "arr", "partitionSelect(arr, 1, 'desc') # returns 2, arr is now: [5, 2, 1]", "arr"],
    seealso: ["sort"]
}
  , CQ = {
    name: "range",
    category: "Type",
    syntax: ["start:end", "start:step:end", "range(start, end)", "range(start, end, step)", "range(string)"],
    description: "Create a range. Lower bound of the range is included, upper bound is excluded.",
    examples: ["1:5", "3:-1:-3", "range(3, 7)", "range(0, 12, 2)", 'range("4:10")', "range(1m, 1m, 3m)", "a = [1, 2, 3, 4; 5, 6, 7, 8]", "a[1:2, 1:2]"],
    seealso: ["concat", "det", "diag", "identity", "inv", "ones", "size", "squeeze", "subset", "trace", "transpose", "zeros"]
}
  , SQ = {
    name: "reshape",
    category: "Matrix",
    syntax: ["reshape(x, sizes)"],
    description: "Reshape a multi dimensional array to fit the specified dimensions.",
    examples: ["reshape([1, 2, 3, 4, 5, 6], [2, 3])", "reshape([[1, 2], [3, 4]], [1, 4])", "reshape([[1, 2], [3, 4]], [4])", "reshape([1, 2, 3, 4], [-1, 2])"],
    seealso: ["size", "squeeze", "resize"]
}
  , xQ = {
    name: "resize",
    category: "Matrix",
    syntax: ["resize(x, size)", "resize(x, size, defaultValue)"],
    description: "Resize a matrix.",
    examples: ["resize([1,2,3,4,5], [3])", "resize([1,2,3], [5])", "resize([1,2,3], [5], -1)", "resize(2, [2, 3])", 'resize("hello", [8], "!")'],
    seealso: ["size", "subset", "squeeze", "reshape"]
}
  , AQ = {
    name: "rotate",
    category: "Matrix",
    syntax: ["rotate(w, theta)", "rotate(w, theta, v)"],
    description: "Returns a 2-D rotation matrix (2x2) for a given angle (in radians). Returns a 2-D rotation matrix (3x3) of a given angle (in radians) around given axis.",
    examples: ["rotate([1, 0], pi / 2)", 'rotate(matrix([1, 0]), unit("35deg"))', 'rotate([1, 0, 0], unit("90deg"), [0, 0, 1])', 'rotate(matrix([1, 0, 0]), unit("90deg"), matrix([0, 0, 1]))'],
    seealso: ["matrix", "rotationMatrix"]
}
  , EQ = {
    name: "rotationMatrix",
    category: "Matrix",
    syntax: ["rotationMatrix(theta)", "rotationMatrix(theta, v)", "rotationMatrix(theta, v, format)"],
    description: "Returns a 2-D rotation matrix (2x2) for a given angle (in radians). Returns a 2-D rotation matrix (3x3) of a given angle (in radians) around given axis.",
    examples: ["rotationMatrix(pi / 2)", 'rotationMatrix(unit("45deg"), [0, 0, 1])', 'rotationMatrix(1, matrix([0, 0, 1]), "sparse")'],
    seealso: ["cos", "sin"]
}
  , kQ = {
    name: "row",
    category: "Matrix",
    syntax: ["row(x, index)"],
    description: "Return a row from a matrix or array.",
    examples: ["A = [[1, 2], [3, 4]]", "row(A, 1)", "row(A, 2)"],
    seealso: ["column", "matrixFromRows"]
}
  , TQ = {
    name: "size",
    category: "Matrix",
    syntax: ["size(x)"],
    description: "Calculate the size of a matrix.",
    examples: ["size(2.3)", 'size("hello world")', "a = [1, 2; 3, 4; 5, 6]", "size(a)", "size(1:6)"],
    seealso: ["concat", "count", "det", "diag", "identity", "inv", "ones", "range", "squeeze", "subset", "trace", "transpose", "zeros"]
}
  , NQ = {
    name: "sort",
    category: "Matrix",
    syntax: ["sort(x)", "sort(x, compare)"],
    description: 'Sort the items in a matrix. Compare can be a string "asc", "desc", "natural", or a custom sort function.',
    examples: ["sort([5, 10, 1])", 'sort(["C", "B", "A", "D"], "natural")', "sortByLength(a, b) = size(a)[1] - size(b)[1]", 'sort(["Langdon", "Tom", "Sara"], sortByLength)', 'sort(["10", "1", "2"], "natural")'],
    seealso: ["map", "filter", "forEach"]
}
  , MQ = {
    name: "squeeze",
    category: "Matrix",
    syntax: ["squeeze(x)"],
    description: "Remove inner and outer singleton dimensions from a matrix.",
    examples: ["a = zeros(3,2,1)", "size(squeeze(a))", "b = zeros(1,1,3)", "size(squeeze(b))"],
    seealso: ["concat", "det", "diag", "identity", "inv", "ones", "range", "size", "subset", "trace", "transpose", "zeros"]
}
  , IQ = {
    name: "subset",
    category: "Matrix",
    syntax: ["value(index)", "value(index) = replacement", "subset(value, [index])", "subset(value, [index], replacement)"],
    description: "Get or set a subset of the entries of a matrix or characters of a string. Indexes are one-based. There should be one index specification for each dimension of the target. Each specification can be a single index, a list of indices, or a range in colon notation `l:u`. In a range, both the lower bound l and upper bound u are included; and if a bound is omitted it defaults to the most extreme valid value. The cartesian product of the indices specified in each dimension determines the target of the operation.",
    examples: ["d = [1, 2; 3, 4]", "e = []", "e[1, 1:2] = [5, 6]", "e[2, :] = [7, 8]", "f = d * e", "f[2, 1]", "f[:, 1]", "f[[1,2], [1,3]] = [9, 10; 11, 12]", "f"],
    seealso: ["concat", "det", "diag", "identity", "inv", "ones", "range", "size", "squeeze", "trace", "transpose", "zeros"]
}
  , DQ = {
    name: "trace",
    category: "Matrix",
    syntax: ["trace(A)"],
    description: "Calculate the trace of a matrix: the sum of the elements on the main diagonal of a square matrix.",
    examples: ["A = [1, 2, 3; -1, 2, 3; 2, 0, 3]", "trace(A)"],
    seealso: ["concat", "det", "diag", "identity", "inv", "ones", "range", "size", "squeeze", "subset", "transpose", "zeros"]
}
  , UQ = {
    name: "transpose",
    category: "Matrix",
    syntax: ["x'", "transpose(x)"],
    description: "Transpose a matrix",
    examples: ["a = [1, 2, 3; 4, 5, 6]", "a'", "transpose(a)"],
    seealso: ["concat", "det", "diag", "identity", "inv", "ones", "range", "size", "squeeze", "subset", "trace", "zeros"]
}
  , FQ = {
    name: "zeros",
    category: "Matrix",
    syntax: ["zeros(m)", "zeros(m, n)", "zeros(m, n, p, ...)", "zeros([m])", "zeros([m, n])", "zeros([m, n, p, ...])"],
    description: "Create a matrix containing zeros.",
    examples: ["zeros(3)", "zeros(3, 5)", "a = [1, 2, 3; 4, 5, 6]", "zeros(size(a))"],
    seealso: ["concat", "det", "diag", "identity", "inv", "ones", "range", "size", "squeeze", "subset", "trace", "transpose"]
}
  , OQ = {
    name: "fft",
    category: "Matrix",
    syntax: ["fft(x)"],
    description: "Calculate N-dimensional fourier transform",
    examples: ["fft([[1, 0], [1, 0]])"],
    seealso: ["ifft"]
}
  , PQ = {
    name: "ifft",
    category: "Matrix",
    syntax: ["ifft(x)"],
    description: "Calculate N-dimensional inverse fourier transform",
    examples: ["ifft([[2, 2], [0, 0]])"],
    seealso: ["fft"]
}
  , BQ = {
    name: "combinations",
    category: "Probability",
    syntax: ["combinations(n, k)"],
    description: "Compute the number of combinations of n items taken k at a time",
    examples: ["combinations(7, 5)"],
    seealso: ["combinationsWithRep", "permutations", "factorial"]
}
  , RQ = {
    name: "combinationsWithRep",
    category: "Probability",
    syntax: ["combinationsWithRep(n, k)"],
    description: "Compute the number of combinations of n items taken k at a time with replacements.",
    examples: ["combinationsWithRep(7, 5)"],
    seealso: ["combinations", "permutations", "factorial"]
}
  , LQ = {
    name: "factorial",
    category: "Probability",
    syntax: ["n!", "factorial(n)"],
    description: "Compute the factorial of a value",
    examples: ["5!", "5 * 4 * 3 * 2 * 1", "3!"],
    seealso: ["combinations", "combinationsWithRep", "permutations", "gamma"]
}
  , qQ = {
    name: "gamma",
    category: "Probability",
    syntax: ["gamma(n)"],
    description: "Compute the gamma function. For small values, the Lanczos approximation is used, and for large values the extended Stirling approximation.",
    examples: ["gamma(4)", "3!", "gamma(1/2)", "sqrt(pi)"],
    seealso: ["factorial"]
}
  , VQ = {
    name: "lgamma",
    category: "Probability",
    syntax: ["lgamma(n)"],
    description: "Logarithm of the gamma function for real, positive numbers and complex numbers, using Lanczos approximation for numbers and Stirling series for complex numbers.",
    examples: ["lgamma(4)", "lgamma(1/2)", "lgamma(i)", "lgamma(complex(1.1, 2))"],
    seealso: ["gamma"]
}
  , $Q = {
    name: "kldivergence",
    category: "Probability",
    syntax: ["kldivergence(x, y)"],
    description: "Calculate the Kullback-Leibler (KL) divergence  between two distributions.",
    examples: ["kldivergence([0.7,0.5,0.4], [0.2,0.9,0.5])"],
    seealso: []
}
  , zQ = {
    name: "multinomial",
    category: "Probability",
    syntax: ["multinomial(A)"],
    description: "Multinomial Coefficients compute the number of ways of picking a1, a2, ..., ai unordered outcomes from `n` possibilities. multinomial takes one array of integers as an argument. The following condition must be enforced: every ai > 0.",
    examples: ["multinomial([1, 2, 1])"],
    seealso: ["combinations", "factorial"]
}
  , GQ = {
    name: "permutations",
    category: "Probability",
    syntax: ["permutations(n)", "permutations(n, k)"],
    description: "Compute the number of permutations of n items taken k at a time",
    examples: ["permutations(5)", "permutations(5, 3)"],
    seealso: ["combinations", "combinationsWithRep", "factorial"]
}
  , jQ = {
    name: "pickRandom",
    category: "Probability",
    syntax: ["pickRandom(array)", "pickRandom(array, number)", "pickRandom(array, weights)", "pickRandom(array, number, weights)", "pickRandom(array, weights, number)"],
    description: "Pick a random entry from a given array.",
    examples: ["pickRandom(0:10)", "pickRandom([1, 3, 1, 6])", "pickRandom([1, 3, 1, 6], 2)", "pickRandom([1, 3, 1, 6], [2, 3, 2, 1])", "pickRandom([1, 3, 1, 6], 2, [2, 3, 2, 1])", "pickRandom([1, 3, 1, 6], [2, 3, 2, 1], 2)"],
    seealso: ["random", "randomInt"]
}
  , HQ = {
    name: "random",
    category: "Probability",
    syntax: ["random()", "random(max)", "random(min, max)", "random(size)", "random(size, max)", "random(size, min, max)"],
    description: "Return a random number.",
    examples: ["random()", "random(10, 20)", "random([2, 3])"],
    seealso: ["pickRandom", "randomInt"]
}
  , WQ = {
    name: "randomInt",
    category: "Probability",
    syntax: ["randomInt(max)", "randomInt(min, max)", "randomInt(size)", "randomInt(size, max)", "randomInt(size, min, max)"],
    description: "Return a random integer number",
    examples: ["randomInt(10, 20)", "randomInt([2, 3], 10)"],
    seealso: ["pickRandom", "random"]
}
  , YQ = {
    name: "compare",
    category: "Relational",
    syntax: ["compare(x, y)"],
    description: "Compare two values. Returns 1 when x > y, -1 when x < y, and 0 when x == y.",
    examples: ["compare(2, 3)", "compare(3, 2)", "compare(2, 2)", "compare(5cm, 40mm)", "compare(2, [1, 2, 3])"],
    seealso: ["equal", "unequal", "smaller", "smallerEq", "largerEq", "compareNatural", "compareText"]
}
  , JQ = {
    name: "compareNatural",
    category: "Relational",
    syntax: ["compareNatural(x, y)"],
    description: "Compare two values of any type in a deterministic, natural way. Returns 1 when x > y, -1 when x < y, and 0 when x == y.",
    examples: ["compareNatural(2, 3)", "compareNatural(3, 2)", "compareNatural(2, 2)", "compareNatural(5cm, 40mm)", 'compareNatural("2", "10")', "compareNatural(2 + 3i, 2 + 4i)", "compareNatural([1, 2, 4], [1, 2, 3])", "compareNatural([1, 5], [1, 2, 3])", "compareNatural([1, 2], [1, 2])", "compareNatural({a: 2}, {a: 4})"],
    seealso: ["equal", "unequal", "smaller", "smallerEq", "largerEq", "compare", "compareText"]
}
  , KQ = {
    name: "compareText",
    category: "Relational",
    syntax: ["compareText(x, y)"],
    description: "Compare two strings lexically. Comparison is case sensitive. Returns 1 when x > y, -1 when x < y, and 0 when x == y.",
    examples: ['compareText("B", "A")', 'compareText("A", "B")', 'compareText("A", "A")', 'compareText("2", "10")', 'compare("2", "10")', "compare(2, 10)", 'compareNatural("2", "10")', 'compareText("B", ["A", "B", "C"])'],
    seealso: ["compare", "compareNatural"]
}
  , QQ = {
    name: "deepEqual",
    category: "Relational",
    syntax: ["deepEqual(x, y)"],
    description: "Check equality of two matrices element wise. Returns true if the size of both matrices is equal and when and each of the elements are equal.",
    examples: ["deepEqual([1,3,4], [1,3,4])", "deepEqual([1,3,4], [1,3])"],
    seealso: ["equal", "unequal", "smaller", "larger", "smallerEq", "largerEq", "compare"]
}
  , ZQ = {
    name: "equal",
    category: "Relational",
    syntax: ["x == y", "equal(x, y)"],
    description: "Check equality of two values. Returns true if the values are equal, and false if not.",
    examples: ["2+2 == 3", "2+2 == 4", "a = 3.2", "b = 6-2.8", "a == b", "50cm == 0.5m"],
    seealso: ["unequal", "smaller", "larger", "smallerEq", "largerEq", "compare", "deepEqual", "equalText"]
}
  , XQ = {
    name: "equalText",
    category: "Relational",
    syntax: ["equalText(x, y)"],
    description: "Check equality of two strings. Comparison is case sensitive. Returns true if the values are equal, and false if not.",
    examples: ['equalText("Hello", "Hello")', 'equalText("a", "A")', 'equal("2e3", "2000")', 'equalText("2e3", "2000")', 'equalText("B", ["A", "B", "C"])'],
    seealso: ["compare", "compareNatural", "compareText", "equal"]
}
  , eZ = {
    name: "larger",
    category: "Relational",
    syntax: ["x > y", "larger(x, y)"],
    description: "Check if value x is larger than y. Returns true if x is larger than y, and false if not.",
    examples: ["2 > 3", "5 > 2*2", "a = 3.3", "b = 6-2.8", "(a > b)", "(b < a)", "5 cm > 2 inch"],
    seealso: ["equal", "unequal", "smaller", "smallerEq", "largerEq", "compare"]
}
  , tZ = {
    name: "largerEq",
    category: "Relational",
    syntax: ["x >= y", "largerEq(x, y)"],
    description: "Check if value x is larger or equal to y. Returns true if x is larger or equal to y, and false if not.",
    examples: ["2 >= 1+1", "2 > 1+1", "a = 3.2", "b = 6-2.8", "(a >= b)"],
    seealso: ["equal", "unequal", "smallerEq", "smaller", "compare"]
}
  , rZ = {
    name: "smaller",
    category: "Relational",
    syntax: ["x < y", "smaller(x, y)"],
    description: "Check if value x is smaller than value y. Returns true if x is smaller than y, and false if not.",
    examples: ["2 < 3", "5 < 2*2", "a = 3.3", "b = 6-2.8", "(a < b)", "5 cm < 2 inch"],
    seealso: ["equal", "unequal", "larger", "smallerEq", "largerEq", "compare"]
}
  , aZ = {
    name: "smallerEq",
    category: "Relational",
    syntax: ["x <= y", "smallerEq(x, y)"],
    description: "Check if value x is smaller or equal to value y. Returns true if x is smaller than y, and false if not.",
    examples: ["2 <= 1+1", "2 < 1+1", "a = 3.2", "b = 6-2.8", "(a <= b)"],
    seealso: ["equal", "unequal", "larger", "smaller", "largerEq", "compare"]
}
  , nZ = {
    name: "unequal",
    category: "Relational",
    syntax: ["x != y", "unequal(x, y)"],
    description: "Check unequality of two values. Returns true if the values are unequal, and false if they are equal.",
    examples: ["2+2 != 3", "2+2 != 4", "a = 3.2", "b = 6-2.8", "a != b", "50cm != 0.5m", "5 cm != 2 inch"],
    seealso: ["equal", "smaller", "larger", "smallerEq", "largerEq", "compare", "deepEqual"]
}
  , iZ = {
    name: "setCartesian",
    category: "Set",
    syntax: ["setCartesian(set1, set2)"],
    description: "Create the cartesian product of two (multi)sets. Multi-dimension arrays will be converted to single-dimension arrays and the values will be sorted in ascending order before the operation.",
    examples: ["setCartesian([1, 2], [3, 4])"],
    seealso: ["setUnion", "setIntersect", "setDifference", "setPowerset"]
}
  , oZ = {
    name: "setDifference",
    category: "Set",
    syntax: ["setDifference(set1, set2)"],
    description: "Create the difference of two (multi)sets: every element of set1, that is not the element of set2. Multi-dimension arrays will be converted to single-dimension arrays before the operation.",
    examples: ["setDifference([1, 2, 3, 4], [3, 4, 5, 6])", "setDifference([[1, 2], [3, 4]], [[3, 4], [5, 6]])"],
    seealso: ["setUnion", "setIntersect", "setSymDifference"]
}
  , sZ = {
    name: "setDistinct",
    category: "Set",
    syntax: ["setDistinct(set)"],
    description: "Collect the distinct elements of a multiset. A multi-dimension array will be converted to a single-dimension array before the operation.",
    examples: ["setDistinct([1, 1, 1, 2, 2, 3])"],
    seealso: ["setMultiplicity"]
}
  , lZ = {
    name: "setIntersect",
    category: "Set",
    syntax: ["setIntersect(set1, set2)"],
    description: "Create the intersection of two (multi)sets. Multi-dimension arrays will be converted to single-dimension arrays before the operation.",
    examples: ["setIntersect([1, 2, 3, 4], [3, 4, 5, 6])", "setIntersect([[1, 2], [3, 4]], [[3, 4], [5, 6]])"],
    seealso: ["setUnion", "setDifference"]
}
  , uZ = {
    name: "setIsSubset",
    category: "Set",
    syntax: ["setIsSubset(set1, set2)"],
    description: "Check whether a (multi)set is a subset of another (multi)set: every element of set1 is the element of set2. Multi-dimension arrays will be converted to single-dimension arrays before the operation.",
    examples: ["setIsSubset([1, 2], [3, 4, 5, 6])", "setIsSubset([3, 4], [3, 4, 5, 6])"],
    seealso: ["setUnion", "setIntersect", "setDifference"]
}
  , cZ = {
    name: "setMultiplicity",
    category: "Set",
    syntax: ["setMultiplicity(element, set)"],
    description: "Count the multiplicity of an element in a multiset. A multi-dimension array will be converted to a single-dimension array before the operation.",
    examples: ["setMultiplicity(1, [1, 2, 2, 4])", "setMultiplicity(2, [1, 2, 2, 4])"],
    seealso: ["setDistinct", "setSize"]
}
  , dZ = {
    name: "setPowerset",
    category: "Set",
    syntax: ["setPowerset(set)"],
    description: "Create the powerset of a (multi)set: the powerset contains very possible subsets of a (multi)set. A multi-dimension array will be converted to a single-dimension array before the operation.",
    examples: ["setPowerset([1, 2, 3])"],
    seealso: ["setCartesian"]
}
  , vZ = {
    name: "setSize",
    category: "Set",
    syntax: ["setSize(set)", "setSize(set, unique)"],
    description: 'Count the number of elements of a (multi)set. When the second parameter "unique" is true, count only the unique values. A multi-dimension array will be converted to a single-dimension array before the operation.',
    examples: ["setSize([1, 2, 2, 4])", "setSize([1, 2, 2, 4], true)"],
    seealso: ["setUnion", "setIntersect", "setDifference"]
}
  , hZ = {
    name: "setSymDifference",
    category: "Set",
    syntax: ["setSymDifference(set1, set2)"],
    description: "Create the symmetric difference of two (multi)sets. Multi-dimension arrays will be converted to single-dimension arrays before the operation.",
    examples: ["setSymDifference([1, 2, 3, 4], [3, 4, 5, 6])", "setSymDifference([[1, 2], [3, 4]], [[3, 4], [5, 6]])"],
    seealso: ["setUnion", "setIntersect", "setDifference"]
}
  , mZ = {
    name: "setUnion",
    category: "Set",
    syntax: ["setUnion(set1, set2)"],
    description: "Create the union of two (multi)sets. Multi-dimension arrays will be converted to single-dimension arrays before the operation.",
    examples: ["setUnion([1, 2, 3, 4], [3, 4, 5, 6])", "setUnion([[1, 2], [3, 4]], [[3, 4], [5, 6]])"],
    seealso: ["setIntersect", "setDifference"]
}
  , fZ = {
    name: "zpk2tf",
    category: "Signal",
    syntax: ["zpk2tf(z, p, k)"],
    description: "Compute the transfer function of a zero-pole-gain model.",
    examples: ["zpk2tf([1, 2], [-1, -2], 1)", "zpk2tf([1, 2], [-1, -2])", "zpk2tf([1 - 3i, 2 + 2i], [-1, -2])"],
    seealso: []
}
  , pZ = {
    name: "freqz",
    category: "Signal",
    syntax: ["freqz(b, a)", "freqz(b, a, w)"],
    description: "Calculates the frequency response of a filter given its numerator and denominator coefficients.",
    examples: ["freqz([1, 2], [1, 2, 3])", "freqz([1, 2], [1, 2, 3], [0, 1])", "freqz([1, 2], [1, 2, 3], 512)"],
    seealso: []
}
  , yZ = {
    name: "erf",
    category: "Special",
    syntax: ["erf(x)"],
    description: "Compute the erf function of a value using a rational Chebyshev approximations for different intervals of x",
    examples: ["erf(0.2)", "erf(-0.5)", "erf(4)"],
    seealso: []
}
  , wZ = {
    name: "zeta",
    category: "Special",
    syntax: ["zeta(s)"],
    description: "Compute the Riemann Zeta Function using an infinite series and Riemanns Functional Equation for the entire complex plane",
    examples: ["zeta(0.2)", "zeta(-0.5)", "zeta(4)"],
    seealso: []
}
  , gZ = {
    name: "mad",
    category: "Statistics",
    syntax: ["mad(a, b, c, ...)", "mad(A)"],
    description: "Compute the median absolute deviation of a matrix or a list with values. The median absolute deviation is defined as the median of the absolute deviations from the median.",
    examples: ["mad(10, 20, 30)", "mad([1, 2, 3])"],
    seealso: ["mean", "median", "std", "abs"]
}
  , _Z = {
    name: "max",
    category: "Statistics",
    syntax: ["max(a, b, c, ...)", "max(A)", "max(A, dimension)"],
    description: "Compute the maximum value of a list of values.",
    examples: ["max(2, 3, 4, 1)", "max([2, 3, 4, 1])", "max([2, 5; 4, 3])", "max([2, 5; 4, 3], 1)", "max([2, 5; 4, 3], 2)", "max(2.7, 7.1, -4.5, 2.0, 4.1)", "min(2.7, 7.1, -4.5, 2.0, 4.1)"],
    seealso: ["mean", "median", "min", "prod", "std", "sum", "variance"]
}
  , bZ = {
    name: "mean",
    category: "Statistics",
    syntax: ["mean(a, b, c, ...)", "mean(A)", "mean(A, dimension)"],
    description: "Compute the arithmetic mean of a list of values.",
    examples: ["mean(2, 3, 4, 1)", "mean([2, 3, 4, 1])", "mean([2, 5; 4, 3])", "mean([2, 5; 4, 3], 1)", "mean([2, 5; 4, 3], 2)", "mean([1.0, 2.7, 3.2, 4.0])"],
    seealso: ["max", "median", "min", "prod", "std", "sum", "variance"]
}
  , CZ = {
    name: "median",
    category: "Statistics",
    syntax: ["median(a, b, c, ...)", "median(A)"],
    description: "Compute the median of all values. The values are sorted and the middle value is returned. In case of an even number of values, the average of the two middle values is returned.",
    examples: ["median(5, 2, 7)", "median([3, -1, 5, 7])"],
    seealso: ["max", "mean", "min", "prod", "std", "sum", "variance", "quantileSeq"]
}
  , SZ = {
    name: "min",
    category: "Statistics",
    syntax: ["min(a, b, c, ...)", "min(A)", "min(A, dimension)"],
    description: "Compute the minimum value of a list of values.",
    examples: ["min(2, 3, 4, 1)", "min([2, 3, 4, 1])", "min([2, 5; 4, 3])", "min([2, 5; 4, 3], 1)", "min([2, 5; 4, 3], 2)", "min(2.7, 7.1, -4.5, 2.0, 4.1)", "max(2.7, 7.1, -4.5, 2.0, 4.1)"],
    seealso: ["max", "mean", "median", "prod", "std", "sum", "variance"]
}
  , xZ = {
    name: "mode",
    category: "Statistics",
    syntax: ["mode(a, b, c, ...)", "mode(A)", "mode(A, a, b, B, c, ...)"],
    description: "Computes the mode of all values as an array. In case mode being more than one, multiple values are returned in an array.",
    examples: ["mode(2, 1, 4, 3, 1)", "mode([1, 2.7, 3.2, 4, 2.7])", "mode(1, 4, 6, 1, 6)"],
    seealso: ["max", "mean", "min", "median", "prod", "std", "sum", "variance"]
}
  , AZ = {
    name: "prod",
    category: "Statistics",
    syntax: ["prod(a, b, c, ...)", "prod(A)"],
    description: "Compute the product of all values.",
    examples: ["prod(2, 3, 4)", "prod([2, 3, 4])", "prod([2, 5; 4, 3])"],
    seealso: ["max", "mean", "min", "median", "min", "std", "sum", "variance"]
}
  , EZ = {
    name: "quantileSeq",
    category: "Statistics",
    syntax: ["quantileSeq(A, prob[, sorted])", "quantileSeq(A, [prob1, prob2, ...][, sorted])", "quantileSeq(A, N[, sorted])"],
    description: `Compute the prob order quantile of a matrix or a list with values. The sequence is sorted and the middle value is returned. Supported types of sequence values are: Number, BigNumber, Unit Supported types of probablity are: Number, BigNumber. 

In case of a (multi dimensional) array or matrix, the prob order quantile of all elements will be calculated.`,
    examples: ["quantileSeq([3, -1, 5, 7], 0.5)", "quantileSeq([3, -1, 5, 7], [1/3, 2/3])", "quantileSeq([3, -1, 5, 7], 2)", "quantileSeq([-1, 3, 5, 7], 0.5, true)"],
    seealso: ["mean", "median", "min", "max", "prod", "std", "sum", "variance"]
}
  , kZ = {
    name: "std",
    category: "Statistics",
    syntax: ["std(a, b, c, ...)", "std(A)", "std(A, dimension)", "std(A, normalization)", "std(A, dimension, normalization)"],
    description: 'Compute the standard deviation of all values, defined as std(A) = sqrt(variance(A)). Optional parameter normalization can be "unbiased" (default), "uncorrected", or "biased".',
    examples: ["std(2, 4, 6)", "std([2, 4, 6, 8])", 'std([2, 4, 6, 8], "uncorrected")', 'std([2, 4, 6, 8], "biased")', "std([1, 2, 3; 4, 5, 6])"],
    seealso: ["max", "mean", "min", "median", "prod", "sum", "variance"]
}
  , TZ = {
    name: "cumsum",
    category: "Statistics",
    syntax: ["cumsum(a, b, c, ...)", "cumsum(A)"],
    description: "Compute the cumulative sum of all values.",
    examples: ["cumsum(2, 3, 4, 1)", "cumsum([2, 3, 4, 1])", "cumsum([1, 2; 3, 4])", "cumsum([1, 2; 3, 4], 1)", "cumsum([1, 2; 3, 4], 2)"],
    seealso: ["max", "mean", "median", "min", "prod", "std", "sum", "variance"]
}
  , NZ = {
    name: "sum",
    category: "Statistics",
    syntax: ["sum(a, b, c, ...)", "sum(A)", "sum(A, dimension)"],
    description: "Compute the sum of all values.",
    examples: ["sum(2, 3, 4, 1)", "sum([2, 3, 4, 1])", "sum([2, 5; 4, 3])"],
    seealso: ["max", "mean", "median", "min", "prod", "std", "sum", "variance"]
}
  , MZ = {
    name: "variance",
    category: "Statistics",
    syntax: ["variance(a, b, c, ...)", "variance(A)", "variance(A, dimension)", "variance(A, normalization)", "variance(A, dimension, normalization)"],
    description: 'Compute the variance of all values. Optional parameter normalization can be "unbiased" (default), "uncorrected", or "biased".',
    examples: ["variance(2, 4, 6)", "variance([2, 4, 6, 8])", 'variance([2, 4, 6, 8], "uncorrected")', 'variance([2, 4, 6, 8], "biased")', "variance([1, 2, 3; 4, 5, 6])"],
    seealso: ["max", "mean", "min", "median", "min", "prod", "std", "sum"]
}
  , IZ = {
    name: "corr",
    category: "Statistics",
    syntax: ["corr(A,B)"],
    description: "Compute the correlation coefficient of a two list with values, For matrices, the matrix correlation coefficient is calculated.",
    examples: ["corr([2, 4, 6, 8],[1, 2, 3, 6])", "corr(matrix([[1, 2.2, 3, 4.8, 5], [1, 2, 3, 4, 5]]), matrix([[4, 5.3, 6.6, 7, 8], [1, 2, 3, 4, 5]]))"],
    seealso: ["max", "mean", "min", "median", "min", "prod", "std", "sum"]
}
  , DZ = {
    name: "acos",
    category: "Trigonometry",
    syntax: ["acos(x)"],
    description: "Compute the inverse cosine of a value in radians.",
    examples: ["acos(0.5)", "acos(cos(2.3))"],
    seealso: ["cos", "atan", "asin"]
}
  , UZ = {
    name: "acosh",
    category: "Trigonometry",
    syntax: ["acosh(x)"],
    description: "Calculate the hyperbolic arccos of a value, defined as `acosh(x) = ln(sqrt(x^2 - 1) + x)`.",
    examples: ["acosh(1.5)"],
    seealso: ["cosh", "asinh", "atanh"]
}
  , FZ = {
    name: "acot",
    category: "Trigonometry",
    syntax: ["acot(x)"],
    description: "Calculate the inverse cotangent of a value.",
    examples: ["acot(0.5)", "acot(cot(0.5))", "acot(2)"],
    seealso: ["cot", "atan"]
}
  , OZ = {
    name: "acoth",
    category: "Trigonometry",
    syntax: ["acoth(x)"],
    description: "Calculate the hyperbolic arccotangent of a value, defined as `acoth(x) = (ln((x+1)/x) + ln(x/(x-1))) / 2`.",
    examples: ["acoth(2)", "acoth(0.5)"],
    seealso: ["acsch", "asech"]
}
  , PZ = {
    name: "acsc",
    category: "Trigonometry",
    syntax: ["acsc(x)"],
    description: "Calculate the inverse cotangent of a value.",
    examples: ["acsc(2)", "acsc(csc(0.5))", "acsc(0.5)"],
    seealso: ["csc", "asin", "asec"]
}
  , BZ = {
    name: "acsch",
    category: "Trigonometry",
    syntax: ["acsch(x)"],
    description: "Calculate the hyperbolic arccosecant of a value, defined as `acsch(x) = ln(1/x + sqrt(1/x^2 + 1))`.",
    examples: ["acsch(0.5)"],
    seealso: ["asech", "acoth"]
}
  , RZ = {
    name: "asec",
    category: "Trigonometry",
    syntax: ["asec(x)"],
    description: "Calculate the inverse secant of a value.",
    examples: ["asec(0.5)", "asec(sec(0.5))", "asec(2)"],
    seealso: ["acos", "acot", "acsc"]
}
  , LZ = {
    name: "asech",
    category: "Trigonometry",
    syntax: ["asech(x)"],
    description: "Calculate the inverse secant of a value.",
    examples: ["asech(0.5)"],
    seealso: ["acsch", "acoth"]
}
  , qZ = {
    name: "asin",
    category: "Trigonometry",
    syntax: ["asin(x)"],
    description: "Compute the inverse sine of a value in radians.",
    examples: ["asin(0.5)", "asin(sin(0.5))"],
    seealso: ["sin", "acos", "atan"]
}
  , VZ = {
    name: "asinh",
    category: "Trigonometry",
    syntax: ["asinh(x)"],
    description: "Calculate the hyperbolic arcsine of a value, defined as `asinh(x) = ln(x + sqrt(x^2 + 1))`.",
    examples: ["asinh(0.5)"],
    seealso: ["acosh", "atanh"]
}
  , $Z = {
    name: "atan",
    category: "Trigonometry",
    syntax: ["atan(x)"],
    description: "Compute the inverse tangent of a value in radians.",
    examples: ["atan(0.5)", "atan(tan(0.5))"],
    seealso: ["tan", "acos", "asin"]
}
  , zZ = {
    name: "atan2",
    category: "Trigonometry",
    syntax: ["atan2(y, x)"],
    description: "Computes the principal value of the arc tangent of y/x in radians.",
    examples: ["atan2(2, 2) / pi", "angle = 60 deg in rad", "x = cos(angle)", "y = sin(angle)", "atan2(y, x)"],
    seealso: ["sin", "cos", "tan"]
}
  , GZ = {
    name: "atanh",
    category: "Trigonometry",
    syntax: ["atanh(x)"],
    description: "Calculate the hyperbolic arctangent of a value, defined as `atanh(x) = ln((1 + x)/(1 - x)) / 2`.",
    examples: ["atanh(0.5)"],
    seealso: ["acosh", "asinh"]
}
  , jZ = {
    name: "cos",
    category: "Trigonometry",
    syntax: ["cos(x)"],
    description: "Compute the cosine of x in radians.",
    examples: ["cos(2)", "cos(pi / 4) ^ 2", "cos(180 deg)", "cos(60 deg)", "sin(0.2)^2 + cos(0.2)^2"],
    seealso: ["acos", "sin", "tan"]
}
  , HZ = {
    name: "cosh",
    category: "Trigonometry",
    syntax: ["cosh(x)"],
    description: "Compute the hyperbolic cosine of x in radians.",
    examples: ["cosh(0.5)"],
    seealso: ["sinh", "tanh", "coth"]
}
  , WZ = {
    name: "cot",
    category: "Trigonometry",
    syntax: ["cot(x)"],
    description: "Compute the cotangent of x in radians. Defined as 1/tan(x)",
    examples: ["cot(2)", "1 / tan(2)"],
    seealso: ["sec", "csc", "tan"]
}
  , YZ = {
    name: "coth",
    category: "Trigonometry",
    syntax: ["coth(x)"],
    description: "Compute the hyperbolic cotangent of x in radians.",
    examples: ["coth(2)", "1 / tanh(2)"],
    seealso: ["sech", "csch", "tanh"]
}
  , JZ = {
    name: "csc",
    category: "Trigonometry",
    syntax: ["csc(x)"],
    description: "Compute the cosecant of x in radians. Defined as 1/sin(x)",
    examples: ["csc(2)", "1 / sin(2)"],
    seealso: ["sec", "cot", "sin"]
}
  , KZ = {
    name: "csch",
    category: "Trigonometry",
    syntax: ["csch(x)"],
    description: "Compute the hyperbolic cosecant of x in radians. Defined as 1/sinh(x)",
    examples: ["csch(2)", "1 / sinh(2)"],
    seealso: ["sech", "coth", "sinh"]
}
  , QZ = {
    name: "sec",
    category: "Trigonometry",
    syntax: ["sec(x)"],
    description: "Compute the secant of x in radians. Defined as 1/cos(x)",
    examples: ["sec(2)", "1 / cos(2)"],
    seealso: ["cot", "csc", "cos"]
}
  , ZZ = {
    name: "sech",
    category: "Trigonometry",
    syntax: ["sech(x)"],
    description: "Compute the hyperbolic secant of x in radians. Defined as 1/cosh(x)",
    examples: ["sech(2)", "1 / cosh(2)"],
    seealso: ["coth", "csch", "cosh"]
}
  , XZ = {
    name: "sin",
    category: "Trigonometry",
    syntax: ["sin(x)"],
    description: "Compute the sine of x in radians.",
    examples: ["sin(2)", "sin(pi / 4) ^ 2", "sin(90 deg)", "sin(30 deg)", "sin(0.2)^2 + cos(0.2)^2"],
    seealso: ["asin", "cos", "tan"]
}
  , eX = {
    name: "sinh",
    category: "Trigonometry",
    syntax: ["sinh(x)"],
    description: "Compute the hyperbolic sine of x in radians.",
    examples: ["sinh(0.5)"],
    seealso: ["cosh", "tanh"]
}
  , tX = {
    name: "tan",
    category: "Trigonometry",
    syntax: ["tan(x)"],
    description: "Compute the tangent of x in radians.",
    examples: ["tan(0.5)", "sin(0.5) / cos(0.5)", "tan(pi / 4)", "tan(45 deg)"],
    seealso: ["atan", "sin", "cos"]
}
  , rX = {
    name: "tanh",
    category: "Trigonometry",
    syntax: ["tanh(x)"],
    description: "Compute the hyperbolic tangent of x in radians.",
    examples: ["tanh(0.5)", "sinh(0.5) / cosh(0.5)"],
    seealso: ["sinh", "cosh"]
}
  , aX = {
    name: "to",
    category: "Units",
    syntax: ["x to unit", "to(x, unit)"],
    description: "Change the unit of a value.",
    examples: ["5 inch to cm", "3.2kg to g", "16 bytes in bits"],
    seealso: []
}
  , nX = {
    name: "bin",
    category: "Utils",
    syntax: ["bin(value)"],
    description: "Format a number as binary",
    examples: ["bin(2)"],
    seealso: ["oct", "hex"]
}
  , iX = {
    name: "clone",
    category: "Utils",
    syntax: ["clone(x)"],
    description: "Clone a variable. Creates a copy of primitive variables,and a deep copy of matrices",
    examples: ["clone(3.5)", "clone(2 - 4i)", "clone(45 deg)", "clone([1, 2; 3, 4])", 'clone("hello world")'],
    seealso: []
}
  , oX = {
    name: "format",
    category: "Utils",
    syntax: ["format(value)", "format(value, precision)"],
    description: "Format a value of any type as string.",
    examples: ["format(2.3)", "format(3 - 4i)", "format([])", "format(pi, 3)"],
    seealso: ["print"]
}
  , sX = {
    name: "hasNumericValue",
    category: "Utils",
    syntax: ["hasNumericValue(x)"],
    description: "Test whether a value is an numeric value. In case of a string, true is returned if the string contains a numeric value.",
    examples: ["hasNumericValue(2)", 'hasNumericValue("2")', 'isNumeric("2")', "hasNumericValue(0)", "hasNumericValue(bignumber(500))", "hasNumericValue(fraction(0.125))", "hasNumericValue(2 + 3i)", 'hasNumericValue([2.3, "foo", false])'],
    seealso: ["isInteger", "isZero", "isNegative", "isPositive", "isNaN", "isNumeric"]
}
  , lX = {
    name: "hex",
    category: "Utils",
    syntax: ["hex(value)"],
    description: "Format a number as hexadecimal",
    examples: ["hex(240)"],
    seealso: ["bin", "oct"]
}
  , uX = {
    name: "isInteger",
    category: "Utils",
    syntax: ["isInteger(x)"],
    description: "Test whether a value is an integer number.",
    examples: ["isInteger(2)", "isInteger(3.5)", "isInteger([3, 0.5, -2])"],
    seealso: ["isNegative", "isNumeric", "isPositive", "isZero"]
}
  , cX = {
    name: "isNaN",
    category: "Utils",
    syntax: ["isNaN(x)"],
    description: "Test whether a value is NaN (not a number)",
    examples: ["isNaN(2)", "isNaN(0 / 0)", "isNaN(NaN)", "isNaN(Infinity)"],
    seealso: ["isNegative", "isNumeric", "isPositive", "isZero"]
}
  , dX = {
    name: "isNegative",
    category: "Utils",
    syntax: ["isNegative(x)"],
    description: "Test whether a value is negative: smaller than zero.",
    examples: ["isNegative(2)", "isNegative(0)", "isNegative(-4)", "isNegative([3, 0.5, -2])"],
    seealso: ["isInteger", "isNumeric", "isPositive", "isZero"]
}
  , vX = {
    name: "isNumeric",
    category: "Utils",
    syntax: ["isNumeric(x)"],
    description: "Test whether a value is a numeric value. Returns true when the input is a number, BigNumber, Fraction, or boolean.",
    examples: ["isNumeric(2)", 'isNumeric("2")', 'hasNumericValue("2")', "isNumeric(0)", "isNumeric(bignumber(500))", "isNumeric(fraction(0.125))", "isNumeric(2 + 3i)", 'isNumeric([2.3, "foo", false])'],
    seealso: ["isInteger", "isZero", "isNegative", "isPositive", "isNaN", "hasNumericValue"]
}
  , hX = {
    name: "isPositive",
    category: "Utils",
    syntax: ["isPositive(x)"],
    description: "Test whether a value is positive: larger than zero.",
    examples: ["isPositive(2)", "isPositive(0)", "isPositive(-4)", "isPositive([3, 0.5, -2])"],
    seealso: ["isInteger", "isNumeric", "isNegative", "isZero"]
}
  , mX = {
    name: "isPrime",
    category: "Utils",
    syntax: ["isPrime(x)"],
    description: "Test whether a value is prime: has no divisors other than itself and one.",
    examples: ["isPrime(3)", "isPrime(-2)", "isPrime([2, 17, 100])"],
    seealso: ["isInteger", "isNumeric", "isNegative", "isZero"]
}
  , fX = {
    name: "isZero",
    category: "Utils",
    syntax: ["isZero(x)"],
    description: "Test whether a value is zero.",
    examples: ["isZero(2)", "isZero(0)", "isZero(-4)", "isZero([3, 0, -2, 0])"],
    seealso: ["isInteger", "isNumeric", "isNegative", "isPositive"]
}
  , pX = {
    name: "numeric",
    category: "Utils",
    syntax: ["numeric(x)"],
    description: "Convert a numeric input to a specific numeric type: number, BigNumber, or Fraction.",
    examples: ['numeric("4")', 'numeric("4", "number")', 'numeric("4", "BigNumber")', 'numeric("4", "Fraction")', 'numeric(4, "Fraction")', 'numeric(fraction(2, 5), "number")'],
    seealso: ["number", "fraction", "bignumber", "string", "format"]
}
  , yX = {
    name: "oct",
    category: "Utils",
    syntax: ["oct(value)"],
    description: "Format a number as octal",
    examples: ["oct(56)"],
    seealso: ["bin", "hex"]
}
  , wX = {
    name: "print",
    category: "Utils",
    syntax: ["print(template, values)", "print(template, values, precision)"],
    description: "Interpolate values into a string template.",
    examples: ['print("Lucy is $age years old", {age: 5})', 'print("The value of pi is $pi", {pi: pi}, 3)', 'print("Hello, $user.name!", {user: {name: "John"}})', 'print("Values: $1, $2, $3", [6, 9, 4])'],
    seealso: ["format"]
}
  , gX = {
    name: "typeOf",
    category: "Utils",
    syntax: ["typeOf(x)"],
    description: "Get the type of a variable.",
    examples: ["typeOf(3.5)", "typeOf(2 - 4i)", "typeOf(45 deg)", 'typeOf("hello world")'],
    seealso: ["getMatrixDataType"]
}
  , _X = {
    name: "solveODE",
    category: "Numeric",
    syntax: ["solveODE(func, tspan, y0)", "solveODE(func, tspan, y0, options)"],
    description: "Numerical Integration of Ordinary Differential Equations.",
    examples: ["f(t,y) = y", "tspan = [0, 4]", "solveODE(f, tspan, 1)", "solveODE(f, tspan, [1, 2])", 'solveODE(f, tspan, 1, { method:"RK23", maxStep:0.1 })'],
    seealso: ["derivative", "simplifyCore"]
}
  , bX = {
    bignumber: dJ,
    boolean: vJ,
    complex: hJ,
    createUnit: mJ,
    fraction: fJ,
    index: pJ,
    matrix: yJ,
    number: wJ,
    sparse: gJ,
    splitUnit: _J,
    string: bJ,
    unit: CJ,
    e: oS,
    E: oS,
    false: KY,
    i: QY,
    Infinity: ZY,
    LN2: eJ,
    LN10: XY,
    LOG2E: rJ,
    LOG10E: tJ,
    NaN: aJ,
    null: nJ,
    pi: sS,
    PI: sS,
    phi: iJ,
    SQRT1_2: oJ,
    SQRT2: sJ,
    tau: lJ,
    true: uJ,
    version: cJ,
    speedOfLight: {
        description: "Speed of light in vacuum",
        examples: ["speedOfLight"]
    },
    gravitationConstant: {
        description: "Newtonian constant of gravitation",
        examples: ["gravitationConstant"]
    },
    planckConstant: {
        description: "Planck constant",
        examples: ["planckConstant"]
    },
    reducedPlanckConstant: {
        description: "Reduced Planck constant",
        examples: ["reducedPlanckConstant"]
    },
    magneticConstant: {
        description: "Magnetic constant (vacuum permeability)",
        examples: ["magneticConstant"]
    },
    electricConstant: {
        description: "Electric constant (vacuum permeability)",
        examples: ["electricConstant"]
    },
    vacuumImpedance: {
        description: "Characteristic impedance of vacuum",
        examples: ["vacuumImpedance"]
    },
    coulomb: {
        description: "Coulomb's constant",
        examples: ["coulomb"]
    },
    elementaryCharge: {
        description: "Elementary charge",
        examples: ["elementaryCharge"]
    },
    bohrMagneton: {
        description: "Borh magneton",
        examples: ["bohrMagneton"]
    },
    conductanceQuantum: {
        description: "Conductance quantum",
        examples: ["conductanceQuantum"]
    },
    inverseConductanceQuantum: {
        description: "Inverse conductance quantum",
        examples: ["inverseConductanceQuantum"]
    },
    magneticFluxQuantum: {
        description: "Magnetic flux quantum",
        examples: ["magneticFluxQuantum"]
    },
    nuclearMagneton: {
        description: "Nuclear magneton",
        examples: ["nuclearMagneton"]
    },
    klitzing: {
        description: "Von Klitzing constant",
        examples: ["klitzing"]
    },
    bohrRadius: {
        description: "Borh radius",
        examples: ["bohrRadius"]
    },
    classicalElectronRadius: {
        description: "Classical electron radius",
        examples: ["classicalElectronRadius"]
    },
    electronMass: {
        description: "Electron mass",
        examples: ["electronMass"]
    },
    fermiCoupling: {
        description: "Fermi coupling constant",
        examples: ["fermiCoupling"]
    },
    fineStructure: {
        description: "Fine-structure constant",
        examples: ["fineStructure"]
    },
    hartreeEnergy: {
        description: "Hartree energy",
        examples: ["hartreeEnergy"]
    },
    protonMass: {
        description: "Proton mass",
        examples: ["protonMass"]
    },
    deuteronMass: {
        description: "Deuteron Mass",
        examples: ["deuteronMass"]
    },
    neutronMass: {
        description: "Neutron mass",
        examples: ["neutronMass"]
    },
    quantumOfCirculation: {
        description: "Quantum of circulation",
        examples: ["quantumOfCirculation"]
    },
    rydberg: {
        description: "Rydberg constant",
        examples: ["rydberg"]
    },
    thomsonCrossSection: {
        description: "Thomson cross section",
        examples: ["thomsonCrossSection"]
    },
    weakMixingAngle: {
        description: "Weak mixing angle",
        examples: ["weakMixingAngle"]
    },
    efimovFactor: {
        description: "Efimov factor",
        examples: ["efimovFactor"]
    },
    atomicMass: {
        description: "Atomic mass constant",
        examples: ["atomicMass"]
    },
    avogadro: {
        description: "Avogadro's number",
        examples: ["avogadro"]
    },
    boltzmann: {
        description: "Boltzmann constant",
        examples: ["boltzmann"]
    },
    faraday: {
        description: "Faraday constant",
        examples: ["faraday"]
    },
    firstRadiation: {
        description: "First radiation constant",
        examples: ["firstRadiation"]
    },
    loschmidt: {
        description: "Loschmidt constant at T=273.15 K and p=101.325 kPa",
        examples: ["loschmidt"]
    },
    gasConstant: {
        description: "Gas constant",
        examples: ["gasConstant"]
    },
    molarPlanckConstant: {
        description: "Molar Planck constant",
        examples: ["molarPlanckConstant"]
    },
    molarVolume: {
        description: "Molar volume of an ideal gas at T=273.15 K and p=101.325 kPa",
        examples: ["molarVolume"]
    },
    sackurTetrode: {
        description: "Sackur-Tetrode constant at T=1 K and p=101.325 kPa",
        examples: ["sackurTetrode"]
    },
    secondRadiation: {
        description: "Second radiation constant",
        examples: ["secondRadiation"]
    },
    stefanBoltzmann: {
        description: "Stefan-Boltzmann constant",
        examples: ["stefanBoltzmann"]
    },
    wienDisplacement: {
        description: "Wien displacement law constant",
        examples: ["wienDisplacement"]
    },
    molarMass: {
        description: "Molar mass constant",
        examples: ["molarMass"]
    },
    molarMassC12: {
        description: "Molar mass constant of carbon-12",
        examples: ["molarMassC12"]
    },
    gravity: {
        description: "Standard acceleration of gravity (standard acceleration of free-fall on Earth)",
        examples: ["gravity"]
    },
    planckLength: {
        description: "Planck length",
        examples: ["planckLength"]
    },
    planckMass: {
        description: "Planck mass",
        examples: ["planckMass"]
    },
    planckTime: {
        description: "Planck time",
        examples: ["planckTime"]
    },
    planckCharge: {
        description: "Planck charge",
        examples: ["planckCharge"]
    },
    planckTemperature: {
        description: "Planck temperature",
        examples: ["planckTemperature"]
    },
    derivative: EJ,
    lsolve: TJ,
    lsolveAll: NJ,
    lup: MJ,
    lusolve: IJ,
    leafCount: kJ,
    polynomialRoot: DJ,
    resolve: OJ,
    simplify: PJ,
    simplifyConstant: BJ,
    simplifyCore: RJ,
    symbolicEqual: qJ,
    rationalize: FJ,
    slu: LJ,
    usolve: VJ,
    usolveAll: $J,
    qr: UJ,
    abs: zJ,
    add: GJ,
    cbrt: jJ,
    ceil: HJ,
    cube: WJ,
    divide: YJ,
    dotDivide: JJ,
    dotMultiply: KJ,
    dotPow: QJ,
    exp: ZJ,
    expm: XJ,
    expm1: eK,
    fix: tK,
    floor: rK,
    gcd: aK,
    hypot: nK,
    lcm: oK,
    log: sK,
    log2: cK,
    log1p: uK,
    log10: lK,
    mod: dK,
    multiply: vK,
    norm: hK,
    nthRoot: mK,
    nthRoots: fK,
    pow: pK,
    round: yK,
    sign: wK,
    sqrt: gK,
    sqrtm: _K,
    square: xK,
    subtract: AK,
    unaryMinus: EK,
    unaryPlus: kK,
    xgcd: TK,
    invmod: iK,
    bitAnd: NK,
    bitNot: MK,
    bitOr: IK,
    bitXor: DK,
    leftShift: UK,
    rightArithShift: FK,
    rightLogShift: OK,
    bellNumbers: PK,
    catalan: BK,
    composition: RK,
    stirlingS2: LK,
    config: SJ,
    import: xJ,
    typed: AJ,
    arg: qK,
    conj: VK,
    re: zK,
    im: $K,
    evaluate: GK,
    help: jK,
    distance: HK,
    intersect: WK,
    and: YK,
    not: JK,
    or: KK,
    xor: QK,
    concat: XK,
    count: eQ,
    cross: tQ,
    column: ZK,
    ctranspose: rQ,
    det: aQ,
    diag: nQ,
    diff: iQ,
    dot: oQ,
    getMatrixDataType: dQ,
    identity: vQ,
    filter: lQ,
    flatten: uQ,
    forEach: cQ,
    inv: hQ,
    pinv: mQ,
    eigs: sQ,
    kron: fQ,
    matrixFromFunction: wQ,
    matrixFromRows: gQ,
    matrixFromColumns: yQ,
    map: pQ,
    ones: _Q,
    partitionSelect: bQ,
    range: CQ,
    resize: xQ,
    reshape: SQ,
    rotate: AQ,
    rotationMatrix: EQ,
    row: kQ,
    size: TQ,
    sort: NQ,
    squeeze: MQ,
    subset: IQ,
    trace: DQ,
    transpose: UQ,
    zeros: FQ,
    fft: OQ,
    ifft: PQ,
    sylvester: bK,
    schur: CK,
    lyap: SK,
    solveODE: _X,
    combinations: BQ,
    combinationsWithRep: RQ,
    factorial: LQ,
    gamma: qQ,
    kldivergence: $Q,
    lgamma: VQ,
    multinomial: zQ,
    permutations: GQ,
    pickRandom: jQ,
    random: HQ,
    randomInt: WQ,
    compare: YQ,
    compareNatural: JQ,
    compareText: KQ,
    deepEqual: QQ,
    equal: ZQ,
    equalText: XQ,
    larger: eZ,
    largerEq: tZ,
    smaller: rZ,
    smallerEq: aZ,
    unequal: nZ,
    setCartesian: iZ,
    setDifference: oZ,
    setDistinct: sZ,
    setIntersect: lZ,
    setIsSubset: uZ,
    setMultiplicity: cZ,
    setPowerset: dZ,
    setSize: vZ,
    setSymDifference: hZ,
    setUnion: mZ,
    zpk2tf: fZ,
    freqz: pZ,
    erf: yZ,
    zeta: wZ,
    cumsum: TZ,
    mad: gZ,
    max: _Z,
    mean: bZ,
    median: CZ,
    min: SZ,
    mode: xZ,
    prod: AZ,
    quantileSeq: EZ,
    std: kZ,
    sum: NZ,
    variance: MZ,
    corr: IZ,
    acos: DZ,
    acosh: UZ,
    acot: FZ,
    acoth: OZ,
    acsc: PZ,
    acsch: BZ,
    asec: RZ,
    asech: LZ,
    asin: qZ,
    asinh: VZ,
    atan: $Z,
    atanh: GZ,
    atan2: zZ,
    cos: jZ,
    cosh: HZ,
    cot: WZ,
    coth: YZ,
    csc: JZ,
    csch: KZ,
    sec: QZ,
    sech: ZZ,
    sin: XZ,
    sinh: eX,
    tan: tX,
    tanh: rX,
    to: aX,
    clone: iX,
    format: oX,
    bin: nX,
    oct: yX,
    hex: lX,
    isNaN: cX,
    isInteger: uX,
    isNegative: dX,
    isNumeric: vX,
    hasNumericValue: sX,
    isPositive: hX,
    isPrime: mX,
    isZero: fX,
    print: wX,
    typeOf: gX,
    numeric: pX
}
  , lS = "help"
  , CX = ["typed", "mathWithTransform", "Help"]
  , SX = j(lS, CX, e => {
    var {typed: t, mathWithTransform: r, Help: a} = e;
    return t(lS, {
        any: function(i) {
            var o, s = i;
            if (typeof i != "string") {
                for (o in r)
                    if (Ue(r, o) && i === r[o]) {
                        s = o;
                        break
                    }
            }
            var l = la(bX, s);
            if (!l) {
                var u = typeof s == "function" ? s.name : s;
                throw new Error('No documentation found on "' + u + '"')
            }
            return new a(l)
        }
    })
}
)
  , uS = "chain"
  , xX = ["typed", "Chain"]
  , AX = j(uS, xX, e => {
    var {typed: t, Chain: r} = e;
    return t(uS, {
        "": function() {
            return new r
        },
        any: function(n) {
            return new r(n)
        }
    })
}
)
  , cS = "det"
  , EX = ["typed", "matrix", "subtract", "multiply", "divideScalar", "isZero", "unaryMinus"]
  , kX = j(cS, EX, e => {
    var {typed: t, matrix: r, subtract: a, multiply: n, divideScalar: i, isZero: o, unaryMinus: s} = e;
    return t(cS, {
        any: function(c) {
            return Qe(c)
        },
        "Array | Matrix": function(c) {
            var d;
            switch (je(c) ? d = c.size() : Array.isArray(c) ? (c = r(c),
            d = c.size()) : d = [],
            d.length) {
            case 0:
                return Qe(c);
            case 1:
                if (d[0] === 1)
                    return Qe(c.valueOf()[0]);
                if (d[0] === 0)
                    return 1;
                throw new RangeError("Matrix must be square (size: " + st(d) + ")");
            case 2:
                {
                    var v = d[0]
                      , h = d[1];
                    if (v === h)
                        return l(c.clone().valueOf(), v);
                    if (h === 0)
                        return 1;
                    throw new RangeError("Matrix must be square (size: " + st(d) + ")")
                }
            default:
                throw new RangeError("Matrix must be two dimensional (size: " + st(d) + ")")
            }
        }
    });
    function l(u, c, d) {
        if (c === 1)
            return Qe(u[0][0]);
        if (c === 2)
            return a(n(u[0][0], u[1][1]), n(u[1][0], u[0][1]));
        for (var v = !1, h = new Array(c).fill(0).map( (x, E) => E), p = 0; p < c; p++) {
            var f = h[p];
            if (o(u[f][p])) {
                var _ = void 0;
                for (_ = p + 1; _ < c; _++)
                    if (!o(u[h[_]][p])) {
                        f = h[_],
                        h[_] = h[p],
                        h[p] = f,
                        v = !v;
                        break
                    }
                if (_ === c)
                    return u[f][p]
            }
            for (var y = u[f][p], g = p === 0 ? 1 : u[h[p - 1]][p - 1], m = p + 1; m < c; m++)
                for (var w = h[m], C = p + 1; C < c; C++)
                    u[w][C] = i(a(n(u[w][C], y), n(u[w][p], u[f][C])), g)
        }
        var b = u[h[c - 1]][c - 1];
        return v ? s(b) : b
    }
}
)
  , dS = "inv"
  , TX = ["typed", "matrix", "divideScalar", "addScalar", "multiply", "unaryMinus", "det", "identity", "abs"]
  , NX = j(dS, TX, e => {
    var {typed: t, matrix: r, divideScalar: a, addScalar: n, multiply: i, unaryMinus: o, det: s, identity: l, abs: u} = e;
    return t(dS, {
        "Array | Matrix": function(v) {
            var h = je(v) ? v.size() : it(v);
            switch (h.length) {
            case 1:
                if (h[0] === 1)
                    return je(v) ? r([a(1, v.valueOf()[0])]) : [a(1, v[0])];
                throw new RangeError("Matrix must be square (size: " + st(h) + ")");
            case 2:
                {
                    var p = h[0]
                      , f = h[1];
                    if (p === f)
                        return je(v) ? r(c(v.valueOf(), p, f), v.storage()) : c(v, p, f);
                    throw new RangeError("Matrix must be square (size: " + st(h) + ")")
                }
            default:
                throw new RangeError("Matrix must be two dimensional (size: " + st(h) + ")")
            }
        },
        any: function(v) {
            return a(1, v)
        }
    });
    function c(d, v, h) {
        var p, f, _, y, g;
        if (v === 1) {
            if (y = d[0][0],
            y === 0)
                throw Error("Cannot calculate inverse, determinant is zero");
            return [[a(1, y)]]
        } else if (v === 2) {
            var m = s(d);
            if (m === 0)
                throw Error("Cannot calculate inverse, determinant is zero");
            return [[a(d[1][1], m), a(o(d[0][1]), m)], [a(o(d[1][0]), m), a(d[0][0], m)]]
        } else {
            var w = d.concat();
            for (p = 0; p < v; p++)
                w[p] = w[p].concat();
            for (var C = l(v).valueOf(), b = 0; b < h; b++) {
                var x = u(w[b][b])
                  , E = b;
                for (p = b + 1; p < v; )
                    u(w[p][b]) > x && (x = u(w[p][b]),
                    E = p),
                    p++;
                if (x === 0)
                    throw Error("Cannot calculate inverse, determinant is zero");
                p = E,
                p !== b && (g = w[b],
                w[b] = w[p],
                w[p] = g,
                g = C[b],
                C[b] = C[p],
                C[p] = g);
                var k = w[b]
                  , A = C[b];
                for (p = 0; p < v; p++) {
                    var I = w[p]
                      , T = C[p];
                    if (p !== b) {
                        if (I[b] !== 0) {
                            for (_ = a(o(I[b]), k[b]),
                            f = b; f < h; f++)
                                I[f] = n(I[f], i(_, k[f]));
                            for (f = 0; f < h; f++)
                                T[f] = n(T[f], i(_, A[f]))
                        }
                    } else {
                        for (_ = k[b],
                        f = b; f < h; f++)
                            I[f] = a(I[f], _);
                        for (f = 0; f < h; f++)
                            T[f] = a(T[f], _)
                    }
                }
            }
            return C
        }
    }
}
)
  , vS = "pinv"
  , MX = ["typed", "matrix", "inv", "deepEqual", "equal", "dotDivide", "dot", "ctranspose", "divideScalar", "multiply", "add", "Complex"]
  , IX = j(vS, MX, e => {
    var {typed: t, matrix: r, inv: a, deepEqual: n, equal: i, dotDivide: o, dot: s, ctranspose: l, divideScalar: u, multiply: c, add: d, Complex: v} = e;
    return t(vS, {
        "Array | Matrix": function(m) {
            var w = je(m) ? m.size() : it(m);
            switch (w.length) {
            case 1:
                return y(m) ? l(m) : w[0] === 1 ? a(m) : o(l(m), s(m, m));
            case 2:
                {
                    if (y(m))
                        return l(m);
                    var C = w[0]
                      , b = w[1];
                    if (C === b)
                        try {
                            return a(m)
                        } catch (x) {
                            if (!(x instanceof Error && x.message.match(/Cannot calculate inverse, determinant is zero/)))
                                throw x
                        }
                    return je(m) ? r(h(m.valueOf(), C, b), m.storage()) : h(m, C, b)
                }
            default:
                throw new RangeError("Matrix must be two dimensional (size: " + st(w) + ")")
            }
        },
        any: function(m) {
            return i(m, 0) ? Qe(m) : u(1, m)
        }
    });
    function h(g, m, w) {
        var {C, F: b} = f(g, m, w)
          , x = c(a(c(l(C), C)), l(C))
          , E = c(l(b), a(c(b, l(b))));
        return c(E, x)
    }
    function p(g, m, w) {
        for (var C = Qe(g), b = 0, x = 0; x < m; x++) {
            if (w <= b)
                return C;
            for (var E = x; _(C[E][b]); )
                if (E++,
                m === E && (E = x,
                b++,
                w === b))
                    return C;
            [C[E],C[x]] = [C[x], C[E]];
            for (var k = C[x][b], A = 0; A < w; A++)
                C[x][A] = o(C[x][A], k);
            for (var I = 0; I < m; I++)
                if (I !== x) {
                    k = C[I][b];
                    for (var T = 0; T < w; T++)
                        C[I][T] = d(C[I][T], c(-1, c(k, C[x][T])))
                }
            b++
        }
        return C
    }
    function f(g, m, w) {
        var C = p(g, m, w)
          , b = g.map( (E, k) => E.filter( (A, I) => I < m && !_(s(C[I], C[I]))))
          , x = C.filter( (E, k) => !_(s(C[k], C[k])));
        return {
            C: b,
            F: x
        }
    }
    function _(g) {
        return i(d(g, v(1, 1)), d(0, v(1, 1)))
    }
    function y(g) {
        return n(d(g, v(1, 1)), d(c(g, 0), v(1, 1)))
    }
}
);
function DX(e) {
    var {addScalar: t, subtract: r, flatten: a, multiply: n, multiplyScalar: i, divideScalar: o, sqrt: s, abs: l, bignumber: u, diag: c, inv: d, qr: v, usolve: h, usolveAll: p, equal: f, complex: _, larger: y, smaller: g, matrixFromColumns: m, dot: w} = e;
    function C(V, J, Y, G, Z) {
        Z === void 0 && (Z = !0);
        var ie = b(V, J, Y, G, Z);
        x(V, J, Y, G, Z, ie);
        var {values: re, C: se} = E(V, J, Y, G, Z), ce;
        return Z && (ce = k(V, J, se, ie, re, Y, G),
        ce = m(...ce)),
        {
            values: re,
            vectors: ce
        }
    }
    function b(V, J, Y, G, Z) {
        var ie = G === "BigNumber", re = G === "Complex", se = ie ? u(0) : 0, ce = ie ? u(1) : re ? _(1) : 1, ue = ie ? u(1) : 1, oe = ie ? u(10) : 2, me = i(oe, oe), xe;
        Z && (xe = Array(J).fill(ce));
        for (var pe = !1; !pe; ) {
            pe = !0;
            for (var be = 0; be < J; be++) {
                for (var H = se, Q = se, z = 0; z < J; z++)
                    if (be !== z) {
                        var P = l(V[be][z]);
                        H = t(H, P),
                        Q = t(Q, P)
                    }
                if (!f(H, 0) && !f(Q, 0)) {
                    for (var $ = ue, K = H, ae = o(Q, oe), te = i(Q, oe); g(K, ae); )
                        K = i(K, me),
                        $ = i($, oe);
                    for (; y(K, te); )
                        K = o(K, me),
                        $ = o($, oe);
                    var L = g(o(t(K, Q), $), i(t(H, Q), .95));
                    if (L) {
                        pe = !1;
                        for (var W = o(1, $), ne = 0; ne < J; ne++)
                            be !== ne && (V[be][ne] = i(V[be][ne], $),
                            V[ne][be] = i(V[ne][be], W));
                        Z && (xe[be] = i(xe[be], $))
                    }
                }
            }
        }
        return c(xe)
    }
    function x(V, J, Y, G, Z, ie) {
        var re = G === "BigNumber"
          , se = G === "Complex"
          , ce = re ? u(0) : se ? _(0) : 0;
        re && (Y = u(Y));
        for (var ue = 0; ue < J - 2; ue++) {
            for (var oe = 0, me = ce, xe = ue + 1; xe < J; xe++) {
                var pe = V[xe][ue];
                g(l(me), l(pe)) && (me = pe,
                oe = xe)
            }
            if (!g(l(me), Y)) {
                if (oe !== ue + 1) {
                    var be = V[oe];
                    V[oe] = V[ue + 1],
                    V[ue + 1] = be;
                    for (var H = 0; H < J; H++) {
                        var Q = V[H][oe];
                        V[H][oe] = V[H][ue + 1],
                        V[H][ue + 1] = Q
                    }
                    if (Z) {
                        var z = ie[oe];
                        ie[oe] = ie[ue + 1],
                        ie[ue + 1] = z
                    }
                }
                for (var P = ue + 2; P < J; P++) {
                    var $ = o(V[P][ue], me);
                    if ($ !== 0) {
                        for (var K = 0; K < J; K++)
                            V[P][K] = r(V[P][K], i($, V[ue + 1][K]));
                        for (var ae = 0; ae < J; ae++)
                            V[ae][ue + 1] = t(V[ae][ue + 1], i($, V[ae][P]));
                        if (Z)
                            for (var te = 0; te < J; te++)
                                ie[P][te] = r(ie[P][te], i($, ie[ue + 1][te]))
                    }
                }
            }
        }
        return ie
    }
    function E(V, J, Y, G, Z) {
        var ie = G === "BigNumber"
          , re = G === "Complex"
          , se = ie ? u(1) : re ? _(1) : 1;
        ie && (Y = u(Y));
        for (var ce = Qe(V), ue = [], oe = J, me = [], xe = Z ? c(Array(J).fill(se)) : void 0, pe = Z ? c(Array(oe).fill(se)) : void 0, be = 0; be <= 100; ) {
            be += 1;
            for (var H = 0, Q = 0; Q < oe; Q++)
                ce[Q][Q] = r(ce[Q][Q], H);
            var {Q: z, R: P} = v(ce);
            ce = n(P, z);
            for (var $ = 0; $ < oe; $++)
                ce[$][$] = t(ce[$][$], H);
            if (Z && (pe = n(pe, z)),
            oe === 1 || g(l(ce[oe - 1][oe - 2]), Y)) {
                be = 0,
                ue.push(ce[oe - 1][oe - 1]),
                Z && (me.unshift([[1]]),
                T(pe, J),
                xe = n(xe, pe),
                oe > 1 && (pe = c(Array(oe - 1).fill(se)))),
                oe -= 1,
                ce.pop();
                for (var K = 0; K < oe; K++)
                    ce[K].pop()
            } else if (oe === 2 || g(l(ce[oe - 2][oe - 3]), Y)) {
                be = 0;
                var ae = A(ce[oe - 2][oe - 2], ce[oe - 2][oe - 1], ce[oe - 1][oe - 2], ce[oe - 1][oe - 1]);
                ue.push(...ae),
                Z && (me.unshift(I(ce[oe - 2][oe - 2], ce[oe - 2][oe - 1], ce[oe - 1][oe - 2], ce[oe - 1][oe - 1], ae[0], ae[1], Y, G)),
                T(pe, J),
                xe = n(xe, pe),
                oe > 2 && (pe = c(Array(oe - 2).fill(se)))),
                oe -= 2,
                ce.pop(),
                ce.pop();
                for (var te = 0; te < oe; te++)
                    ce[te].pop(),
                    ce[te].pop()
            }
            if (oe === 0)
                break
        }
        if (ue.sort( (ne, le) => +r(l(ne), l(le))),
        be > 100) {
            var L = Error("The eigenvalues failed to converge. Only found these eigenvalues: " + ue.join(", "));
            throw L.values = ue,
            L.vectors = [],
            L
        }
        var W = Z ? n(xe, F(me, J)) : void 0;
        return {
            values: ue,
            C: W
        }
    }
    function k(V, J, Y, G, Z, ie, re) {
        var se = d(Y)
          , ce = n(se, V, Y)
          , ue = re === "BigNumber"
          , oe = re === "Complex"
          , me = ue ? u(0) : oe ? _(0) : 0
          , xe = ue ? u(1) : oe ? _(1) : 1
          , pe = []
          , be = [];
        for (var H of Z) {
            var Q = R(pe, H, f);
            Q === -1 ? (pe.push(H),
            be.push(1)) : be[Q] += 1
        }
        for (var z = [], P = pe.length, $ = Array(J).fill(me), K = c(Array(J).fill(xe)), ae = [], te = function() {
            var le = pe[L]
              , he = r(ce, n(le, K))
              , ve = p(he, $);
            for (ve.shift(); ve.length < be[L]; ) {
                var we = O(he, J, ve, ie, re);
                if (we == null) {
                    ae.push(le);
                    break
                }
                ve.push(we)
            }
            var ye = n(d(G), Y);
            ve = ve.map(Ce => n(ye, Ce)),
            z.push(...ve.map(Ce => a(Ce)))
        }, L = 0; L < P; L++)
            te();
        if (ae.length !== 0) {
            var W = new Error("Failed to find eigenvectors for the following eigenvalues: " + ae.join(", "));
            throw W.values = Z,
            W.vectors = z,
            W
        }
        return z
    }
    function A(V, J, Y, G) {
        var Z = t(V, G)
          , ie = r(i(V, G), i(J, Y))
          , re = i(Z, .5)
          , se = i(s(r(i(Z, Z), i(4, ie))), .5);
        return [t(re, se), r(re, se)]
    }
    function I(V, J, Y, G, Z, ie, re, se) {
        var ce = se === "BigNumber"
          , ue = se === "Complex"
          , oe = ce ? u(0) : ue ? _(0) : 0
          , me = ce ? u(1) : ue ? _(1) : 1;
        if (g(l(Y), re))
            return [[me, oe], [oe, me]];
        if (y(l(r(Z, ie)), re))
            return [[r(Z, G), r(ie, G)], [Y, Y]];
        var xe = r(V, Z)
          , pe = r(J, Z)
          , be = r(Y, Z)
          , H = r(G, Z);
        return g(l(pe), re) ? [[xe, me], [be, oe]] : [[pe, oe], [H, me]]
    }
    function T(V, J) {
        for (var Y = 0; Y < V.length; Y++)
            V[Y].push(...Array(J - V[Y].length).fill(0));
        for (var G = V.length; G < J; G++)
            V.push(Array(J).fill(0)),
            V[G][G] = 1;
        return V
    }
    function F(V, J) {
        for (var Y = [], G = 0; G < J; G++)
            Y[G] = Array(J).fill(0);
        var Z = 0;
        for (var ie of V) {
            for (var re = ie.length, se = 0; se < re; se++)
                for (var ce = 0; ce < re; ce++)
                    Y[Z + se][Z + ce] = ie[se][ce];
            Z += re
        }
        return Y
    }
    function R(V, J, Y) {
        for (var G = 0; G < V.length; G++)
            if (Y(V[G], J))
                return G;
        return -1
    }
    function O(V, J, Y, G, Z) {
        for (var ie = Z === "BigNumber" ? u(1e3) : 1e3, re, se = 0; re = M(J, Y, Z),
        re = h(V, re),
        !y(B(re), ie); )
            if (++se >= 5)
                return null;
        for (se = 0; ; ) {
            var ce = h(V, re);
            if (g(B(N(re, [ce])), G))
                break;
            if (++se >= 10)
                return null;
            re = D(ce)
        }
        return re
    }
    function M(V, J, Y) {
        var G = Y === "BigNumber"
          , Z = Y === "Complex"
          , ie = Array(V).fill(0).map(re => 2 * Math.random() - 1);
        return G && (ie = ie.map(re => u(re))),
        Z && (ie = ie.map(re => _(re))),
        ie = N(ie, J),
        D(ie, Y)
    }
    function N(V, J) {
        for (var Y of J)
            V = r(V, n(o(w(Y, V), w(Y, Y)), Y));
        return V
    }
    function B(V) {
        return l(s(w(V, V)))
    }
    function D(V, J) {
        var Y = J === "BigNumber"
          , G = J === "Complex"
          , Z = Y ? u(1) : G ? _(1) : 1;
        return n(o(Z, B(V)), V)
    }
    return C
}
function UX(e) {
    var {config: t, addScalar: r, subtract: a, abs: n, atan: i, cos: o, sin: s, multiplyScalar: l, inv: u, bignumber: c, multiply: d, add: v} = e;
    function h(A, I) {
        var T = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : t.epsilon
          , F = arguments.length > 3 ? arguments[3] : void 0;
        if (F === "number")
            return p(A, T);
        if (F === "BigNumber")
            return f(A, T);
        throw TypeError("Unsupported data type: " + F)
    }
    function p(A, I) {
        for (var T = A.length, F = Math.abs(I / T), R, O = new Array(T), M = 0; M < T; M++)
            O[M] = k(T, 0),
            O[M][M] = 1;
        for (var N = b(A); Math.abs(N[1]) >= Math.abs(F); ) {
            var B = N[0][0]
              , D = N[0][1];
            R = _(A[B][B], A[D][D], A[B][D]),
            A = C(A, R, B, D),
            O = g(O, R, B, D),
            N = b(A)
        }
        for (var V = k(T, 0), J = 0; J < T; J++)
            V[J] = A[J][J];
        return E(Qe(V), Qe(O))
    }
    function f(A, I) {
        for (var T = A.length, F = n(I / T), R, O = new Array(T), M = 0; M < T; M++)
            O[M] = k(T, 0),
            O[M][M] = 1;
        for (var N = x(A); n(N[1]) >= n(F); ) {
            var B = N[0][0]
              , D = N[0][1];
            R = y(A[B][B], A[D][D], A[B][D]),
            A = w(A, R, B, D),
            O = m(O, R, B, D),
            N = x(A)
        }
        for (var V = k(T, 0), J = 0; J < T; J++)
            V[J] = A[J][J];
        return E(Qe(V), Qe(O))
    }
    function _(A, I, T) {
        var F = I - A;
        return Math.abs(F) <= t.epsilon ? Math.PI / 4 : .5 * Math.atan(2 * T / (I - A))
    }
    function y(A, I, T) {
        var F = a(I, A);
        return n(F) <= t.epsilon ? c(-1).acos().div(4) : l(.5, i(d(2, T, u(F))))
    }
    function g(A, I, T, F) {
        for (var R = A.length, O = Math.cos(I), M = Math.sin(I), N = k(R, 0), B = k(R, 0), D = 0; D < R; D++)
            N[D] = O * A[D][T] - M * A[D][F],
            B[D] = M * A[D][T] + O * A[D][F];
        for (var V = 0; V < R; V++)
            A[V][T] = N[V],
            A[V][F] = B[V];
        return A
    }
    function m(A, I, T, F) {
        for (var R = A.length, O = o(I), M = s(I), N = k(R, c(0)), B = k(R, c(0)), D = 0; D < R; D++)
            N[D] = a(l(O, A[D][T]), l(M, A[D][F])),
            B[D] = r(l(M, A[D][T]), l(O, A[D][F]));
        for (var V = 0; V < R; V++)
            A[V][T] = N[V],
            A[V][F] = B[V];
        return A
    }
    function w(A, I, T, F) {
        for (var R = A.length, O = c(o(I)), M = c(s(I)), N = l(O, O), B = l(M, M), D = k(R, c(0)), V = k(R, c(0)), J = d(c(2), O, M, A[T][F]), Y = r(a(l(N, A[T][T]), J), l(B, A[F][F])), G = v(l(B, A[T][T]), J, l(N, A[F][F])), Z = 0; Z < R; Z++)
            D[Z] = a(l(O, A[T][Z]), l(M, A[F][Z])),
            V[Z] = r(l(M, A[T][Z]), l(O, A[F][Z]));
        A[T][T] = Y,
        A[F][F] = G,
        A[T][F] = c(0),
        A[F][T] = c(0);
        for (var ie = 0; ie < R; ie++)
            ie !== T && ie !== F && (A[T][ie] = D[ie],
            A[ie][T] = D[ie],
            A[F][ie] = V[ie],
            A[ie][F] = V[ie]);
        return A
    }
    function C(A, I, T, F) {
        for (var R = A.length, O = Math.cos(I), M = Math.sin(I), N = O * O, B = M * M, D = k(R, 0), V = k(R, 0), J = N * A[T][T] - 2 * O * M * A[T][F] + B * A[F][F], Y = B * A[T][T] + 2 * O * M * A[T][F] + N * A[F][F], G = 0; G < R; G++)
            D[G] = O * A[T][G] - M * A[F][G],
            V[G] = M * A[T][G] + O * A[F][G];
        A[T][T] = J,
        A[F][F] = Y,
        A[T][F] = 0,
        A[F][T] = 0;
        for (var Z = 0; Z < R; Z++)
            Z !== T && Z !== F && (A[T][Z] = D[Z],
            A[Z][T] = D[Z],
            A[F][Z] = V[Z],
            A[Z][F] = V[Z]);
        return A
    }
    function b(A) {
        for (var I = A.length, T = 0, F = [0, 1], R = 0; R < I; R++)
            for (var O = R + 1; O < I; O++)
                Math.abs(T) < Math.abs(A[R][O]) && (T = Math.abs(A[R][O]),
                F = [R, O]);
        return [F, T]
    }
    function x(A) {
        for (var I = A.length, T = 0, F = [0, 1], R = 0; R < I; R++)
            for (var O = R + 1; O < I; O++)
                n(T) < n(A[R][O]) && (T = n(A[R][O]),
                F = [R, O]);
        return [F, T]
    }
    function E(A, I) {
        for (var T = A.length, F = Array(T), R = Array(T), O = 0; O < T; O++)
            R[O] = Array(T);
        for (var M = 0; M < T; M++) {
            for (var N = 0, B = A[0], D = 0; D < A.length; D++)
                n(A[D]) < n(B) && (N = D,
                B = A[N]);
            F[M] = A.splice(N, 1)[0];
            for (var V = 0; V < T; V++)
                R[V][M] = I[V][N],
                I[V].splice(N, 1)
        }
        return {
            values: F,
            vectors: R
        }
    }
    function k(A, I) {
        for (var T = new Array(A), F = 0; F < A; F++)
            T[F] = I;
        return T
    }
    return h
}
var FX = "eigs"
  , OX = ["config", "typed", "matrix", "addScalar", "equal", "subtract", "abs", "atan", "cos", "sin", "multiplyScalar", "divideScalar", "inv", "bignumber", "multiply", "add", "larger", "column", "flatten", "number", "complex", "sqrt", "diag", "qr", "usolve", "usolveAll", "im", "re", "smaller", "matrixFromColumns", "dot"]
  , PX = j(FX, OX, e => {
    var {config: t, typed: r, matrix: a, addScalar: n, subtract: i, equal: o, abs: s, atan: l, cos: u, sin: c, multiplyScalar: d, divideScalar: v, inv: h, bignumber: p, multiply: f, add: _, larger: y, column: g, flatten: m, number: w, complex: C, sqrt: b, diag: x, qr: E, usolve: k, usolveAll: A, im: I, re: T, smaller: F, matrixFromColumns: R, dot: O} = e
      , M = UX({
        config: t,
        addScalar: n,
        subtract: i,
        column: g,
        flatten: m,
        equal: o,
        abs: s,
        atan: l,
        cos: u,
        sin: c,
        multiplyScalar: d,
        inv: h,
        bignumber: p,
        complex: C,
        multiply: f,
        add: _
    })
      , N = DX({
        config: t,
        addScalar: n,
        subtract: i,
        multiply: f,
        multiplyScalar: d,
        flatten: m,
        divideScalar: v,
        sqrt: b,
        abs: s,
        bignumber: p,
        diag: x,
        qr: E,
        inv: h,
        usolve: k,
        usolveAll: A,
        equal: o,
        complex: C,
        larger: y,
        smaller: F,
        matrixFromColumns: R,
        dot: O
    });
    return r("eigs", {
        Array: function(Z) {
            var ie = a(Z);
            return B(ie)
        },
        "Array, number|BigNumber": function(Z, ie) {
            var re = a(Z);
            return B(re, ie)
        },
        Matrix: function(Z) {
            var {values: ie, vectors: re} = B(Z);
            return {
                values: a(ie),
                vectors: a(re)
            }
        },
        "Matrix, number|BigNumber": function(Z, ie) {
            var {values: re, vectors: se} = B(Z, ie);
            return {
                values: a(re),
                vectors: a(se)
            }
        }
    });
    function B(G, Z) {
        Z === void 0 && (Z = t.epsilon);
        var ie = G.size();
        if (ie.length !== 2 || ie[0] !== ie[1])
            throw new RangeError("Matrix must be square (size: " + st(ie) + ")");
        var re = G.toArray()
          , se = ie[0];
        if (V(re, se, Z) && (J(re, se),
        D(re, se, Z))) {
            var ce = Y(G, re, se);
            return M(re, se, Z, ce)
        }
        var ue = Y(G, re, se);
        return N(re, se, Z, ue)
    }
    function D(G, Z, ie) {
        for (var re = 0; re < Z; re++)
            for (var se = re; se < Z; se++)
                if (y(p(s(i(G[re][se], G[se][re]))), ie))
                    return !1;
        return !0
    }
    function V(G, Z, ie) {
        for (var re = 0; re < Z; re++)
            for (var se = 0; se < Z; se++)
                if (y(p(s(I(G[re][se]))), ie))
                    return !1;
        return !0
    }
    function J(G, Z) {
        for (var ie = 0; ie < Z; ie++)
            for (var re = 0; re < Z; re++)
                G[ie][re] = T(G[ie][re])
    }
    function Y(G, Z, ie) {
        var re = G.datatype();
        if (re === "number" || re === "BigNumber" || re === "Complex")
            return re;
        for (var se = !1, ce = !1, ue = !1, oe = 0; oe < ie; oe++)
            for (var me = 0; me < ie; me++) {
                var xe = Z[oe][me];
                if (lt(xe) || ed(xe))
                    se = !0;
                else if (vt(xe))
                    ce = !0;
                else if (Oi(xe))
                    ue = !0;
                else
                    throw TypeError("Unsupported type in Matrix: " + Bt(xe))
            }
        if (ce && ue && console.warn("Complex BigNumbers not supported, this operation will lose precission."),
        ue) {
            for (var pe = 0; pe < ie; pe++)
                for (var be = 0; be < ie; be++)
                    Z[pe][be] = C(Z[pe][be]);
            return "Complex"
        }
        if (ce) {
            for (var H = 0; H < ie; H++)
                for (var Q = 0; Q < ie; Q++)
                    Z[H][Q] = p(Z[H][Q]);
            return "BigNumber"
        }
        if (se) {
            for (var z = 0; z < ie; z++)
                for (var P = 0; P < ie; P++)
                    Z[z][P] = w(Z[z][P]);
            return "number"
        } else
            throw TypeError("Matrix contains unsupported types only.")
    }
}
)
  , hS = "expm"
  , BX = ["typed", "abs", "add", "identity", "inv", "multiply"]
  , RX = j(hS, BX, e => {
    var {typed: t, abs: r, add: a, identity: n, inv: i, multiply: o} = e;
    return t(hS, {
        Matrix: function(d) {
            var v = d.size();
            if (v.length !== 2 || v[0] !== v[1])
                throw new RangeError("Matrix must be square (size: " + st(v) + ")");
            for (var h = v[0], p = 1e-15, f = s(d), _ = l(f, p), y = _.q, g = _.j, m = o(d, Math.pow(2, -g)), w = n(h), C = n(h), b = 1, x = m, E = -1, k = 1; k <= y; k++)
                k > 1 && (x = o(x, m),
                E = -E),
                b = b * (y - k + 1) / ((2 * y - k + 1) * k),
                w = a(w, o(b, x)),
                C = a(C, o(b * E, x));
            for (var A = o(i(C), w), I = 0; I < g; I++)
                A = o(A, A);
            return ds(d) ? d.createSparseMatrix(A) : A
        }
    });
    function s(c) {
        for (var d = c.size()[0], v = 0, h = 0; h < d; h++) {
            for (var p = 0, f = 0; f < d; f++)
                p += r(c.get([h, f]));
            v = Math.max(p, v)
        }
        return v
    }
    function l(c, d) {
        for (var v = 30, h = 0; h < v; h++)
            for (var p = 0; p <= h; p++) {
                var f = h - p;
                if (u(c, p, f) < d)
                    return {
                        q: p,
                        j: f
                    }
            }
        throw new Error("Could not find acceptable parameters to compute the matrix exponential (try increasing maxSearchSize in expm.js)")
    }
    function u(c, d, v) {
        for (var h = 1, p = 2; p <= d; p++)
            h *= p;
        for (var f = h, _ = d + 1; _ <= 2 * d; _++)
            f *= _;
        var y = f * (2 * d + 1);
        return 8 * Math.pow(c / Math.pow(2, v), 2 * d) * h * h / (f * y)
    }
}
)
  , mS = "sqrtm"
  , LX = ["typed", "abs", "add", "multiply", "map", "sqrt", "subtract", "inv", "size", "max", "identity"]
  , qX = j(mS, LX, e => {
    var {typed: t, abs: r, add: a, multiply: n, map: i, sqrt: o, subtract: s, inv: l, size: u, max: c, identity: d} = e
      , v = 1e3
      , h = 1e-6;
    function p(f) {
        var _, y = 0, g = f, m = d(u(f));
        do {
            var w = g;
            if (g = n(.5, a(w, l(m))),
            m = n(.5, a(m, l(w))),
            _ = c(r(s(g, w))),
            _ > h && ++y > v)
                throw new Error("computing square root of matrix: iterative method could not converge")
        } while (_ > h);
        return g
    }
    return t(mS, {
        "Array | Matrix": function(_) {
            var y = je(_) ? _.size() : it(_);
            switch (y.length) {
            case 1:
                if (y[0] === 1)
                    return i(_, o);
                throw new RangeError("Matrix must be square (size: " + st(y) + ")");
            case 2:
                {
                    var g = y[0]
                      , m = y[1];
                    if (g === m)
                        return p(_);
                    throw new RangeError("Matrix must be square (size: " + st(y) + ")")
                }
            default:
                throw new RangeError("Matrix must be at most two dimensional (size: " + st(y) + ")")
            }
        }
    })
}
)
  , fS = "sylvester"
  , VX = ["typed", "schur", "matrixFromColumns", "matrix", "multiply", "range", "concat", "transpose", "index", "subset", "add", "subtract", "identity", "lusolve", "abs"]
  , $X = j(fS, VX, e => {
    var {typed: t, schur: r, matrixFromColumns: a, matrix: n, multiply: i, range: o, concat: s, transpose: l, index: u, subset: c, add: d, subtract: v, identity: h, lusolve: p, abs: f} = e;
    return t(fS, {
        "Matrix, Matrix, Matrix": _,
        "Array, Matrix, Matrix": function(g, m, w) {
            return _(n(g), m, w)
        },
        "Array, Array, Matrix": function(g, m, w) {
            return _(n(g), n(m), w)
        },
        "Array, Matrix, Array": function(g, m, w) {
            return _(n(g), m, n(w))
        },
        "Matrix, Array, Matrix": function(g, m, w) {
            return _(g, n(m), w)
        },
        "Matrix, Array, Array": function(g, m, w) {
            return _(g, n(m), n(w))
        },
        "Matrix, Matrix, Array": function(g, m, w) {
            return _(g, m, n(w))
        },
        "Array, Array, Array": function(g, m, w) {
            return _(n(g), n(m), n(w)).toArray()
        }
    });
    function _(y, g, m) {
        for (var w = g.size()[0], C = y.size()[0], b = r(y), x = b.T, E = b.U, k = r(i(-1, g)), A = k.T, I = k.U, T = i(i(l(E), m), I), F = o(0, C), R = [], O = (xe, pe) => s(xe, pe, 1), M = (xe, pe) => s(xe, pe, 0), N = 0; N < w; N++)
            if (N < w - 1 && f(c(A, u(N + 1, N))) > 1e-5) {
                for (var B = M(c(T, u(F, N)), c(T, u(F, N + 1))), D = 0; D < N; D++)
                    B = d(B, M(i(R[D], c(A, u(D, N))), i(R[D], c(A, u(D, N + 1)))));
                var V = i(h(C), i(-1, c(A, u(N, N))))
                  , J = i(h(C), i(-1, c(A, u(N + 1, N))))
                  , Y = i(h(C), i(-1, c(A, u(N, N + 1))))
                  , G = i(h(C), i(-1, c(A, u(N + 1, N + 1))))
                  , Z = M(O(d(x, V), J), O(Y, d(x, G)))
                  , ie = p(Z, B);
                R[N] = ie.subset(u(o(0, C), 0)),
                R[N + 1] = ie.subset(u(o(C, 2 * C), 0)),
                N++
            } else {
                for (var re = c(T, u(F, N)), se = 0; se < N; se++)
                    re = d(re, i(R[se], c(A, u(se, N))));
                var ce = c(A, u(N, N))
                  , ue = v(x, i(ce, h(C)));
                R[N] = p(ue, re)
            }
        var oe = n(a(...R))
          , me = i(E, i(oe, l(I)));
        return me
    }
}
)
  , pS = "schur"
  , zX = ["typed", "matrix", "identity", "multiply", "qr", "norm", "subtract"]
  , GX = j(pS, zX, e => {
    var {typed: t, matrix: r, identity: a, multiply: n, qr: i, norm: o, subtract: s} = e;
    return t(pS, {
        Array: function(c) {
            var d = l(r(c));
            return {
                U: d.U.valueOf(),
                T: d.T.valueOf()
            }
        },
        Matrix: function(c) {
            return l(c)
        }
    });
    function l(u) {
        var c = u.size()[0], d = u, v = a(c), h = 0, p;
        do {
            p = d;
            var f = i(d)
              , _ = f.Q
              , y = f.R;
            if (d = n(y, _),
            v = n(v, _),
            h++ > 100)
                break
        } while (o(s(d, p)) > 1e-4);
        return {
            U: v,
            T: d
        }
    }
}
)
  , yS = "lyap"
  , jX = ["typed", "matrix", "sylvester", "multiply", "transpose"]
  , HX = j(yS, jX, e => {
    var {typed: t, matrix: r, sylvester: a, multiply: n, transpose: i} = e;
    return t(yS, {
        "Matrix, Matrix": function(s, l) {
            return a(s, i(s), n(-1, l))
        },
        "Array, Matrix": function(s, l) {
            return a(r(s), i(r(s)), n(-1, l))
        },
        "Matrix, Array": function(s, l) {
            return a(s, i(r(s)), r(n(-1, l)))
        },
        "Array, Array": function(s, l) {
            return a(r(s), i(r(s)), r(n(-1, l))).toArray()
        }
    })
}
)
  , WX = "divide"
  , YX = ["typed", "matrix", "multiply", "equalScalar", "divideScalar", "inv"]
  , JX = j(WX, YX, e => {
    var {typed: t, matrix: r, multiply: a, equalScalar: n, divideScalar: i, inv: o} = e
      , s = Lr({
        typed: t,
        equalScalar: n
    })
      , l = jn({
        typed: t
    });
    return t("divide", EE({
        "Array | Matrix, Array | Matrix": function(c, d) {
            return a(c, o(d))
        },
        "DenseMatrix, any": function(c, d) {
            return l(c, d, i, !1)
        },
        "SparseMatrix, any": function(c, d) {
            return s(c, d, i, !1)
        },
        "Array, any": function(c, d) {
            return l(r(c), d, i, !1).valueOf()
        },
        "any, Array | Matrix": function(c, d) {
            return a(c, o(d))
        }
    }, i.signatures))
}
)
  , wS = "distance"
  , KX = ["typed", "addScalar", "subtract", "divideScalar", "multiplyScalar", "deepEqual", "sqrt", "abs"]
  , QX = j(wS, KX, e => {
    var {typed: t, addScalar: r, subtract: a, multiplyScalar: n, divideScalar: i, deepEqual: o, sqrt: s, abs: l} = e;
    return t(wS, {
        "Array, Array, Array": function(C, b, x) {
            if (C.length === 2 && b.length === 2 && x.length === 2) {
                if (!c(C))
                    throw new TypeError("Array with 2 numbers or BigNumbers expected for first argument");
                if (!c(b))
                    throw new TypeError("Array with 2 numbers or BigNumbers expected for second argument");
                if (!c(x))
                    throw new TypeError("Array with 2 numbers or BigNumbers expected for third argument");
                if (o(b, x))
                    throw new TypeError("LinePoint1 should not be same with LinePoint2");
                var E = a(x[1], b[1])
                  , k = a(b[0], x[0])
                  , A = a(n(x[0], b[1]), n(b[0], x[1]));
                return _(C[0], C[1], E, k, A)
            } else
                throw new TypeError("Invalid Arguments: Try again")
        },
        "Object, Object, Object": function(C, b, x) {
            if (Object.keys(C).length === 2 && Object.keys(b).length === 2 && Object.keys(x).length === 2) {
                if (!c(C))
                    throw new TypeError("Values of pointX and pointY should be numbers or BigNumbers");
                if (!c(b))
                    throw new TypeError("Values of lineOnePtX and lineOnePtY should be numbers or BigNumbers");
                if (!c(x))
                    throw new TypeError("Values of lineTwoPtX and lineTwoPtY should be numbers or BigNumbers");
                if (o(p(b), p(x)))
                    throw new TypeError("LinePoint1 should not be same with LinePoint2");
                if ("pointX"in C && "pointY"in C && "lineOnePtX"in b && "lineOnePtY"in b && "lineTwoPtX"in x && "lineTwoPtY"in x) {
                    var E = a(x.lineTwoPtY, b.lineOnePtY)
                      , k = a(b.lineOnePtX, x.lineTwoPtX)
                      , A = a(n(x.lineTwoPtX, b.lineOnePtY), n(b.lineOnePtX, x.lineTwoPtY));
                    return _(C.pointX, C.pointY, E, k, A)
                } else
                    throw new TypeError("Key names do not match")
            } else
                throw new TypeError("Invalid Arguments: Try again")
        },
        "Array, Array": function(C, b) {
            if (C.length === 2 && b.length === 3) {
                if (!c(C))
                    throw new TypeError("Array with 2 numbers or BigNumbers expected for first argument");
                if (!d(b))
                    throw new TypeError("Array with 3 numbers or BigNumbers expected for second argument");
                return _(C[0], C[1], b[0], b[1], b[2])
            } else if (C.length === 3 && b.length === 6) {
                if (!d(C))
                    throw new TypeError("Array with 3 numbers or BigNumbers expected for first argument");
                if (!h(b))
                    throw new TypeError("Array with 6 numbers or BigNumbers expected for second argument");
                return y(C[0], C[1], C[2], b[0], b[1], b[2], b[3], b[4], b[5])
            } else if (C.length === b.length && C.length > 0) {
                if (!v(C))
                    throw new TypeError("All values of an array should be numbers or BigNumbers");
                if (!v(b))
                    throw new TypeError("All values of an array should be numbers or BigNumbers");
                return g(C, b)
            } else
                throw new TypeError("Invalid Arguments: Try again")
        },
        "Object, Object": function(C, b) {
            if (Object.keys(C).length === 2 && Object.keys(b).length === 3) {
                if (!c(C))
                    throw new TypeError("Values of pointX and pointY should be numbers or BigNumbers");
                if (!d(b))
                    throw new TypeError("Values of xCoeffLine, yCoeffLine and constant should be numbers or BigNumbers");
                if ("pointX"in C && "pointY"in C && "xCoeffLine"in b && "yCoeffLine"in b && "constant"in b)
                    return _(C.pointX, C.pointY, b.xCoeffLine, b.yCoeffLine, b.constant);
                throw new TypeError("Key names do not match")
            } else if (Object.keys(C).length === 3 && Object.keys(b).length === 6) {
                if (!d(C))
                    throw new TypeError("Values of pointX, pointY and pointZ should be numbers or BigNumbers");
                if (!h(b))
                    throw new TypeError("Values of x0, y0, z0, a, b and c should be numbers or BigNumbers");
                if ("pointX"in C && "pointY"in C && "x0"in b && "y0"in b && "z0"in b && "a"in b && "b"in b && "c"in b)
                    return y(C.pointX, C.pointY, C.pointZ, b.x0, b.y0, b.z0, b.a, b.b, b.c);
                throw new TypeError("Key names do not match")
            } else if (Object.keys(C).length === 2 && Object.keys(b).length === 2) {
                if (!c(C))
                    throw new TypeError("Values of pointOneX and pointOneY should be numbers or BigNumbers");
                if (!c(b))
                    throw new TypeError("Values of pointTwoX and pointTwoY should be numbers or BigNumbers");
                if ("pointOneX"in C && "pointOneY"in C && "pointTwoX"in b && "pointTwoY"in b)
                    return g([C.pointOneX, C.pointOneY], [b.pointTwoX, b.pointTwoY]);
                throw new TypeError("Key names do not match")
            } else if (Object.keys(C).length === 3 && Object.keys(b).length === 3) {
                if (!d(C))
                    throw new TypeError("Values of pointOneX, pointOneY and pointOneZ should be numbers or BigNumbers");
                if (!d(b))
                    throw new TypeError("Values of pointTwoX, pointTwoY and pointTwoZ should be numbers or BigNumbers");
                if ("pointOneX"in C && "pointOneY"in C && "pointOneZ"in C && "pointTwoX"in b && "pointTwoY"in b && "pointTwoZ"in b)
                    return g([C.pointOneX, C.pointOneY, C.pointOneZ], [b.pointTwoX, b.pointTwoY, b.pointTwoZ]);
                throw new TypeError("Key names do not match")
            } else
                throw new TypeError("Invalid Arguments: Try again")
        },
        Array: function(C) {
            if (!f(C))
                throw new TypeError("Incorrect array format entered for pairwise distance calculation");
            return m(C)
        }
    });
    function u(w) {
        return typeof w == "number" || vt(w)
    }
    function c(w) {
        return w.constructor !== Array && (w = p(w)),
        u(w[0]) && u(w[1])
    }
    function d(w) {
        return w.constructor !== Array && (w = p(w)),
        u(w[0]) && u(w[1]) && u(w[2])
    }
    function v(w) {
        return Array.isArray(w) || (w = p(w)),
        w.every(u)
    }
    function h(w) {
        return w.constructor !== Array && (w = p(w)),
        u(w[0]) && u(w[1]) && u(w[2]) && u(w[3]) && u(w[4]) && u(w[5])
    }
    function p(w) {
        for (var C = Object.keys(w), b = [], x = 0; x < C.length; x++)
            b.push(w[C[x]]);
        return b
    }
    function f(w) {
        if (w[0].length === 2 && u(w[0][0]) && u(w[0][1])) {
            if (w.some(C => C.length !== 2 || !u(C[0]) || !u(C[1])))
                return !1
        } else if (w[0].length === 3 && u(w[0][0]) && u(w[0][1]) && u(w[0][2])) {
            if (w.some(C => C.length !== 3 || !u(C[0]) || !u(C[1]) || !u(C[2])))
                return !1
        } else
            return !1;
        return !0
    }
    function _(w, C, b, x, E) {
        var k = l(r(r(n(b, w), n(x, C)), E))
          , A = s(r(n(b, b), n(x, x)));
        return i(k, A)
    }
    function y(w, C, b, x, E, k, A, I, T) {
        var F = [a(n(a(E, C), T), n(a(k, b), I)), a(n(a(k, b), A), n(a(x, w), T)), a(n(a(x, w), I), n(a(E, C), A))];
        F = s(r(r(n(F[0], F[0]), n(F[1], F[1])), n(F[2], F[2])));
        var R = s(r(r(n(A, A), n(I, I)), n(T, T)));
        return i(F, R)
    }
    function g(w, C) {
        for (var b = w.length, x = 0, E = 0, k = 0; k < b; k++)
            E = a(w[k], C[k]),
            x = r(n(E, E), x);
        return s(x)
    }
    function m(w) {
        for (var C = [], b = [], x = [], E = 0; E < w.length - 1; E++)
            for (var k = E + 1; k < w.length; k++)
                w[0].length === 2 ? (b = [w[E][0], w[E][1]],
                x = [w[k][0], w[k][1]]) : w[0].length === 3 && (b = [w[E][0], w[E][1], w[E][2]],
                x = [w[k][0], w[k][1], w[k][2]]),
                C.push(g(b, x));
        return C
    }
}
)
  , ZX = "intersect"
  , XX = ["typed", "config", "abs", "add", "addScalar", "matrix", "multiply", "multiplyScalar", "divideScalar", "subtract", "smaller", "equalScalar", "flatten", "isZero", "isNumeric"]
  , eee = j(ZX, XX, e => {
    var {typed: t, config: r, abs: a, add: n, addScalar: i, matrix: o, multiply: s, multiplyScalar: l, divideScalar: u, subtract: c, smaller: d, equalScalar: v, flatten: h, isZero: p, isNumeric: f} = e;
    return t("intersect", {
        "Array, Array, Array": _,
        "Array, Array, Array, Array": y,
        "Matrix, Matrix, Matrix": function(I, T, F) {
            var R = _(I.valueOf(), T.valueOf(), F.valueOf());
            return R === null ? null : o(R)
        },
        "Matrix, Matrix, Matrix, Matrix": function(I, T, F, R) {
            var O = y(I.valueOf(), T.valueOf(), F.valueOf(), R.valueOf());
            return O === null ? null : o(O)
        }
    });
    function _(A, I, T) {
        if (A = g(A),
        I = g(I),
        T = g(T),
        !w(A))
            throw new TypeError("Array with 3 numbers or BigNumbers expected for first argument");
        if (!w(I))
            throw new TypeError("Array with 3 numbers or BigNumbers expected for second argument");
        if (!C(T))
            throw new TypeError("Array with 4 numbers expected as third argument");
        return k(A[0], A[1], A[2], I[0], I[1], I[2], T[0], T[1], T[2], T[3])
    }
    function y(A, I, T, F) {
        if (A = g(A),
        I = g(I),
        T = g(T),
        F = g(F),
        A.length === 2) {
            if (!m(A))
                throw new TypeError("Array with 2 numbers or BigNumbers expected for first argument");
            if (!m(I))
                throw new TypeError("Array with 2 numbers or BigNumbers expected for second argument");
            if (!m(T))
                throw new TypeError("Array with 2 numbers or BigNumbers expected for third argument");
            if (!m(F))
                throw new TypeError("Array with 2 numbers or BigNumbers expected for fourth argument");
            return b(A, I, T, F)
        } else if (A.length === 3) {
            if (!w(A))
                throw new TypeError("Array with 3 numbers or BigNumbers expected for first argument");
            if (!w(I))
                throw new TypeError("Array with 3 numbers or BigNumbers expected for second argument");
            if (!w(T))
                throw new TypeError("Array with 3 numbers or BigNumbers expected for third argument");
            if (!w(F))
                throw new TypeError("Array with 3 numbers or BigNumbers expected for fourth argument");
            return E(A[0], A[1], A[2], I[0], I[1], I[2], T[0], T[1], T[2], F[0], F[1], F[2])
        } else
            throw new TypeError("Arrays with two or thee dimensional points expected")
    }
    function g(A) {
        return A.length === 1 ? A[0] : A.length > 1 && Array.isArray(A[0]) && A.every(I => Array.isArray(I) && I.length === 1) ? h(A) : A
    }
    function m(A) {
        return A.length === 2 && f(A[0]) && f(A[1])
    }
    function w(A) {
        return A.length === 3 && f(A[0]) && f(A[1]) && f(A[2])
    }
    function C(A) {
        return A.length === 4 && f(A[0]) && f(A[1]) && f(A[2]) && f(A[3])
    }
    function b(A, I, T, F) {
        var R = A
          , O = T
          , M = c(R, I)
          , N = c(O, F)
          , B = c(l(M[0], N[1]), l(N[0], M[1]));
        if (p(B) || d(a(B), r.epsilon))
            return null;
        var D = l(N[0], R[1])
          , V = l(N[1], R[0])
          , J = l(N[0], O[1])
          , Y = l(N[1], O[0])
          , G = u(i(c(c(D, V), J), Y), B);
        return n(s(M, G), R)
    }
    function x(A, I, T, F, R, O, M, N, B, D, V, J) {
        var Y = l(c(A, I), c(T, F))
          , G = l(c(R, O), c(M, N))
          , Z = l(c(B, D), c(V, J));
        return i(i(Y, G), Z)
    }
    function E(A, I, T, F, R, O, M, N, B, D, V, J) {
        var Y = x(A, M, D, M, I, N, V, N, T, B, J, B)
          , G = x(D, M, F, A, V, N, R, I, J, B, O, T)
          , Z = x(A, M, F, A, I, N, R, I, T, B, O, T)
          , ie = x(D, M, D, M, V, N, V, N, J, B, J, B)
          , re = x(F, A, F, A, R, I, R, I, O, T, O, T)
          , se = c(l(Y, G), l(Z, ie))
          , ce = c(l(re, ie), l(G, G));
        if (p(ce))
            return null;
        var ue = u(se, ce)
          , oe = u(i(Y, l(ue, G)), ie)
          , me = i(A, l(ue, c(F, A)))
          , xe = i(I, l(ue, c(R, I)))
          , pe = i(T, l(ue, c(O, T)))
          , be = i(M, l(oe, c(D, M)))
          , H = i(N, l(oe, c(V, N)))
          , Q = i(B, l(oe, c(J, B)));
        return v(me, be) && v(xe, H) && v(pe, Q) ? [me, xe, pe] : null
    }
    function k(A, I, T, F, R, O, M, N, B, D) {
        var V = l(A, M)
          , J = l(F, M)
          , Y = l(I, N)
          , G = l(R, N)
          , Z = l(T, B)
          , ie = l(O, B)
          , re = c(c(c(D, V), Y), Z)
          , se = c(c(c(i(i(J, G), ie), V), Y), Z)
          , ce = u(re, se)
          , ue = i(A, l(ce, c(F, A)))
          , oe = i(I, l(ce, c(R, I)))
          , me = i(T, l(ce, c(O, T)));
        return [ue, oe, me]
    }
}
)
  , gS = "sum"
  , tee = ["typed", "config", "add", "numeric"]
  , yk = j(gS, tee, e => {
    var {typed: t, config: r, add: a, numeric: n} = e;
    return t(gS, {
        "Array | Matrix": i,
        "Array | Matrix, number | BigNumber": o,
        "...": function(l) {
            if (uu(l))
                throw new TypeError("Scalar values expected in function sum");
            return i(l)
        }
    });
    function i(s) {
        var l;
        return Gi(s, function(u) {
            try {
                l = l === void 0 ? u : a(l, u)
            } catch (c) {
                throw da(c, "sum", u)
            }
        }),
        l === void 0 && (l = n(0, r.number)),
        typeof l == "string" && (l = n(l, r.number)),
        l
    }
    function o(s, l) {
        try {
            var u = Zm(s, l, a);
            return u
        } catch (c) {
            throw da(c, "sum")
        }
    }
}
)
  , hv = "cumsum"
  , ree = ["typed", "add", "unaryPlus"]
  , wk = j(hv, ree, e => {
    var {typed: t, add: r, unaryPlus: a} = e;
    return t(hv, {
        Array: n,
        Matrix: function(u) {
            return u.create(n(u.valueOf()))
        },
        "Array, number | BigNumber": o,
        "Matrix, number | BigNumber": function(u, c) {
            return u.create(o(u.valueOf(), c))
        },
        "...": function(u) {
            if (uu(u))
                throw new TypeError("All values expected to be scalar in function cumsum");
            return n(u)
        }
    });
    function n(l) {
        try {
            return i(l)
        } catch (u) {
            throw da(u, hv)
        }
    }
    function i(l) {
        if (l.length === 0)
            return [];
        for (var u = [a(l[0])], c = 1; c < l.length; ++c)
            u.push(r(u[c - 1], l[c]));
        return u
    }
    function o(l, u) {
        var c = it(l);
        if (u < 0 || u >= c.length)
            throw new zn(u,c.length);
        try {
            return s(l, u)
        } catch (d) {
            throw da(d, hv)
        }
    }
    function s(l, u) {
        var c, d, v;
        if (u <= 0) {
            var h = l[0][0];
            if (Array.isArray(h)) {
                for (v = r4(l),
                d = [],
                c = 0; c < v.length; c++)
                    d[c] = s(v[c], u - 1);
                return d
            } else
                return i(l)
        } else {
            for (d = [],
            c = 0; c < l.length; c++)
                d[c] = s(l[c], u - 1);
            return d
        }
    }
}
)
  , _S = "mean"
  , aee = ["typed", "add", "divide"]
  , gk = j(_S, aee, e => {
    var {typed: t, add: r, divide: a} = e;
    return t(_S, {
        "Array | Matrix": i,
        "Array | Matrix, number | BigNumber": n,
        "...": function(s) {
            if (uu(s))
                throw new TypeError("Scalar values expected in function mean");
            return i(s)
        }
    });
    function n(o, s) {
        try {
            var l = Zm(o, s, r)
              , u = Array.isArray(o) ? it(o) : o.size();
            return a(l, u[s])
        } catch (c) {
            throw da(c, "mean")
        }
    }
    function i(o) {
        var s, l = 0;
        if (Gi(o, function(u) {
            try {
                s = s === void 0 ? u : r(s, u),
                l++
            } catch (c) {
                throw da(c, "mean", u)
            }
        }),
        l === 0)
            throw new Error("Cannot calculate the mean of an empty array");
        return a(s, l)
    }
}
)
  , bS = "median"
  , nee = ["typed", "add", "divide", "compare", "partitionSelect"]
  , iee = j(bS, nee, e => {
    var {typed: t, add: r, divide: a, compare: n, partitionSelect: i} = e;
    function o(u) {
        try {
            u = bt(u.valueOf());
            var c = u.length;
            if (c === 0)
                throw new Error("Cannot calculate median of an empty array");
            if (c % 2 === 0) {
                for (var d = c / 2 - 1, v = i(u, d + 1), h = u[d], p = 0; p < d; ++p)
                    n(u[p], h) > 0 && (h = u[p]);
                return l(h, v)
            } else {
                var f = i(u, (c - 1) / 2);
                return s(f)
            }
        } catch (_) {
            throw da(_, "median")
        }
    }
    var s = t({
        "number | BigNumber | Complex | Unit": function(c) {
            return c
        }
    })
      , l = t({
        "number | BigNumber | Complex | Unit, number | BigNumber | Complex | Unit": function(c, d) {
            return a(r(c, d), 2)
        }
    });
    return t(bS, {
        "Array | Matrix": o,
        "Array | Matrix, number | BigNumber": function(c, d) {
            throw new Error("median(A, dim) is not yet supported")
        },
        "...": function(c) {
            if (uu(c))
                throw new TypeError("Scalar values expected in function median");
            return o(c)
        }
    })
}
)
  , CS = "mad"
  , oee = ["typed", "abs", "map", "median", "subtract"]
  , see = j(CS, oee, e => {
    var {typed: t, abs: r, map: a, median: n, subtract: i} = e;
    return t(CS, {
        "Array | Matrix": o,
        "...": function(l) {
            return o(l)
        }
    });
    function o(s) {
        if (s = bt(s.valueOf()),
        s.length === 0)
            throw new Error("Cannot calculate median absolute deviation (mad) of an empty array");
        try {
            var l = n(s);
            return n(a(s, function(u) {
                return r(i(u, l))
            }))
        } catch (u) {
            throw u instanceof TypeError && u.message.indexOf("median") !== -1 ? new TypeError(u.message.replace("median", "mad")) : da(u, "mad")
        }
    }
}
)
  , kp = "unbiased"
  , SS = "variance"
  , lee = ["typed", "add", "subtract", "multiply", "divide", "apply", "isNaN"]
  , _k = j(SS, lee, e => {
    var {typed: t, add: r, subtract: a, multiply: n, divide: i, apply: o, isNaN: s} = e;
    return t(SS, {
        "Array | Matrix": function(d) {
            return l(d, kp)
        },
        "Array | Matrix, string": l,
        "Array | Matrix, number | BigNumber": function(d, v) {
            return u(d, v, kp)
        },
        "Array | Matrix, number | BigNumber, string": u,
        "...": function(d) {
            return l(d, kp)
        }
    });
    function l(c, d) {
        var v, h = 0;
        if (c.length === 0)
            throw new SyntaxError("Function variance requires one or more parameters (0 provided)");
        if (Gi(c, function(_) {
            try {
                v = v === void 0 ? _ : r(v, _),
                h++
            } catch (y) {
                throw da(y, "variance", _)
            }
        }),
        h === 0)
            throw new Error("Cannot calculate variance of an empty array");
        var p = i(v, h);
        if (v = void 0,
        Gi(c, function(_) {
            var y = a(_, p);
            v = v === void 0 ? n(y, y) : r(v, n(y, y))
        }),
        s(v))
            return v;
        switch (d) {
        case "uncorrected":
            return i(v, h);
        case "biased":
            return i(v, h + 1);
        case "unbiased":
            {
                var f = vt(v) ? v.mul(0) : 0;
                return h === 1 ? f : i(v, h - 1)
            }
        default:
            throw new Error('Unknown normalization "' + d + '". Choose "unbiased" (default), "uncorrected", or "biased".')
        }
    }
    function u(c, d, v) {
        try {
            if (c.length === 0)
                throw new SyntaxError("Function variance requires one or more parameters (0 provided)");
            return o(c, d, h => l(h, v))
        } catch (h) {
            throw da(h, "variance")
        }
    }
}
)
  , xS = "quantileSeq"
  , uee = ["typed", "?bignumber", "add", "subtract", "divide", "multiply", "partitionSelect", "compare", "isInteger", "smaller", "smallerEq", "larger"]
  , bk = j(xS, uee, e => {
    var {typed: t, bignumber: r, add: a, subtract: n, divide: i, multiply: o, partitionSelect: s, compare: l, isInteger: u, smaller: c, smallerEq: d, larger: v} = e
      , h = d2({
        typed: t,
        isInteger: u
    });
    return t(xS, {
        "Array | Matrix, number | BigNumber": (g, m) => f(g, m, !1),
        "Array | Matrix, number | BigNumber, number": (g, m, w) => p(g, m, !1, w, f),
        "Array | Matrix, number | BigNumber, boolean": f,
        "Array | Matrix, number | BigNumber, boolean, number": (g, m, w, C) => p(g, m, w, C, f),
        "Array | Matrix, Array | Matrix": (g, m) => _(g, m, !1),
        "Array | Matrix, Array | Matrix, number": (g, m, w) => p(g, m, !1, w, _),
        "Array | Matrix, Array | Matrix, boolean": _,
        "Array | Matrix, Array | Matrix, boolean, number": (g, m, w, C) => p(g, m, w, C, _)
    });
    function p(g, m, w, C, b) {
        return h(g, C, x => b(x, m, w))
    }
    function f(g, m, w) {
        var C, b = g.valueOf();
        if (c(m, 0))
            throw new Error("N/prob must be non-negative");
        if (d(m, 1))
            return lt(m) ? y(b, m, w) : r(y(b, m, w));
        if (v(m, 1)) {
            if (!u(m))
                throw new Error("N must be a positive integer");
            if (v(m, 4294967295))
                throw new Error("N must be less than or equal to 2^32-1, as that is the maximum length of an Array");
            var x = a(m, 1);
            C = [];
            for (var E = 0; c(E, m); E++) {
                var k = i(E + 1, x);
                C.push(y(b, k, w))
            }
            return lt(m) ? C : r(C)
        }
    }
    function _(g, m, w) {
        for (var C = g.valueOf(), b = m.valueOf(), x = [], E = 0; E < b.length; ++E)
            x.push(y(C, b[E], w));
        return x
    }
    function y(g, m, w) {
        var C = bt(g)
          , b = C.length;
        if (b === 0)
            throw new Error("Cannot calculate quantile of an empty sequence");
        var x = lt(m) ? m * (b - 1) : m.times(b - 1)
          , E = lt(m) ? Math.floor(x) : x.floor().toNumber()
          , k = lt(m) ? x % 1 : x.minus(E);
        if (u(x))
            return w ? C[x] : s(C, lt(m) ? x : x.valueOf());
        var A, I;
        if (w)
            A = C[E],
            I = C[E + 1];
        else {
            I = s(C, E + 1),
            A = C[E];
            for (var T = 0; T < E; ++T)
                l(C[T], A) > 0 && (A = C[T])
        }
        return a(o(A, n(1, k)), o(I, k))
    }
}
)
  , AS = "std"
  , cee = ["typed", "map", "sqrt", "variance"]
  , Ck = j(AS, cee, e => {
    var {typed: t, map: r, sqrt: a, variance: n} = e;
    return t(AS, {
        "Array | Matrix": i,
        "Array | Matrix, string": i,
        "Array | Matrix, number | BigNumber": i,
        "Array | Matrix, number | BigNumber, string": i,
        "...": function(s) {
            return i(s)
        }
    });
    function i(o, s) {
        if (o.length === 0)
            throw new SyntaxError("Function std requires one or more parameters (0 provided)");
        try {
            var l = n.apply(null, arguments);
            return Fo(l) ? r(l, a) : a(l)
        } catch (u) {
            throw u instanceof TypeError && u.message.indexOf(" variance") !== -1 ? new TypeError(u.message.replace(" variance", " std")) : u
        }
    }
}
)
  , ES = "corr"
  , dee = ["typed", "matrix", "mean", "sqrt", "sum", "add", "subtract", "multiply", "pow", "divide"]
  , vee = j(ES, dee, e => {
    var {typed: t, matrix: r, sqrt: a, sum: n, add: i, subtract: o, multiply: s, pow: l, divide: u} = e;
    return t(ES, {
        "Array, Array": function(h, p) {
            return c(h, p)
        },
        "Matrix, Matrix": function(h, p) {
            return r(c(h.toArray(), p.toArray()))
        }
    });
    function c(v, h) {
        if (Array.isArray(v[0]) && Array.isArray(h[0])) {
            for (var p = [], f = 0; f < v.length; f++)
                p.push(d(v[f], h[f]));
            return p
        } else
            return d(v, h)
    }
    function d(v, h) {
        var p = v.length
          , f = n(v)
          , _ = n(h)
          , y = v.reduce( (b, x, E) => i(b, s(x, h[E])), 0)
          , g = n(v.map(b => l(b, 2)))
          , m = n(h.map(b => l(b, 2)))
          , w = o(s(p, y), s(f, _))
          , C = a(s(o(s(p, g), l(f, 2)), o(s(p, m), l(_, 2))));
        return u(w, C)
    }
}
)
  , kS = "combinations"
  , hee = ["typed"]
  , mee = j(kS, hee, e => {
    var {typed: t} = e;
    return t(kS, {
        "number, number": x4,
        "BigNumber, BigNumber": function(a, n) {
            var i = a.constructor, o, s, l = a.minus(n), u = new i(1);
            if (!TS(a) || !TS(n))
                throw new TypeError("Positive integer value expected in function combinations");
            if (n.gt(a))
                throw new TypeError("k must be less than n in function combinations");
            if (o = u,
            n.lt(l))
                for (s = u; s.lte(l); s = s.plus(u))
                    o = o.times(n.plus(s)).dividedBy(s);
            else
                for (s = u; s.lte(n); s = s.plus(u))
                    o = o.times(l.plus(s)).dividedBy(s);
            return o
        }
    })
}
);
function TS(e) {
    return e.isInteger() && e.gte(0)
}
var NS = "combinationsWithRep"
  , fee = ["typed"]
  , pee = j(NS, fee, e => {
    var {typed: t} = e;
    return t(NS, {
        "number, number": function(a, n) {
            if (!Be(a) || a < 0)
                throw new TypeError("Positive integer value expected in function combinationsWithRep");
            if (!Be(n) || n < 0)
                throw new TypeError("Positive integer value expected in function combinationsWithRep");
            if (a < 1)
                throw new TypeError("k must be less than or equal to n + k - 1");
            if (n < a - 1) {
                var i = Ui(a, a + n - 1);
                return i / Ui(1, n)
            }
            var o = Ui(n + 1, a + n - 1);
            return o / Ui(1, a - 1)
        },
        "BigNumber, BigNumber": function(a, n) {
            var i = a.constructor, o, s, l = new i(1), u = a.minus(l);
            if (!MS(a) || !MS(n))
                throw new TypeError("Positive integer value expected in function combinationsWithRep");
            if (a.lt(l))
                throw new TypeError("k must be less than or equal to n + k - 1 in function combinationsWithRep");
            if (o = l,
            n.lt(u))
                for (s = l; s.lte(u); s = s.plus(l))
                    o = o.times(n.plus(s)).dividedBy(s);
            else
                for (s = l; s.lte(n); s = s.plus(l))
                    o = o.times(u.plus(s)).dividedBy(s);
            return o
        }
    })
}
);
function MS(e) {
    return e.isInteger() && e.gte(0)
}
var IS = "gamma"
  , yee = ["typed", "config", "multiplyScalar", "pow", "BigNumber", "Complex"]
  , wee = j(IS, yee, e => {
    var {typed: t, config: r, multiplyScalar: a, pow: n, BigNumber: i, Complex: o} = e;
    function s(u) {
        if (u.im === 0)
            return Oh(u.re);
        if (u.re < .5) {
            var c = new o(1 - u.re,-u.im)
              , d = new o(Math.PI * u.re,Math.PI * u.im);
            return new o(Math.PI).div(d.sin()).div(s(c))
        }
        u = new o(u.re - 1,u.im);
        for (var v = new o(Ul[0],0), h = 1; h < Ul.length; ++h) {
            var p = new o(Ul[h],0);
            v = v.add(p.div(u.add(h)))
        }
        var f = new o(u.re + N4 + .5,u.im)
          , _ = Math.sqrt(2 * Math.PI)
          , y = f.pow(u.add(.5))
          , g = f.neg().exp();
        return v.mul(_).mul(y).mul(g)
    }
    return t(IS, {
        number: Oh,
        Complex: s,
        BigNumber: function(c) {
            if (c.isInteger())
                return c.isNegative() || c.isZero() ? new i(1 / 0) : l(c.minus(1));
            if (!c.isFinite())
                return new i(c.isNegative() ? NaN : 1 / 0);
            throw new Error("Integer BigNumber expected")
        }
    });
    function l(u) {
        if (u < 8)
            return new i([1, 1, 2, 6, 24, 120, 720, 5040][u]);
        var c = r.precision + (Math.log(u.toNumber()) | 0)
          , d = i.clone({
            precision: c
        });
        if (u % 2 === 1)
            return u.times(l(new i(u - 1)));
        for (var v = u, h = new d(u), p = u.toNumber(); v > 2; )
            v -= 2,
            p += v,
            h = h.times(p);
        return new i(h.toPrecision(i.precision))
    }
}
)
  , DS = "lgamma"
  , gee = ["Complex", "typed"]
  , _ee = j(DS, gee, e => {
    var {Complex: t, typed: r} = e
      , a = 7
      , n = 7
      , i = [-.029550653594771242, .00641025641025641, -.0019175269175269176, .0008417508417508417, -.0005952380952380953, .0007936507936507937, -.002777777777777778, .08333333333333333];
    return r(DS, {
        number: Ph,
        Complex: o,
        BigNumber: function() {
            throw new Error("mathjs doesn't yet provide an implementation of the algorithm lgamma for BigNumber")
        }
    });
    function o(u) {
        var c = 6.283185307179586
          , d = 1.1447298858494002
          , v = .1;
        if (u.isNaN())
            return new t(NaN,NaN);
        if (u.im === 0)
            return new t(Ph(u.re),0);
        if (u.re >= a || Math.abs(u.im) >= n)
            return s(u);
        if (u.re <= v) {
            var h = dB(c, u.im) * Math.floor(.5 * u.re + .25)
              , p = u.mul(Math.PI).sin().log()
              , f = o(new t(1 - u.re,-u.im));
            return new t(d,h).sub(p).sub(f)
        } else
            return u.im >= 0 ? l(u) : l(u.conjugate()).conjugate()
    }
    function s(u) {
        for (var c = u.sub(.5).mul(u.log()).sub(u).add(M4), d = new t(1,0).div(u), v = d.div(u), h = i[0], p = i[1], f = 2 * v.re, _ = v.re * v.re + v.im * v.im, y = 2; y < 8; y++) {
            var g = p;
            p = -_ * h + i[y],
            h = f * h + g
        }
        var m = d.mul(v.mul(h).add(p));
        return c.add(m)
    }
    function l(u) {
        var c = 0
          , d = 0
          , v = u;
        for (u = u.add(1); u.re <= a; ) {
            v = v.mul(u);
            var h = v.im < 0 ? 1 : 0;
            h !== 0 && d === 0 && c++,
            d = h,
            u = u.add(1)
        }
        return s(u).sub(v.log()).sub(new t(0,c * 2 * Math.PI * 1))
    }
}
)
  , US = "factorial"
  , bee = ["typed", "gamma"]
  , Cee = j(US, bee, e => {
    var {typed: t, gamma: r} = e;
    return t(US, {
        number: function(n) {
            if (n < 0)
                throw new Error("Value must be non-negative");
            return r(n + 1)
        },
        BigNumber: function(n) {
            if (n.isNegative())
                throw new Error("Value must be non-negative");
            return r(n.plus(1))
        },
        "Array | Matrix": t.referToSelf(a => n => dt(n, a))
    })
}
)
  , FS = "kldivergence"
  , See = ["typed", "matrix", "divide", "sum", "multiply", "map", "dotDivide", "log", "isNumeric"]
  , xee = j(FS, See, e => {
    var {typed: t, matrix: r, divide: a, sum: n, multiply: i, map: o, dotDivide: s, log: l, isNumeric: u} = e;
    return t(FS, {
        "Array, Array": function(v, h) {
            return c(r(v), r(h))
        },
        "Matrix, Array": function(v, h) {
            return c(v, r(h))
        },
        "Array, Matrix": function(v, h) {
            return c(r(v), h)
        },
        "Matrix, Matrix": function(v, h) {
            return c(v, h)
        }
    });
    function c(d, v) {
        var h = v.size().length
          , p = d.size().length;
        if (h > 1)
            throw new Error("first object must be one dimensional");
        if (p > 1)
            throw new Error("second object must be one dimensional");
        if (h !== p)
            throw new Error("Length of two vectors must be equal");
        var f = n(d);
        if (f === 0)
            throw new Error("Sum of elements in first object must be non zero");
        var _ = n(v);
        if (_ === 0)
            throw new Error("Sum of elements in second object must be non zero");
        var y = a(d, n(d))
          , g = a(v, n(v))
          , m = n(i(y, o(s(y, g), w => l(w))));
        return u(m) ? m : Number.NaN
    }
}
)
  , OS = "multinomial"
  , Aee = ["typed", "add", "divide", "multiply", "factorial", "isInteger", "isPositive"]
  , Eee = j(OS, Aee, e => {
    var {typed: t, add: r, divide: a, multiply: n, factorial: i, isInteger: o, isPositive: s} = e;
    return t(OS, {
        "Array | Matrix": function(u) {
            var c = 0
              , d = 1;
            return Gi(u, function(v) {
                if (!o(v) || !s(v))
                    throw new TypeError("Positive integer value expected in function multinomial");
                c = r(c, v),
                d = n(d, i(v))
            }),
            a(i(c), d)
        }
    })
}
)
  , PS = "permutations"
  , kee = ["typed", "factorial"]
  , Tee = j(PS, kee, e => {
    var {typed: t, factorial: r} = e;
    return t(PS, {
        "number | BigNumber": r,
        "number, number": function(n, i) {
            if (!Be(n) || n < 0)
                throw new TypeError("Positive integer value expected in function permutations");
            if (!Be(i) || i < 0)
                throw new TypeError("Positive integer value expected in function permutations");
            if (i > n)
                throw new TypeError("second argument k must be less than or equal to first argument n");
            return Ui(n - i + 1, n)
        },
        "BigNumber, BigNumber": function(n, i) {
            var o, s;
            if (!BS(n) || !BS(i))
                throw new TypeError("Positive integer value expected in function permutations");
            if (i.gt(n))
                throw new TypeError("second argument k must be less than or equal to first argument n");
            var l = n.mul(0).add(1);
            for (o = l,
            s = n.minus(i).plus(1); s.lte(n); s = s.plus(1))
                o = o.times(s);
            return o
        }
    })
}
);
function BS(e) {
    return e.isInteger() && e.gte(0)
}
var w2 = {
    exports: {}
};
w2.exports;
(function(e) {
    (function(t, r, a) {
        function n(l) {
            var u = this
              , c = s();
            u.next = function() {
                var d = 2091639 * u.s0 + u.c * 23283064365386963e-26;
                return u.s0 = u.s1,
                u.s1 = u.s2,
                u.s2 = d - (u.c = d | 0)
            }
            ,
            u.c = 1,
            u.s0 = c(" "),
            u.s1 = c(" "),
            u.s2 = c(" "),
            u.s0 -= c(l),
            u.s0 < 0 && (u.s0 += 1),
            u.s1 -= c(l),
            u.s1 < 0 && (u.s1 += 1),
            u.s2 -= c(l),
            u.s2 < 0 && (u.s2 += 1),
            c = null
        }
        function i(l, u) {
            return u.c = l.c,
            u.s0 = l.s0,
            u.s1 = l.s1,
            u.s2 = l.s2,
            u
        }
        function o(l, u) {
            var c = new n(l)
              , d = u && u.state
              , v = c.next;
            return v.int32 = function() {
                return c.next() * 4294967296 | 0
            }
            ,
            v.double = function() {
                return v() + (v() * 2097152 | 0) * 11102230246251565e-32
            }
            ,
            v.quick = v,
            d && (typeof d == "object" && i(d, c),
            v.state = function() {
                return i(c, {})
            }
            ),
            v
        }
        function s() {
            var l = 4022871197
              , u = function(c) {
                c = String(c);
                for (var d = 0; d < c.length; d++) {
                    l += c.charCodeAt(d);
                    var v = .02519603282416938 * l;
                    l = v >>> 0,
                    v -= l,
                    v *= l,
                    l = v >>> 0,
                    v -= l,
                    l += v * 4294967296
                }
                return (l >>> 0) * 23283064365386963e-26
            };
            return u
        }
        r && r.exports ? r.exports = o : a && a.amd ? a(function() {
            return o
        }) : this.alea = o
    }
    )(un, e, !1)
}
)(w2);
var Nee = w2.exports
  , g2 = {
    exports: {}
};
g2.exports;
(function(e) {
    (function(t, r, a) {
        function n(s) {
            var l = this
              , u = "";
            l.x = 0,
            l.y = 0,
            l.z = 0,
            l.w = 0,
            l.next = function() {
                var d = l.x ^ l.x << 11;
                return l.x = l.y,
                l.y = l.z,
                l.z = l.w,
                l.w ^= l.w >>> 19 ^ d ^ d >>> 8
            }
            ,
            s === (s | 0) ? l.x = s : u += s;
            for (var c = 0; c < u.length + 64; c++)
                l.x ^= u.charCodeAt(c) | 0,
                l.next()
        }
        function i(s, l) {
            return l.x = s.x,
            l.y = s.y,
            l.z = s.z,
            l.w = s.w,
            l
        }
        function o(s, l) {
            var u = new n(s)
              , c = l && l.state
              , d = function() {
                return (u.next() >>> 0) / 4294967296
            };
            return d.double = function() {
                do
                    var v = u.next() >>> 11
                      , h = (u.next() >>> 0) / 4294967296
                      , p = (v + h) / (1 << 21);
                while (p === 0);
                return p
            }
            ,
            d.int32 = u.next,
            d.quick = d,
            c && (typeof c == "object" && i(c, u),
            d.state = function() {
                return i(u, {})
            }
            ),
            d
        }
        r && r.exports ? r.exports = o : a && a.amd ? a(function() {
            return o
        }) : this.xor128 = o
    }
    )(un, e, !1)
}
)(g2);
var Mee = g2.exports
  , _2 = {
    exports: {}
};
_2.exports;
(function(e) {
    (function(t, r, a) {
        function n(s) {
            var l = this
              , u = "";
            l.next = function() {
                var d = l.x ^ l.x >>> 2;
                return l.x = l.y,
                l.y = l.z,
                l.z = l.w,
                l.w = l.v,
                (l.d = l.d + 362437 | 0) + (l.v = l.v ^ l.v << 4 ^ (d ^ d << 1)) | 0
            }
            ,
            l.x = 0,
            l.y = 0,
            l.z = 0,
            l.w = 0,
            l.v = 0,
            s === (s | 0) ? l.x = s : u += s;
            for (var c = 0; c < u.length + 64; c++)
                l.x ^= u.charCodeAt(c) | 0,
                c == u.length && (l.d = l.x << 10 ^ l.x >>> 4),
                l.next()
        }
        function i(s, l) {
            return l.x = s.x,
            l.y = s.y,
            l.z = s.z,
            l.w = s.w,
            l.v = s.v,
            l.d = s.d,
            l
        }
        function o(s, l) {
            var u = new n(s)
              , c = l && l.state
              , d = function() {
                return (u.next() >>> 0) / 4294967296
            };
            return d.double = function() {
                do
                    var v = u.next() >>> 11
                      , h = (u.next() >>> 0) / 4294967296
                      , p = (v + h) / (1 << 21);
                while (p === 0);
                return p
            }
            ,
            d.int32 = u.next,
            d.quick = d,
            c && (typeof c == "object" && i(c, u),
            d.state = function() {
                return i(u, {})
            }
            ),
            d
        }
        r && r.exports ? r.exports = o : a && a.amd ? a(function() {
            return o
        }) : this.xorwow = o
    }
    )(un, e, !1)
}
)(_2);
var Iee = _2.exports
  , b2 = {
    exports: {}
};
b2.exports;
(function(e) {
    (function(t, r, a) {
        function n(s) {
            var l = this;
            l.next = function() {
                var c = l.x, d = l.i, v, h;
                return v = c[d],
                v ^= v >>> 7,
                h = v ^ v << 24,
                v = c[d + 1 & 7],
                h ^= v ^ v >>> 10,
                v = c[d + 3 & 7],
                h ^= v ^ v >>> 3,
                v = c[d + 4 & 7],
                h ^= v ^ v << 7,
                v = c[d + 7 & 7],
                v = v ^ v << 13,
                h ^= v ^ v << 9,
                c[d] = h,
                l.i = d + 1 & 7,
                h
            }
            ;
            function u(c, d) {
                var v, h = [];
                if (d === (d | 0))
                    h[0] = d;
                else
                    for (d = "" + d,
                    v = 0; v < d.length; ++v)
                        h[v & 7] = h[v & 7] << 15 ^ d.charCodeAt(v) + h[v + 1 & 7] << 13;
                for (; h.length < 8; )
                    h.push(0);
                for (v = 0; v < 8 && h[v] === 0; ++v)
                    ;
                for (v == 8 ? h[7] = -1 : h[v],
                c.x = h,
                c.i = 0,
                v = 256; v > 0; --v)
                    c.next()
            }
            u(l, s)
        }
        function i(s, l) {
            return l.x = s.x.slice(),
            l.i = s.i,
            l
        }
        function o(s, l) {
            s == null && (s = +new Date);
            var u = new n(s)
              , c = l && l.state
              , d = function() {
                return (u.next() >>> 0) / 4294967296
            };
            return d.double = function() {
                do
                    var v = u.next() >>> 11
                      , h = (u.next() >>> 0) / 4294967296
                      , p = (v + h) / (1 << 21);
                while (p === 0);
                return p
            }
            ,
            d.int32 = u.next,
            d.quick = d,
            c && (c.x && i(c, u),
            d.state = function() {
                return i(u, {})
            }
            ),
            d
        }
        r && r.exports ? r.exports = o : a && a.amd ? a(function() {
            return o
        }) : this.xorshift7 = o
    }
    )(un, e, !1)
}
)(b2);
var Dee = b2.exports
  , C2 = {
    exports: {}
};
C2.exports;
(function(e) {
    (function(t, r, a) {
        function n(s) {
            var l = this;
            l.next = function() {
                var c = l.w, d = l.X, v = l.i, h, p;
                return l.w = c = c + 1640531527 | 0,
                p = d[v + 34 & 127],
                h = d[v = v + 1 & 127],
                p ^= p << 13,
                h ^= h << 17,
                p ^= p >>> 15,
                h ^= h >>> 12,
                p = d[v] = p ^ h,
                l.i = v,
                p + (c ^ c >>> 16) | 0
            }
            ;
            function u(c, d) {
                var v, h, p, f, _, y = [], g = 128;
                for (d === (d | 0) ? (h = d,
                d = null) : (d = d + "\0",
                h = 0,
                g = Math.max(g, d.length)),
                p = 0,
                f = -32; f < g; ++f)
                    d && (h ^= d.charCodeAt((f + 32) % d.length)),
                    f === 0 && (_ = h),
                    h ^= h << 10,
                    h ^= h >>> 15,
                    h ^= h << 4,
                    h ^= h >>> 13,
                    f >= 0 && (_ = _ + 1640531527 | 0,
                    v = y[f & 127] ^= h + _,
                    p = v == 0 ? p + 1 : 0);
                for (p >= 128 && (y[(d && d.length || 0) & 127] = -1),
                p = 127,
                f = 4 * 128; f > 0; --f)
                    h = y[p + 34 & 127],
                    v = y[p = p + 1 & 127],
                    h ^= h << 13,
                    v ^= v << 17,
                    h ^= h >>> 15,
                    v ^= v >>> 12,
                    y[p] = h ^ v;
                c.w = _,
                c.X = y,
                c.i = p
            }
            u(l, s)
        }
        function i(s, l) {
            return l.i = s.i,
            l.w = s.w,
            l.X = s.X.slice(),
            l
        }
        function o(s, l) {
            s == null && (s = +new Date);
            var u = new n(s)
              , c = l && l.state
              , d = function() {
                return (u.next() >>> 0) / 4294967296
            };
            return d.double = function() {
                do
                    var v = u.next() >>> 11
                      , h = (u.next() >>> 0) / 4294967296
                      , p = (v + h) / (1 << 21);
                while (p === 0);
                return p
            }
            ,
            d.int32 = u.next,
            d.quick = d,
            c && (c.X && i(c, u),
            d.state = function() {
                return i(u, {})
            }
            ),
            d
        }
        r && r.exports ? r.exports = o : a && a.amd ? a(function() {
            return o
        }) : this.xor4096 = o
    }
    )(un, e, !1)
}
)(C2);
var Uee = C2.exports
  , S2 = {
    exports: {}
};
S2.exports;
(function(e) {
    (function(t, r, a) {
        function n(s) {
            var l = this
              , u = "";
            l.next = function() {
                var d = l.b
                  , v = l.c
                  , h = l.d
                  , p = l.a;
                return d = d << 25 ^ d >>> 7 ^ v,
                v = v - h | 0,
                h = h << 24 ^ h >>> 8 ^ p,
                p = p - d | 0,
                l.b = d = d << 20 ^ d >>> 12 ^ v,
                l.c = v = v - h | 0,
                l.d = h << 16 ^ v >>> 16 ^ p,
                l.a = p - d | 0
            }
            ,
            l.a = 0,
            l.b = 0,
            l.c = -1640531527,
            l.d = 1367130551,
            s === Math.floor(s) ? (l.a = s / 4294967296 | 0,
            l.b = s | 0) : u += s;
            for (var c = 0; c < u.length + 20; c++)
                l.b ^= u.charCodeAt(c) | 0,
                l.next()
        }
        function i(s, l) {
            return l.a = s.a,
            l.b = s.b,
            l.c = s.c,
            l.d = s.d,
            l
        }
        function o(s, l) {
            var u = new n(s)
              , c = l && l.state
              , d = function() {
                return (u.next() >>> 0) / 4294967296
            };
            return d.double = function() {
                do
                    var v = u.next() >>> 11
                      , h = (u.next() >>> 0) / 4294967296
                      , p = (v + h) / (1 << 21);
                while (p === 0);
                return p
            }
            ,
            d.int32 = u.next,
            d.quick = d,
            c && (typeof c == "object" && i(c, u),
            d.state = function() {
                return i(u, {})
            }
            ),
            d
        }
        r && r.exports ? r.exports = o : a && a.amd ? a(function() {
            return o
        }) : this.tychei = o
    }
    )(un, e, !1)
}
)(S2);
var Fee = S2.exports
  , Sk = {
    exports: {}
};
const Oee = {}
  , Pee = Object.freeze(Object.defineProperty({
    __proto__: null,
    default: Oee
}, Symbol.toStringTag, {
    value: "Module"
}))
  , Bee = gN(Pee);
(function(e) {
    (function(t, r, a) {
        var n = 256, i = 6, o = 52, s = "random", l = a.pow(n, i), u = a.pow(2, o), c = u * 2, d = n - 1, v;
        function h(w, C, b) {
            var x = [];
            C = C == !0 ? {
                entropy: !0
            } : C || {};
            var E = y(_(C.entropy ? [w, m(r)] : w ?? g(), 3), x)
              , k = new p(x)
              , A = function() {
                for (var I = k.g(i), T = l, F = 0; I < u; )
                    I = (I + F) * n,
                    T *= n,
                    F = k.g(1);
                for (; I >= c; )
                    I /= 2,
                    T /= 2,
                    F >>>= 1;
                return (I + F) / T
            };
            return A.int32 = function() {
                return k.g(4) | 0
            }
            ,
            A.quick = function() {
                return k.g(4) / 4294967296
            }
            ,
            A.double = A,
            y(m(k.S), r),
            (C.pass || b || function(I, T, F, R) {
                return R && (R.S && f(R, k),
                I.state = function() {
                    return f(k, {})
                }
                ),
                F ? (a[s] = I,
                T) : I
            }
            )(A, E, "global"in C ? C.global : this == a, C.state)
        }
        function p(w) {
            var C, b = w.length, x = this, E = 0, k = x.i = x.j = 0, A = x.S = [];
            for (b || (w = [b++]); E < n; )
                A[E] = E++;
            for (E = 0; E < n; E++)
                A[E] = A[k = d & k + w[E % b] + (C = A[E])],
                A[k] = C;
            (x.g = function(I) {
                for (var T, F = 0, R = x.i, O = x.j, M = x.S; I--; )
                    T = M[R = d & R + 1],
                    F = F * n + M[d & (M[R] = M[O = d & O + T]) + (M[O] = T)];
                return x.i = R,
                x.j = O,
                F
            }
            )(n)
        }
        function f(w, C) {
            return C.i = w.i,
            C.j = w.j,
            C.S = w.S.slice(),
            C
        }
        function _(w, C) {
            var b = [], x = typeof w, E;
            if (C && x == "object")
                for (E in w)
                    try {
                        b.push(_(w[E], C - 1))
                    } catch {}
            return b.length ? b : x == "string" ? w : w + "\0"
        }
        function y(w, C) {
            for (var b = w + "", x, E = 0; E < b.length; )
                C[d & E] = d & (x ^= C[d & E] * 19) + b.charCodeAt(E++);
            return m(C)
        }
        function g() {
            try {
                var w;
                return v && (w = v.randomBytes) ? w = w(n) : (w = new Uint8Array(n),
                (t.crypto || t.msCrypto).getRandomValues(w)),
                m(w)
            } catch {
                var C = t.navigator
                  , b = C && C.plugins;
                return [+new Date, t, b, t.screen, m(r)]
            }
        }
        function m(w) {
            return String.fromCharCode.apply(0, w)
        }
        if (y(a.random(), r),
        e.exports) {
            e.exports = h;
            try {
                v = Bee
            } catch {}
        } else
            a["seed" + s] = h
    }
    )(typeof self < "u" ? self : un, [], Math)
}
)(Sk);
var Ree = Sk.exports
  , Lee = Nee
  , qee = Mee
  , Vee = Iee
  , $ee = Dee
  , zee = Uee
  , Gee = Fee
  , Is = Ree;
Is.alea = Lee;
Is.xor128 = qee;
Is.xorwow = Vee;
Is.xorshift7 = $ee;
Is.xor4096 = zee;
Is.tychei = Gee;
var jee = Is;
const xk = vi(jee);
var Hee = xk(Date.now());
function Kl(e) {
    var t;
    function r(n) {
        t = n === null ? Hee : xk(String(n))
    }
    r(e);
    function a() {
        return t()
    }
    return a
}
var RS = "pickRandom"
  , Wee = ["typed", "config", "?on"]
  , Yee = j(RS, Wee, e => {
    var {typed: t, config: r, on: a} = e
      , n = Kl(r.randomSeed);
    return a && a("config", function(o, s) {
        o.randomSeed !== s.randomSeed && (n = Kl(o.randomSeed))
    }),
    t(RS, {
        "Array | Matrix": function(s) {
            return i(s, {})
        },
        "Array | Matrix, Object": function(s, l) {
            return i(s, l)
        },
        "Array | Matrix, number": function(s, l) {
            return i(s, {
                number: l
            })
        },
        "Array | Matrix, Array | Matrix": function(s, l) {
            return i(s, {
                weights: l
            })
        },
        "Array | Matrix, Array | Matrix, number": function(s, l, u) {
            return i(s, {
                number: u,
                weights: l
            })
        },
        "Array | Matrix, number, Array | Matrix": function(s, l, u) {
            return i(s, {
                number: l,
                weights: u
            })
        }
    });
    function i(o, s) {
        var {number: l, weights: u, elementWise: c=!0} = s
          , d = typeof l > "u";
        d && (l = 1);
        var v = je(o) ? o.create : je(u) ? u.create : null;
        o = o.valueOf(),
        u && (u = u.valueOf()),
        c === !0 && (o = bt(o),
        u = bt(u));
        var h = 0;
        if (typeof u < "u") {
            if (u.length !== o.length)
                throw new Error("Weights must have the same length as possibles");
            for (var p = 0, f = u.length; p < f; p++) {
                if (!lt(u[p]) || u[p] < 0)
                    throw new Error("Weights must be an array of positive numbers");
                h += u[p]
            }
        }
        for (var _ = o.length, y = [], g; y.length < l; ) {
            if (typeof u > "u")
                g = o[Math.floor(n() * _)];
            else
                for (var m = n() * h, w = 0, C = o.length; w < C; w++)
                    if (m -= u[w],
                    m < 0) {
                        g = o[w];
                        break
                    }
            y.push(g)
        }
        return d ? y[0] : v ? v(y) : y
    }
}
);
function x2(e, t) {
    var r = [];
    if (e = e.slice(0),
    e.length > 1)
        for (var a = 0, n = e.shift(); a < n; a++)
            r.push(x2(e, t));
    else
        for (var i = 0, o = e.shift(); i < o; i++)
            r.push(t());
    return r
}
var LS = "random"
  , Jee = ["typed", "config", "?on"]
  , Kee = j(LS, Jee, e => {
    var {typed: t, config: r, on: a} = e
      , n = Kl(r.randomSeed);
    return a && a("config", function(s, l) {
        s.randomSeed !== l.randomSeed && (n = Kl(s.randomSeed))
    }),
    t(LS, {
        "": () => o(0, 1),
        number: s => o(0, s),
        "number, number": (s, l) => o(s, l),
        "Array | Matrix": s => i(s, 0, 1),
        "Array | Matrix, number": (s, l) => i(s, 0, l),
        "Array | Matrix, number, number": (s, l, u) => i(s, l, u)
    });
    function i(s, l, u) {
        var c = x2(s.valueOf(), () => o(l, u));
        return je(s) ? s.create(c) : c
    }
    function o(s, l) {
        return s + n() * (l - s)
    }
}
)
  , qS = "randomInt"
  , Qee = ["typed", "config", "?on"]
  , Zee = j(qS, Qee, e => {
    var {typed: t, config: r, on: a} = e
      , n = Kl(r.randomSeed);
    return a && a("config", function(s, l) {
        s.randomSeed !== l.randomSeed && (n = Kl(s.randomSeed))
    }),
    t(qS, {
        "": () => o(0, 1),
        number: s => o(0, s),
        "number, number": (s, l) => o(s, l),
        "Array | Matrix": s => i(s, 0, 1),
        "Array | Matrix, number": (s, l) => i(s, 0, l),
        "Array | Matrix, number, number": (s, l, u) => i(s, l, u)
    });
    function i(s, l, u) {
        var c = x2(s.valueOf(), () => o(l, u));
        return je(s) ? s.create(c) : c
    }
    function o(s, l) {
        return Math.floor(s + n() * (l - s))
    }
}
)
  , VS = "stirlingS2"
  , Xee = ["typed", "addScalar", "subtract", "multiplyScalar", "divideScalar", "pow", "factorial", "combinations", "isNegative", "isInteger", "number", "?bignumber", "larger"]
  , ete = j(VS, Xee, e => {
    var {typed: t, addScalar: r, subtract: a, multiplyScalar: n, divideScalar: i, pow: o, factorial: s, combinations: l, isNegative: u, isInteger: c, number: d, bignumber: v, larger: h} = e
      , p = []
      , f = [];
    return t(VS, {
        "number | BigNumber, number | BigNumber": function(y, g) {
            if (!c(y) || u(y) || !c(g) || u(g))
                throw new TypeError("Non-negative integer value expected in function stirlingS2");
            if (h(g, y))
                throw new TypeError("k must be less than or equal to n in function stirlingS2");
            var m = !(lt(y) && lt(g))
              , w = m ? f : p
              , C = m ? v : d
              , b = d(y)
              , x = d(g);
            if (w[b] && w[b].length > x)
                return w[b][x];
            for (var E = 0; E <= b; ++E)
                if (w[E] || (w[E] = [C(E === 0 ? 1 : 0)]),
                E !== 0)
                    for (var k = w[E], A = w[E - 1], I = k.length; I <= E && I <= x; ++I)
                        I === E ? k[I] = 1 : k[I] = r(n(C(I), A[I]), A[I - 1]);
            return w[b][x]
        }
    })
}
)
  , $S = "bellNumbers"
  , tte = ["typed", "addScalar", "isNegative", "isInteger", "stirlingS2"]
  , rte = j($S, tte, e => {
    var {typed: t, addScalar: r, isNegative: a, isInteger: n, stirlingS2: i} = e;
    return t($S, {
        "number | BigNumber": function(s) {
            if (!n(s) || a(s))
                throw new TypeError("Non-negative integer value expected in function bellNumbers");
            for (var l = 0, u = 0; u <= s; u++)
                l = r(l, i(s, u));
            return l
        }
    })
}
)
  , zS = "catalan"
  , ate = ["typed", "addScalar", "divideScalar", "multiplyScalar", "combinations", "isNegative", "isInteger"]
  , nte = j(zS, ate, e => {
    var {typed: t, addScalar: r, divideScalar: a, multiplyScalar: n, combinations: i, isNegative: o, isInteger: s} = e;
    return t(zS, {
        "number | BigNumber": function(u) {
            if (!s(u) || o(u))
                throw new TypeError("Non-negative integer value expected in function catalan");
            return a(i(n(u, 2), u), r(u, 1))
        }
    })
}
)
  , GS = "composition"
  , ite = ["typed", "addScalar", "combinations", "isNegative", "isPositive", "isInteger", "larger"]
  , ote = j(GS, ite, e => {
    var {typed: t, addScalar: r, combinations: a, isPositive: n, isNegative: i, isInteger: o, larger: s} = e;
    return t(GS, {
        "number | BigNumber, number | BigNumber": function(u, c) {
            if (!o(u) || !n(u) || !o(c) || !n(c))
                throw new TypeError("Positive integer value expected in function composition");
            if (s(c, u))
                throw new TypeError("k must be less than or equal to n in function composition");
            return a(r(u, -1), r(c, -1))
        }
    })
}
)
  , jS = "leafCount"
  , ste = ["parse", "typed"]
  , lte = j(jS, ste, e => {
    var {parse: t, typed: r} = e;
    function a(n) {
        var i = 0;
        return n.forEach(o => {
            i += a(o)
        }
        ),
        i || 1
    }
    return r(jS, {
        Node: function(i) {
            return a(i)
        }
    })
}
);
function HS(e) {
    return _t(e) || vr(e) && e.isUnary() && _t(e.args[0])
}
function Hh(e) {
    return !!(_t(e) || (Oo(e) || vr(e)) && e.args.every(Hh) || zi(e) && Hh(e.content))
}
function WS(e, t) {
    var r = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var a = Object.getOwnPropertySymbols(e);
        t && (a = a.filter(function(n) {
            return Object.getOwnPropertyDescriptor(e, n).enumerable
        })),
        r.push.apply(r, a)
    }
    return r
}
function Tp(e) {
    for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t] != null ? arguments[t] : {};
        t % 2 ? WS(Object(r), !0).forEach(function(a) {
            Ze(e, a, r[a])
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : WS(Object(r)).forEach(function(a) {
            Object.defineProperty(e, a, Object.getOwnPropertyDescriptor(r, a))
        })
    }
    return e
}
var ute = "simplifyUtil"
  , cte = ["FunctionNode", "OperatorNode", "SymbolNode"]
  , A2 = j(ute, cte, e => {
    var {FunctionNode: t, OperatorNode: r, SymbolNode: a} = e
      , n = !0
      , i = !1
      , o = "defaultF"
      , s = {
        add: {
            trivial: n,
            total: n,
            commutative: n,
            associative: n
        },
        unaryPlus: {
            trivial: n,
            total: n,
            commutative: n,
            associative: n
        },
        subtract: {
            trivial: i,
            total: n,
            commutative: i,
            associative: i
        },
        multiply: {
            trivial: n,
            total: n,
            commutative: n,
            associative: n
        },
        divide: {
            trivial: i,
            total: n,
            commutative: i,
            associative: i
        },
        paren: {
            trivial: n,
            total: n,
            commutative: n,
            associative: i
        },
        defaultF: {
            trivial: i,
            total: n,
            commutative: i,
            associative: i
        }
    }
      , l = {
        divide: {
            total: i
        },
        log: {
            total: i
        }
    }
      , u = {
        subtract: {
            total: i
        },
        abs: {
            trivial: n
        },
        log: {
            total: n
        }
    };
    function c(m, w) {
        var C = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : s
          , b = o;
        if (typeof m == "string" ? b = m : vr(m) ? b = m.fn.toString() : Oo(m) ? b = m.name : zi(m) && (b = "paren"),
        Ue(C, b)) {
            var x = C[b];
            if (Ue(x, w))
                return x[w];
            if (Ue(s, b))
                return s[b][w]
        }
        if (Ue(C, o)) {
            var E = C[o];
            return Ue(E, w) ? E[w] : s[o][w]
        }
        if (Ue(s, b)) {
            var k = s[b];
            if (Ue(k, w))
                return k[w]
        }
        return s[o][w]
    }
    function d(m) {
        var w = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : s;
        return c(m, "commutative", w)
    }
    function v(m) {
        var w = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : s;
        return c(m, "associative", w)
    }
    function h(m, w) {
        var C = Tp({}, m);
        for (var b in w)
            Ue(m, b) ? C[b] = Tp(Tp({}, w[b]), m[b]) : C[b] = w[b];
        return C
    }
    function p(m, w) {
        if (!m.args || m.args.length === 0)
            return m;
        m.args = f(m, w);
        for (var C = 0; C < m.args.length; C++)
            p(m.args[C], w)
    }
    function f(m, w) {
        var C, b = [], x = function E(k) {
            for (var A = 0; A < k.args.length; A++) {
                var I = k.args[A];
                vr(I) && C === I.op ? E(I) : b.push(I)
            }
        };
        return v(m, w) ? (C = m.op,
        x(m),
        b) : m.args
    }
    function _(m, w) {
        if (!(!m.args || m.args.length === 0)) {
            for (var C = g(m), b = m.args.length, x = 0; x < b; x++)
                _(m.args[x], w);
            if (b > 2 && v(m, w)) {
                for (var E = m.args.pop(); m.args.length > 0; )
                    E = C([m.args.pop(), E]);
                m.args = E.args
            }
        }
    }
    function y(m, w) {
        if (!(!m.args || m.args.length === 0)) {
            for (var C = g(m), b = m.args.length, x = 0; x < b; x++)
                y(m.args[x], w);
            if (b > 2 && v(m, w)) {
                for (var E = m.args.shift(); m.args.length > 0; )
                    E = C([E, m.args.shift()]);
                m.args = E.args
            }
        }
    }
    function g(m) {
        return vr(m) ? function(w) {
            try {
                return new r(m.op,m.fn,w,m.implicit)
            } catch (C) {
                return console.error(C),
                []
            }
        }
        : function(w) {
            return new t(new a(m.name),w)
        }
    }
    return {
        createMakeNodeFunction: g,
        hasProperty: c,
        isCommutative: d,
        isAssociative: v,
        mergeContext: h,
        flatten: p,
        allChildren: f,
        unflattenr: _,
        unflattenl: y,
        defaultContext: s,
        realContext: l,
        positiveContext: u
    }
}
)
  , dte = "simplify"
  , vte = ["config", "typed", "parse", "add", "subtract", "multiply", "divide", "pow", "isZero", "equal", "resolve", "simplifyConstant", "simplifyCore", "?fraction", "?bignumber", "mathWithTransform", "matrix", "AccessorNode", "ArrayNode", "ConstantNode", "FunctionNode", "IndexNode", "ObjectNode", "OperatorNode", "ParenthesisNode", "SymbolNode"]
  , hte = j(dte, vte, e => {
    var {config: t, typed: r, parse: a, add: n, subtract: i, multiply: o, divide: s, pow: l, isZero: u, equal: c, resolve: d, simplifyConstant: v, simplifyCore: h, fraction: p, bignumber: f, mathWithTransform: _, matrix: y, AccessorNode: g, ArrayNode: m, ConstantNode: w, FunctionNode: C, IndexNode: b, ObjectNode: x, OperatorNode: E, ParenthesisNode: k, SymbolNode: A} = e
      , {hasProperty: I, isCommutative: T, isAssociative: F, mergeContext: R, flatten: O, unflattenr: M, unflattenl: N, createMakeNodeFunction: B, defaultContext: D, realContext: V, positiveContext: J} = A2({
        FunctionNode: C,
        OperatorNode: E,
        SymbolNode: A
    });
    r.addConversion({
        from: "Object",
        to: "Map",
        convert: Dl
    });
    var Y = r("simplify", {
        Node: ue,
        "Node, Map": (P, $) => ue(P, !1, $),
        "Node, Map, Object": (P, $, K) => ue(P, !1, $, K),
        "Node, Array": ue,
        "Node, Array, Map": ue,
        "Node, Array, Map, Object": ue
    });
    r.removeConversion({
        from: "Object",
        to: "Map",
        convert: Dl
    }),
    Y.defaultContext = D,
    Y.realContext = V,
    Y.positiveContext = J;
    function G(P) {
        return P.transform(function($, K, ae) {
            return zi($) ? G($.content) : $
        })
    }
    var Z = {
        true: !0,
        false: !0,
        e: !0,
        i: !0,
        Infinity: !0,
        LN2: !0,
        LN10: !0,
        LOG2E: !0,
        LOG10E: !0,
        NaN: !0,
        phi: !0,
        pi: !0,
        SQRT1_2: !0,
        SQRT2: !0,
        tau: !0
    };
    Y.rules = [h, {
        l: "log(e)",
        r: "1"
    }, {
        s: "n-n1 -> n+-n1",
        assuming: {
            subtract: {
                total: !0
            }
        }
    }, {
        s: "n-n -> 0",
        assuming: {
            subtract: {
                total: !1
            }
        }
    }, {
        s: "-(cl*v) -> v * (-cl)",
        assuming: {
            multiply: {
                commutative: !0
            },
            subtract: {
                total: !0
            }
        }
    }, {
        s: "-(cl*v) -> (-cl) * v",
        assuming: {
            multiply: {
                commutative: !1
            },
            subtract: {
                total: !0
            }
        }
    }, {
        s: "-(v*cl) -> v * (-cl)",
        assuming: {
            multiply: {
                commutative: !1
            },
            subtract: {
                total: !0
            }
        }
    }, {
        l: "-(n1/n2)",
        r: "-n1/n2"
    }, {
        l: "-v",
        r: "v * (-1)"
    }, {
        l: "(n1 + n2)*(-1)",
        r: "n1*(-1) + n2*(-1)",
        repeat: !0
    }, {
        l: "n/n1^n2",
        r: "n*n1^-n2"
    }, {
        l: "n/n1",
        r: "n*n1^-1"
    }, {
        s: "(n1*n2)^n3 -> n1^n3 * n2^n3",
        assuming: {
            multiply: {
                commutative: !0
            }
        }
    }, {
        s: "(n1*n2)^(-1) -> n2^(-1) * n1^(-1)",
        assuming: {
            multiply: {
                commutative: !1
            }
        }
    }, {
        s: "(n ^ n1) ^ n2 -> n ^ (n1 * n2)",
        assuming: {
            divide: {
                total: !0
            }
        }
    }, {
        l: " vd   * ( vd   * n1 + n2)",
        r: "vd^2       * n1 +  vd   * n2"
    }, {
        s: " vd   * (vd^n4 * n1 + n2)   ->  vd^(1+n4)  * n1 +  vd   * n2",
        assuming: {
            divide: {
                total: !0
            }
        }
    }, {
        s: "vd^n3 * ( vd   * n1 + n2)   ->  vd^(n3+1)  * n1 + vd^n3 * n2",
        assuming: {
            divide: {
                total: !0
            }
        }
    }, {
        s: "vd^n3 * (vd^n4 * n1 + n2)   ->  vd^(n3+n4) * n1 + vd^n3 * n2",
        assuming: {
            divide: {
                total: !0
            }
        }
    }, {
        l: "n*n",
        r: "n^2"
    }, {
        s: "n * n^n1 -> n^(n1+1)",
        assuming: {
            divide: {
                total: !0
            }
        }
    }, {
        s: "n^n1 * n^n2 -> n^(n1+n2)",
        assuming: {
            divide: {
                total: !0
            }
        }
    }, v, {
        s: "n+n -> 2*n",
        assuming: {
            add: {
                total: !0
            }
        }
    }, {
        l: "n+-n",
        r: "0"
    }, {
        l: "vd*n + vd",
        r: "vd*(n+1)"
    }, {
        l: "n3*n1 + n3*n2",
        r: "n3*(n1+n2)"
    }, {
        l: "n3^(-n4)*n1 +   n3  * n2",
        r: "n3^(-n4)*(n1 + n3^(n4+1) *n2)"
    }, {
        l: "n3^(-n4)*n1 + n3^n5 * n2",
        r: "n3^(-n4)*(n1 + n3^(n4+n5)*n2)"
    }, {
        s: "n*vd + vd -> (n+1)*vd",
        assuming: {
            multiply: {
                commutative: !1
            }
        }
    }, {
        s: "vd + n*vd -> (1+n)*vd",
        assuming: {
            multiply: {
                commutative: !1
            }
        }
    }, {
        s: "n1*n3 + n2*n3 -> (n1+n2)*n3",
        assuming: {
            multiply: {
                commutative: !1
            }
        }
    }, {
        s: "n^n1 * n -> n^(n1+1)",
        assuming: {
            divide: {
                total: !0
            },
            multiply: {
                commutative: !1
            }
        }
    }, {
        s: "n1*n3^(-n4) + n2 * n3    -> (n1 + n2*n3^(n4 +  1))*n3^(-n4)",
        assuming: {
            multiply: {
                commutative: !1
            }
        }
    }, {
        s: "n1*n3^(-n4) + n2 * n3^n5 -> (n1 + n2*n3^(n4 + n5))*n3^(-n4)",
        assuming: {
            multiply: {
                commutative: !1
            }
        }
    }, {
        l: "n*cd + cd",
        r: "(n+1)*cd"
    }, {
        s: "cd*n + cd -> cd*(n+1)",
        assuming: {
            multiply: {
                commutative: !1
            }
        }
    }, {
        s: "cd + cd*n -> cd*(1+n)",
        assuming: {
            multiply: {
                commutative: !1
            }
        }
    }, v, {
        s: "(-n)*n1 -> -(n*n1)",
        assuming: {
            subtract: {
                total: !0
            }
        }
    }, {
        s: "n1*(-n) -> -(n1*n)",
        assuming: {
            subtract: {
                total: !0
            },
            multiply: {
                commutative: !1
            }
        }
    }, {
        s: "ce+ve -> ve+ce",
        assuming: {
            add: {
                commutative: !0
            }
        },
        imposeContext: {
            add: {
                commutative: !1
            }
        }
    }, {
        s: "vd*cd -> cd*vd",
        assuming: {
            multiply: {
                commutative: !0
            }
        },
        imposeContext: {
            multiply: {
                commutative: !1
            }
        }
    }, {
        l: "n+-n1",
        r: "n-n1"
    }, {
        l: "n+-(n1)",
        r: "n-(n1)"
    }, {
        s: "n*(n1^-1) -> n/n1",
        assuming: {
            multiply: {
                commutative: !0
            }
        }
    }, {
        s: "n*n1^-n2 -> n/n1^n2",
        assuming: {
            multiply: {
                commutative: !0
            }
        }
    }, {
        s: "n^-1 -> 1/n",
        assuming: {
            multiply: {
                commutative: !0
            }
        }
    }, {
        l: "n^1",
        r: "n"
    }, {
        s: "n*(n1/n2) -> (n*n1)/n2",
        assuming: {
            multiply: {
                associative: !0
            }
        }
    }, {
        s: "n-(n1+n2) -> n-n1-n2",
        assuming: {
            addition: {
                associative: !0,
                commutative: !0
            }
        }
    }, {
        l: "1*n",
        r: "n",
        imposeContext: {
            multiply: {
                commutative: !0
            }
        }
    }, {
        s: "n1/(n2/n3) -> (n1*n3)/n2",
        assuming: {
            multiply: {
                associative: !0
            }
        }
    }, {
        l: "n1/(-n2)",
        r: "-n1/n2"
    }];
    function ie(P, $) {
        var K = {};
        if (P.s) {
            var ae = P.s.split("->");
            if (ae.length === 2)
                K.l = ae[0],
                K.r = ae[1];
            else
                throw SyntaxError("Could not parse rule: " + P.s)
        } else
            K.l = P.l,
            K.r = P.r;
        K.l = G(a(K.l)),
        K.r = G(a(K.r));
        for (var te of ["imposeContext", "repeat", "assuming"])
            te in P && (K[te] = P[te]);
        if (P.evaluate && (K.evaluate = a(P.evaluate)),
        F(K.l, $)) {
            var L = !T(K.l, $), W;
            L && (W = ce());
            var ne = B(K.l)
              , le = ce();
            K.expanded = {},
            K.expanded.l = ne([K.l, le]),
            O(K.expanded.l, $),
            M(K.expanded.l, $),
            K.expanded.r = ne([K.r, le]),
            L && (K.expandedNC1 = {},
            K.expandedNC1.l = ne([W, K.l]),
            K.expandedNC1.r = ne([W, K.r]),
            K.expandedNC2 = {},
            K.expandedNC2.l = ne([W, K.expanded.l]),
            K.expandedNC2.r = ne([W, K.expanded.r]))
        }
        return K
    }
    function re(P, $) {
        for (var K = [], ae = 0; ae < P.length; ae++) {
            var te = P[ae]
              , L = void 0
              , W = typeof te;
            switch (W) {
            case "string":
                te = {
                    s: te
                };
            case "object":
                L = ie(te, $);
                break;
            case "function":
                L = te;
                break;
            default:
                throw TypeError("Unsupported type of rule: " + W)
            }
            K.push(L)
        }
        return K
    }
    var se = 0;
    function ce() {
        return new A("_p" + se++)
    }
    function ue(P, $) {
        var K = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : Yl()
          , ae = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {}
          , te = ae.consoleDebug;
        $ = re($ || Y.rules, ae.context);
        var L = d(P, K);
        L = G(L);
        for (var W = {}, ne = L.toString({
            parenthesis: "all"
        }); !W[ne]; ) {
            W[ne] = !0,
            se = 0;
            var le = ne;
            te && console.log("Working on: ", ne);
            for (var he = 0; he < $.length; he++) {
                var ve = "";
                if (typeof $[he] == "function" ? (L = $[he](L, ae),
                te && (ve = $[he].name)) : (O(L, ae.context),
                L = me(L, $[he], ae.context),
                te && (ve = "".concat($[he].l.toString(), " -> ").concat($[he].r.toString()))),
                te) {
                    var we = L.toString({
                        parenthesis: "all"
                    });
                    we !== le && (console.log("Applying", ve, "produced", we),
                    le = we)
                }
                N(L, ae.context)
            }
            ne = L.toString({
                parenthesis: "all"
            })
        }
        return L
    }
    function oe(P, $, K) {
        var ae = P;
        if (P)
            for (var te = 0; te < P.length; ++te) {
                var L = me(P[te], $, K);
                L !== P[te] && (ae === P && (ae = P.slice()),
                ae[te] = L)
            }
        return ae
    }
    function me(P, $, K) {
        if ($.assuming) {
            for (var ae in $.assuming)
                for (var te in $.assuming[ae])
                    if (I(ae, te, K) !== $.assuming[ae][te])
                        return P
        }
        var L = R($.imposeContext, K)
          , W = P;
        if (W instanceof E || W instanceof C) {
            var ne = oe(W.args, $, K);
            ne !== W.args && (W = W.clone(),
            W.args = ne)
        } else if (W instanceof k) {
            if (W.content) {
                var le = me(W.content, $, K);
                le !== W.content && (W = new k(le))
            }
        } else if (W instanceof m) {
            var he = oe(W.items, $, K);
            he !== W.items && (W = new m(he))
        } else if (W instanceof g) {
            var ve = W.object;
            W.object && (ve = me(W.object, $, K));
            var we = W.index;
            W.index && (we = me(W.index, $, K)),
            (ve !== W.object || we !== W.index) && (W = new g(ve,we))
        } else if (W instanceof b) {
            var ye = oe(W.dimensions, $, K);
            ye !== W.dimensions && (W = new b(ye))
        } else if (W instanceof x) {
            var Ce = !1
              , ge = {};
            for (var We in W.properties)
                ge[We] = me(W.properties[We], $, K),
                ge[We] !== W.properties[We] && (Ce = !0);
            Ce && (W = new x(ge))
        }
        var He = $.r
          , $e = Q($.l, W, L)[0];
        if (!$e && $.expanded && (He = $.expanded.r,
        $e = Q($.expanded.l, W, L)[0]),
        !$e && $.expandedNC1 && (He = $.expandedNC1.r,
        $e = Q($.expandedNC1.l, W, L)[0],
        $e || (He = $.expandedNC2.r,
        $e = Q($.expandedNC2.l, W, L)[0])),
        $e) {
            var Ge = W.implicit;
            W = He.clone(),
            Ge && "implicit"in He && (W.implicit = !0),
            W = W.transform(function(St) {
                return St.isSymbolNode && Ue($e.placeholders, St.name) ? $e.placeholders[St.name].clone() : St
            })
        }
        return $.repeat && W !== P && (W = me(W, $, K)),
        W
    }
    function xe(P, $) {
        var K = [], ae, te, L = B(P);
        if (T(P, $))
            for (var W = 0; W < P.args.length; W++)
                te = P.args.slice(0),
                te.splice(W, 1),
                ae = te.length === 1 ? te[0] : L(te),
                K.push(L([P.args[W], ae]));
        else
            for (var ne = 1; ne < P.args.length; ne++) {
                var le = P.args[0];
                ne > 1 && (le = L(P.args.slice(0, ne))),
                te = P.args.slice(ne),
                ae = te.length === 1 ? te[0] : L(te),
                K.push(L([le, ae]))
            }
        return K
    }
    function pe(P, $) {
        var K = {
            placeholders: {}
        };
        if (!P.placeholders && !$.placeholders)
            return K;
        if (P.placeholders) {
            if (!$.placeholders)
                return P
        } else
            return $;
        for (var ae in P.placeholders)
            if (Ue(P.placeholders, ae) && (K.placeholders[ae] = P.placeholders[ae],
            Ue($.placeholders, ae) && !z(P.placeholders[ae], $.placeholders[ae])))
                return null;
        for (var te in $.placeholders)
            Ue($.placeholders, te) && (K.placeholders[te] = $.placeholders[te]);
        return K
    }
    function be(P, $) {
        var K = [];
        if (P.length === 0 || $.length === 0)
            return K;
        for (var ae, te = 0; te < P.length; te++)
            for (var L = 0; L < $.length; L++)
                ae = pe(P[te], $[L]),
                ae && K.push(ae);
        return K
    }
    function H(P) {
        if (P.length === 0)
            return P;
        for (var $ = P.reduce(be), K = [], ae = {}, te = 0; te < $.length; te++) {
            var L = JSON.stringify($[te]);
            ae[L] || (ae[L] = !0,
            K.push($[te]))
        }
        return K
    }
    function Q(P, $, K, ae) {
        var te = [{
            placeholders: {}
        }];
        if (P instanceof E && $ instanceof E || P instanceof C && $ instanceof C) {
            if (P instanceof E) {
                if (P.op !== $.op || P.fn !== $.fn)
                    return []
            } else if (P instanceof C && P.name !== $.name)
                return [];
            if ($.args.length === 1 && P.args.length === 1 || !F($, K) && $.args.length === P.args.length || ae) {
                for (var L = [], W = 0; W < P.args.length; W++) {
                    var ne = Q(P.args[W], $.args[W], K);
                    if (ne.length === 0)
                        break;
                    L.push(ne)
                }
                if (L.length !== P.args.length) {
                    if (!T($, K) || P.args.length === 1)
                        return [];
                    if (P.args.length > 2)
                        throw new Error("permuting >2 commutative non-associative rule arguments not yet implemented");
                    var le = Q(P.args[0], $.args[1], K);
                    if (le.length === 0)
                        return [];
                    var he = Q(P.args[1], $.args[0], K);
                    if (he.length === 0)
                        return [];
                    L = [le, he]
                }
                te = H(L)
            } else if ($.args.length >= 2 && P.args.length === 2) {
                for (var ve = xe($, K), we = [], ye = 0; ye < ve.length; ye++) {
                    var Ce = Q(P, ve[ye], K, !0);
                    we = we.concat(Ce)
                }
                return we
            } else {
                if (P.args.length > 2)
                    throw Error("Unexpected non-binary associative function: " + P.toString());
                return []
            }
        } else if (P instanceof A) {
            if (P.name.length === 0)
                throw new Error("Symbol in rule has 0 length...!?");
            if (Z[P.name]) {
                if (P.name !== $.name)
                    return []
            } else
                switch (P.name[1] >= "a" && P.name[1] <= "z" ? P.name.substring(0, 2) : P.name[0]) {
                case "n":
                case "_p":
                    te[0].placeholders[P.name] = $;
                    break;
                case "c":
                case "cl":
                    if (_t($))
                        te[0].placeholders[P.name] = $;
                    else
                        return [];
                    break;
                case "v":
                    if (!_t($))
                        te[0].placeholders[P.name] = $;
                    else
                        return [];
                    break;
                case "vl":
                    if (Er($))
                        te[0].placeholders[P.name] = $;
                    else
                        return [];
                    break;
                case "cd":
                    if (HS($))
                        te[0].placeholders[P.name] = $;
                    else
                        return [];
                    break;
                case "vd":
                    if (!HS($))
                        te[0].placeholders[P.name] = $;
                    else
                        return [];
                    break;
                case "ce":
                    if (Hh($))
                        te[0].placeholders[P.name] = $;
                    else
                        return [];
                    break;
                case "ve":
                    if (!Hh($))
                        te[0].placeholders[P.name] = $;
                    else
                        return [];
                    break;
                default:
                    throw new Error("Invalid symbol in rule: " + P.name)
                }
        } else if (P instanceof w) {
            if (!c(P.value, $.value))
                return []
        } else
            return [];
        return te
    }
    function z(P, $) {
        if (P instanceof w && $ instanceof w) {
            if (!c(P.value, $.value))
                return !1
        } else if (P instanceof A && $ instanceof A) {
            if (P.name !== $.name)
                return !1
        } else if (P instanceof E && $ instanceof E || P instanceof C && $ instanceof C) {
            if (P instanceof E) {
                if (P.op !== $.op || P.fn !== $.fn)
                    return !1
            } else if (P instanceof C && P.name !== $.name)
                return !1;
            if (P.args.length !== $.args.length)
                return !1;
            for (var K = 0; K < P.args.length; K++)
                if (!z(P.args[K], $.args[K]))
                    return !1
        } else
            return !1;
        return !0
    }
    return Y
}
)
  , mte = "simplifyConstant"
  , fte = ["typed", "config", "mathWithTransform", "matrix", "?fraction", "?bignumber", "AccessorNode", "ArrayNode", "ConstantNode", "FunctionNode", "IndexNode", "ObjectNode", "OperatorNode", "SymbolNode"]
  , pte = j(mte, fte, e => {
    var {typed: t, config: r, mathWithTransform: a, matrix: n, fraction: i, bignumber: o, AccessorNode: s, ArrayNode: l, ConstantNode: u, FunctionNode: c, IndexNode: d, ObjectNode: v, OperatorNode: h, SymbolNode: p} = e
      , {isCommutative: f, isAssociative: _, allChildren: y, createMakeNodeFunction: g} = A2({
        FunctionNode: c,
        OperatorNode: h,
        SymbolNode: p
    })
      , m = t("simplifyConstant", {
        Node: O => x(R(O, {})),
        "Node, Object": function(M, N) {
            return x(R(M, N))
        }
    });
    function w(O) {
        return ed(O) ? O.valueOf() : O instanceof Array ? O.map(w) : je(O) ? n(w(O.valueOf())) : O
    }
    function C(O, M, N) {
        try {
            return a[O].apply(null, M)
        } catch {
            return M = M.map(w),
            k(a[O].apply(null, M), N)
        }
    }
    var b = t({
        Fraction: I,
        number: function(M) {
            return M < 0 ? A(new u(-M)) : new u(M)
        },
        BigNumber: function(M) {
            return M < 0 ? A(new u(-M)) : new u(M)
        },
        Complex: function(M) {
            throw new Error("Cannot convert Complex number to Node")
        },
        string: function(M) {
            return new u(M)
        },
        Matrix: function(M) {
            return new l(M.valueOf().map(N => b(N)))
        }
    });
    function x(O) {
        return Ft(O) ? O : b(O)
    }
    function E(O, M) {
        var N = M && M.exactFractions !== !1;
        if (N && isFinite(O) && i) {
            var B = i(O)
              , D = M && typeof M.fractionsLimit == "number" ? M.fractionsLimit : 1 / 0;
            if (B.valueOf() === O && B.n < D && B.d < D)
                return B
        }
        return O
    }
    var k = t({
        "string, Object": function(M, N) {
            if (r.number === "BigNumber")
                return o === void 0 && m2(),
                o(M);
            if (r.number === "Fraction")
                return i === void 0 && ak(),
                i(M);
            var B = parseFloat(M);
            return E(B, N)
        },
        "Fraction, Object": function(M, N) {
            return M
        },
        "BigNumber, Object": function(M, N) {
            return M
        },
        "number, Object": function(M, N) {
            return E(M, N)
        },
        "Complex, Object": function(M, N) {
            return M.im !== 0 ? M : E(M.re, N)
        },
        "Matrix, Object": function(M, N) {
            return n(E(M.valueOf()))
        },
        "Array, Object": function(M, N) {
            return M.map(E)
        }
    });
    function A(O) {
        return new h("-","unaryMinus",[O])
    }
    function I(O) {
        var M, N = O.s * O.n;
        return N < 0 ? M = new h("-","unaryMinus",[new u(-N)]) : M = new u(N),
        O.d === 1 ? M : new h("/","divide",[M, new u(O.d)])
    }
    function T(O, M, N) {
        if (!lu(M))
            return new s(x(O),x(M));
        if (an(O) || je(O)) {
            for (var B = Array.from(M.dimensions); B.length > 0; )
                if (_t(B[0]) && typeof B[0].value != "string") {
                    var D = k(B.shift().value, N);
                    an(O) ? O = O.items[D - 1] : (O = O.valueOf()[D - 1],
                    O instanceof Array && (O = n(O)))
                } else if (B.length > 1 && _t(B[1]) && typeof B[1].value != "string") {
                    var V = k(B[1].value, N)
                      , J = []
                      , Y = an(O) ? O.items : O.valueOf();
                    for (var G of Y)
                        if (an(G))
                            J.push(G.items[V - 1]);
                        else if (je(O))
                            J.push(G[V - 1]);
                        else
                            break;
                    if (J.length === Y.length)
                        an(O) ? O = new l(J) : O = n(J),
                        B.splice(1, 1);
                    else
                        break
                } else
                    break;
            return B.length === M.dimensions.length ? new s(x(O),M) : B.length > 0 ? (M = new d(B),
            new s(x(O),M)) : O
        }
        if (jm(O) && M.dimensions.length === 1 && _t(M.dimensions[0])) {
            var Z = M.dimensions[0].value;
            return Z in O.properties ? O.properties[Z] : new u
        }
        return new s(x(O),M)
    }
    function F(O, M, N, B) {
        var D = M.shift()
          , V = M.reduce( (J, Y) => {
            if (!Ft(Y)) {
                var G = J.pop();
                if (Ft(G))
                    return [G, Y];
                try {
                    return J.push(C(O, [G, Y], B)),
                    J
                } catch {
                    J.push(G)
                }
            }
            J.push(x(J.pop()));
            var Z = J.length === 1 ? J[0] : N(J);
            return [N([Z, x(Y)])]
        }
        , [D]);
        return V.length === 1 ? V[0] : N([V[0], b(V[1])])
    }
    function R(O, M) {
        switch (O.type) {
        case "SymbolNode":
            return O;
        case "ConstantNode":
            switch (typeof O.value) {
            case "number":
                return k(O.value, M);
            case "string":
                return O.value;
            default:
                if (!isNaN(O.value))
                    return k(O.value, M)
            }
            return O;
        case "FunctionNode":
            if (a[O.name] && a[O.name].rawArgs)
                return O;
            {
                var N = ["add", "multiply"];
                if (N.indexOf(O.name) === -1) {
                    var B = O.args.map(me => R(me, M));
                    if (!B.some(Ft))
                        try {
                            return C(O.name, B, M)
                        } catch {}
                    if (O.name === "size" && B.length === 1 && an(B[0])) {
                        for (var D = [], V = B[0]; an(V); )
                            D.push(V.items.length),
                            V = V.items[0];
                        return n(D)
                    }
                    return new c(O.name,B.map(x))
                }
            }
        case "OperatorNode":
            {
                var J = O.fn.toString(), Y, G, Z = g(O);
                if (vr(O) && O.isUnary())
                    Y = [R(O.args[0], M)],
                    Ft(Y[0]) ? G = Z(Y) : G = C(J, Y, M);
                else if (_(O, M.context))
                    if (Y = y(O, M.context),
                    Y = Y.map(me => R(me, M)),
                    f(J, M.context)) {
                        for (var ie = [], re = [], se = 0; se < Y.length; se++)
                            Ft(Y[se]) ? re.push(Y[se]) : ie.push(Y[se]);
                        ie.length > 1 ? (G = F(J, ie, Z, M),
                        re.unshift(G),
                        G = F(J, re, Z, M)) : G = F(J, Y, Z, M)
                    } else
                        G = F(J, Y, Z, M);
                else
                    Y = O.args.map(me => R(me, M)),
                    G = F(J, Y, Z, M);
                return G
            }
        case "ParenthesisNode":
            return R(O.content, M);
        case "AccessorNode":
            return T(R(O.object, M), R(O.index, M), M);
        case "ArrayNode":
            {
                var ce = O.items.map(me => R(me, M));
                return ce.some(Ft) ? new l(ce.map(x)) : n(ce)
            }
        case "IndexNode":
            return new d(O.dimensions.map(me => m(me, M)));
        case "ObjectNode":
            {
                var ue = {};
                for (var oe in O.properties)
                    ue[oe] = m(O.properties[oe], M);
                return new v(ue)
            }
        case "AssignmentNode":
        case "BlockNode":
        case "FunctionAssignmentNode":
        case "RangeNode":
        case "ConditionalNode":
        default:
            throw new Error("Unimplemented node type in simplifyConstant: ".concat(O.type))
        }
    }
    return m
}
)
  , YS = "simplifyCore"
  , yte = ["typed", "parse", "equal", "isZero", "add", "subtract", "multiply", "divide", "pow", "AccessorNode", "ArrayNode", "ConstantNode", "FunctionNode", "IndexNode", "ObjectNode", "OperatorNode", "ParenthesisNode", "SymbolNode"]
  , wte = j(YS, yte, e => {
    var {typed: t, parse: r, equal: a, isZero: n, add: i, subtract: o, multiply: s, divide: l, pow: u, AccessorNode: c, ArrayNode: d, ConstantNode: v, FunctionNode: h, IndexNode: p, ObjectNode: f, OperatorNode: _, ParenthesisNode: y, SymbolNode: g} = e
      , m = new v(0)
      , w = new v(1)
      , C = new v(!0)
      , b = new v(!1);
    function x(I) {
        return vr(I) && ["and", "not", "or"].includes(I.op)
    }
    var {hasProperty: E, isCommutative: k} = A2({
        FunctionNode: h,
        OperatorNode: _,
        SymbolNode: g
    });
    function A(I) {
        var T = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}
          , F = T ? T.context : void 0;
        if (E(I, "trivial", F)) {
            if (Oo(I) && I.args.length === 1)
                return A(I.args[0], T);
            var R = !1
              , O = 0;
            if (I.forEach(re => {
                ++O,
                O === 1 && (R = A(re, T))
            }
            ),
            O === 1)
                return R
        }
        var M = I;
        if (Oo(M)) {
            var N = bW(M.name);
            if (N) {
                if (M.args.length > 2 && E(M, "associative", F))
                    for (; M.args.length > 2; ) {
                        var B = M.args.pop()
                          , D = M.args.pop();
                        M.args.push(new _(N,M.name,[B, D]))
                    }
                M = new _(N,M.name,M.args)
            } else
                return new h(A(M.fn),M.args.map(re => A(re, T)))
        }
        if (vr(M) && M.isUnary()) {
            var V = A(M.args[0], T);
            if (M.op === "~" && vr(V) && V.isUnary() && V.op === "~" || M.op === "not" && vr(V) && V.isUnary() && V.op === "not" && x(V.args[0]))
                return V.args[0];
            var J = !0;
            if (M.op === "-" && vr(V) && (V.isBinary() && V.fn === "subtract" && (M = new _("-","subtract",[V.args[1], V.args[0]]),
            J = !1),
            V.isUnary() && V.op === "-"))
                return V.args[0];
            if (J)
                return new _(M.op,M.fn,[V])
        }
        if (vr(M) && M.isBinary()) {
            var Y = A(M.args[0], T)
              , G = A(M.args[1], T);
            if (M.op === "+") {
                if (_t(Y) && n(Y.value))
                    return G;
                if (_t(G) && n(G.value))
                    return Y;
                vr(G) && G.isUnary() && G.op === "-" && (G = G.args[0],
                M = new _("-","subtract",[Y, G]))
            }
            if (M.op === "-")
                return vr(G) && G.isUnary() && G.op === "-" ? A(new _("+","add",[Y, G.args[0]]), T) : _t(Y) && n(Y.value) ? A(new _("-","unaryMinus",[G])) : _t(G) && n(G.value) ? Y : new _(M.op,M.fn,[Y, G]);
            if (M.op === "*") {
                if (_t(Y)) {
                    if (n(Y.value))
                        return m;
                    if (a(Y.value, 1))
                        return G
                }
                if (_t(G)) {
                    if (n(G.value))
                        return m;
                    if (a(G.value, 1))
                        return Y;
                    if (k(M, F))
                        return new _(M.op,M.fn,[G, Y],M.implicit)
                }
                return new _(M.op,M.fn,[Y, G],M.implicit)
            }
            if (M.op === "/")
                return _t(Y) && n(Y.value) ? m : _t(G) && a(G.value, 1) ? Y : new _(M.op,M.fn,[Y, G]);
            if (M.op === "^" && _t(G)) {
                if (n(G.value))
                    return w;
                if (a(G.value, 1))
                    return Y
            }
            if (M.op === "and") {
                if (_t(Y))
                    if (Y.value) {
                        if (x(G))
                            return G
                    } else
                        return b;
                if (_t(G))
                    if (G.value) {
                        if (x(Y))
                            return Y
                    } else
                        return b
            }
            if (M.op === "or") {
                if (_t(Y)) {
                    if (Y.value)
                        return C;
                    if (x(G))
                        return G
                }
                if (_t(G)) {
                    if (G.value)
                        return C;
                    if (x(Y))
                        return Y
                }
            }
            return new _(M.op,M.fn,[Y, G])
        }
        if (vr(M))
            return new _(M.op,M.fn,M.args.map(re => A(re, T)));
        if (an(M))
            return new d(M.items.map(re => A(re, T)));
        if (bs(M))
            return new c(A(M.object, T),A(M.index, T));
        if (lu(M))
            return new p(M.dimensions.map(re => A(re, T)));
        if (jm(M)) {
            var Z = {};
            for (var ie in M.properties)
                Z[ie] = A(M.properties[ie], T);
            return new f(Z)
        }
        return M
    }
    return t(YS, {
        Node: A,
        "Node,Object": A
    })
}
)
  , gte = "resolve"
  , _te = ["typed", "parse", "ConstantNode", "FunctionNode", "OperatorNode", "ParenthesisNode"]
  , bte = j(gte, _te, e => {
    var {typed: t, parse: r, ConstantNode: a, FunctionNode: n, OperatorNode: i, ParenthesisNode: o} = e;
    function s(l, u) {
        var c = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : new Set;
        if (!u)
            return l;
        if (Er(l)) {
            if (c.has(l.name)) {
                var d = Array.from(c).join(", ");
                throw new ReferenceError("recursive loop of variable definitions among {".concat(d, "}"))
            }
            var v = u.get(l.name);
            if (Ft(v)) {
                var h = new Set(c);
                return h.add(l.name),
                s(v, u, h)
            } else
                return typeof v == "number" ? r(String(v)) : v !== void 0 ? new a(v) : l
        } else if (vr(l)) {
            var p = l.args.map(function(_) {
                return s(_, u, c)
            });
            return new i(l.op,l.fn,p,l.implicit)
        } else {
            if (zi(l))
                return new o(s(l.content, u, c));
            if (Oo(l)) {
                var f = l.args.map(function(_) {
                    return s(_, u, c)
                });
                return new n(l.name,f)
            }
        }
        return l.map(_ => s(_, u, c))
    }
    return t("resolve", {
        Node: s,
        "Node, Map | null | undefined": s,
        "Node, Object": (l, u) => s(l, Dl(u)),
        "Array | Matrix": t.referToSelf(l => u => u.map(c => l(c))),
        "Array | Matrix, null | undefined": t.referToSelf(l => u => u.map(c => l(c))),
        "Array, Object": t.referTo("Array,Map", l => (u, c) => l(u, Dl(c))),
        "Matrix, Object": t.referTo("Matrix,Map", l => (u, c) => l(u, Dl(c))),
        "Array | Matrix, Map": t.referToSelf(l => (u, c) => u.map(d => l(d, c)))
    })
}
)
  , JS = "symbolicEqual"
  , Cte = ["parse", "simplify", "typed", "OperatorNode"]
  , Ste = j(JS, Cte, e => {
    var {parse: t, simplify: r, typed: a, OperatorNode: n} = e;
    function i(o, s) {
        var l = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}
          , u = new n("-","subtract",[o, s])
          , c = r(u, {}, l);
        return _t(c) && !c.value
    }
    return a(JS, {
        "Node, Node": i,
        "Node, Node, Object": i
    })
}
)
  , KS = "derivative"
  , xte = ["typed", "config", "parse", "simplify", "equal", "isZero", "numeric", "ConstantNode", "FunctionNode", "OperatorNode", "ParenthesisNode", "SymbolNode"]
  , Ate = j(KS, xte, e => {
    var {typed: t, config: r, parse: a, simplify: n, equal: i, isZero: o, numeric: s, ConstantNode: l, FunctionNode: u, OperatorNode: c, ParenthesisNode: d, SymbolNode: v} = e;
    function h(w, C) {
        var b = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {
            simplify: !0
        }
          , x = {};
        _(x, w, C.name);
        var E = y(w, x);
        return b.simplify ? n(E) : E
    }
    t.addConversion({
        from: "identifier",
        to: "SymbolNode",
        convert: a
    });
    var p = t(KS, {
        "Node, SymbolNode": h,
        "Node, SymbolNode, Object": h
    });
    t.removeConversion({
        from: "identifier",
        to: "SymbolNode",
        convert: a
    }),
    p._simplify = !0,
    p.toTex = function(w) {
        return f.apply(null, w.args)
    }
    ;
    var f = t("_derivTex", {
        "Node, SymbolNode": function(C, b) {
            return _t(C) && Bt(C.value) === "string" ? f(a(C.value).toString(), b.toString(), 1) : f(C.toTex(), b.toString(), 1)
        },
        "Node, ConstantNode": function(C, b) {
            if (Bt(b.value) === "string")
                return f(C, a(b.value));
            throw new Error("The second parameter to 'derivative' is a non-string constant")
        },
        "Node, SymbolNode, ConstantNode": function(C, b, x) {
            return f(C.toString(), b.name, x.value)
        },
        "string, string, number": function(C, b, x) {
            var E;
            return x === 1 ? E = "{d\\over d" + b + "}" : E = "{d^{" + x + "}\\over d" + b + "^{" + x + "}}",
            E + "\\left[".concat(C, "\\right]")
        }
    })
      , _ = t("constTag", {
        "Object, ConstantNode, string": function(C, b) {
            return C[b] = !0,
            !0
        },
        "Object, SymbolNode, string": function(C, b, x) {
            return b.name !== x ? (C[b] = !0,
            !0) : !1
        },
        "Object, ParenthesisNode, string": function(C, b, x) {
            return _(C, b.content, x)
        },
        "Object, FunctionAssignmentNode, string": function(C, b, x) {
            return b.params.indexOf(x) === -1 ? (C[b] = !0,
            !0) : _(C, b.expr, x)
        },
        "Object, FunctionNode | OperatorNode, string": function(C, b, x) {
            if (b.args.length > 0) {
                for (var E = _(C, b.args[0], x), k = 1; k < b.args.length; ++k)
                    E = _(C, b.args[k], x) && E;
                if (E)
                    return C[b] = !0,
                    !0
            }
            return !1
        }
    })
      , y = t("_derivative", {
        "ConstantNode, Object": function(C) {
            return m(0)
        },
        "SymbolNode, Object": function(C, b) {
            return b[C] !== void 0 ? m(0) : m(1)
        },
        "ParenthesisNode, Object": function(C, b) {
            return new d(y(C.content, b))
        },
        "FunctionAssignmentNode, Object": function(C, b) {
            return b[C] !== void 0 ? m(0) : y(C.expr, b)
        },
        "FunctionNode, Object": function(C, b) {
            if (C.args.length !== 1 && g(C),
            b[C] !== void 0)
                return m(0);
            var x = C.args[0], E, k = !1, A = !1, I;
            switch (C.name) {
            case "cbrt":
                k = !0,
                I = new c("*","multiply",[m(3), new c("^","pow",[x, new c("/","divide",[m(2), m(3)])])]);
                break;
            case "sqrt":
            case "nthRoot":
                if (C.args.length === 1)
                    k = !0,
                    I = new c("*","multiply",[m(2), new u("sqrt",[x])]);
                else if (C.args.length === 2)
                    return E = new c("/","divide",[m(1), C.args[1]]),
                    b[E] = b[C.args[1]],
                    y(new c("^","pow",[x, E]), b);
                break;
            case "log10":
                E = m(10);
            case "log":
                if (!E && C.args.length === 1)
                    I = x.clone(),
                    k = !0;
                else if (C.args.length === 1 && E || C.args.length === 2 && b[C.args[1]] !== void 0)
                    I = new c("*","multiply",[x.clone(), new u("log",[E || C.args[1]])]),
                    k = !0;
                else if (C.args.length === 2)
                    return y(new c("/","divide",[new u("log",[x]), new u("log",[C.args[1]])]), b);
                break;
            case "pow":
                return b[E] = b[C.args[1]],
                y(new c("^","pow",[x, C.args[1]]), b);
            case "exp":
                I = new u("exp",[x.clone()]);
                break;
            case "sin":
                I = new u("cos",[x.clone()]);
                break;
            case "cos":
                I = new c("-","unaryMinus",[new u("sin",[x.clone()])]);
                break;
            case "tan":
                I = new c("^","pow",[new u("sec",[x.clone()]), m(2)]);
                break;
            case "sec":
                I = new c("*","multiply",[C, new u("tan",[x.clone()])]);
                break;
            case "csc":
                A = !0,
                I = new c("*","multiply",[C, new u("cot",[x.clone()])]);
                break;
            case "cot":
                A = !0,
                I = new c("^","pow",[new u("csc",[x.clone()]), m(2)]);
                break;
            case "asin":
                k = !0,
                I = new u("sqrt",[new c("-","subtract",[m(1), new c("^","pow",[x.clone(), m(2)])])]);
                break;
            case "acos":
                k = !0,
                A = !0,
                I = new u("sqrt",[new c("-","subtract",[m(1), new c("^","pow",[x.clone(), m(2)])])]);
                break;
            case "atan":
                k = !0,
                I = new c("+","add",[new c("^","pow",[x.clone(), m(2)]), m(1)]);
                break;
            case "asec":
                k = !0,
                I = new c("*","multiply",[new u("abs",[x.clone()]), new u("sqrt",[new c("-","subtract",[new c("^","pow",[x.clone(), m(2)]), m(1)])])]);
                break;
            case "acsc":
                k = !0,
                A = !0,
                I = new c("*","multiply",[new u("abs",[x.clone()]), new u("sqrt",[new c("-","subtract",[new c("^","pow",[x.clone(), m(2)]), m(1)])])]);
                break;
            case "acot":
                k = !0,
                A = !0,
                I = new c("+","add",[new c("^","pow",[x.clone(), m(2)]), m(1)]);
                break;
            case "sinh":
                I = new u("cosh",[x.clone()]);
                break;
            case "cosh":
                I = new u("sinh",[x.clone()]);
                break;
            case "tanh":
                I = new c("^","pow",[new u("sech",[x.clone()]), m(2)]);
                break;
            case "sech":
                A = !0,
                I = new c("*","multiply",[C, new u("tanh",[x.clone()])]);
                break;
            case "csch":
                A = !0,
                I = new c("*","multiply",[C, new u("coth",[x.clone()])]);
                break;
            case "coth":
                A = !0,
                I = new c("^","pow",[new u("csch",[x.clone()]), m(2)]);
                break;
            case "asinh":
                k = !0,
                I = new u("sqrt",[new c("+","add",[new c("^","pow",[x.clone(), m(2)]), m(1)])]);
                break;
            case "acosh":
                k = !0,
                I = new u("sqrt",[new c("-","subtract",[new c("^","pow",[x.clone(), m(2)]), m(1)])]);
                break;
            case "atanh":
                k = !0,
                I = new c("-","subtract",[m(1), new c("^","pow",[x.clone(), m(2)])]);
                break;
            case "asech":
                k = !0,
                A = !0,
                I = new c("*","multiply",[x.clone(), new u("sqrt",[new c("-","subtract",[m(1), new c("^","pow",[x.clone(), m(2)])])])]);
                break;
            case "acsch":
                k = !0,
                A = !0,
                I = new c("*","multiply",[new u("abs",[x.clone()]), new u("sqrt",[new c("+","add",[new c("^","pow",[x.clone(), m(2)]), m(1)])])]);
                break;
            case "acoth":
                k = !0,
                A = !0,
                I = new c("-","subtract",[m(1), new c("^","pow",[x.clone(), m(2)])]);
                break;
            case "abs":
                I = new c("/","divide",[new u(new v("abs"),[x.clone()]), x.clone()]);
                break;
            case "gamma":
            default:
                throw new Error('Function "' + C.name + '" is not supported by derivative, or a wrong number of arguments is passed')
            }
            var T, F;
            k ? (T = "/",
            F = "divide") : (T = "*",
            F = "multiply");
            var R = y(x, b);
            return A && (R = new c("-","unaryMinus",[R])),
            new c(T,F,[R, I])
        },
        "OperatorNode, Object": function(C, b) {
            if (b[C] !== void 0)
                return m(0);
            if (C.op === "+")
                return new c(C.op,C.fn,C.args.map(function(M) {
                    return y(M, b)
                }));
            if (C.op === "-") {
                if (C.isUnary())
                    return new c(C.op,C.fn,[y(C.args[0], b)]);
                if (C.isBinary())
                    return new c(C.op,C.fn,[y(C.args[0], b), y(C.args[1], b)])
            }
            if (C.op === "*") {
                var x = C.args.filter(function(M) {
                    return b[M] !== void 0
                });
                if (x.length > 0) {
                    var E = C.args.filter(function(M) {
                        return b[M] === void 0
                    })
                      , k = E.length === 1 ? E[0] : new c("*","multiply",E)
                      , A = x.concat(y(k, b));
                    return new c("*","multiply",A)
                }
                return new c("+","add",C.args.map(function(M) {
                    return new c("*","multiply",C.args.map(function(N) {
                        return N === M ? y(N, b) : N.clone()
                    }))
                }))
            }
            if (C.op === "/" && C.isBinary()) {
                var I = C.args[0]
                  , T = C.args[1];
                return b[T] !== void 0 ? new c("/","divide",[y(I, b), T]) : b[I] !== void 0 ? new c("*","multiply",[new c("-","unaryMinus",[I]), new c("/","divide",[y(T, b), new c("^","pow",[T.clone(), m(2)])])]) : new c("/","divide",[new c("-","subtract",[new c("*","multiply",[y(I, b), T.clone()]), new c("*","multiply",[I.clone(), y(T, b)])]), new c("^","pow",[T.clone(), m(2)])])
            }
            if (C.op === "^" && C.isBinary()) {
                var F = C.args[0]
                  , R = C.args[1];
                if (b[F] !== void 0)
                    return _t(F) && (o(F.value) || i(F.value, 1)) ? m(0) : new c("*","multiply",[C, new c("*","multiply",[new u("log",[F.clone()]), y(R.clone(), b)])]);
                if (b[R] !== void 0) {
                    if (_t(R)) {
                        if (o(R.value))
                            return m(0);
                        if (i(R.value, 1))
                            return y(F, b)
                    }
                    var O = new c("^","pow",[F.clone(), new c("-","subtract",[R, m(1)])]);
                    return new c("*","multiply",[R.clone(), new c("*","multiply",[y(F, b), O])])
                }
                return new c("*","multiply",[new c("^","pow",[F.clone(), R.clone()]), new c("+","add",[new c("*","multiply",[y(F, b), new c("/","divide",[R.clone(), F.clone()])]), new c("*","multiply",[y(R, b), new u("log",[F.clone()])])])])
            }
            throw new Error('Operator "' + C.op + '" is not supported by derivative, or a wrong number of arguments is passed')
        }
    });
    function g(w) {
        if (!((w.name === "log" || w.name === "nthRoot" || w.name === "pow") && w.args.length === 2)) {
            for (var C = 0; C < w.args.length; ++C)
                w.args[C] = m(0);
            throw w.compile().evaluate(),
            new Error("Expected TypeError, but none found")
        }
    }
    function m(w, C) {
        return new l(s(w, C || r.number))
    }
    return p
}
)
  , QS = "rationalize"
  , Ete = ["config", "typed", "equal", "isZero", "add", "subtract", "multiply", "divide", "pow", "parse", "simplifyConstant", "simplifyCore", "simplify", "?bignumber", "?fraction", "mathWithTransform", "matrix", "AccessorNode", "ArrayNode", "ConstantNode", "FunctionNode", "IndexNode", "ObjectNode", "OperatorNode", "SymbolNode", "ParenthesisNode"]
  , kte = j(QS, Ete, e => {
    var {config: t, typed: r, equal: a, isZero: n, add: i, subtract: o, multiply: s, divide: l, pow: u, parse: c, simplifyConstant: d, simplifyCore: v, simplify: h, fraction: p, bignumber: f, mathWithTransform: _, matrix: y, AccessorNode: g, ArrayNode: m, ConstantNode: w, FunctionNode: C, IndexNode: b, ObjectNode: x, OperatorNode: E, SymbolNode: k, ParenthesisNode: A} = e;
    function I(M) {
        var N = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}
          , B = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1
          , D = F()
          , V = T(M, N, !0, D.firstRules)
          , J = V.variables.length
          , Y = {
            exactFractions: !1
        }
          , G = {
            exactFractions: !0
        };
        if (M = V.expression,
        J >= 1) {
            M = R(M);
            var Z, ie, re = !0, se = !1;
            M = h(M, D.firstRules, {}, Y);
            for (var ce; ie = re ? D.distrDivRules : D.sucDivRules,
            M = h(M, ie, {}, G),
            re = !re,
            ce = M.toString(),
            ce !== Z; )
                se = !0,
                Z = ce;
            se && (M = h(M, D.firstRulesAgain, {}, Y)),
            M = h(M, D.finalRules, {}, Y)
        }
        var ue = []
          , oe = {};
        return M.type === "OperatorNode" && M.isBinary() && M.op === "/" ? (J === 1 && (M.args[0] = O(M.args[0], ue),
        M.args[1] = O(M.args[1])),
        B && (oe.numerator = M.args[0],
        oe.denominator = M.args[1])) : (J === 1 && (M = O(M, ue)),
        B && (oe.numerator = M,
        oe.denominator = null)),
        B ? (oe.coefficients = ue,
        oe.variables = V.variables,
        oe.expression = M,
        oe) : M
    }
    return r(QS, {
        Node: I,
        "Node, boolean": (M, N) => I(M, {}, N),
        "Node, Object": I,
        "Node, Object, boolean": I
    });
    function T(M, N, B, D) {
        var V = []
          , J = h(M, D, N, {
            exactFractions: !1
        });
        B = !!B;
        var Y = "+-*" + (B ? "/" : "");
        Z(J);
        var G = {};
        return G.expression = J,
        G.variables = V,
        G;
        function Z(ie) {
            var re = ie.type;
            if (re === "FunctionNode")
                throw new Error("There is an unsolved function call");
            if (re === "OperatorNode")
                if (ie.op === "^") {
                    if (ie.args[1].type !== "ConstantNode" || !Be(parseFloat(ie.args[1].value)))
                        throw new Error("There is a non-integer exponent");
                    Z(ie.args[0])
                } else {
                    if (Y.indexOf(ie.op) === -1)
                        throw new Error("Operator " + ie.op + " invalid in polynomial expression");
                    for (var se = 0; se < ie.args.length; se++)
                        Z(ie.args[se])
                }
            else if (re === "SymbolNode") {
                var ce = ie.name
                  , ue = V.indexOf(ce);
                ue === -1 && V.push(ce)
            } else if (re === "ParenthesisNode")
                Z(ie.content);
            else if (re !== "ConstantNode")
                throw new Error("type " + re + " is not allowed in polynomial expression")
        }
    }
    function F() {
        var M = [v, {
            l: "n+n",
            r: "2*n"
        }, {
            l: "n+-n",
            r: "0"
        }, d, {
            l: "n*(n1^-1)",
            r: "n/n1"
        }, {
            l: "n*n1^-n2",
            r: "n/n1^n2"
        }, {
            l: "n1^-1",
            r: "1/n1"
        }, {
            l: "n*(n1/n2)",
            r: "(n*n1)/n2"
        }, {
            l: "1*n",
            r: "n"
        }]
          , N = [{
            l: "(-n1)/(-n2)",
            r: "n1/n2"
        }, {
            l: "(-n1)*(-n2)",
            r: "n1*n2"
        }, {
            l: "n1--n2",
            r: "n1+n2"
        }, {
            l: "n1-n2",
            r: "n1+(-n2)"
        }, {
            l: "(n1+n2)*n3",
            r: "(n1*n3 + n2*n3)"
        }, {
            l: "n1*(n2+n3)",
            r: "(n1*n2+n1*n3)"
        }, {
            l: "c1*n + c2*n",
            r: "(c1+c2)*n"
        }, {
            l: "c1*n + n",
            r: "(c1+1)*n"
        }, {
            l: "c1*n - c2*n",
            r: "(c1-c2)*n"
        }, {
            l: "c1*n - n",
            r: "(c1-1)*n"
        }, {
            l: "v/c",
            r: "(1/c)*v"
        }, {
            l: "v/-c",
            r: "-(1/c)*v"
        }, {
            l: "-v*-c",
            r: "c*v"
        }, {
            l: "-v*c",
            r: "-c*v"
        }, {
            l: "v*-c",
            r: "-c*v"
        }, {
            l: "v*c",
            r: "c*v"
        }, {
            l: "-(-n1*n2)",
            r: "(n1*n2)"
        }, {
            l: "-(n1*n2)",
            r: "(-n1*n2)"
        }, {
            l: "-(-n1+n2)",
            r: "(n1-n2)"
        }, {
            l: "-(n1+n2)",
            r: "(-n1-n2)"
        }, {
            l: "(n1^n2)^n3",
            r: "(n1^(n2*n3))"
        }, {
            l: "-(-n1/n2)",
            r: "(n1/n2)"
        }, {
            l: "-(n1/n2)",
            r: "(-n1/n2)"
        }]
          , B = [{
            l: "(n1/n2 + n3/n4)",
            r: "((n1*n4 + n3*n2)/(n2*n4))"
        }, {
            l: "(n1/n2 + n3)",
            r: "((n1 + n3*n2)/n2)"
        }, {
            l: "(n1 + n2/n3)",
            r: "((n1*n3 + n2)/n3)"
        }]
          , D = [{
            l: "(n1/(n2/n3))",
            r: "((n1*n3)/n2)"
        }, {
            l: "(n1/n2/n3)",
            r: "(n1/(n2*n3))"
        }]
          , V = {};
        return V.firstRules = M.concat(N, D),
        V.distrDivRules = B,
        V.sucDivRules = D,
        V.firstRulesAgain = M.concat(N),
        V.finalRules = [v, {
            l: "n*-n",
            r: "-n^2"
        }, {
            l: "n*n",
            r: "n^2"
        }, d, {
            l: "n*-n^n1",
            r: "-n^(n1+1)"
        }, {
            l: "n*n^n1",
            r: "n^(n1+1)"
        }, {
            l: "n^n1*-n^n2",
            r: "-n^(n1+n2)"
        }, {
            l: "n^n1*n^n2",
            r: "n^(n1+n2)"
        }, {
            l: "n^n1*-n",
            r: "-n^(n1+1)"
        }, {
            l: "n^n1*n",
            r: "n^(n1+1)"
        }, {
            l: "n^n1/-n",
            r: "-n^(n1-1)"
        }, {
            l: "n^n1/n",
            r: "n^(n1-1)"
        }, {
            l: "n/-n^n1",
            r: "-n^(1-n1)"
        }, {
            l: "n/n^n1",
            r: "n^(1-n1)"
        }, {
            l: "n^n1/-n^n2",
            r: "n^(n1-n2)"
        }, {
            l: "n^n1/n^n2",
            r: "n^(n1-n2)"
        }, {
            l: "n1+(-n2*n3)",
            r: "n1-n2*n3"
        }, {
            l: "v*(-c)",
            r: "-c*v"
        }, {
            l: "n1+-n2",
            r: "n1-n2"
        }, {
            l: "v*c",
            r: "c*v"
        }, {
            l: "(n1^n2)^n3",
            r: "(n1^(n2*n3))"
        }],
        V
    }
    function R(M, N, B) {
        var D = M.type
          , V = arguments.length > 1;
        if (D === "OperatorNode" && M.isBinary()) {
            var J = !1, Y;
            if (M.op === "^" && (M.args[0].type === "ParenthesisNode" || M.args[0].type === "OperatorNode") && M.args[1].type === "ConstantNode" && (Y = parseFloat(M.args[1].value),
            J = Y >= 2 && Be(Y)),
            J) {
                if (Y > 2) {
                    var G = M.args[0]
                      , Z = new E("^","pow",[M.args[0].cloneDeep(), new w(Y - 1)]);
                    M = new E("*","multiply",[G, Z])
                } else
                    M = new E("*","multiply",[M.args[0], M.args[0].cloneDeep()]);
                V && (B === "content" ? N.content = M : N.args[B] = M)
            }
        }
        if (D === "ParenthesisNode")
            R(M.content, M, "content");
        else if (D !== "ConstantNode" && D !== "SymbolNode")
            for (var ie = 0; ie < M.args.length; ie++)
                R(M.args[ie], M, ie);
        if (!V)
            return M
    }
    function O(M, N) {
        N === void 0 && (N = []),
        N[0] = 0;
        var B = {};
        B.cte = 1,
        B.oper = "+",
        B.fire = "";
        var D = 0
          , V = "";
        ce(M, null, B),
        D = N.length - 1;
        for (var J = !0, Y, G = D; G >= 0; G--)
            if (N[G] !== 0) {
                var Z = new w(J ? N[G] : Math.abs(N[G]))
                  , ie = N[G] < 0 ? "-" : "+";
                if (G > 0) {
                    var re = new k(V);
                    if (G > 1) {
                        var se = new w(G);
                        re = new E("^","pow",[re, se])
                    }
                    N[G] === -1 && J ? Z = new E("-","unaryMinus",[re]) : Math.abs(N[G]) === 1 ? Z = re : Z = new E("*","multiply",[Z, re])
                }
                J ? Y = Z : ie === "+" ? Y = new E("+","add",[Y, Z]) : Y = new E("-","subtract",[Y, Z]),
                J = !1
            }
        if (J)
            return new w(0);
        return Y;
        function ce(ue, oe, me) {
            var xe = ue.type;
            if (xe === "FunctionNode")
                throw new Error("There is an unsolved function call");
            if (xe === "OperatorNode") {
                if ("+-*^".indexOf(ue.op) === -1)
                    throw new Error("Operator " + ue.op + " invalid");
                if (oe !== null) {
                    if ((ue.fn === "unaryMinus" || ue.fn === "pow") && oe.fn !== "add" && oe.fn !== "subtract" && oe.fn !== "multiply")
                        throw new Error("Invalid " + ue.op + " placing");
                    if ((ue.fn === "subtract" || ue.fn === "add" || ue.fn === "multiply") && oe.fn !== "add" && oe.fn !== "subtract")
                        throw new Error("Invalid " + ue.op + " placing");
                    if ((ue.fn === "subtract" || ue.fn === "add" || ue.fn === "unaryMinus") && me.noFil !== 0)
                        throw new Error("Invalid " + ue.op + " placing")
                }
                (ue.op === "^" || ue.op === "*") && (me.fire = ue.op);
                for (var pe = 0; pe < ue.args.length; pe++)
                    ue.fn === "unaryMinus" && (me.oper = "-"),
                    (ue.op === "+" || ue.fn === "subtract") && (me.fire = "",
                    me.cte = 1,
                    me.oper = pe === 0 ? "+" : ue.op),
                    me.noFil = pe,
                    ce(ue.args[pe], ue, me)
            } else if (xe === "SymbolNode") {
                if (ue.name !== V && V !== "")
                    throw new Error("There is more than one variable");
                if (V = ue.name,
                oe === null) {
                    N[1] = 1;
                    return
                }
                if (oe.op === "^" && me.noFil !== 0)
                    throw new Error("In power the variable should be the first parameter");
                if (oe.op === "*" && me.noFil !== 1)
                    throw new Error("In multiply the variable should be the second parameter");
                (me.fire === "" || me.fire === "*") && (D < 1 && (N[1] = 0),
                N[1] += me.cte * (me.oper === "+" ? 1 : -1),
                D = Math.max(1, D))
            } else if (xe === "ConstantNode") {
                var be = parseFloat(ue.value);
                if (oe === null) {
                    N[0] = be;
                    return
                }
                if (oe.op === "^") {
                    if (me.noFil !== 1)
                        throw new Error("Constant cannot be powered");
                    if (!Be(be) || be <= 0)
                        throw new Error("Non-integer exponent is not allowed");
                    for (var H = D + 1; H < be; H++)
                        N[H] = 0;
                    be > D && (N[be] = 0),
                    N[be] += me.cte * (me.oper === "+" ? 1 : -1),
                    D = Math.max(be, D);
                    return
                }
                me.cte = be,
                me.fire === "" && (N[0] += me.cte * (me.oper === "+" ? 1 : -1))
            } else
                throw new Error("Type " + xe + " is not allowed")
        }
    }
}
)
  , ZS = "zpk2tf"
  , Tte = ["typed", "add", "multiply", "Complex", "number"]
  , Nte = j(ZS, Tte, e => {
    var {typed: t, add: r, multiply: a, Complex: n, number: i} = e;
    return t(ZS, {
        "Array,Array,number": function(u, c, d) {
            return o(u, c, d)
        },
        "Array,Array": function(u, c) {
            return o(u, c, 1)
        },
        "Matrix,Matrix,number": function(u, c, d) {
            return o(u.valueOf(), c.valueOf(), d)
        },
        "Matrix,Matrix": function(u, c) {
            return o(u.valueOf(), c.valueOf(), 1)
        }
    });
    function o(l, u, c) {
        l.some(g => g.type === "BigNumber") && (l = l.map(g => i(g))),
        u.some(g => g.type === "BigNumber") && (u = u.map(g => i(g)));
        for (var d = [n(1, 0)], v = [n(1, 0)], h = 0; h < l.length; h++) {
            var p = l[h];
            typeof p == "number" && (p = n(p, 0)),
            d = s(d, [n(1, 0), n(-p.re, -p.im)])
        }
        for (var f = 0; f < u.length; f++) {
            var _ = u[f];
            typeof _ == "number" && (_ = n(_, 0)),
            v = s(v, [n(1, 0), n(-_.re, -_.im)])
        }
        for (var y = 0; y < d.length; y++)
            d[y] = a(d[y], c);
        return [d, v]
    }
    function s(l, u) {
        for (var c = [], d = 0; d < l.length + u.length - 1; d++) {
            c[d] = n(0, 0);
            for (var v = 0; v < l.length; v++)
                d - v >= 0 && d - v < u.length && (c[d] = r(c[d], a(l[v], u[d - v])))
        }
        return c
    }
}
)
  , XS = "freqz"
  , Mte = ["typed", "add", "multiply", "Complex", "divide", "matrix"]
  , Ite = j(XS, Mte, e => {
    var {typed: t, add: r, multiply: a, Complex: n, divide: i, matrix: o} = e;
    return t(XS, {
        "Array, Array": function(c, d) {
            var v = l(512);
            return s(c, d, v)
        },
        "Array, Array, Array": function(c, d, v) {
            return s(c, d, v)
        },
        "Array, Array, number": function(c, d, v) {
            if (v < 0)
                throw new Error("w must be a positive number");
            var h = l(v);
            return s(c, d, h)
        },
        "Matrix, Matrix": function(c, d) {
            var v = l(512)
              , {w: h, h: p} = s(c.valueOf(), d.valueOf(), v);
            return {
                w: o(h),
                h: o(p)
            }
        },
        "Matrix, Matrix, Matrix": function(c, d, v) {
            var {h} = s(c.valueOf(), d.valueOf(), v.valueOf());
            return {
                h: o(h),
                w: o(v)
            }
        },
        "Matrix, Matrix, number": function(c, d, v) {
            if (v < 0)
                throw new Error("w must be a positive number");
            var h = l(v)
              , {h: p} = s(c.valueOf(), d.valueOf(), h);
            return {
                h: o(p),
                w: o(h)
            }
        }
    });
    function s(u, c, d) {
        for (var v = [], h = [], p = 0; p < d.length; p++) {
            for (var f = n(0, 0), _ = n(0, 0), y = 0; y < u.length; y++)
                f = r(f, a(u[y], n(Math.cos(-y * d[p]), Math.sin(-y * d[p]))));
            for (var g = 0; g < c.length; g++)
                _ = r(_, a(c[g], n(Math.cos(-g * d[p]), Math.sin(-g * d[p]))));
            v.push(f),
            h.push(_)
        }
        for (var m = [], w = 0; w < v.length; w++)
            m.push(i(v[w], h[w]));
        return {
            h: m,
            w: d
        }
    }
    function l(u) {
        for (var c = [], d = 0; d < u; d++)
            c.push(d / u * Math.PI);
        return c
    }
}
)
  , Dte = "reviver"
  , Ute = ["classes"]
  , Fte = j(Dte, Ute, e => {
    var {classes: t} = e;
    return function(a, n) {
        var i = t[n && n.mathjs];
        return i && typeof i.fromJSON == "function" ? i.fromJSON(n) : n
    }
}
)
  , Ote = "replacer"
  , Pte = []
  , Bte = j(Ote, Pte, () => function(t, r) {
    return typeof r == "number" && (!isFinite(r) || isNaN(r)) ? {
        mathjs: "number",
        value: String(r)
    } : r
}
)
  , Rte = "11.11.1"
  , Lte = j("true", [], () => !0)
  , qte = j("false", [], () => !1)
  , Vte = j("null", [], () => null)
  , $te = Ja("Infinity", ["config", "?BigNumber"], e => {
    var {config: t, BigNumber: r} = e;
    return t.number === "BigNumber" ? new r(1 / 0) : 1 / 0
}
)
  , zte = Ja("NaN", ["config", "?BigNumber"], e => {
    var {config: t, BigNumber: r} = e;
    return t.number === "BigNumber" ? new r(NaN) : NaN
}
)
  , Gte = Ja("pi", ["config", "?BigNumber"], e => {
    var {config: t, BigNumber: r} = e;
    return t.number === "BigNumber" ? y2(r) : rL
}
)
  , jte = Ja("tau", ["config", "?BigNumber"], e => {
    var {config: t, BigNumber: r} = e;
    return t.number === "BigNumber" ? Aj(r) : aL
}
)
  , Hte = Ja("e", ["config", "?BigNumber"], e => {
    var {config: t, BigNumber: r} = e;
    return t.number === "BigNumber" ? Sj(r) : nL
}
)
  , Wte = Ja("phi", ["config", "?BigNumber"], e => {
    var {config: t, BigNumber: r} = e;
    return t.number === "BigNumber" ? xj(r) : iL
}
)
  , Yte = Ja("LN2", ["config", "?BigNumber"], e => {
    var {config: t, BigNumber: r} = e;
    return t.number === "BigNumber" ? new r(2).ln() : Math.LN2
}
)
  , Jte = Ja("LN10", ["config", "?BigNumber"], e => {
    var {config: t, BigNumber: r} = e;
    return t.number === "BigNumber" ? new r(10).ln() : Math.LN10
}
)
  , Kte = Ja("LOG2E", ["config", "?BigNumber"], e => {
    var {config: t, BigNumber: r} = e;
    return t.number === "BigNumber" ? new r(1).div(new r(2).ln()) : Math.LOG2E
}
)
  , Qte = Ja("LOG10E", ["config", "?BigNumber"], e => {
    var {config: t, BigNumber: r} = e;
    return t.number === "BigNumber" ? new r(1).div(new r(10).ln()) : Math.LOG10E
}
)
  , Zte = Ja("SQRT1_2", ["config", "?BigNumber"], e => {
    var {config: t, BigNumber: r} = e;
    return t.number === "BigNumber" ? new r("0.5").sqrt() : Math.SQRT1_2
}
)
  , Xte = Ja("SQRT2", ["config", "?BigNumber"], e => {
    var {config: t, BigNumber: r} = e;
    return t.number === "BigNumber" ? new r(2).sqrt() : Math.SQRT2
}
)
  , ere = Ja("i", ["Complex"], e => {
    var {Complex: t} = e;
    return t.I
}
)
  , tre = j("version", [], () => Rte);
function Ja(e, t, r) {
    return j(e, t, r, {
        recreateOnConfigChange: !0
    })
}
var rre = nt("speedOfLight", "299792458", "m s^-1")
  , are = nt("gravitationConstant", "6.67430e-11", "m^3 kg^-1 s^-2")
  , nre = nt("planckConstant", "6.62607015e-34", "J s")
  , ire = nt("reducedPlanckConstant", "1.0545718176461565e-34", "J s")
  , ore = nt("magneticConstant", "1.25663706212e-6", "N A^-2")
  , sre = nt("electricConstant", "8.8541878128e-12", "F m^-1")
  , lre = nt("vacuumImpedance", "376.730313667", "ohm")
  , ure = nt("coulomb", "8.987551792261171e9", "N m^2 C^-2")
  , cre = nt("elementaryCharge", "1.602176634e-19", "C")
  , dre = nt("bohrMagneton", "9.2740100783e-24", "J T^-1")
  , vre = nt("conductanceQuantum", "7.748091729863649e-5", "S")
  , hre = nt("inverseConductanceQuantum", "12906.403729652257", "ohm")
  , mre = nt("magneticFluxQuantum", "2.0678338484619295e-15", "Wb")
  , fre = nt("nuclearMagneton", "5.0507837461e-27", "J T^-1")
  , pre = nt("klitzing", "25812.807459304513", "ohm")
  , yre = nt("bohrRadius", "5.29177210903e-11", "m")
  , wre = nt("classicalElectronRadius", "2.8179403262e-15", "m")
  , gre = nt("electronMass", "9.1093837015e-31", "kg")
  , _re = nt("fermiCoupling", "1.1663787e-5", "GeV^-2")
  , bre = af("fineStructure", .0072973525693)
  , Cre = nt("hartreeEnergy", "4.3597447222071e-18", "J")
  , Sre = nt("protonMass", "1.67262192369e-27", "kg")
  , xre = nt("deuteronMass", "3.3435830926e-27", "kg")
  , Are = nt("neutronMass", "1.6749271613e-27", "kg")
  , Ere = nt("quantumOfCirculation", "3.6369475516e-4", "m^2 s^-1")
  , kre = nt("rydberg", "10973731.568160", "m^-1")
  , Tre = nt("thomsonCrossSection", "6.6524587321e-29", "m^2")
  , Nre = af("weakMixingAngle", .2229)
  , Mre = af("efimovFactor", 22.7)
  , Ire = nt("atomicMass", "1.66053906660e-27", "kg")
  , Dre = nt("avogadro", "6.02214076e23", "mol^-1")
  , Ure = nt("boltzmann", "1.380649e-23", "J K^-1")
  , Fre = nt("faraday", "96485.33212331001", "C mol^-1")
  , Ore = nt("firstRadiation", "3.7417718521927573e-16", "W m^2")
  , Pre = nt("loschmidt", "2.686780111798444e25", "m^-3")
  , Bre = nt("gasConstant", "8.31446261815324", "J K^-1 mol^-1")
  , Rre = nt("molarPlanckConstant", "3.990312712893431e-10", "J s mol^-1")
  , Lre = nt("molarVolume", "0.022413969545014137", "m^3 mol^-1")
  , qre = af("sackurTetrode", -1.16487052358)
  , Vre = nt("secondRadiation", "0.014387768775039337", "m K")
  , $re = nt("stefanBoltzmann", "5.67037441918443e-8", "W m^-2 K^-4")
  , zre = nt("wienDisplacement", "2.897771955e-3", "m K")
  , Gre = nt("molarMass", "0.99999999965e-3", "kg mol^-1")
  , jre = nt("molarMassC12", "11.9999999958e-3", "kg mol^-1")
  , Hre = nt("gravity", "9.80665", "m s^-2")
  , Wre = nt("planckLength", "1.616255e-35", "m")
  , Yre = nt("planckMass", "2.176435e-8", "kg")
  , Jre = nt("planckTime", "5.391245e-44", "s")
  , Kre = nt("planckCharge", "1.87554603778e-18", "C")
  , Qre = nt("planckTemperature", "1.416785e+32", "K");
function nt(e, t, r) {
    var a = ["config", "Unit", "BigNumber"];
    return j(e, a, n => {
        var {config: i, Unit: o, BigNumber: s} = n
          , l = i.number === "BigNumber" ? new s(t) : parseFloat(t)
          , u = new o(l,r);
        return u.fixPrefix = !0,
        u
    }
    )
}
function af(e, t) {
    var r = ["config", "BigNumber"];
    return j(e, r, a => {
        var {config: n, BigNumber: i} = a;
        return n.number === "BigNumber" ? new i(t) : t
    }
    )
}
var Zre = "apply"
  , Xre = ["typed", "isInteger"]
  , eae = j(Zre, Xre, e => {
    var {typed: t, isInteger: r} = e
      , a = d2({
        typed: t,
        isInteger: r
    });
    return t("apply", {
        "...any": function(i) {
            var o = i[1];
            lt(o) ? i[1] = o - 1 : vt(o) && (i[1] = o.minus(1));
            try {
                return a.apply(null, i)
            } catch (s) {
                throw pa(s)
            }
        }
    })
}
, {
    isTransformFunction: !0
})
  , tae = "column"
  , rae = ["typed", "Index", "matrix", "range"]
  , aae = j(tae, rae, e => {
    var {typed: t, Index: r, matrix: a, range: n} = e
      , i = tk({
        typed: t,
        Index: r,
        matrix: a,
        range: n
    });
    return t("column", {
        "...any": function(s) {
            var l = s.length - 1
              , u = s[l];
            lt(u) && (s[l] = u - 1);
            try {
                return i.apply(null, s)
            } catch (c) {
                throw pa(c)
            }
        }
    })
}
, {
    isTransformFunction: !0
});
function E2(e, t, r) {
    var a = e.filter(function(s) {
        return Er(s) && !(s.name in t) && !r.has(s.name)
    })[0];
    if (!a)
        throw new Error('No undefined variable found in inline expression "' + e + '"');
    var n = a.name
      , i = Qu(r)
      , o = e.compile();
    return function(l) {
        return i.set(n, l),
        o.evaluate(i)
    }
}
var nae = "filter"
  , iae = ["typed"]
  , oae = j(nae, iae, e => {
    var {typed: t} = e;
    function r(n, i, o) {
        var s, l;
        return n[0] && (s = n[0].compile().evaluate(o)),
        n[1] && (Er(n[1]) || td(n[1]) ? l = n[1].compile().evaluate(o) : l = E2(n[1], i, o)),
        a(s, l)
    }
    r.rawArgs = !0;
    var a = t("filter", {
        "Array, function": ex,
        "Matrix, function": function(i, o) {
            return i.create(ex(i.toArray(), o))
        },
        "Array, RegExp": Th,
        "Matrix, RegExp": function(i, o) {
            return i.create(Th(i.toArray(), o))
        }
    });
    return r
}
, {
    isTransformFunction: !0
});
function ex(e, t) {
    return PE(e, function(r, a, n) {
        return vu(t, r, [a + 1], n, "filter")
    })
}
var sae = "forEach"
  , lae = ["typed"]
  , uae = j(sae, lae, e => {
    var {typed: t} = e;
    function r(n, i, o) {
        var s, l;
        return n[0] && (s = n[0].compile().evaluate(o)),
        n[1] && (Er(n[1]) || td(n[1]) ? l = n[1].compile().evaluate(o) : l = E2(n[1], i, o)),
        a(s, l)
    }
    r.rawArgs = !0;
    var a = t("forEach", {
        "Array | Matrix, function": function(i, o) {
            var s = function l(u, c) {
                if (Array.isArray(u))
                    Ym(u, function(d, v) {
                        l(d, c.concat(v + 1))
                    });
                else
                    return vu(o, u, c, i, "forEach")
            };
            s(i.valueOf(), [])
        }
    });
    return r
}
, {
    isTransformFunction: !0
})
  , cae = "index"
  , dae = ["Index", "getMatrixDataType"]
  , vae = j(cae, dae, e => {
    var {Index: t, getMatrixDataType: r} = e;
    return function() {
        for (var n = [], i = 0, o = arguments.length; i < o; i++) {
            var s = arguments[i];
            if (r2(s))
                s.start--,
                s.end -= s.step > 0 ? 0 : 2;
            else if (s && s.isSet === !0)
                s = s.map(function(u) {
                    return u - 1
                });
            else if (At(s) || je(s))
                r(s) !== "boolean" && (s = s.map(function(u) {
                    return u - 1
                }));
            else if (lt(s))
                s--;
            else if (vt(s))
                s = s.toNumber() - 1;
            else if (typeof s != "string")
                throw new TypeError("Dimension must be an Array, Matrix, number, string, or Range");
            n[i] = s
        }
        var l = new t;
        return t.apply(l, n),
        l
    }
}
, {
    isTransformFunction: !0
})
  , hae = "map"
  , mae = ["typed"]
  , fae = j(hae, mae, e => {
    var {typed: t} = e;
    function r(n, i, o) {
        var s, l;
        return n[0] && (s = n[0].compile().evaluate(o)),
        n[1] && (Er(n[1]) || td(n[1]) ? l = n[1].compile().evaluate(o) : l = E2(n[1], i, o)),
        a(s, l)
    }
    r.rawArgs = !0;
    var a = t("map", {
        "Array, function": function(i, o) {
            return tx(i, o, i)
        },
        "Matrix, function": function(i, o) {
            return i.create(tx(i.valueOf(), o, i))
        }
    });
    return r
}
, {
    isTransformFunction: !0
});
function tx(e, t, r) {
    function a(n, i) {
        return Array.isArray(n) ? Pi(n, function(o, s) {
            return a(o, i.concat(s + 1))
        }) : vu(t, n, i, r, "map")
    }
    return a(e, [])
}
function Go(e) {
    if (e.length === 2 && Fo(e[0])) {
        e = e.slice();
        var t = e[1];
        lt(t) ? e[1] = t - 1 : vt(t) && (e[1] = t.minus(1))
    }
    return e
}
var pae = "max"
  , yae = ["typed", "config", "numeric", "larger"]
  , wae = j(pae, yae, e => {
    var {typed: t, config: r, numeric: a, larger: n} = e
      , i = ck({
        typed: t,
        config: r,
        numeric: a,
        larger: n
    });
    return t("max", {
        "...any": function(s) {
            s = Go(s);
            try {
                return i.apply(null, s)
            } catch (l) {
                throw pa(l)
            }
        }
    })
}
, {
    isTransformFunction: !0
})
  , gae = "mean"
  , _ae = ["typed", "add", "divide"]
  , bae = j(gae, _ae, e => {
    var {typed: t, add: r, divide: a} = e
      , n = gk({
        typed: t,
        add: r,
        divide: a
    });
    return t("mean", {
        "...any": function(o) {
            o = Go(o);
            try {
                return n.apply(null, o)
            } catch (s) {
                throw pa(s)
            }
        }
    })
}
, {
    isTransformFunction: !0
})
  , Cae = "min"
  , Sae = ["typed", "config", "numeric", "smaller"]
  , xae = j(Cae, Sae, e => {
    var {typed: t, config: r, numeric: a, smaller: n} = e
      , i = dk({
        typed: t,
        config: r,
        numeric: a,
        smaller: n
    });
    return t("min", {
        "...any": function(s) {
            s = Go(s);
            try {
                return i.apply(null, s)
            } catch (l) {
                throw pa(l)
            }
        }
    })
}
, {
    isTransformFunction: !0
})
  , Aae = "range"
  , Eae = ["typed", "config", "?matrix", "?bignumber", "smaller", "smallerEq", "larger", "largerEq", "add", "isPositive"]
  , kae = j(Aae, Eae, e => {
    var {typed: t, config: r, matrix: a, bignumber: n, smaller: i, smallerEq: o, larger: s, largerEq: l, add: u, isPositive: c} = e
      , d = ik({
        typed: t,
        config: r,
        matrix: a,
        bignumber: n,
        smaller: i,
        smallerEq: o,
        larger: s,
        largerEq: l,
        add: u,
        isPositive: c
    });
    return t("range", {
        "...any": function(h) {
            var p = h.length - 1
              , f = h[p];
            return typeof f != "boolean" && h.push(!0),
            d.apply(null, h)
        }
    })
}
, {
    isTransformFunction: !0
})
  , Tae = "row"
  , Nae = ["typed", "Index", "matrix", "range"]
  , Mae = j(Tae, Nae, e => {
    var {typed: t, Index: r, matrix: a, range: n} = e
      , i = ok({
        typed: t,
        Index: r,
        matrix: a,
        range: n
    });
    return t("row", {
        "...any": function(s) {
            var l = s.length - 1
              , u = s[l];
            lt(u) && (s[l] = u - 1);
            try {
                return i.apply(null, s)
            } catch (c) {
                throw pa(c)
            }
        }
    })
}
, {
    isTransformFunction: !0
})
  , Iae = "subset"
  , Dae = ["typed", "matrix", "zeros", "add"]
  , Uae = j(Iae, Dae, e => {
    var {typed: t, matrix: r, zeros: a, add: n} = e
      , i = sk({
        typed: t,
        matrix: r,
        zeros: a,
        add: n
    });
    return t("subset", {
        "...any": function(s) {
            try {
                return i.apply(null, s)
            } catch (l) {
                throw pa(l)
            }
        }
    })
}
, {
    isTransformFunction: !0
})
  , Fae = "concat"
  , Oae = ["typed", "matrix", "isInteger"]
  , Pae = j(Fae, Oae, e => {
    var {typed: t, matrix: r, isInteger: a} = e
      , n = ek({
        typed: t,
        matrix: r,
        isInteger: a
    });
    return t("concat", {
        "...any": function(o) {
            var s = o.length - 1
              , l = o[s];
            lt(l) ? o[s] = l - 1 : vt(l) && (o[s] = l.minus(1));
            try {
                return n.apply(null, o)
            } catch (u) {
                throw pa(u)
            }
        }
    })
}
, {
    isTransformFunction: !0
})
  , rx = "diff"
  , Bae = ["typed", "matrix", "subtract", "number", "bignumber"]
  , Rae = j(rx, Bae, e => {
    var {typed: t, matrix: r, subtract: a, number: n, bignumber: i} = e
      , o = rk({
        typed: t,
        matrix: r,
        subtract: a,
        number: n,
        bignumber: i
    });
    return t(rx, {
        "...any": function(l) {
            l = Go(l);
            try {
                return o.apply(null, l)
            } catch (u) {
                throw pa(u)
            }
        }
    })
}
, {
    isTransformFunction: !0
})
  , Lae = "std"
  , qae = ["typed", "map", "sqrt", "variance"]
  , Vae = j(Lae, qae, e => {
    var {typed: t, map: r, sqrt: a, variance: n} = e
      , i = Ck({
        typed: t,
        map: r,
        sqrt: a,
        variance: n
    });
    return t("std", {
        "...any": function(s) {
            s = Go(s);
            try {
                return i.apply(null, s)
            } catch (l) {
                throw pa(l)
            }
        }
    })
}
, {
    isTransformFunction: !0
})
  , ax = "sum"
  , $ae = ["typed", "config", "add", "numeric"]
  , zae = j(ax, $ae, e => {
    var {typed: t, config: r, add: a, numeric: n} = e
      , i = yk({
        typed: t,
        config: r,
        add: a,
        numeric: n
    });
    return t(ax, {
        "...any": function(s) {
            s = Go(s);
            try {
                return i.apply(null, s)
            } catch (l) {
                throw pa(l)
            }
        }
    })
}
, {
    isTransformFunction: !0
})
  , Gae = "quantileSeq"
  , jae = ["typed", "bignumber", "add", "subtract", "divide", "multiply", "partitionSelect", "compare", "isInteger", "smaller", "smallerEq", "larger"]
  , Hae = j(Gae, jae, e => {
    var {typed: t, bignumber: r, add: a, subtract: n, divide: i, multiply: o, partitionSelect: s, compare: l, isInteger: u, smaller: c, smallerEq: d, larger: v} = e
      , h = bk({
        typed: t,
        bignumber: r,
        add: a,
        subtract: n,
        divide: i,
        multiply: o,
        partitionSelect: s,
        compare: l,
        isInteger: u,
        smaller: c,
        smallerEq: d,
        larger: v
    });
    return t("quantileSeq", {
        "Array | Matrix, number | BigNumber": h,
        "Array | Matrix, number | BigNumber, number": (f, _, y) => h(f, _, p(y)),
        "Array | Matrix, number | BigNumber, boolean": h,
        "Array | Matrix, number | BigNumber, boolean, number": (f, _, y, g) => h(f, _, y, p(g)),
        "Array | Matrix, Array | Matrix": h,
        "Array | Matrix, Array | Matrix, number": (f, _, y) => h(f, _, p(y)),
        "Array | Matrix, Array | Matrix, boolean": h,
        "Array | Matrix, Array | Matrix, boolean, number": (f, _, y, g) => h(f, _, y, p(g))
    });
    function p(f) {
        return Go([[], f])[1]
    }
}
, {
    isTransformFunction: !0
})
  , nx = "cumsum"
  , Wae = ["typed", "add", "unaryPlus"]
  , Yae = j(nx, Wae, e => {
    var {typed: t, add: r, unaryPlus: a} = e
      , n = wk({
        typed: t,
        add: r,
        unaryPlus: a
    });
    return t(nx, {
        "...any": function(o) {
            if (o.length === 2 && Fo(o[0])) {
                var s = o[1];
                lt(s) ? o[1] = s - 1 : vt(s) && (o[1] = s.minus(1))
            }
            try {
                return n.apply(null, o)
            } catch (l) {
                throw pa(l)
            }
        }
    })
}
, {
    isTransformFunction: !0
})
  , ix = "variance"
  , Jae = ["typed", "add", "subtract", "multiply", "divide", "apply", "isNaN"]
  , Kae = j(ix, Jae, e => {
    var {typed: t, add: r, subtract: a, multiply: n, divide: i, apply: o, isNaN: s} = e
      , l = _k({
        typed: t,
        add: r,
        subtract: a,
        multiply: n,
        divide: i,
        apply: o,
        isNaN: s
    });
    return t(ix, {
        "...any": function(c) {
            c = Go(c);
            try {
                return l.apply(null, c)
            } catch (d) {
                throw pa(d)
            }
        }
    })
}
, {
    isTransformFunction: !0
})
  , ox = "print"
  , Qae = ["typed", "matrix", "zeros", "add"]
  , Zae = j(ox, Qae, e => {
    var {typed: t, matrix: r, zeros: a, add: n} = e
      , i = uk({
        typed: t,
        matrix: r,
        zeros: a,
        add: n
    });
    return t(ox, {
        "string, Object | Array": function(l, u) {
            return i(o(l), u)
        },
        "string, Object | Array, number | Object": function(l, u, c) {
            return i(o(l), u, c)
        }
    });
    function o(s) {
        return s.replace(lk, l => {
            var u = l.slice(1).split(".")
              , c = u.map(function(d) {
                return !isNaN(d) && d.length > 0 ? parseInt(d) - 1 : d
            });
            return "$" + c.join(".")
        }
        )
    }
}
, {
    isTransformFunction: !0
})
  , Te = IR({
    config: fe
})
  , qt = OR({})
  , sx = Hte({
    BigNumber: Te,
    config: fe
})
  , Xae = qte({})
  , ene = bre({
    BigNumber: Te,
    config: fe
})
  , Ds = LR({})
  , Ak = ere({
    Complex: qt
})
  , tne = $te({
    BigNumber: Te,
    config: fe
})
  , rne = Jte({
    BigNumber: Te,
    config: fe
})
  , ane = Qte({
    BigNumber: Te,
    config: fe
})
  , nf = jR({})
  , nne = zte({
    BigNumber: Te,
    config: fe
})
  , ine = Vte({})
  , one = Wte({
    BigNumber: Te,
    config: fe
})
  , sne = $R({})
  , Ek = OB({})
  , lne = Zte({
    BigNumber: Te,
    config: fe
})
  , une = qre({
    BigNumber: Te,
    config: fe
})
  , kk = jte({
    BigNumber: Te,
    config: fe
})
  , cne = Lte({})
  , dne = tre({})
  , ct = JR({
    Matrix: nf
})
  , vne = Mre({
    BigNumber: Te,
    config: fe
})
  , hne = Yte({
    BigNumber: Te,
    config: fe
})
  , Cw = Gte({
    BigNumber: Te,
    config: fe
})
  , mne = Bte({})
  , fne = Xte({
    BigNumber: Te,
    config: fe
})
  , ee = IB({
    BigNumber: Te,
    Complex: qt,
    DenseMatrix: ct,
    Fraction: Ds
})
  , k2 = oq({
    BigNumber: Te,
    config: fe,
    typed: ee
})
  , pne = Nre({
    BigNumber: Te,
    config: fe
})
  , ya = lq({
    typed: ee
})
  , yne = Pj({
    Complex: qt,
    config: fe,
    typed: ee
})
  , wne = qj({
    BigNumber: Te,
    typed: ee
})
  , gne = Gj({
    BigNumber: Te,
    Complex: qt,
    config: fe,
    typed: ee
})
  , fr = vq({
    typed: ee
})
  , _ne = XV({
    typed: ee
})
  , bne = Kj({
    BigNumber: Te,
    Complex: qt,
    config: fe,
    typed: ee
})
  , Cne = tH({
    typed: ee
})
  , Tk = nH({
    typed: ee
})
  , Sne = lH({
    Complex: qt,
    config: fe,
    typed: ee
})
  , qa = qL({
    BigNumber: Te,
    typed: ee
})
  , xne = jV({
    typed: ee
})
  , Ane = BL({
    typed: ee
})
  , Ene = QR({
    typed: ee
})
  , of = mee({
    typed: ee
})
  , sf = zL({
    Complex: qt,
    typed: ee
})
  , Us = t$({
    typed: ee
})
  , T2 = cH({
    typed: ee
})
  , kne = mH({
    BigNumber: Te,
    typed: ee
})
  , Tne = wH({
    BigNumber: Te,
    typed: ee
})
  , Nne = Aq({
    typed: ee
})
  , pt = AL({
    config: fe,
    typed: ee
})
  , Mne = Cz({
    typed: ee
})
  , Nk = kq({
    typed: ee
})
  , Ine = Nq({
    Complex: qt,
    typed: ee
})
  , Dne = C$({
    typed: ee
})
  , Une = E$({
    typed: ee
})
  , id = Uz({
    typed: ee
})
  , N2 = N$({
    typed: ee
})
  , Fne = Lz({
    format: id,
    typed: ee
})
  , M2 = a$({
    typed: ee
})
  , ka = XR({
    typed: ee
})
  , jo = cL({
    typed: ee
})
  , Fs = pL({
    typed: ee
})
  , Wn = wL({
    typed: ee
})
  , One = Kte({
    BigNumber: Te,
    config: fe
})
  , Pne = _ee({
    Complex: qt,
    typed: ee
})
  , Bne = cV({
    Complex: qt,
    config: fe,
    typed: ee
})
  , Mk = vV({
    Complex: qt,
    config: fe,
    typed: ee
})
  , Os = O$({
    typed: ee
})
  , sr = fV({
    typed: ee
})
  , Ik = s$({
    typed: ee
})
  , Hi = UL({
    typed: ee
})
  , Rne = Bz({
    format: id,
    typed: ee
})
  , Lne = Yee({
    config: fe,
    typed: ee
})
  , qne = uk({
    typed: ee
})
  , Vne = Kee({
    config: fe,
    typed: ee
})
  , I2 = i$({
    typed: ee
})
  , $ne = CH({
    BigNumber: Te,
    typed: ee
})
  , Dk = bV({
    BigNumber: Te,
    Fraction: Ds,
    complex: sf,
    typed: ee
})
  , lf = EH({
    typed: ee
})
  , Wi = TL({
    Matrix: nf,
    equalScalar: pt,
    typed: ee
})
  , zne = rq({
    typed: ee
})
  , Gne = EV({
    typed: ee
})
  , jne = OL({
    typed: ee
})
  , Hne = MH({
    typed: ee
})
  , Uk = CL({
    typed: ee
})
  , Wne = Rj({
    Complex: qt,
    config: fe,
    typed: ee
})
  , Yne = Hj({
    BigNumber: Te,
    typed: ee
})
  , D2 = d2({
    isInteger: ka,
    typed: ee
})
  , Jne = Yj({
    BigNumber: Te,
    Complex: qt,
    config: fe,
    typed: ee
})
  , Kne = Oz({
    format: id,
    typed: ee
})
  , Qne = pee({
    typed: ee
})
  , Zne = vH({
    typed: ee
})
  , Xne = _H({
    BigNumber: Te,
    typed: ee
})
  , od = _L({
    typed: ee
})
  , eie = Gz({
    typed: ee
})
  , tie = Zee({
    config: fe,
    typed: ee
})
  , rie = xH({
    BigNumber: Te,
    typed: ee
})
  , aie = TH({
    typed: ee
})
  , nie = Dj({
    SparseMatrix: Wi,
    typed: ee
})
  , Yn = xV({
    Complex: qt,
    config: fe,
    typed: ee
})
  , iie = UH({
    typed: ee
})
  , mi = nq({
    typed: ee
})
  , oie = $j({
    BigNumber: Te,
    Complex: qt,
    config: fe,
    typed: ee
})
  , sie = pH({
    BigNumber: Te,
    typed: ee
})
  , mu = HL({
    Fraction: Ds,
    typed: ee
})
  , Ps = vL({
    typed: ee
})
  , ke = YL({
    DenseMatrix: ct,
    Matrix: nf,
    SparseMatrix: Wi,
    typed: ee
})
  , lie = KL({
    isZero: Wn,
    matrix: ke,
    typed: ee
})
  , uie = Nz({
    isNaN: od,
    isNumeric: Ps,
    typed: ee
})
  , Ln = Wz({
    bignumber: qa,
    fraction: mu,
    number: Hi
})
  , Fk = Iz({
    config: fe,
    multiplyScalar: sr,
    numeric: Ln,
    typed: ee
})
  , cie = z$({
    isInteger: ka,
    matrix: ke,
    typed: ee
})
  , ta = X$({
    matrix: ke,
    config: fe,
    typed: ee
})
  , die = tz({
    matrix: ke,
    typed: ee
})
  , sd = sz({
    matrix: ke,
    typed: ee
})
  , Ok = MV({
    BigNumber: Te,
    config: fe,
    matrix: ke,
    typed: ee
})
  , va = dz({
    BigNumber: Te,
    config: fe,
    matrix: ke,
    typed: ee
})
  , vie = Zj({
    Complex: qt,
    config: fe,
    typed: ee
})
  , Pk = mq({
    BigNumber: Te,
    Complex: qt,
    Fraction: Ds,
    config: fe,
    isNegative: jo,
    matrix: ke,
    typed: ee,
    unaryMinus: mi
})
  , Nt = ek({
    isInteger: ka,
    matrix: ke,
    typed: ee
})
  , hie = f$({
    prod: Fk,
    size: ta,
    typed: ee
})
  , U2 = uz({
    conj: Us,
    transpose: sd,
    typed: ee
})
  , Bk = g$({
    DenseMatrix: ct,
    SparseMatrix: Wi,
    matrix: ke,
    typed: ee
})
  , Zt = Jz({
    numeric: Ln,
    typed: ee
})
  , ld = uG({
    DenseMatrix: ct,
    concat: Nt,
    divideScalar: Zt,
    equalScalar: pt,
    matrix: ke,
    typed: ee
})
  , yn = RG({
    DenseMatrix: ct,
    concat: Nt,
    equalScalar: pt,
    matrix: ke,
    typed: ee
})
  , ud = x$({
    matrix: ke,
    typed: ee
})
  , mie = mL({
    isNumeric: Ps,
    typed: ee
})
  , Ho = I$({
    BigNumber: Te,
    DenseMatrix: ct,
    SparseMatrix: Wi,
    config: fe,
    matrix: ke,
    typed: ee
})
  , fie = U$({
    matrix: ke,
    multiplyScalar: sr,
    typed: ee
})
  , uf = ZG({
    DenseMatrix: ct,
    concat: Nt,
    config: fe,
    matrix: ke,
    typed: ee
})
  , pie = bG({
    DenseMatrix: ct,
    concat: Nt,
    equalScalar: pt,
    matrix: ke,
    typed: ee,
    zeros: va
})
  , F2 = eq({
    flatten: ud,
    matrix: ke,
    size: ta,
    typed: ee
})
  , yie = gV({
    BigNumber: Te,
    concat: Nt,
    equalScalar: pt,
    matrix: ke,
    typed: ee
})
  , wie = q$({
    BigNumber: Te,
    config: fe,
    matrix: ke,
    typed: ee
})
  , gie = H$({
    config: fe,
    matrix: ke
})
  , _ie = SG({
    DenseMatrix: ct,
    concat: Nt,
    equalScalar: pt,
    matrix: ke,
    typed: ee,
    zeros: va
})
  , rt = Xz({
    BigNumber: Te,
    DenseMatrix: ct,
    equalScalar: pt,
    matrix: ke,
    typed: ee,
    zeros: va
})
  , ua = zG({
    DenseMatrix: ct,
    concat: Nt,
    config: fe,
    matrix: ke,
    typed: ee
})
  , kt = TV({
    DenseMatrix: ct,
    addScalar: fr,
    concat: Nt,
    equalScalar: pt,
    matrix: ke,
    typed: ee,
    unaryMinus: mi
})
  , bie = $z({
    concat: Nt,
    matrix: ke,
    typed: ee
})
  , Cie = aj({
    DenseMatrix: ct,
    concat: Nt,
    config: fe,
    equalScalar: pt,
    matrix: ke,
    typed: ee
})
  , O2 = hG({
    DenseMatrix: ct,
    divideScalar: Zt,
    equalScalar: pt,
    matrix: ke,
    multiplyScalar: sr,
    subtract: kt,
    typed: ee
})
  , Sie = d$({
    DenseMatrix: ct,
    concat: Nt,
    matrix: ke,
    typed: ee
})
  , ft = tW({
    DenseMatrix: ct,
    SparseMatrix: Wi,
    addScalar: fr,
    concat: Nt,
    equalScalar: pt,
    matrix: ke,
    typed: ee
})
  , xie = oH({
    BigNumber: Te,
    DenseMatrix: ct,
    concat: Nt,
    equalScalar: pt,
    matrix: ke,
    typed: ee
})
  , Aie = zV({
    concat: Nt,
    equalScalar: pt,
    matrix: ke,
    typed: ee
})
  , Eie = QV({
    DenseMatrix: ct,
    concat: Nt,
    matrix: ke,
    typed: ee
})
  , kie = nte({
    addScalar: fr,
    combinations: of,
    divideScalar: Zt,
    isInteger: ka,
    isNegative: jo,
    multiplyScalar: sr,
    typed: ee
})
  , Bs = NG({
    BigNumber: Te,
    DenseMatrix: ct,
    Fraction: Ds,
    concat: Nt,
    config: fe,
    equalScalar: pt,
    matrix: ke,
    typed: ee
})
  , Rk = PG({
    concat: Nt,
    matrix: ke,
    typed: ee
})
  , Tie = wk({
    add: ft,
    typed: ee,
    unaryPlus: k2
})
  , P2 = tj({
    equal: yn,
    typed: ee
})
  , Nie = rk({
    matrix: ke,
    number: Hi,
    subtract: kt,
    typed: ee
})
  , Mie = QX({
    abs: ya,
    addScalar: fr,
    deepEqual: P2,
    divideScalar: Zt,
    multiplyScalar: sr,
    sqrt: Yn,
    subtract: kt,
    typed: ee
})
  , cf = sW({
    addScalar: fr,
    conj: Us,
    multiplyScalar: sr,
    size: ta,
    typed: ee
})
  , Iie = VG({
    compareText: Rk,
    isZero: Wn,
    typed: ee
})
  , Lk = Q4({
    DenseMatrix: ct,
    config: fe,
    equalScalar: pt,
    matrix: ke,
    round: rt,
    typed: ee,
    zeros: va
})
  , Die = nV({
    BigNumber: Te,
    DenseMatrix: ct,
    concat: Nt,
    config: fe,
    equalScalar: pt,
    matrix: ke,
    round: rt,
    typed: ee,
    zeros: va
})
  , Uie = aW({
    abs: ya,
    addScalar: fr,
    divideScalar: Zt,
    isPositive: Fs,
    multiplyScalar: sr,
    smaller: ua,
    sqrt: Yn,
    typed: ee
})
  , qk = hj({
    DenseMatrix: ct,
    smaller: ua
})
  , Kr = pj({
    ImmutableDenseMatrix: qk,
    getMatrixDataType: N2
})
  , ca = JG({
    DenseMatrix: ct,
    concat: Nt,
    config: fe,
    matrix: ke,
    typed: ee
})
  , B2 = tG({
    Complex: qt,
    config: fe,
    divideScalar: Zt,
    typed: ee
})
  , Vk = dG({
    DenseMatrix: ct,
    divideScalar: Zt,
    equalScalar: pt,
    matrix: ke,
    multiplyScalar: sr,
    subtract: kt,
    typed: ee
})
  , Fie = ZL({
    flatten: ud,
    matrix: ke,
    size: ta,
    typed: ee
})
  , Oie = dk({
    config: fe,
    numeric: Ln,
    smaller: ua,
    typed: ee
})
  , $k = Z4({
    DenseMatrix: ct,
    concat: Nt,
    config: fe,
    equalScalar: pt,
    matrix: ke,
    round: rt,
    typed: ee,
    zeros: va
})
  , Tt = yV({
    addScalar: fr,
    dot: cf,
    equalScalar: pt,
    matrix: ke,
    multiplyScalar: sr,
    typed: ee
})
  , Pie = iG({
    Complex: qt,
    config: fe,
    divideScalar: Zt,
    typed: ee
})
  , Bie = u$({
    DenseMatrix: ct,
    concat: Nt,
    equalScalar: pt,
    matrix: ke,
    typed: ee
})
  , df = oj({
    compare: Bs,
    isNaN: od,
    isNumeric: Ps,
    typed: ee
})
  , R2 = fY({
    addScalar: fr,
    complex: sf,
    conj: Us,
    divideScalar: Zt,
    equal: yn,
    identity: Ho,
    isZero: Wn,
    matrix: ke,
    multiplyScalar: sr,
    sign: Dk,
    sqrt: Yn,
    subtract: kt,
    typed: ee,
    unaryMinus: mi,
    zeros: va
})
  , Rie = AG({
    DenseMatrix: ct,
    concat: Nt,
    equalScalar: pt,
    matrix: ke,
    typed: ee,
    zeros: va
})
  , zk = LY({
    SparseMatrix: Wi,
    abs: ya,
    add: ft,
    divideScalar: Zt,
    larger: ca,
    largerEq: uf,
    multiply: Tt,
    subtract: kt,
    transpose: sd,
    typed: ee
})
  , Ka = sk({
    add: ft,
    matrix: ke,
    typed: ee,
    zeros: va
})
  , L2 = yk({
    add: ft,
    config: fe,
    numeric: Ln,
    typed: ee
})
  , Lie = cW({
    add: ft,
    matrix: ke,
    typed: ee
})
  , Gk = yG({
    DenseMatrix: ct,
    divideScalar: Zt,
    equalScalar: pt,
    matrix: ke,
    multiplyScalar: sr,
    subtract: kt,
    typed: ee
})
  , qie = Nte({
    Complex: qt,
    add: ft,
    multiply: Tt,
    number: Hi,
    typed: ee
})
  , Vie = WV({
    DenseMatrix: ct,
    concat: Nt,
    equalScalar: pt,
    matrix: ke,
    typed: ee
})
  , q2 = Sq({
    DenseMatrix: ct,
    config: fe,
    equalScalar: pt,
    matrix: ke,
    round: rt,
    typed: ee,
    zeros: va
})
  , fi = UG({
    compare: Bs,
    typed: ee
})
  , $ie = ote({
    addScalar: fr,
    combinations: of,
    isInteger: ka,
    isNegative: jo,
    isPositive: Fs,
    larger: ca,
    typed: ee
})
  , zie = y$({
    matrix: ke,
    multiply: Tt,
    subtract: kt,
    typed: ee
})
  , jk = kX({
    divideScalar: Zt,
    isZero: Wn,
    matrix: ke,
    multiply: Tt,
    subtract: kt,
    typed: ee,
    unaryMinus: mi
})
  , Gie = PV({
    concat: Nt,
    equalScalar: pt,
    matrix: ke,
    multiplyScalar: sr,
    typed: ee
})
  , Hk = gj({
    larger: ca,
    smaller: ua
})
  , Wk = Dq({
    Complex: qt,
    DenseMatrix: ct,
    ceil: q2,
    equalScalar: pt,
    floor: Lk,
    matrix: ke,
    typed: ee,
    zeros: va
})
  , Yk = vW({
    Index: Kr,
    typed: ee
})
  , jie = eee({
    abs: ya,
    add: ft,
    addScalar: fr,
    config: fe,
    divideScalar: Zt,
    equalScalar: pt,
    flatten: ud,
    isNumeric: Ps,
    isZero: Wn,
    matrix: ke,
    multiply: Tt,
    multiplyScalar: sr,
    smaller: ua,
    subtract: kt,
    typed: ee
})
  , Hie = DV({
    BigNumber: Te,
    add: ft,
    config: fe,
    equal: yn,
    isInteger: ka,
    mod: $k,
    smaller: ua,
    typed: ee,
    xgcd: Ok
})
  , Wie = lV({
    concat: Nt,
    equalScalar: pt,
    matrix: ke,
    typed: ee
})
  , Yie = aG({
    Complex: qt,
    config: fe,
    divideScalar: Zt,
    log: B2,
    typed: ee
})
  , Jie = fG({
    DenseMatrix: ct,
    divideScalar: Zt,
    equalScalar: pt,
    matrix: ke,
    multiplyScalar: sr,
    subtract: kt,
    typed: ee
})
  , V2 = ck({
    config: fe,
    larger: ca,
    numeric: Ln,
    typed: ee
})
  , Kie = OH({
    DenseMatrix: ct,
    Index: Kr,
    compareNatural: fi,
    size: ta,
    subset: Ka,
    typed: ee
})
  , Qie = LH({
    DenseMatrix: ct,
    Index: Kr,
    compareNatural: fi,
    size: ta,
    subset: Ka,
    typed: ee
})
  , Zie = zH({
    Index: Kr,
    compareNatural: fi,
    size: ta,
    subset: Ka,
    typed: ee
})
  , Xie = WH({
    Index: Kr,
    compareNatural: fi,
    size: ta,
    subset: Ka,
    typed: ee
})
  , Ql = HG({
    DenseMatrix: ct,
    concat: Nt,
    config: fe,
    matrix: ke,
    typed: ee
})
  , eoe = lj({
    compare: Bs,
    compareNatural: fi,
    matrix: ke,
    typed: ee
})
  , toe = kG({
    concat: Nt,
    equalScalar: pt,
    matrix: ke,
    not: Ik,
    typed: ee,
    zeros: va
})
  , Zl = ik({
    bignumber: qa,
    matrix: ke,
    add: ft,
    config: fe,
    isPositive: Fs,
    larger: ca,
    largerEq: uf,
    smaller: ua,
    smallerEq: Ql,
    typed: ee
})
  , roe = ok({
    Index: Kr,
    matrix: ke,
    range: Zl,
    typed: ee
})
  , Jk = BH({
    DenseMatrix: ct,
    Index: Kr,
    compareNatural: fi,
    size: ta,
    subset: Ka,
    typed: ee
})
  , aoe = jH({
    Index: Kr,
    compareNatural: fi,
    size: ta,
    subset: Ka,
    typed: ee
})
  , Kk = QH({
    Index: Kr,
    concat: Nt,
    setDifference: Jk,
    size: ta,
    subset: Ka,
    typed: ee
})
  , Qk = Cj({
    FibonacciHeap: Hk,
    addScalar: fr,
    equalScalar: pt
})
  , Zk = tk({
    Index: Kr,
    matrix: ke,
    range: Zl,
    typed: ee
})
  , Rs = NX({
    abs: ya,
    addScalar: fr,
    det: jk,
    divideScalar: Zt,
    identity: Ho,
    matrix: ke,
    multiply: Tt,
    typed: ee,
    unaryMinus: mi
})
  , Xk = hY({
    DenseMatrix: ct,
    Spa: Qk,
    SparseMatrix: Wi,
    abs: ya,
    addScalar: fr,
    divideScalar: Zt,
    equalScalar: pt,
    larger: ca,
    matrix: ke,
    multiplyScalar: sr,
    subtract: kt,
    typed: ee,
    unaryMinus: mi
})
  , noe = IX({
    Complex: qt,
    add: ft,
    ctranspose: U2,
    deepEqual: P2,
    divideScalar: Zt,
    dot: cf,
    dotDivide: ld,
    equal: yn,
    inv: Rs,
    matrix: ke,
    multiply: Tt,
    typed: ee
})
  , wn = Qz({
    Complex: qt,
    config: fe,
    fraction: mu,
    identity: Ho,
    inv: Rs,
    matrix: ke,
    multiply: Tt,
    number: Hi,
    typed: ee
})
  , eT = VH({
    DenseMatrix: ct,
    Index: Kr,
    compareNatural: fi,
    size: ta,
    subset: Ka,
    typed: ee
})
  , ioe = XH({
    Index: Kr,
    concat: Nt,
    setIntersect: eT,
    setSymDifference: Kk,
    size: ta,
    subset: Ka,
    typed: ee
})
  , ooe = qX({
    abs: ya,
    add: ft,
    identity: Ho,
    inv: Rs,
    map: Os,
    max: V2,
    multiply: Tt,
    size: ta,
    sqrt: Yn,
    subtract: kt,
    typed: ee
})
  , Ke = Tj({
    BigNumber: Te,
    Complex: qt,
    Fraction: Ds,
    abs: ya,
    addScalar: fr,
    config: fe,
    divideScalar: Zt,
    equal: yn,
    fix: Wk,
    format: id,
    isNumeric: Ps,
    multiplyScalar: sr,
    number: Hi,
    pow: wn,
    round: rt,
    subtract: kt
})
  , soe = lre({
    BigNumber: Te,
    Unit: Ke,
    config: fe
})
  , loe = zre({
    BigNumber: Te,
    Unit: Ke,
    config: fe
})
  , uoe = Ire({
    BigNumber: Te,
    Unit: Ke,
    config: fe
})
  , coe = dre({
    BigNumber: Te,
    Unit: Ke,
    config: fe
})
  , doe = Ure({
    BigNumber: Te,
    Unit: Ke,
    config: fe
})
  , voe = vre({
    BigNumber: Te,
    Unit: Ke,
    config: fe
})
  , hoe = ure({
    BigNumber: Te,
    Unit: Ke,
    config: fe
})
  , moe = xre({
    BigNumber: Te,
    Unit: Ke,
    config: fe
})
  , foe = sG({
    DenseMatrix: ct,
    concat: Nt,
    equalScalar: pt,
    matrix: ke,
    pow: wn,
    typed: ee
})
  , poe = sre({
    BigNumber: Te,
    Unit: Ke,
    config: fe
})
  , yoe = cre({
    BigNumber: Te,
    Unit: Ke,
    config: fe
})
  , woe = RX({
    abs: ya,
    add: ft,
    identity: Ho,
    inv: Rs,
    multiply: Tt,
    typed: ee
})
  , goe = Fre({
    BigNumber: Te,
    Unit: Ke,
    config: fe
})
  , tT = hz({
    addScalar: fr,
    ceil: q2,
    conj: Us,
    divideScalar: Zt,
    dotDivide: ld,
    exp: Nk,
    i: Ak,
    log2: Mk,
    matrix: ke,
    multiplyScalar: sr,
    pow: wn,
    tau: kk,
    typed: ee
})
  , $2 = wee({
    BigNumber: Te,
    Complex: qt,
    config: fe,
    multiplyScalar: sr,
    pow: wn,
    typed: ee
})
  , _oe = are({
    BigNumber: Te,
    Unit: Ke,
    config: fe
})
  , boe = Cre({
    BigNumber: Te,
    Unit: Ke,
    config: fe
})
  , Coe = fz({
    conj: Us,
    dotDivide: ld,
    fft: tT,
    typed: ee
})
  , Soe = pre({
    BigNumber: Te,
    Unit: Ke,
    config: fe
})
  , xoe = Pre({
    BigNumber: Te,
    Unit: Ke,
    config: fe
})
  , Aoe = ore({
    BigNumber: Te,
    Unit: Ke,
    config: fe
})
  , Eoe = Gre({
    BigNumber: Te,
    Unit: Ke,
    config: fe
})
  , koe = Rre({
    BigNumber: Te,
    Unit: Ke,
    config: fe
})
  , Toe = Are({
    BigNumber: Te,
    Unit: Ke,
    config: fe
})
  , Noe = fre({
    BigNumber: Te,
    Unit: Ke,
    config: fe
})
  , Moe = Kre({
    BigNumber: Te,
    Unit: Ke,
    config: fe
})
  , Ioe = Wre({
    BigNumber: Te,
    Unit: Ke,
    config: fe
})
  , Doe = Qre({
    BigNumber: Te,
    Unit: Ke,
    config: fe
})
  , Uoe = Sre({
    BigNumber: Te,
    Unit: Ke,
    config: fe
})
  , Foe = Ere({
    BigNumber: Te,
    Unit: Ke,
    config: fe
})
  , Ooe = ire({
    BigNumber: Te,
    Unit: Ke,
    config: fe
})
  , Poe = kre({
    BigNumber: Te,
    Unit: Ke,
    config: fe
})
  , Boe = Vre({
    BigNumber: Te,
    Unit: Ke,
    config: fe
})
  , Roe = rre({
    BigNumber: Te,
    Unit: Ke,
    config: fe
})
  , Loe = $re({
    BigNumber: Te,
    Unit: Ke,
    config: fe
})
  , qoe = Tre({
    BigNumber: Te,
    Unit: Ke,
    config: fe
})
  , Voe = Dre({
    BigNumber: Te,
    Unit: Ke,
    config: fe
})
  , $oe = yre({
    BigNumber: Te,
    Unit: Ke,
    config: fe
})
  , zoe = Fj({
    Unit: Ke,
    typed: ee
})
  , Tr = JX({
    divideScalar: Zt,
    equalScalar: pt,
    inv: Rs,
    matrix: ke,
    multiply: Tt,
    typed: ee
})
  , Goe = gre({
    BigNumber: Te,
    Unit: Ke,
    config: fe
})
  , cd = Cee({
    gamma: $2,
    typed: ee
})
  , joe = Ore({
    BigNumber: Te,
    Unit: Ke,
    config: fe
})
  , Hoe = Hre({
    BigNumber: Te,
    Unit: Ke,
    config: fe
})
  , Woe = hre({
    BigNumber: Te,
    Unit: Ke,
    config: fe
})
  , rT = VY({
    DenseMatrix: ct,
    lsolve: Vk,
    lup: Xk,
    matrix: ke,
    slu: zk,
    typed: ee,
    usolve: O2
})
  , Yoe = mre({
    BigNumber: Te,
    Unit: Ke,
    config: fe
})
  , Joe = jre({
    BigNumber: Te,
    Unit: Ke,
    config: fe
})
  , Koe = Eee({
    add: ft,
    divide: Tr,
    factorial: cd,
    isInteger: ka,
    isPositive: Fs,
    multiply: Tt,
    typed: ee
})
  , Qoe = Tee({
    factorial: cd,
    typed: ee
})
  , Zoe = Yre({
    BigNumber: Te,
    Unit: Ke,
    config: fe
})
  , Xoe = zY({
    add: ft,
    cbrt: Pk,
    divide: Tr,
    equalScalar: pt,
    im: M2,
    isZero: Wn,
    multiply: Tt,
    re: I2,
    sqrt: Yn,
    subtract: kt,
    typeOf: Uk,
    typed: ee,
    unaryMinus: mi
})
  , ese = JH({
    compareNatural: fi,
    typed: ee
})
  , tse = gz({
    abs: ya,
    add: ft,
    bignumber: qa,
    divide: Tr,
    isNegative: jo,
    isPositive: Fs,
    larger: ca,
    map: Os,
    matrix: ke,
    max: V2,
    multiply: Tt,
    smaller: ua,
    subtract: kt,
    typed: ee,
    unaryMinus: mi
})
  , aT = ete({
    bignumber: qa,
    addScalar: fr,
    combinations: of,
    divideScalar: Zt,
    factorial: cd,
    isInteger: ka,
    isNegative: jo,
    larger: ca,
    multiplyScalar: sr,
    number: Hi,
    pow: wn,
    subtract: kt,
    typed: ee
})
  , rse = Mj({
    Unit: Ke,
    typed: ee
})
  , ase = rte({
    addScalar: fr,
    isInteger: ka,
    isNegative: jo,
    stirlingS2: aT,
    typed: ee
})
  , nT = PX({
    abs: ya,
    add: ft,
    addScalar: fr,
    atan: Tk,
    bignumber: qa,
    column: Zk,
    complex: sf,
    config: fe,
    cos: T2,
    diag: Bk,
    divideScalar: Zt,
    dot: cf,
    equal: yn,
    flatten: ud,
    im: M2,
    inv: Rs,
    larger: ca,
    matrix: ke,
    matrixFromColumns: F2,
    multiply: Tt,
    multiplyScalar: sr,
    number: Hi,
    qr: R2,
    re: I2,
    sin: lf,
    smaller: ua,
    sqrt: Yn,
    subtract: kt,
    typed: ee,
    usolve: O2,
    usolveAll: Gk
})
  , nse = _re({
    BigNumber: Te,
    Unit: Ke,
    config: fe
})
  , ise = Bre({
    BigNumber: Te,
    Unit: Ke,
    config: fe
})
  , iT = gk({
    add: ft,
    divide: Tr,
    typed: ee
})
  , ose = Lre({
    BigNumber: Te,
    Unit: Ke,
    config: fe
})
  , sse = nre({
    BigNumber: Te,
    Unit: Ke,
    config: fe
})
  , lse = bk({
    bignumber: qa,
    add: ft,
    compare: Bs,
    divide: Tr,
    isInteger: ka,
    larger: ca,
    multiply: Tt,
    partitionSelect: df,
    smaller: ua,
    smallerEq: Ql,
    subtract: kt,
    typed: ee
})
  , z2 = _k({
    add: ft,
    apply: D2,
    divide: Tr,
    isNaN: od,
    multiply: Tt,
    subtract: kt,
    typed: ee
})
  , use = wre({
    BigNumber: Te,
    Unit: Ke,
    config: fe
})
  , oT = iee({
    add: ft,
    compare: Bs,
    divide: Tr,
    partitionSelect: df,
    typed: ee
})
  , cse = vee({
    add: ft,
    divide: Tr,
    matrix: ke,
    mean: iT,
    multiply: Tt,
    pow: wn,
    sqrt: Yn,
    subtract: kt,
    sum: L2,
    typed: ee
})
  , dse = Ite({
    Complex: qt,
    add: ft,
    divide: Tr,
    matrix: ke,
    multiply: Tt,
    typed: ee
})
  , vse = see({
    abs: ya,
    map: Os,
    median: oT,
    subtract: kt,
    typed: ee
})
  , hse = Ck({
    map: Os,
    sqrt: Yn,
    typed: ee,
    variance: z2
})
  , mse = kz({
    BigNumber: Te,
    Complex: qt,
    add: ft,
    config: fe,
    divide: Tr,
    equal: yn,
    factorial: cd,
    gamma: $2,
    isNegative: jo,
    multiply: Tt,
    pi: Cw,
    pow: wn,
    sin: lf,
    smallerEq: Ql,
    subtract: kt,
    typed: ee
})
  , G2 = iW({
    abs: ya,
    add: ft,
    conj: Us,
    ctranspose: U2,
    eigs: nT,
    equalScalar: pt,
    larger: ca,
    matrix: ke,
    multiply: Tt,
    pow: wn,
    smaller: ua,
    sqrt: Yn,
    typed: ee
})
  , sT = K$({
    BigNumber: Te,
    DenseMatrix: ct,
    SparseMatrix: Wi,
    addScalar: fr,
    config: fe,
    cos: T2,
    matrix: ke,
    multiplyScalar: sr,
    norm: G2,
    sin: lf,
    typed: ee,
    unaryMinus: mi
})
  , fse = xee({
    divide: Tr,
    dotDivide: ld,
    isNumeric: Ps,
    log: B2,
    map: Os,
    matrix: ke,
    multiply: Tt,
    sum: L2,
    typed: ee
})
  , pse = Jre({
    BigNumber: Te,
    Unit: Ke,
    config: fe
})
  , lT = GX({
    identity: Ho,
    matrix: ke,
    multiply: Tt,
    norm: G2,
    qr: R2,
    subtract: kt,
    typed: ee
})
  , yse = Y$({
    multiply: Tt,
    rotationMatrix: sT,
    typed: ee
})
  , uT = $X({
    abs: ya,
    add: ft,
    concat: Nt,
    identity: Ho,
    index: Yk,
    lusolve: rT,
    matrix: ke,
    matrixFromColumns: F2,
    multiply: Tt,
    range: Zl,
    schur: lT,
    subset: Ka,
    subtract: kt,
    transpose: sd,
    typed: ee
})
  , wse = HX({
    matrix: ke,
    multiply: Tt,
    sylvester: uT,
    transpose: sd,
    typed: ee
})
  , fu = {}
  , pu = {}
  , cT = {}
  , ra = fW({
    mathWithTransform: pu
})
  , yu = VW({
    Node: ra
})
  , Yi = zW({
    Node: ra
})
  , Ls = jW({
    Node: ra
})
  , dT = JW({
    Node: ra
})
  , wu = gW({
    Node: ra
})
  , vT = AW({
    Node: ra,
    ResultSet: Ek
})
  , hT = kW({
    Node: ra
})
  , Wo = OW({
    Node: ra
})
  , mT = WW({
    Node: ra
})
  , gse = Fte({
    classes: cT
})
  , j2 = JY({
    math: fu,
    typed: ee
})
  , fT = BW({
    Node: ra,
    typed: ee
})
  , _se = AX({
    Chain: j2,
    typed: ee
})
  , gu = LW({
    Node: ra,
    size: ta
})
  , _u = yW({
    Node: ra,
    subset: Ka
})
  , pT = SW({
    matrix: ke,
    Node: ra,
    subset: Ka
})
  , Yo = ZW({
    Unit: Ke,
    Node: ra,
    math: fu
})
  , Jo = eY({
    Node: ra,
    SymbolNode: Yo,
    math: fu
})
  , Jn = rY({
    AccessorNode: _u,
    ArrayNode: wu,
    AssignmentNode: pT,
    BlockNode: vT,
    ConditionalNode: hT,
    ConstantNode: Wo,
    FunctionAssignmentNode: fT,
    FunctionNode: Jo,
    IndexNode: gu,
    ObjectNode: yu,
    OperatorNode: Yi,
    ParenthesisNode: Ls,
    RangeNode: mT,
    RelationalNode: dT,
    SymbolNode: Yo,
    config: fe,
    numeric: Ln,
    typed: ee
})
  , yT = bte({
    ConstantNode: Wo,
    FunctionNode: Jo,
    OperatorNode: Yi,
    ParenthesisNode: Ls,
    parse: Jn,
    typed: ee
})
  , H2 = pte({
    bignumber: qa,
    fraction: mu,
    AccessorNode: _u,
    ArrayNode: wu,
    ConstantNode: Wo,
    FunctionNode: Jo,
    IndexNode: gu,
    ObjectNode: yu,
    OperatorNode: Yi,
    SymbolNode: Yo,
    config: fe,
    mathWithTransform: pu,
    matrix: ke,
    typed: ee
})
  , bse = nY({
    parse: Jn,
    typed: ee
})
  , wT = HY({
    parse: Jn
})
  , Cse = lte({
    parse: Jn,
    typed: ee
})
  , W2 = wte({
    AccessorNode: _u,
    ArrayNode: wu,
    ConstantNode: Wo,
    FunctionNode: Jo,
    IndexNode: gu,
    ObjectNode: yu,
    OperatorNode: Yi,
    ParenthesisNode: Ls,
    SymbolNode: Yo,
    add: ft,
    divide: Tr,
    equal: yn,
    isZero: Wn,
    multiply: Tt,
    parse: Jn,
    pow: wn,
    subtract: kt,
    typed: ee
})
  , Fr = oY({
    parse: Jn,
    typed: ee
})
  , Sse = SX({
    Help: wT,
    mathWithTransform: pu,
    typed: ee
})
  , gT = uY({
    evaluate: Fr
})
  , vf = hte({
    bignumber: qa,
    fraction: mu,
    AccessorNode: _u,
    ArrayNode: wu,
    ConstantNode: Wo,
    FunctionNode: Jo,
    IndexNode: gu,
    ObjectNode: yu,
    OperatorNode: Yi,
    ParenthesisNode: Ls,
    SymbolNode: Yo,
    add: ft,
    config: fe,
    divide: Tr,
    equal: yn,
    isZero: Wn,
    mathWithTransform: pu,
    matrix: ke,
    multiply: Tt,
    parse: Jn,
    pow: wn,
    resolve: yT,
    simplifyConstant: H2,
    simplifyCore: W2,
    subtract: kt,
    typed: ee
})
  , xse = Ste({
    OperatorNode: Yi,
    parse: Jn,
    simplify: vf,
    typed: ee
})
  , Ase = dY({
    Parser: gT,
    typed: ee
})
  , Ese = kte({
    bignumber: qa,
    fraction: mu,
    AccessorNode: _u,
    ArrayNode: wu,
    ConstantNode: Wo,
    FunctionNode: Jo,
    IndexNode: gu,
    ObjectNode: yu,
    OperatorNode: Yi,
    ParenthesisNode: Ls,
    SymbolNode: Yo,
    add: ft,
    config: fe,
    divide: Tr,
    equal: yn,
    isZero: Wn,
    mathWithTransform: pu,
    matrix: ke,
    multiply: Tt,
    parse: Jn,
    pow: wn,
    simplify: vf,
    simplifyConstant: H2,
    simplifyCore: W2,
    subtract: kt,
    typed: ee
})
  , kse = Ate({
    ConstantNode: Wo,
    FunctionNode: Jo,
    OperatorNode: Yi,
    ParenthesisNode: Ls,
    SymbolNode: Yo,
    config: fe,
    equal: yn,
    isZero: Wn,
    numeric: Ln,
    parse: Jn,
    simplify: vf,
    typed: ee
});
Ie(fu, {
    e: sx,
    false: Xae,
    fineStructure: ene,
    i: Ak,
    Infinity: tne,
    LN10: rne,
    LOG10E: ane,
    NaN: nne,
    null: ine,
    phi: one,
    SQRT1_2: lne,
    sackurTetrode: une,
    tau: kk,
    true: cne,
    E: sx,
    version: dne,
    efimovFactor: vne,
    LN2: hne,
    pi: Cw,
    replacer: mne,
    reviver: gse,
    SQRT2: fne,
    typed: ee,
    unaryPlus: k2,
    PI: Cw,
    weakMixingAngle: pne,
    abs: ya,
    acos: yne,
    acot: wne,
    acsc: gne,
    addScalar: fr,
    arg: _ne,
    asech: bne,
    asinh: Cne,
    atan: Tk,
    atanh: Sne,
    bignumber: qa,
    bitNot: xne,
    boolean: Ane,
    clone: Ene,
    combinations: of,
    complex: sf,
    conj: Us,
    cos: T2,
    cot: kne,
    csc: Tne,
    cube: Nne,
    equalScalar: pt,
    erf: Mne,
    exp: Nk,
    expm1: Ine,
    filter: Dne,
    forEach: Une,
    format: id,
    getMatrixDataType: N2,
    hex: Fne,
    im: M2,
    isInteger: ka,
    isNegative: jo,
    isPositive: Fs,
    isZero: Wn,
    LOG2E: One,
    lgamma: Pne,
    log10: Bne,
    log2: Mk,
    map: Os,
    multiplyScalar: sr,
    not: Ik,
    number: Hi,
    oct: Rne,
    pickRandom: Lne,
    print: qne,
    random: Vne,
    re: I2,
    sec: $ne,
    sign: Dk,
    sin: lf,
    splitUnit: zne,
    square: Gne,
    string: jne,
    tan: Hne,
    typeOf: Uk,
    acosh: Wne,
    acsch: Yne,
    apply: D2,
    asec: Jne,
    bin: Kne,
    chain: _se,
    combinationsWithRep: Qne,
    cosh: Zne,
    csch: Xne,
    isNaN: od,
    isPrime: eie,
    randomInt: tie,
    sech: rie,
    sinh: aie,
    sparse: nie,
    sqrt: Yn,
    tanh: iie,
    unaryMinus: mi,
    acoth: oie,
    coth: sie,
    fraction: mu,
    isNumeric: Ps,
    matrix: ke,
    matrixFromFunction: lie,
    mode: uie,
    numeric: Ln,
    prod: Fk,
    reshape: cie,
    size: ta,
    squeeze: die,
    transpose: sd,
    xgcd: Ok,
    zeros: va,
    asin: vie,
    cbrt: Pk,
    concat: Nt,
    count: hie,
    ctranspose: U2,
    diag: Bk,
    divideScalar: Zt,
    dotDivide: ld,
    equal: yn,
    flatten: ud,
    hasNumericValue: mie,
    identity: Ho,
    kron: fie,
    largerEq: uf,
    leftShift: pie,
    matrixFromColumns: F2,
    nthRoot: yie,
    ones: wie,
    resize: gie,
    rightArithShift: _ie,
    round: rt,
    smaller: ua,
    subtract: kt,
    to: bie,
    unequal: Cie,
    usolve: O2,
    xor: Sie,
    add: ft,
    atan2: xie,
    bitAnd: Aie,
    bitXor: Eie,
    catalan: kie,
    compare: Bs,
    compareText: Rk,
    cumsum: Tie,
    deepEqual: P2,
    diff: Nie,
    distance: Mie,
    dot: cf,
    equalText: Iie,
    floor: Lk,
    gcd: Die,
    hypot: Uie,
    larger: ca,
    log: B2,
    lsolve: Vk,
    matrixFromRows: Fie,
    min: Oie,
    mod: $k,
    multiply: Tt,
    nthRoots: Pie,
    or: Bie,
    partitionSelect: df,
    qr: R2,
    rightLogShift: Rie,
    slu: zk,
    subset: Ka,
    sum: L2,
    trace: Lie,
    usolveAll: Gk,
    zpk2tf: qie,
    bitOr: Vie,
    ceil: q2,
    compareNatural: fi,
    composition: $ie,
    cross: zie,
    det: jk,
    dotMultiply: Gie,
    fix: Wk,
    index: Yk,
    intersect: jie,
    invmod: Hie,
    lcm: Wie,
    log1p: Yie,
    lsolveAll: Jie,
    max: V2,
    setCartesian: Kie,
    setDistinct: Qie,
    setIsSubset: Zie,
    setPowerset: Xie,
    smallerEq: Ql,
    sort: eoe,
    and: toe,
    range: Zl,
    row: roe,
    setDifference: Jk,
    setMultiplicity: aoe,
    setSymDifference: Kk,
    column: Zk,
    inv: Rs,
    lup: Xk,
    pinv: noe,
    pow: wn,
    setIntersect: eT,
    setUnion: ioe,
    sqrtm: ooe,
    vacuumImpedance: soe,
    wienDisplacement: loe,
    atomicMass: uoe,
    bohrMagneton: coe,
    boltzmann: doe,
    conductanceQuantum: voe,
    coulomb: hoe,
    deuteronMass: moe,
    dotPow: foe,
    electricConstant: poe,
    elementaryCharge: yoe,
    expm: woe,
    faraday: goe,
    fft: tT,
    gamma: $2,
    gravitationConstant: _oe,
    hartreeEnergy: boe,
    ifft: Coe,
    klitzing: Soe,
    loschmidt: xoe,
    magneticConstant: Aoe,
    molarMass: Eoe,
    molarPlanckConstant: koe,
    neutronMass: Toe,
    nuclearMagneton: Noe,
    planckCharge: Moe,
    planckLength: Ioe,
    planckTemperature: Doe,
    protonMass: Uoe,
    quantumOfCirculation: Foe,
    reducedPlanckConstant: Ooe,
    rydberg: Poe,
    secondRadiation: Boe,
    speedOfLight: Roe,
    stefanBoltzmann: Loe,
    thomsonCrossSection: qoe,
    avogadro: Voe,
    bohrRadius: $oe,
    createUnit: zoe,
    divide: Tr,
    electronMass: Goe,
    factorial: cd,
    firstRadiation: joe,
    gravity: Hoe,
    inverseConductanceQuantum: Woe,
    lusolve: rT,
    magneticFluxQuantum: Yoe,
    molarMassC12: Joe,
    multinomial: Koe,
    parse: Jn,
    permutations: Qoe,
    planckMass: Zoe,
    polynomialRoot: Xoe,
    resolve: yT,
    setSize: ese,
    simplifyConstant: H2,
    solveODE: tse,
    stirlingS2: aT,
    unit: rse,
    bellNumbers: ase,
    compile: bse,
    eigs: nT,
    fermiCoupling: nse,
    gasConstant: ise,
    leafCount: Cse,
    mean: iT,
    molarVolume: ose,
    planckConstant: sse,
    quantileSeq: lse,
    simplifyCore: W2,
    variance: z2,
    classicalElectronRadius: use,
    evaluate: Fr,
    help: Sse,
    median: oT,
    simplify: vf,
    symbolicEqual: xse,
    corr: cse,
    freqz: dse,
    mad: vse,
    parser: Ase,
    rationalize: Ese,
    std: hse,
    zeta: mse,
    derivative: kse,
    norm: G2,
    rotationMatrix: sT,
    kldivergence: fse,
    planckTime: pse,
    schur: lT,
    rotate: yse,
    sylvester: uT,
    lyap: wse,
    config: fe
});
Ie(pu, fu, {
    filter: oae({
        typed: ee
    }),
    forEach: uae({
        typed: ee
    }),
    map: fae({
        typed: ee
    }),
    apply: eae({
        isInteger: ka,
        typed: ee
    }),
    concat: Pae({
        isInteger: ka,
        matrix: ke,
        typed: ee
    }),
    max: wae({
        config: fe,
        larger: ca,
        numeric: Ln,
        typed: ee
    }),
    print: Zae({
        add: ft,
        matrix: ke,
        typed: ee,
        zeros: va
    }),
    diff: Rae({
        bignumber: qa,
        matrix: ke,
        number: Hi,
        subtract: kt,
        typed: ee
    }),
    min: xae({
        config: fe,
        numeric: Ln,
        smaller: ua,
        typed: ee
    }),
    subset: Uae({
        add: ft,
        matrix: ke,
        typed: ee,
        zeros: va
    }),
    cumsum: Yae({
        add: ft,
        typed: ee,
        unaryPlus: k2
    }),
    index: vae({
        Index: Kr,
        getMatrixDataType: N2
    }),
    sum: zae({
        add: ft,
        config: fe,
        numeric: Ln,
        typed: ee
    }),
    range: kae({
        bignumber: qa,
        matrix: ke,
        add: ft,
        config: fe,
        isPositive: Fs,
        larger: ca,
        largerEq: uf,
        smaller: ua,
        smallerEq: Ql,
        typed: ee
    }),
    row: Mae({
        Index: Kr,
        matrix: ke,
        range: Zl,
        typed: ee
    }),
    column: aae({
        Index: Kr,
        matrix: ke,
        range: Zl,
        typed: ee
    }),
    mean: bae({
        add: ft,
        divide: Tr,
        typed: ee
    }),
    quantileSeq: Hae({
        add: ft,
        bignumber: qa,
        compare: Bs,
        divide: Tr,
        isInteger: ka,
        larger: ca,
        multiply: Tt,
        partitionSelect: df,
        smaller: ua,
        smallerEq: Ql,
        subtract: kt,
        typed: ee
    }),
    variance: Kae({
        add: ft,
        apply: D2,
        divide: Tr,
        isNaN: od,
        multiply: Tt,
        subtract: kt,
        typed: ee
    }),
    std: Vae({
        map: Os,
        sqrt: Yn,
        typed: ee,
        variance: z2
    })
});
Ie(cT, {
    BigNumber: Te,
    Complex: qt,
    Fraction: Ds,
    Matrix: nf,
    Node: ra,
    ObjectNode: yu,
    OperatorNode: Yi,
    ParenthesisNode: Ls,
    Range: sne,
    RelationalNode: dT,
    ResultSet: Ek,
    ArrayNode: wu,
    BlockNode: vT,
    ConditionalNode: hT,
    ConstantNode: Wo,
    DenseMatrix: ct,
    RangeNode: mT,
    Chain: j2,
    FunctionAssignmentNode: fT,
    SparseMatrix: Wi,
    IndexNode: gu,
    ImmutableDenseMatrix: qk,
    Index: Kr,
    AccessorNode: _u,
    AssignmentNode: pT,
    FibonacciHeap: Hk,
    Spa: Qk,
    Unit: Ke,
    SymbolNode: Yo,
    FunctionNode: Jo,
    Help: wT,
    Parser: gT
});

j2.createProxy(fu);
class Tse {
    constructor(t, r, a, n, i=9, o=0) {
        this.amount = t,
        this.rate = r * .0559,
        this.termInMonths = a,
        this.yearsUntilGraduation = n,
        this.gracePeriod = i,
        this.minimumPayment = o
    }
    calculateInterest(t) {
        return t * this.rate / 12
    }
    calculate() {
        var t = this.amount
          , r = 0
          , a = this.yearsUntilGraduation * 12 + this.gracePeriod
          , n = 0;
        return Array.range(1, a + 1).forEach(i => {
            var o = this.calculateInterest(this.amount);
            t += o
        }
        ),
        Array.range(1, this.termInMonths + 1).forEach(i => {
            var o = this.calculateInterest(t)
              , s = this.rate / 12 * t * Math.pow(1 + this.rate / 12, this.termInMonths - i + 1) / (Math.pow(1 + this.rate / 12, this.termInMonths - i + 1) - 1);
            return s < this.minimumPayment && (s = this.minimumPayment),
            t + o < s && (s = t + o),
            r < s && (r = s),
            t = t + o - s,
            t < 0 && (s = t + this.minimumPayment),
            n = n + s,
            t > 0
        }
        ),
        {
            repaymentOption: "FD",
            term: this.termInMonths / 12,
            interestRate: rt(this.rate * 100, 2),
            numInSchoolPmts: a,
            monthlyInSchoolPmt: 0,
            numPostSchoolPmts: this.termInMonths,
            monthlyPostSchoolPmt: rt(r, 2),
            totalInterest: rt(n - this.amount, 2),
            totalCost: rt(n, 2)
        }
    }
}
let _T = class {
    constructor(t, r, a, n, i=9, o=0, s=25) {
        this.amount = t,
        this.rate = r * .0559,
        this.termInMonths = a,
        this.yearsUntilGraduation = n,
        this.gracePeriod = i,
        this.minimumPayment = o,
        this.flatPay = s
    }
    calculateInterest(t) {
        return t * this.rate / 12
    }
    calculate() {
        var t = this.amount
          , r = this.yearsUntilGraduation * 12 + this.gracePeriod
          , a = 0
          , n = 0
          , i = 0;
        return Array.range(1, r + 1).forEach(o => {
            var s = this.calculateInterest(this.amount);
            s < this.flatPay ? t += s - this.flatPay : n += s - this.flatPay,
            i += this.flatPay
        }
        ),
        n > 0 && (t += n),
        Array.range(1, this.termInMonths + 1).forEach(o => {
            var s = this.calculateInterest(t)
              , l = this.rate / 12 * t * Math.pow(1 + this.rate / 12, this.termInMonths - o + 1) / (Math.pow(1 + this.rate / 12, this.termInMonths - o + 1) - 1);
            return l < this.minimumPayment && (l = this.minimumPayment),
            t + s < l && (l = t + s),
            a < l && (a = l),
            t = t + s - l,
            t < 0 && (l = t + this.minimumPayment),
            i = i + l,
            t > 0
        }
        ),
        {
            repaymentOption: "FP",
            term: this.termInMonths / 12,
            interestRate: rt(this.rate * 100, 2),
            numInSchoolPmts: r,
            monthlyInSchoolPmt: this.flatPay,
            numPostSchoolPmts: this.termInMonths,
            monthlyPostSchoolPmt: rt(a, 2),
            totalInterest: rt(i - this.amount, 2),
            totalCost: rt(i, 2)
        }
    }
}
  , bT = class {
    constructor(t, r, a, n, i=9, o=0) {
        this.amount = t,
        this.rate = r * 0.0559,
        this.termInMonths = a,
        this.yearsUntilGraduation = n,
        this.gracePeriod = i,
        this.minimumPayment = o
    }
    calculateInterest(t) {
        return t * this.rate / 12
    }
    calculate() {
        var t = this.amount
          , r = this.yearsUntilGraduation * 12 + this.gracePeriod
          , a = 0
          , n = 0
          , i = 0;
        return Array.range(1, this.termInMonths + 1).forEach(o => {
            var s = this.calculateInterest(t)
              , l = this.rate / 12 * t * Math.pow(1 + this.rate / 12, this.termInMonths - o + 1) / (Math.pow(1 + this.rate / 12, this.termInMonths - o + 1) - 1);
            return l < this.minimumPayment && (l = this.minimumPayment),
            t + s < l && (l = t + s),
            a < l && (a = l),
            t = t + s - l,
            t < 0 && (l = t + this.minimumPayment),
            i = i + l,
            n = o,
            t <= 0 && n < this.termInMonths && (r = o,
            a = 0,
            n = 0),
            t > 0
        }
        ),
        {
            repaymentOption: "PI",
            term: this.termInMonths / 12,
            interestRate: rt(this.rate * 100, 2),
            numInSchoolPmts: r,
            monthlyInSchoolPmt: rt(a, 2),
            numPostSchoolPmts: n - r,
            monthlyPostSchoolPmt: rt(a, 2),
            totalInterest: rt(i - this.amount, 2),
            totalCost: rt(i, 2)
        }
    }
}
  , Nse = class {
    constructor(t, r, a, n, i=9, o=0) {
        this.amount = t,
        this.rate = r * .01,
        this.termInMonths = a,
        this.yearsUntilGraduation = n,
        this.gracePeriod = i,
        this.minimumPayment = o
    }
    calculateInterest(t) {
        return t * this.rate / 12
    }
    calculate() {
        var t = this.amount
          , r = 0
          , a = this.yearsUntilGraduation * 12 + this.gracePeriod
          , n = 0
          , i = 0;
        return Array.range(1, a + 1).forEach(o => {
            var s = this.calculateInterest(this.amount);
            r < s && (r = s),
            i += s
        }
        ),
        Array.range(1, this.termInMonths + 1).forEach(o => {
            var s = this.calculateInterest(t)
              , l = this.rate / 12 * t * Math.pow(1 + this.rate / 12, this.termInMonths - o + 1) / (Math.pow(1 + this.rate / 12, this.termInMonths - o + 1) - 1);
            return l < this.minimumPayment && (l = this.minimumPayment),
            t + s < l && (l = t + s),
            n < l && (n = l),
            t = t + s - l,
            t < 0 && (l = t + this.minimumPayment),
            i = i + l,
            t > 0
        }
        ),
        {
            repaymentOption: "IO",
            term: this.termInMonths / 12,
            interestRate: rt(this.rate * 100, 2),
            numInSchoolPmts: a,
            monthlyInSchoolPmt: rt(r, 2),
            numPostSchoolPmts: this.termInMonths,
            monthlyPostSchoolPmt: rt(n, 2),
            totalInterest: rt(i - this.amount, 2),
            totalCost: rt(i, 2)
        }
    }
}
;
Array.range = (e, t) => Array.from({
    length: t - e
}, (r, a) => a + e);
function Mse({rates: e, amount: t, term: r, rateType: a, repaymentOption: n, yearsUntilGraduation: i, gracePeriod: o=6}) {
    const s = t * 1e3
      , l = r * 12
      , u = {
        FD: Tse,
        FP: _T,
        PI: bT,
        IO: Nse
    };
    return new u[n](s,e[a][n][l],l,i,o).calculate()
}
function lx({amount: e, rate: t, term: r, yearsUntilGraduation: a, gracePeriod: n=6, inSchoolPayment: i, repaymentOption: o}) {
    const s = r * 12;
    return o == "PI" ? new bT(e,t,s,a,n).calculate() : new _T(e,t,s,a,n,0,i).calculate()
}
const Ise = e => {
    const t = {
        min: 1e3,
        max: 4e5
    }
      , r = parseFloat(e);
    return r < t.min || r > t.max ? "Loan amount must be between KES 1,000 and KES 400,000" : !0
}
  , Dse = e => {
    const t = {
        min: 1,
        max: 10
    }
      , r = parseInt(e);
    return r < t.min || r > t.max ? "Loan term must be between 1 and 10 years" : !0
}
  , Use = e => {
    const t = {
        min: 5,
        max: 32
    }
      , r = parseFloat(e);
    return r < t.min || r > t.max ? "Interest rate must be between 5% and 32%" : !0
}
  , Fse = e => parseInt(e) > 10 ? "Years in school must not exceed 10" : !0
  , Ose = e => !0
  , Vu = {
    amount: Ise,
    term: Dse,
    rate: Use,
    yearsUntilGraduation: Fse,
    inSchoolPayment: Ose
}
  , gn = ({sourceCode: e}) => {
    const t = _E[e]
      , r = {
        type: "event",
        eventAction: "Form Field - interaction",
        eventDimensions: {
            source_code: e,
            product_type: t
        }
    };
    return {
        sendEvent: n => {
            const i = {
                ...r,
                eventLabel: `${t} Calculator > ${n}`
            };
            return mn(i)
        }
    }
}
  , Pse = q.forwardRef(function({state: t, setResults: r}, a) {
    var p, f, _, y, g;
    const [n,i] = q.useState("")
      , {control: o, handleSubmit: s, setError: l, setValue: u, reset: c, formState: {errors: d}} = Cr()
      , {sendEvent: v} = gn({
        sourceCode: t.sourceCode
    })
      , h = q.useCallback(m => {
        v("Calculate");
        const w = Object.keys(m).reduce( (b, x) => ({
            ...b,
            [x]: parseFloat(m[x]) || 0
        }), {});
        if (w.term < w.yearsUntilGraduation) {
            l("term", {
                type: "custom",
                message: "Loan term must be greater than years remaining in school."
            }),
            l("yearsUntilGraduation", {
                type: "custom",
                message: "Years remaining in school must be less than the loan term."
            });
            return
        }
        const C = lx({
            ...w,
            repaymentOption: "PI"
        });
        if (w.inSchoolPayment < C.monthlyInSchoolPmt) {
            const b = lx(w);
            return i(""),
            r({
                ...w,
                amount: w.amount / 1e3,
                results: b
            })
        }
        return u("inSchoolPayment", C.monthlyInSchoolPmt),
        i("Your in-school payment has been updated to the full principal + interest amount based on the loan term you picked."),
        r({
            ...w,
            amount: w.amount / 1e3,
            results: C
        })
    }
    , [r, i, v]);
    return q.useEffect( () => {
        t.results || c()
    }
    , [t]),
    S.jsxs("div", {
        className: "calculator-section__input-column",
        ref: a,
        children: [S.jsx("h4", {
            className: "h4",
            children: "Loan Details"
        }), S.jsx("div", {
            className: "calculator-section__input-column-container",
            children: S.jsxs("div", {
                className: "calculator-section__inputs-outer-container",
                children: [S.jsxs("div", {
                    className: "calculator-section__generic-inputs-container",
                    children: [S.jsx(Ee, {
                        control: o,
                        type: "number",
                        name: "amount",
                        label: "Loan Amount*",
                        value: t.amount,
                        placeholder: "KES 0",
                        mask: _m,
                        errors: d.amount,
                        customValidate: Vu.amount,
                        message: (p = d.amount) == null ? void 0 : p.message,
                        tooltipText: "The total amount of money you need to borrow to cover the cost of tuition, room and board, and other college expenses. If you're not sure how much you need to borrow, check out the chart below for national averages.",
                        onBlur: () => v("Loan Amount"),
                        isRequired: !0
                    }), S.jsx(Ee, {
                        control: o,
                        type: "text",
                        name: "term",
                        label: "Loan Term*",
                        placeholder: "0",
                        value: t.term,
                        mask: M_,
                        errors: d.term,
                        customValidate: Vu.term,
                        message: (f = d.term) == null ? void 0 : f.message,
                        tooltipText: "How many years you plan to take to pay back the loan once you're in full repayment. 10 years is the federal standard.",
                        onBlur: () => v("Loan Term"),
                        isRequired: !0
                    }), S.jsx(Ee, {
                        control: o,
                        type: "text",
                        name: "rate",
                        label: "Interest Rate*",
                        placeholder: "0%",
                        value: t.rate,
                        mask: $D,
                        errors: d.rate,
                        customValidate: Vu.rate,
                        message: (_ = d.rate) == null ? void 0 : _.message,
                        tooltipText: "Enter an interest rate to get a general idea of how much you can afford to borrow. As an example, Federal interest rates for undergraduate loans are around 4.53%.",
                        onBlur: () => v("Interest Rate"),
                        isRequired: !0
                    }), S.jsx(Ee, {
                        control: o,
                        type: "text",
                        name: "yearsUntilGraduation",
                        label: "Years Remaining in School*",
                        placeholder: "0 years",
                        value: 0,
                        mask: M_,
                        errors: d.yearsUntilGraduation,
                        customValidate: Vu.yearsUntilGraduation,
                        tooltipText: "How many years in school you have remaining.",
                        message: (y = d.yearsUntilGraduation) == null ? void 0 : y.message,
                        onBlur: () => v("Years Until Graduation")
                    }), S.jsx(Ee, {
                        control: o,
                        type: "text",
                        name: "inSchoolPayment",
                        label: "Monthly Payments in School*",
                        placeholder: "KES 0",
                        value: 0,
                        mask: E3,
                        errors: d.inSchoolPayment,
                        customValidate: Vu.inSchoolPayment,
                        message: n || ((g = d.inSchoolPayment) == null ? void 0 : g.message),
                        tooltipText: "See how making payments in school can help you save money by reducing the total cost of a student loan. In-school payments cannot exceed the calculated full principal + interest amount.",
                        onBlur: () => v("Monthly Payments In School")
                    })]
                }), S.jsxs("div", {
                    className: "calculator-section__generic-inputs-container",
                    children: [S.jsx(Re, {
                        onClick: s(h, m => {
                            v("Calculate")
                        }
                        ),
                        class: "button button__dark-teal",
                        children: "Calculate"
                    }), S.jsxs("p", {
                        className: "p-xsmall",
                        children: ["*For more personalized results, ", S.jsx(Ga, {
                            href: "/calculators/",
                            label: "estimate a loan with Afri Fund Universty Lender"
                        })]
                    })]
                })]
            })
        })]
    })
})
  , Y2 = ToggleButton = ({options: e, value: t, onToggle: r}) => {
    const a = n => {
        r(n)
    }
    ;
    return S.jsx("div", {
        className: "toggle-button__container",
        children: e.map(n => S.jsx(Re, {
            className: `toggle-button__button${t === n.value ? " toggle-button__selected" : ""}`,
            onClick: () => a(n.value),
            children: S.jsx("div", {
                children: n.label
            })
        }, n.value))
    })
}
  , Bse = e => ({
    setDefaults: t => e({
        type: "SET_DEFAULTS",
        payload: t
    }),
    sourceCode: t => e({
        type: "SET_SOURCE_CODE",
        payload: t
    }),
    rates: t => e({
        type: "SET_RATES",
        payload: t
    }),
    amount: t => e({
        type: "SET_AMOUNT",
        payload: t
    }),
    yearsUntilGraduation: t => e({
        type: "SET_YEARS_TO_GRADUATE",
        payload: t
    }),
    rateType: t => e({
        type: "SET_RATE_TYPE",
        payload: t
    }),
    term: t => e({
        type: "SET_TERM",
        payload: t
    }),
    repaymentOption: t => e({
        type: "SET_REPAYMENT_OPTION",
        payload: t
    }),
    incrementVal: t => e({
        type: "SET_INCREMENT_VALUE",
        payload: t
    })
})
  , dd = new Intl.NumberFormat("en-KE", {
    style: "currency",
    currency: "KES"
})
  , Rse = LoanAmountDisplay = ({totalInterest: e, totalCost: t}) => {
    const r = 100 - e / t * 100;
    return S.jsx("div", {
        className: "loan-amount-display__container",
        children: S.jsxs("svg", {
            className: "loan-amount-display__svg",
            viewBox: "0 0 314 314",
            children: [S.jsxs("mask", {
                id: "mask",
                children: [S.jsx("rect", {
                    width: "100%",
                    height: "100%",
                    fill: "white"
                }), S.jsx("rect", {
                    x: "86%",
                    y: "46%",
                    width: "28",
                    height: "10"
                })]
            }), S.jsx("circle", {
                id: "outer",
                cx: "50%",
                cy: "50%",
                r: "125"
            }), S.jsx("circle", {
                id: "inner",
                style: {
                    "--percentage": r
                },
                pathLength: "100",
                cx: "50%",
                cy: "50%",
                r: "125",
                mask: "url(#mask)"
            }), S.jsx("text", {
                x: "50%",
                y: "45%",
                "text-anchor": "middle",
                className: "loan-amount-display__copy",
                children: "Total Cost"
            }), S.jsx("text", {
                x: "50%",
                y: "55%",
                "text-anchor": "middle",
                className: "loan-amount-display__loan-amount",
                children: dd.format(t)
            })]
        })
    })
}
;
function Wh({type: e, title: t, amount: r}) {
    const a = {
        interest: "light-green",
        amount: "teal"
    };
    return S.jsxs("div", {
        className: "loan-breakdown-details",
        children: [S.jsx("div", {
            className: `loan-breakdown-details__cost-circle background-color__${a[e]}`
        }), S.jsxs("div", {
            children: [S.jsx("p", {
                className: "loan-breakdown-details__title",
                children: t
            }), !!r && S.jsx("p", {
                className: "loan-breakdown-details__label font-weight-700",
                children: dd.format(r)
            })]
        })]
    })
}
const ux = LoanPaymentBox = e => {
    const {backgroundColor: t, label: r, amount: a, term: n} = e;
    return S.jsxs("div", {
        className: `loan-amount-box background-color__${t}`,
        children: [S.jsx("p", {
            className: "loan-amount-box__label",
            children: r
        }), S.jsx("p", {
            className: "loan-amount-box__amount",
            children: dd.format(a)
        }), S.jsxs("p", {
            className: "loan-amount-box__term",
            children: [n, " Months"]
        })]
    })
}
  , CT = q.forwardRef(function({children: t, state: r, showNoResults: a}, n) {
    const {results: i, sourceCode: o} = r
      , [s,l] = q.useState("payments")
      , {sendEvent: u} = gn({
        sourceCode: o
    })
      , c = d => {
        l(d),
        u("Loan Breakdown Toggle")
    }
    ;
    return !i && !a ? null : S.jsxs("div", {
        className: "calculator-section__output-column",
        ref: n,
        children: [S.jsx("h4", {
            className: "h4",
            children: "Loan Breakdown"
        }), S.jsxs("div", {
            className: "calculator-section__output-column-container",
            children: [S.jsxs("div", {
                className: "calculator-section__output-results-container background-color__light-teal",
                children: [S.jsx("div", {
                    className: "calculator-section__output-results--top",
                    children: S.jsx(Y2, {
                        options: [{
                            label: "Payments",
                            value: "payments"
                        }, {
                            label: "Total Cost",
                            value: "cost"
                        }],
                        value: s,
                        onToggle: c
                    })
                }), S.jsxs("div", {
                    className: "calculator-section__output-results--bottom",
                    children: [a && !i && S.jsx("div", {
                        className: "calculator-section__no-output-results",
                        children: S.jsxs("div", {
                            className: "calculator-section__no-output-results-inner",
                            children: [S.jsx("div", {
                                className: "calculator-section__no-output-results--icon background-color__teal",
                                children: S.jsx("img", {
                                    src: "/static/assets/images/icons/calculator-white.svg"
                                })
                            }), S.jsx("p", {
                                className: "calculator-section__no-output-results--text",
                                children: "Your loan breakdown results will appear here..."
                            })]
                        })
                    }), !a && S.jsxs(S.Fragment, {
                        children: [s === "cost" && S.jsxs("div", {
                            className: "calculator-section__output-results--cost",
                            children: [S.jsx(Rse, {
                                totalInterest: i.totalInterest,
                                totalCost: i.totalCost
                            }), S.jsxs("div", {
                                className: "calculator-section__output-results--cost-details",
                                children: [S.jsx(Wh, {
                                    type: "interest",
                                    title: "Total Interest",
                                    amount: i.totalInterest
                                }), S.jsx(Wh, {
                                    type: "amount",
                                    title: "Loan Amount",
                                    amount: r.amount * 1e3 // TODO: UPDATE LATER
                                })]
                            })]
                        }), s === "payments" && S.jsxs("div", {
                            className: "calculator-section__output-results--payments",
                            children: [S.jsx(ux, {
                                backgroundColor: "white",
                                label: "In-School Monthly Payment",
                                amount: i.monthlyInSchoolPmt,
                                term: i.numInSchoolPmts
                            }), S.jsx(ux, {
                                backgroundColor: "dark-blue",
                                label: "Post-School Monthly Payment",
                                amount: i.monthlyPostSchoolPmt,
                                term: i.numPostSchoolPmts
                            })]
                        })]
                    })]
                })]
            }), S.jsx("div", {
                className: "calculator-section__output-column--bottom",
                children: t
            })]
        })]
    })
})
  , Np = {
    term: 10,
    sourceCode: "GENERIC"
};
function Lse() {
    const [e,t] = q.useState(Np)
      , r = q.useRef()
      , a = q.useRef()
      , n = o => {
        window.innerWidth < 768 && ii(a.current),
        t({
            ...Np,
            ...o
        })
    }
      , i = () => {
        window.innerWidth < 768 && ii(r.current),
        t(Np)
    }
    ;
    return S.jsx("section", {
        className: "calculator-section background-color__gray",
        children: S.jsx("div", {
            className: "section-container",
            children: S.jsx("div", {
                className: "calculator-section__outer-container background-color__white",
                children: S.jsxs("div", {
                    className: "calculator-section__container",
                    children: [S.jsx(Pse, {
                        ref: r,
                        setResults: n,
                        state: e
                    }), S.jsx(CT, {
                        ref: a,
                        state: e,
                        showNoResults: !e.results,
                        children: !!e.results && S.jsx("div", {
                            className: "calculator-section__output-column--bottom--center-button",
                            children: S.jsx(Re, {
                                onClick: i,
                                className: "button button__gray",
                                children: "Clear Calculator"
                            })
                        })
                    })]
                })
            })
        })
    })
}
const qse = {
    sourceCode: "CAIS01",
    amount: 10,
    yearsUntilGraduation: 4,
    rateType: "V",
    term: 15,
    repaymentOption: "FD",
    gracePeriod: 6,
    maxLoanAmount: 80
}
  , Vse = {
    sourceCode: "CAIS02",
    amount: 10,
    yearsUntilGraduation: 4,
    rateType: "V",
    term: 15,
    repaymentOption: "FD",
    gracePeriod: 9,
    maxLoanAmount: 80
}
  , $se = {
    sourceCode: "CAISMB",
    amount: 10,
    yearsUntilGraduation: 4,
    rateType: "V",
    term: 15,
    repaymentOption: "FD",
    gracePeriod: 9,
    maxLoanAmount: 150
}
  , zse = {
    sourceCode: "CAISSM",
    amount: 10,
    yearsUntilGraduation: 4,
    rateType: "V",
    term: 15,
    repaymentOption: "FD",
    gracePeriod: 9,
    maxLoanAmount: 150
}
  , Gse = {
    sourceCode: "CAISDE",
    amount: 10,
    yearsUntilGraduation: 4,
    rateType: "V",
    term: 15,
    repaymentOption: "FD",
    gracePeriod: 12,
    maxLoanAmount: 150
}
  , jse = {
    sourceCode: "CAISMD",
    amount: 10,
    yearsUntilGraduation: 4,
    rateType: "V",
    term: 15,
    repaymentOption: "FD",
    gracePeriod: 36,
    maxLoanAmount: 150
}
  , Hse = {
    sourceCode: "CAISLW",
    amount: 10,
    yearsUntilGraduation: 4,
    rateType: "V",
    term: 15,
    repaymentOption: "FD",
    gracePeriod: 9,
    maxLoanAmount: 150
}
  , Wse = {
    sourceCode: "CAISGH",
    amount: 10,
    yearsUntilGraduation: 4,
    rateType: "V",
    term: 15,
    repaymentOption: "FD",
    gracePeriod: 9,
    maxLoanAmount: 150
}
  , Yse = {
    sourceCode: "CAIS03",
    amount: 10,
    yearsUntilGraduation: 4,
    rateType: "V",
    term: 15,
    repaymentOption: "FD",
    gracePeriod: 6,
    maxLoanAmount: 80
}
  , Jse = {
    sourceCode: "CAPA01",
    amount: 10,
    yearsUntilGraduation: 4,
    rateType: "V",
    term: 15,
    repaymentOption: "PI",
    gracePeriod: 0,
    incrementVal: 0,
    maxLoanAmount: 80
}
  , Yh = {
    sourceCode: "CARF01",
    loanType: "IS",
    maxLoanAmount: 150,
    view: "calculate",
    calculateStep: "current",
    previousStep: "current",
    multiLoanInformation: [{
        balance: "",
        payoffDate: "",
        monthlyPayment: "",
        errors: {}
    }],
    currentLoanInformation: {
        validMonthlyPayment: !0,
        amount: 15,
        monthlyPayment: 250,
        yearsRemaining: 10
    },
    newLoanInformation: {
        repaymentOption: "PI",
        creditRating: "tier1",
        term: 15,
        rateType: "V",
        rates: null,
        amount: 15
    },
    displayType: "monthlyPayment"
}
  , dc = {
    CAIS01: qse,
    CAIS02: Vse,
    CAISMB: $se,
    CAISSM: zse,
    CAISDE: Gse,
    CAISMD: jse,
    CAISLW: Hse,
    CAISGH: Wse,
    CAIS03: Yse,
    CAPA01: Jse,
    CARF01: Yh
};
class Kse {
    constructor(t, r, a, n, i, o=9, s=0) {
        this.amount = t,
        this.rate = r * .01,
        this.termInMonths = a,
        this.yearsUntilGraduation = n,
        this.gracePeriod = o,
        this.minimumPayment = s,
        this.incrementVal = i
    }
    calculateInterest(t) {
        return t * this.rate / 12
    }
    calculate() {
        var t = this.amount
          , r = this.yearsUntilGraduation * 12 + this.gracePeriod
          , a = 0
          , n = 0
          , i = 0
          , o = 0
          , s = 0;
        return Array.range(1, r + 1).forEach(l => {
            var u = this.calculateInterest(this.amount);
            o < u && (o = u),
            s = o + this.incrementVal
        }
        ),
        Array.range(1, r + 1).forEach(l => {
            var u = this.calculateInterest(this.amount);
            u < s ? t += u - s : n += u - s,
            i += s
        }
        ),
        n > 0 && (t += n),
        Array.range(1, this.termInMonths + 1).forEach(l => {
            var u = this.calculateInterest(t)
              , c = this.rate / 12 * t * Math.pow(1 + this.rate / 12, this.termInMonths - l + 1) / (Math.pow(1 + this.rate / 12, this.termInMonths - l + 1) - 1);
            return c < this.minimumPayment && (c = this.minimumPayment),
            t + u < c && (c = t + u),
            a < c && (a = c),
            t = t + u - c,
            t < 0 && (c = t + this.minimumPayment),
            i = i + c,
            t > 0
        }
        ),
        {
            repaymentOption: "FP",
            term: this.termInMonths / 12,
            interestRate: rt(this.rate * 100, 2),
            numInSchoolPmts: r,
            monthlyInSchoolPmt: s,
            numPostSchoolPmts: this.termInMonths,
            monthlyPostSchoolPmt: rt(a, 2),
            totalInterest: rt(i - this.amount, 2),
            totalCost: rt(i, 2)
        }
    }
}
let Qse = class {
    constructor(t, r, a, n, i, o=9, s=0) {
        this.amount = t,
        this.rate = r * .01,
        this.termInMonths = a,
        this.yearsUntilGraduation = n,
        this.gracePeriod = o,
        this.minimumPayment = s
    }
    calculateInterest(t) {
        return t * this.rate / 12
    }
    calculate() {
        var t = this.amount
          , r = this.yearsUntilGraduation * 12 + this.gracePeriod
          , a = 0
          , n = 0
          , i = 0;
        return Array.range(1, this.termInMonths + 1).forEach(o => {
            var s = this.calculateInterest(t)
              , l = this.rate / 12 * t * Math.pow(1 + this.rate / 12, this.termInMonths - o + 1) / (Math.pow(1 + this.rate / 12, this.termInMonths - o + 1) - 1);
            return l < this.minimumPayment && (l = this.minimumPayment),
            t + s < l && (l = t + s),
            a < l && (a = l),
            t = t + s - l,
            t < 0 && (l = t + this.minimumPayment),
            i = i + l,
            n = o,
            t <= 0 && n < this.termInMonths && (r = o,
            a = 0,
            n = 0),
            t > 0
        }
        ),
        {
            repaymentOption: "PI",
            term: this.termInMonths / 12,
            interestRate: rt(this.rate * 100, 2),
            numInSchoolPmts: r,
            monthlyInSchoolPmt: rt(a, 2),
            numPostSchoolPmts: n - r,
            monthlyPostSchoolPmt: rt(a, 2),
            totalInterest: rt(i - this.amount, 2),
            totalCost: rt(i, 2)
        }
    }
}
  , Zse = class {
    constructor(t, r, a, n, i, o=9, s=0) {
        this.amount = t,
        this.rate = r * .01,
        this.termInMonths = a,
        this.yearsUntilGraduation = n,
        this.gracePeriod = o,
        this.minimumPayment = s
    }
    calculateInterest(t) {
        return t * this.rate / 12
    }
    calculate() {
        var t = this.amount
          , r = 0
          , a = this.yearsUntilGraduation * 12 + this.gracePeriod
          , n = 0
          , i = 0;
        return Array.range(1, a + 1).forEach(o => {
            var s = this.calculateInterest(this.amount);
            r < s && (r = s),
            i += s
        }
        ),
        Array.range(1, this.termInMonths + 1).forEach(o => {
            var s = this.calculateInterest(t)
              , l = this.rate / 12 * t * Math.pow(1 + this.rate / 12, this.termInMonths - o + 1) / (Math.pow(1 + this.rate / 12, this.termInMonths - o + 1) - 1);
            return l < this.minimumPayment && (l = this.minimumPayment),
            t + s < l && (l = t + s),
            n < l && (n = l),
            t = t + s - l,
            t < 0 && (l = t + this.minimumPayment),
            i = i + l,
            t > 0
        }
        ),
        {
            repaymentOption: "IO",
            term: this.termInMonths / 12,
            interestRate: rt(this.rate * 100, 2),
            numInSchoolPmts: a,
            monthlyInSchoolPmt: rt(r, 2),
            numPostSchoolPmts: this.termInMonths,
            monthlyPostSchoolPmt: rt(n, 2),
            totalInterest: rt(i - this.amount, 2),
            totalCost: rt(i, 2)
        }
    }
}
;
Array.range = (e, t) => Array.from({
    length: t - e
}, (r, a) => a + e);
function Xse({rates: e, amount: t, term: r, rateType: a, repaymentOption: n, yearsUntilGraduation: i, incrementVal: o=0, gracePeriod: s}) {
    t = t * 1e3;
    const l = r * 12
      , u = {
        FP: Kse,
        PI: Qse,
        IO: Zse
    };
    return new u[n](t,e[a][n][l],l,i,o,s).calculate()
}
const Mp = e => e.sourceCode === "CAPA01" ? Xse(e) : Mse(e)
  , no = e => {
    const {sourceCode: t, rates: r, amount: a, term: n, rateType: i, repaymentOption: o, yearsUntilGraduation: s, gracePeriod: l, incrementVal: u} = e
      , c = Mp({
        sourceCode: t,
        rates: r,
        amount: a,
        term: n,
        rateType: i,
        repaymentOption: o,
        yearsUntilGraduation: s,
        gracePeriod: l,
        incrementVal: u
    })
      , d = parseFloat(Mp({
        sourceCode: t,
        rates: r,
        amount: a,
        term: n,
        rateType: i,
        repaymentOption: "IO",
        yearsUntilGraduation: s,
        gracePeriod: l,
        incrementVal: u
    }).monthlyInSchoolPmt.toFixed(2))
      , v = parseFloat(Mp({
        sourceCode: t,
        rates: r,
        amount: a,
        term: n,
        rateType: i,
        repaymentOption: "PI",
        yearsUntilGraduation: s,
        gracePeriod: l,
        incrementVal: u
    }).monthlyInSchoolPmt.toFixed(2));
    return {
        ...e,
        results: c,
        ioAmount: d,
        piAmount: v
    }
}
;
function ST(e, t) {
    if (!e || !t)
        return null;
    const r = Object.keys(t.V.FP).map(i => parseInt(i));
    if (e !== "CAPA01")
        return r;
    const a = Math.min(...r) / 12
      , n = Math.max(...r) / 12;
    return {
        min: a,
        max: n
    }
}
const ele = ({sourceCode: e, term: t, amount: r}, a) => {
    const n = ST(e, a)
      , i = e === "CAPA01" || n.includes(t) ? t : dc[e].term
      , o = r > dc[e].maxLoanAmount ? dc[e].maxLoanAmount : r;
    return {
        term: i,
        amount: o,
        possibleTerms: n,
        rates: a
    }
}
;
function tle(e, t) {
    const {type: r, payload: a} = t;
    switch (r) {
    case "SET_DEFAULTS":
        return dc[a];
    case "SET_SOURCE_CODE":
        {
            const n = ST(a, e.rates)
              , {gracePeriod: i, maxLoanAmount: o} = dc[a]
              , s = {
                ...e,
                sourceCode: a,
                possibleTerms: n,
                gracePeriod: i,
                maxLoanAmount: o
            };
            return no(s)
        }
    case "SET_RATES":
        {
            const n = ele(e, a)
              , i = {
                ...e,
                ...n
            };
            return no(i)
        }
    case "SET_AMOUNT":
        {
            const n = {
                ...e,
                amount: a
            };
            return no(n)
        }
    case "SET_YEARS_TO_GRADUATE":
        {
            const n = {
                ...e,
                yearsUntilGraduation: a
            };
            return no(n)
        }
    case "SET_RATE_TYPE":
        {
            const n = {
                ...e,
                rateType: a
            };
            return no(n)
        }
    case "SET_TERM":
        {
            const n = {
                ...e,
                term: a
            };
            return no(n)
        }
    case "SET_REPAYMENT_OPTION":
        {
            const n = {
                ...e,
                repaymentOption: a
            };
            return no(n)
        }
    case "SET_INCREMENT_VALUE":
        {
            const n = {
                ...e,
                incrementVal: a
            };
            return no(n)
        }
    default:
        return e
    }
}
function hf({sourceCode: e, InputsComponent: t}) {
    const [r,a] = q.useReducer(tle, {})
      , n = q.useMemo( () => Bse(a), [a]);
    return q.useEffect( () => {
        e && n.setDefaults(e)
    }
    , []),
    q.useEffect( () => {
        (async () => {
            try {
                if (r != null && r.sourceCode) {
                    const i = await za.get(`${wE}/${r.sourceCode}.json`);
                    n.rates(i)
                }
            } catch (i) {
                console.error(i)
            }
        }
        )()
    }
    , [r.sourceCode]),
    r.rates ? S.jsx("section", {
        className: "calculator-section background-color__gray",
        children: S.jsx("div", {
            className: "section-container",
            children: S.jsx("div", {
                className: "calculator-section__outer-container background-color__white",
                children: S.jsxs("div", {
                    className: "calculator-section__container",
                    children: [S.jsx(t, {
                        handleUpdate: n,
                        state: r
                    }), S.jsxs(CT, {
                        state: r,
                        sourceCode: e,
                        children: [S.jsx("h4", {
                            className: "h4",
                            children: "Estimate Your Loan"
                        }), S.jsxs("div", {
                            className: "calculator-section__output-column--bottom-buttons",
                            children: [S.jsx(Ga, {
                                href: `/application/?SC=${r.sourceCode}`,
                                className: "button button__dark-teal",
                                label: "Apply Now"
                            }), S.jsx(Ga, {
                                href: `/prequalify/?SC=${r.sourceCode}`,
                                className: "button button__dark-blue",
                                label: "Prequalify"
                            })]
                        })]
                    })]
                })
            })
        })
    }) : null
}
var rle = ["defaultInputValue", "defaultMenuIsOpen", "defaultValue", "inputValue", "menuIsOpen", "onChange", "onInputChange", "onMenuClose", "onMenuOpen", "value"];
function xT(e) {
    var t = e.defaultInputValue
      , r = t === void 0 ? "" : t
      , a = e.defaultMenuIsOpen
      , n = a === void 0 ? !1 : a
      , i = e.defaultValue
      , o = i === void 0 ? null : i
      , s = e.inputValue
      , l = e.menuIsOpen
      , u = e.onChange
      , c = e.onInputChange
      , d = e.onMenuClose
      , v = e.onMenuOpen
      , h = e.value
      , p = Zr(e, rle)
      , f = q.useState(s !== void 0 ? s : r)
      , _ = qe(f, 2)
      , y = _[0]
      , g = _[1]
      , m = q.useState(l !== void 0 ? l : n)
      , w = qe(m, 2)
      , C = w[0]
      , b = w[1]
      , x = q.useState(h !== void 0 ? h : o)
      , E = qe(x, 2)
      , k = E[0]
      , A = E[1]
      , I = q.useCallback(function(B, D) {
        typeof u == "function" && u(B, D),
        A(B)
    }, [u])
      , T = q.useCallback(function(B, D) {
        var V;
        typeof c == "function" && (V = c(B, D)),
        g(V !== void 0 ? V : B)
    }, [c])
      , F = q.useCallback(function() {
        typeof v == "function" && v(),
        b(!0)
    }, [v])
      , R = q.useCallback(function() {
        typeof d == "function" && d(),
        b(!1)
    }, [d])
      , O = s !== void 0 ? s : y
      , M = l !== void 0 ? l : C
      , N = h !== void 0 ? h : k;
    return _e(_e({}, p), {}, {
        inputValue: O,
        menuIsOpen: M,
        onChange: I,
        onInputChange: T,
        onMenuClose: R,
        onMenuOpen: F,
        value: N
    })
}
function ale(e) {
    if (e.sheet)
        return e.sheet;
    for (var t = 0; t < document.styleSheets.length; t++)
        if (document.styleSheets[t].ownerNode === e)
            return document.styleSheets[t]
}
function nle(e) {
    var t = document.createElement("style");
    return t.setAttribute("data-emotion", e.key),
    e.nonce !== void 0 && t.setAttribute("nonce", e.nonce),
    t.appendChild(document.createTextNode("")),
    t.setAttribute("data-s", ""),
    t
}
var ile = function() {
    function e(r) {
        var a = this;
        this._insertTag = function(n) {
            var i;
            a.tags.length === 0 ? a.insertionPoint ? i = a.insertionPoint.nextSibling : a.prepend ? i = a.container.firstChild : i = a.before : i = a.tags[a.tags.length - 1].nextSibling,
            a.container.insertBefore(n, i),
            a.tags.push(n)
        }
        ,
        this.isSpeedy = r.speedy === void 0 ? !0 : r.speedy,
        this.tags = [],
        this.ctr = 0,
        this.nonce = r.nonce,
        this.key = r.key,
        this.container = r.container,
        this.prepend = r.prepend,
        this.insertionPoint = r.insertionPoint,
        this.before = null
    }
    var t = e.prototype;
    return t.hydrate = function(a) {
        a.forEach(this._insertTag)
    }
    ,
    t.insert = function(a) {
        this.ctr % (this.isSpeedy ? 65e3 : 1) === 0 && this._insertTag(nle(this));
        var n = this.tags[this.tags.length - 1];
        if (this.isSpeedy) {
            var i = ale(n);
            try {
                i.insertRule(a, i.cssRules.length)
            } catch {}
        } else
            n.appendChild(document.createTextNode(a));
        this.ctr++
    }
    ,
    t.flush = function() {
        this.tags.forEach(function(a) {
            return a.parentNode && a.parentNode.removeChild(a)
        }),
        this.tags = [],
        this.ctr = 0
    }
    ,
    e
}()
  , jr = "-ms-"
  , Jh = "-moz-"
  , It = "-webkit-"
  , AT = "comm"
  , J2 = "rule"
  , K2 = "decl"
  , ole = "@import"
  , ET = "@keyframes"
  , sle = "@layer"
  , lle = Math.abs
  , mf = String.fromCharCode
  , ule = Object.assign;
function cle(e, t) {
    return Or(e, 0) ^ 45 ? (((t << 2 ^ Or(e, 0)) << 2 ^ Or(e, 1)) << 2 ^ Or(e, 2)) << 2 ^ Or(e, 3) : 0
}
function kT(e) {
    return e.trim()
}
function dle(e, t) {
    return (e = t.exec(e)) ? e[0] : e
}
function Dt(e, t, r) {
    return e.replace(t, r)
}
function Sw(e, t) {
    return e.indexOf(t)
}
function Or(e, t) {
    return e.charCodeAt(t) | 0
}
function Pc(e, t, r) {
    return e.slice(t, r)
}
function ri(e) {
    return e.length
}
function Q2(e) {
    return e.length
}
function mv(e, t) {
    return t.push(e),
    e
}
function vle(e, t) {
    return e.map(t).join("")
}
var ff = 1
  , Xl = 1
  , TT = 0
  , Ia = 0
  , hr = 0
  , bu = "";
function pf(e, t, r, a, n, i, o) {
    return {
        value: e,
        root: t,
        parent: r,
        type: a,
        props: n,
        children: i,
        line: ff,
        column: Xl,
        length: o,
        return: ""
    }
}
function $u(e, t) {
    return ule(pf("", null, null, "", null, null, 0), e, {
        length: -e.length
    }, t)
}
function hle() {
    return hr
}
function mle() {
    return hr = Ia > 0 ? Or(bu, --Ia) : 0,
    Xl--,
    hr === 10 && (Xl = 1,
    ff--),
    hr
}
function Va() {
    return hr = Ia < TT ? Or(bu, Ia++) : 0,
    Xl++,
    hr === 10 && (Xl = 1,
    ff++),
    hr
}
function ui() {
    return Or(bu, Ia)
}
function Pv() {
    return Ia
}
function vd(e, t) {
    return Pc(bu, e, t)
}
function Bc(e) {
    switch (e) {
    case 0:
    case 9:
    case 10:
    case 13:
    case 32:
        return 5;
    case 33:
    case 43:
    case 44:
    case 47:
    case 62:
    case 64:
    case 126:
    case 59:
    case 123:
    case 125:
        return 4;
    case 58:
        return 3;
    case 34:
    case 39:
    case 40:
    case 91:
        return 2;
    case 41:
    case 93:
        return 1
    }
    return 0
}
function NT(e) {
    return ff = Xl = 1,
    TT = ri(bu = e),
    Ia = 0,
    []
}
function MT(e) {
    return bu = "",
    e
}
function Bv(e) {
    return kT(vd(Ia - 1, xw(e === 91 ? e + 2 : e === 40 ? e + 1 : e)))
}
function fle(e) {
    for (; (hr = ui()) && hr < 33; )
        Va();
    return Bc(e) > 2 || Bc(hr) > 3 ? "" : " "
}
function ple(e, t) {
    for (; --t && Va() && !(hr < 48 || hr > 102 || hr > 57 && hr < 65 || hr > 70 && hr < 97); )
        ;
    return vd(e, Pv() + (t < 6 && ui() == 32 && Va() == 32))
}
function xw(e) {
    for (; Va(); )
        switch (hr) {
        case e:
            return Ia;
        case 34:
        case 39:
            e !== 34 && e !== 39 && xw(hr);
            break;
        case 40:
            e === 41 && xw(e);
            break;
        case 92:
            Va();
            break
        }
    return Ia
}
function yle(e, t) {
    for (; Va() && e + hr !== 47 + 10; )
        if (e + hr === 42 + 42 && ui() === 47)
            break;
    return "/*" + vd(t, Ia - 1) + "*" + mf(e === 47 ? e : Va())
}
function wle(e) {
    for (; !Bc(ui()); )
        Va();
    return vd(e, Ia)
}
function gle(e) {
    return MT(Rv("", null, null, null, [""], e = NT(e), 0, [0], e))
}
function Rv(e, t, r, a, n, i, o, s, l) {
    for (var u = 0, c = 0, d = o, v = 0, h = 0, p = 0, f = 1, _ = 1, y = 1, g = 0, m = "", w = n, C = i, b = a, x = m; _; )
        switch (p = g,
        g = Va()) {
        case 40:
            if (p != 108 && Or(x, d - 1) == 58) {
                Sw(x += Dt(Bv(g), "&", "&\f"), "&\f") != -1 && (y = -1);
                break
            }
        case 34:
        case 39:
        case 91:
            x += Bv(g);
            break;
        case 9:
        case 10:
        case 13:
        case 32:
            x += fle(p);
            break;
        case 92:
            x += ple(Pv() - 1, 7);
            continue;
        case 47:
            switch (ui()) {
            case 42:
            case 47:
                mv(_le(yle(Va(), Pv()), t, r), l);
                break;
            default:
                x += "/"
            }
            break;
        case 123 * f:
            s[u++] = ri(x) * y;
        case 125 * f:
        case 59:
        case 0:
            switch (g) {
            case 0:
            case 125:
                _ = 0;
            case 59 + c:
                y == -1 && (x = Dt(x, /\f/g, "")),
                h > 0 && ri(x) - d && mv(h > 32 ? dx(x + ";", a, r, d - 1) : dx(Dt(x, " ", "") + ";", a, r, d - 2), l);
                break;
            case 59:
                x += ";";
            default:
                if (mv(b = cx(x, t, r, u, c, n, s, m, w = [], C = [], d), i),
                g === 123)
                    if (c === 0)
                        Rv(x, t, b, b, w, i, d, s, C);
                    else
                        switch (v === 99 && Or(x, 3) === 110 ? 100 : v) {
                        case 100:
                        case 108:
                        case 109:
                        case 115:
                            Rv(e, b, b, a && mv(cx(e, b, b, 0, 0, n, s, m, n, w = [], d), C), n, C, d, s, a ? w : C);
                            break;
                        default:
                            Rv(x, b, b, b, [""], C, 0, s, C)
                        }
            }
            u = c = h = 0,
            f = y = 1,
            m = x = "",
            d = o;
            break;
        case 58:
            d = 1 + ri(x),
            h = p;
        default:
            if (f < 1) {
                if (g == 123)
                    --f;
                else if (g == 125 && f++ == 0 && mle() == 125)
                    continue
            }
            switch (x += mf(g),
            g * f) {
            case 38:
                y = c > 0 ? 1 : (x += "\f",
                -1);
                break;
            case 44:
                s[u++] = (ri(x) - 1) * y,
                y = 1;
                break;
            case 64:
                ui() === 45 && (x += Bv(Va())),
                v = ui(),
                c = d = ri(m = x += wle(Pv())),
                g++;
                break;
            case 45:
                p === 45 && ri(x) == 2 && (f = 0)
            }
        }
    return i
}
function cx(e, t, r, a, n, i, o, s, l, u, c) {
    for (var d = n - 1, v = n === 0 ? i : [""], h = Q2(v), p = 0, f = 0, _ = 0; p < a; ++p)
        for (var y = 0, g = Pc(e, d + 1, d = lle(f = o[p])), m = e; y < h; ++y)
            (m = kT(f > 0 ? v[y] + " " + g : Dt(g, /&\f/g, v[y]))) && (l[_++] = m);
    return pf(e, t, r, n === 0 ? J2 : s, l, u, c)
}
function _le(e, t, r) {
    return pf(e, t, r, AT, mf(hle()), Pc(e, 2, -2), 0)
}
function dx(e, t, r, a) {
    return pf(e, t, r, K2, Pc(e, 0, a), Pc(e, a + 1, -1), a)
}
function Fl(e, t) {
    for (var r = "", a = Q2(e), n = 0; n < a; n++)
        r += t(e[n], n, e, t) || "";
    return r
}
function ble(e, t, r, a) {
    switch (e.type) {
    case sle:
        if (e.children.length)
            break;
    case ole:
    case K2:
        return e.return = e.return || e.value;
    case AT:
        return "";
    case ET:
        return e.return = e.value + "{" + Fl(e.children, a) + "}";
    case J2:
        e.value = e.props.join(",")
    }
    return ri(r = Fl(e.children, a)) ? e.return = e.value + "{" + r + "}" : ""
}
function Cle(e) {
    var t = Q2(e);
    return function(r, a, n, i) {
        for (var o = "", s = 0; s < t; s++)
            o += e[s](r, a, n, i) || "";
        return o
    }
}
function Sle(e) {
    return function(t) {
        t.root || (t = t.return) && e(t)
    }
}
function xle(e) {
    var t = Object.create(null);
    return function(r) {
        return t[r] === void 0 && (t[r] = e(r)),
        t[r]
    }
}
var Ale = function(t, r, a) {
    for (var n = 0, i = 0; n = i,
    i = ui(),
    n === 38 && i === 12 && (r[a] = 1),
    !Bc(i); )
        Va();
    return vd(t, Ia)
}
  , Ele = function(t, r) {
    var a = -1
      , n = 44;
    do
        switch (Bc(n)) {
        case 0:
            n === 38 && ui() === 12 && (r[a] = 1),
            t[a] += Ale(Ia - 1, r, a);
            break;
        case 2:
            t[a] += Bv(n);
            break;
        case 4:
            if (n === 44) {
                t[++a] = ui() === 58 ? "&\f" : "",
                r[a] = t[a].length;
                break
            }
        default:
            t[a] += mf(n)
        }
    while (n = Va());
    return t
}
  , kle = function(t, r) {
    return MT(Ele(NT(t), r))
}
  , vx = new WeakMap
  , Tle = function(t) {
    if (!(t.type !== "rule" || !t.parent || t.length < 1)) {
        for (var r = t.value, a = t.parent, n = t.column === a.column && t.line === a.line; a.type !== "rule"; )
            if (a = a.parent,
            !a)
                return;
        if (!(t.props.length === 1 && r.charCodeAt(0) !== 58 && !vx.get(a)) && !n) {
            vx.set(t, !0);
            for (var i = [], o = kle(r, i), s = a.props, l = 0, u = 0; l < o.length; l++)
                for (var c = 0; c < s.length; c++,
                u++)
                    t.props[u] = i[l] ? o[l].replace(/&\f/g, s[c]) : s[c] + " " + o[l]
        }
    }
}
  , Nle = function(t) {
    if (t.type === "decl") {
        var r = t.value;
        r.charCodeAt(0) === 108 && r.charCodeAt(2) === 98 && (t.return = "",
        t.value = "")
    }
};
function IT(e, t) {
    switch (cle(e, t)) {
    case 5103:
        return It + "print-" + e + e;
    case 5737:
    case 4201:
    case 3177:
    case 3433:
    case 1641:
    case 4457:
    case 2921:
    case 5572:
    case 6356:
    case 5844:
    case 3191:
    case 6645:
    case 3005:
    case 6391:
    case 5879:
    case 5623:
    case 6135:
    case 4599:
    case 4855:
    case 4215:
    case 6389:
    case 5109:
    case 5365:
    case 5621:
    case 3829:
        return It + e + e;
    case 5349:
    case 4246:
    case 4810:
    case 6968:
    case 2756:
        return It + e + Jh + e + jr + e + e;
    case 6828:
    case 4268:
        return It + e + jr + e + e;
    case 6165:
        return It + e + jr + "flex-" + e + e;
    case 5187:
        return It + e + Dt(e, /(\w+).+(:[^]+)/, It + "box-$1$2" + jr + "flex-$1$2") + e;
    case 5443:
        return It + e + jr + "flex-item-" + Dt(e, /flex-|-self/, "") + e;
    case 4675:
        return It + e + jr + "flex-line-pack" + Dt(e, /align-content|flex-|-self/, "") + e;
    case 5548:
        return It + e + jr + Dt(e, "shrink", "negative") + e;
    case 5292:
        return It + e + jr + Dt(e, "basis", "preferred-size") + e;
    case 6060:
        return It + "box-" + Dt(e, "-grow", "") + It + e + jr + Dt(e, "grow", "positive") + e;
    case 4554:
        return It + Dt(e, /([^-])(transform)/g, "$1" + It + "$2") + e;
    case 6187:
        return Dt(Dt(Dt(e, /(zoom-|grab)/, It + "$1"), /(image-set)/, It + "$1"), e, "") + e;
    case 5495:
    case 3959:
        return Dt(e, /(image-set\([^]*)/, It + "$1$`$1");
    case 4968:
        return Dt(Dt(e, /(.+:)(flex-)?(.*)/, It + "box-pack:$3" + jr + "flex-pack:$3"), /s.+-b[^;]+/, "justify") + It + e + e;
    case 4095:
    case 3583:
    case 4068:
    case 2532:
        return Dt(e, /(.+)-inline(.+)/, It + "$1$2") + e;
    case 8116:
    case 7059:
    case 5753:
    case 5535:
    case 5445:
    case 5701:
    case 4933:
    case 4677:
    case 5533:
    case 5789:
    case 5021:
    case 4765:
        if (ri(e) - 1 - t > 6)
            switch (Or(e, t + 1)) {
            case 109:
                if (Or(e, t + 4) !== 45)
                    break;
            case 102:
                return Dt(e, /(.+:)(.+)-([^]+)/, "$1" + It + "$2-$3$1" + Jh + (Or(e, t + 3) == 108 ? "$3" : "$2-$3")) + e;
            case 115:
                return ~Sw(e, "stretch") ? IT(Dt(e, "stretch", "fill-available"), t) + e : e
            }
        break;
    case 4949:
        if (Or(e, t + 1) !== 115)
            break;
    case 6444:
        switch (Or(e, ri(e) - 3 - (~Sw(e, "!important") && 10))) {
        case 107:
            return Dt(e, ":", ":" + It) + e;
        case 101:
            return Dt(e, /(.+:)([^;!]+)(;|!.+)?/, "$1" + It + (Or(e, 14) === 45 ? "inline-" : "") + "box$3$1" + It + "$2$3$1" + jr + "$2box$3") + e
        }
        break;
    case 5936:
        switch (Or(e, t + 11)) {
        case 114:
            return It + e + jr + Dt(e, /[svh]\w+-[tblr]{2}/, "tb") + e;
        case 108:
            return It + e + jr + Dt(e, /[svh]\w+-[tblr]{2}/, "tb-rl") + e;
        case 45:
            return It + e + jr + Dt(e, /[svh]\w+-[tblr]{2}/, "lr") + e
        }
        return It + e + jr + e + e
    }
    return e
}
var Mle = function(t, r, a, n) {
    if (t.length > -1 && !t.return)
        switch (t.type) {
        case K2:
            t.return = IT(t.value, t.length);
            break;
        case ET:
            return Fl([$u(t, {
                value: Dt(t.value, "@", "@" + It)
            })], n);
        case J2:
            if (t.length)
                return vle(t.props, function(i) {
                    switch (dle(i, /(::plac\w+|:read-\w+)/)) {
                    case ":read-only":
                    case ":read-write":
                        return Fl([$u(t, {
                            props: [Dt(i, /:(read-\w+)/, ":" + Jh + "$1")]
                        })], n);
                    case "::placeholder":
                        return Fl([$u(t, {
                            props: [Dt(i, /:(plac\w+)/, ":" + It + "input-$1")]
                        }), $u(t, {
                            props: [Dt(i, /:(plac\w+)/, ":" + Jh + "$1")]
                        }), $u(t, {
                            props: [Dt(i, /:(plac\w+)/, jr + "input-$1")]
                        })], n)
                    }
                    return ""
                })
        }
}
  , Ile = [Mle]
  , Dle = function(t) {
    var r = t.key;
    if (r === "css") {
        var a = document.querySelectorAll("style[data-emotion]:not([data-s])");
        Array.prototype.forEach.call(a, function(f) {
            var _ = f.getAttribute("data-emotion");
            _.indexOf(" ") !== -1 && (document.head.appendChild(f),
            f.setAttribute("data-s", ""))
        })
    }
    var n = t.stylisPlugins || Ile, i = {}, o, s = [];
    o = t.container || document.head,
    Array.prototype.forEach.call(document.querySelectorAll('style[data-emotion^="' + r + ' "]'), function(f) {
        for (var _ = f.getAttribute("data-emotion").split(" "), y = 1; y < _.length; y++)
            i[_[y]] = !0;
        s.push(f)
    });
    var l, u = [Tle, Nle];
    {
        var c, d = [ble, Sle(function(f) {
            c.insert(f)
        })], v = Cle(u.concat(n, d)), h = function(_) {
            return Fl(gle(_), v)
        };
        l = function(_, y, g, m) {
            c = g,
            h(_ ? _ + "{" + y.styles + "}" : y.styles),
            m && (p.inserted[y.name] = !0)
        }
    }
    var p = {
        key: r,
        sheet: new ile({
            key: r,
            container: o,
            nonce: t.nonce,
            speedy: t.speedy,
            prepend: t.prepend,
            insertionPoint: t.insertionPoint
        }),
        nonce: t.nonce,
        inserted: i,
        registered: {},
        insert: l
    };
    return p.sheet.hydrate(s),
    p
}
  , DT = Og
  , Ule = {
    $$typeof: !0,
    render: !0,
    defaultProps: !0,
    displayName: !0,
    propTypes: !0
}
  , Fle = {
    $$typeof: !0,
    compare: !0,
    defaultProps: !0,
    displayName: !0,
    propTypes: !0,
    type: !0
}
  , UT = {};
UT[DT.ForwardRef] = Ule;
UT[DT.Memo] = Fle;
var Ole = !0;
function Ple(e, t, r) {
    var a = "";
    return r.split(" ").forEach(function(n) {
        e[n] !== void 0 ? t.push(e[n] + ";") : a += n + " "
    }),
    a
}
var FT = function(t, r, a) {
    var n = t.key + "-" + r.name;
    (a === !1 || Ole === !1) && t.registered[n] === void 0 && (t.registered[n] = r.styles)
}
  , Ble = function(t, r, a) {
    FT(t, r, a);
    var n = t.key + "-" + r.name;
    if (t.inserted[r.name] === void 0) {
        var i = r;
        do
            t.insert(r === i ? "." + n : "", i, t.sheet, !0),
            i = i.next;
        while (i !== void 0)
    }
};
function Rle(e) {
    for (var t = 0, r, a = 0, n = e.length; n >= 4; ++a,
    n -= 4)
        r = e.charCodeAt(a) & 255 | (e.charCodeAt(++a) & 255) << 8 | (e.charCodeAt(++a) & 255) << 16 | (e.charCodeAt(++a) & 255) << 24,
        r = (r & 65535) * 1540483477 + ((r >>> 16) * 59797 << 16),
        r ^= r >>> 24,
        t = (r & 65535) * 1540483477 + ((r >>> 16) * 59797 << 16) ^ (t & 65535) * 1540483477 + ((t >>> 16) * 59797 << 16);
    switch (n) {
    case 3:
        t ^= (e.charCodeAt(a + 2) & 255) << 16;
    case 2:
        t ^= (e.charCodeAt(a + 1) & 255) << 8;
    case 1:
        t ^= e.charCodeAt(a) & 255,
        t = (t & 65535) * 1540483477 + ((t >>> 16) * 59797 << 16)
    }
    return t ^= t >>> 13,
    t = (t & 65535) * 1540483477 + ((t >>> 16) * 59797 << 16),
    ((t ^ t >>> 15) >>> 0).toString(36)
}
var Lle = {
    animationIterationCount: 1,
    aspectRatio: 1,
    borderImageOutset: 1,
    borderImageSlice: 1,
    borderImageWidth: 1,
    boxFlex: 1,
    boxFlexGroup: 1,
    boxOrdinalGroup: 1,
    columnCount: 1,
    columns: 1,
    flex: 1,
    flexGrow: 1,
    flexPositive: 1,
    flexShrink: 1,
    flexNegative: 1,
    flexOrder: 1,
    gridRow: 1,
    gridRowEnd: 1,
    gridRowSpan: 1,
    gridRowStart: 1,
    gridColumn: 1,
    gridColumnEnd: 1,
    gridColumnSpan: 1,
    gridColumnStart: 1,
    msGridRow: 1,
    msGridRowSpan: 1,
    msGridColumn: 1,
    msGridColumnSpan: 1,
    fontWeight: 1,
    lineHeight: 1,
    opacity: 1,
    order: 1,
    orphans: 1,
    tabSize: 1,
    widows: 1,
    zIndex: 1,
    zoom: 1,
    WebkitLineClamp: 1,
    fillOpacity: 1,
    floodOpacity: 1,
    stopOpacity: 1,
    strokeDasharray: 1,
    strokeDashoffset: 1,
    strokeMiterlimit: 1,
    strokeOpacity: 1,
    strokeWidth: 1
}
  , qle = /[A-Z]|^ms/g
  , Vle = /_EMO_([^_]+?)_([^]*?)_EMO_/g
  , OT = function(t) {
    return t.charCodeAt(1) === 45
}
  , hx = function(t) {
    return t != null && typeof t != "boolean"
}
  , Ip = xle(function(e) {
    return OT(e) ? e : e.replace(qle, "-$&").toLowerCase()
})
  , mx = function(t, r) {
    switch (t) {
    case "animation":
    case "animationName":
        if (typeof r == "string")
            return r.replace(Vle, function(a, n, i) {
                return ai = {
                    name: n,
                    styles: i,
                    next: ai
                },
                n
            })
    }
    return Lle[t] !== 1 && !OT(t) && typeof r == "number" && r !== 0 ? r + "px" : r
};
function Rc(e, t, r) {
    if (r == null)
        return "";
    if (r.__emotion_styles !== void 0)
        return r;
    switch (typeof r) {
    case "boolean":
        return "";
    case "object":
        {
            if (r.anim === 1)
                return ai = {
                    name: r.name,
                    styles: r.styles,
                    next: ai
                },
                r.name;
            if (r.styles !== void 0) {
                var a = r.next;
                if (a !== void 0)
                    for (; a !== void 0; )
                        ai = {
                            name: a.name,
                            styles: a.styles,
                            next: ai
                        },
                        a = a.next;
                var n = r.styles + ";";
                return n
            }
            return $le(e, t, r)
        }
    case "function":
        {
            if (e !== void 0) {
                var i = ai
                  , o = r(e);
                return ai = i,
                Rc(e, t, o)
            }
            break
        }
    }
    if (t == null)
        return r;
    var s = t[r];
    return s !== void 0 ? s : r
}
function $le(e, t, r) {
    var a = "";
    if (Array.isArray(r))
        for (var n = 0; n < r.length; n++)
            a += Rc(e, t, r[n]) + ";";
    else
        for (var i in r) {
            var o = r[i];
            if (typeof o != "object")
                t != null && t[o] !== void 0 ? a += i + "{" + t[o] + "}" : hx(o) && (a += Ip(i) + ":" + mx(i, o) + ";");
            else if (Array.isArray(o) && typeof o[0] == "string" && (t == null || t[o[0]] === void 0))
                for (var s = 0; s < o.length; s++)
                    hx(o[s]) && (a += Ip(i) + ":" + mx(i, o[s]) + ";");
            else {
                var l = Rc(e, t, o);
                switch (i) {
                case "animation":
                case "animationName":
                    {
                        a += Ip(i) + ":" + l + ";";
                        break
                    }
                default:
                    a += i + "{" + l + "}"
                }
            }
        }
    return a
}
var fx = /label:\s*([^\s;\n{]+)\s*(;|$)/g, ai, PT = function(t, r, a) {
    if (t.length === 1 && typeof t[0] == "object" && t[0] !== null && t[0].styles !== void 0)
        return t[0];
    var n = !0
      , i = "";
    ai = void 0;
    var o = t[0];
    o == null || o.raw === void 0 ? (n = !1,
    i += Rc(a, r, o)) : i += o[0];
    for (var s = 1; s < t.length; s++)
        i += Rc(a, r, t[s]),
        n && (i += o[s]);
    fx.lastIndex = 0;
    for (var l = "", u; (u = fx.exec(i)) !== null; )
        l += "-" + u[1];
    var c = Rle(i) + l;
    return {
        name: c,
        styles: i,
        next: ai
    }
}, zle = function(t) {
    return t()
}, Gle = qp["useInsertionEffect"] ? qp["useInsertionEffect"] : !1, jle = Gle || zle, Z2 = {}.hasOwnProperty, BT = q.createContext(typeof HTMLElement < "u" ? Dle({
    key: "css"
}) : null);
BT.Provider;
var Hle = function(t) {
    return q.forwardRef(function(r, a) {
        var n = q.useContext(BT);
        return t(r, n, a)
    })
}
  , Wle = q.createContext({})
  , Aw = "__EMOTION_TYPE_PLEASE_DO_NOT_USE__"
  , Yle = function(t, r) {
    var a = {};
    for (var n in r)
        Z2.call(r, n) && (a[n] = r[n]);
    return a[Aw] = t,
    a
}
  , Jle = function(t) {
    var r = t.cache
      , a = t.serialized
      , n = t.isStringTag;
    return FT(r, a, n),
    jle(function() {
        return Ble(r, a, n)
    }),
    null
}
  , Kle = Hle(function(e, t, r) {
    var a = e.css;
    typeof a == "string" && t.registered[a] !== void 0 && (a = t.registered[a]);
    var n = e[Aw]
      , i = [a]
      , o = "";
    typeof e.className == "string" ? o = Ple(t.registered, i, e.className) : e.className != null && (o = e.className + " ");
    var s = PT(i, void 0, q.useContext(Wle));
    o += t.key + "-" + s.name;
    var l = {};
    for (var u in e)
        Z2.call(e, u) && u !== "css" && u !== Aw && (l[u] = e[u]);
    return l.ref = r,
    l.className = o,
    q.createElement(q.Fragment, null, q.createElement(Jle, {
        cache: t,
        serialized: s,
        isStringTag: typeof n == "string"
    }), q.createElement(n, l))
})
  , Qle = Kle
  , Je = function(t, r) {
    var a = arguments;
    if (r == null || !Z2.call(r, "css"))
        return q.createElement.apply(void 0, a);
    var n = a.length
      , i = new Array(n);
    i[0] = Qle,
    i[1] = Yle(t, r);
    for (var o = 2; o < n; o++)
        i[o] = a[o];
    return q.createElement.apply(null, i)
};
function X2() {
    for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++)
        t[r] = arguments[r];
    return PT(t)
}
var Zle = function() {
    var t = X2.apply(void 0, arguments)
      , r = "animation-" + t.name;
    return {
        name: r,
        styles: "@keyframes " + r + "{" + t.styles + "}",
        anim: 1,
        toString: function() {
            return "_EMO_" + this.name + "_" + this.styles + "_EMO_"
        }
    }
};
function Xle(e, t) {
    return t || (t = e.slice(0)),
    Object.freeze(Object.defineProperties(e, {
        raw: {
            value: Object.freeze(t)
        }
    }))
}
const eue = Math.min
  , tue = Math.max
  , Kh = Math.round
  , fv = Math.floor
  , Qh = e => ({
    x: e,
    y: e
});
function rue(e) {
    return {
        ...e,
        top: e.y,
        left: e.x,
        right: e.x + e.width,
        bottom: e.y + e.height
    }
}
function RT(e) {
    return qT(e) ? (e.nodeName || "").toLowerCase() : "#document"
}
function qn(e) {
    var t;
    return (e == null || (t = e.ownerDocument) == null ? void 0 : t.defaultView) || window
}
function LT(e) {
    var t;
    return (t = (qT(e) ? e.ownerDocument : e.document) || window.document) == null ? void 0 : t.documentElement
}
function qT(e) {
    return e instanceof Node || e instanceof qn(e).Node
}
function Ew(e) {
    return e instanceof Element || e instanceof qn(e).Element
}
function e0(e) {
    return e instanceof HTMLElement || e instanceof qn(e).HTMLElement
}
function px(e) {
    return typeof ShadowRoot > "u" ? !1 : e instanceof ShadowRoot || e instanceof qn(e).ShadowRoot
}
function VT(e) {
    const {overflow: t, overflowX: r, overflowY: a, display: n} = t0(e);
    return /auto|scroll|overlay|hidden|clip/.test(t + a + r) && !["inline", "contents"].includes(n)
}
function aue() {
    return typeof CSS > "u" || !CSS.supports ? !1 : CSS.supports("-webkit-backdrop-filter", "none")
}
function nue(e) {
    return ["html", "body", "#document"].includes(RT(e))
}
function t0(e) {
    return qn(e).getComputedStyle(e)
}
function iue(e) {
    if (RT(e) === "html")
        return e;
    const t = e.assignedSlot || e.parentNode || px(e) && e.host || LT(e);
    return px(t) ? t.host : t
}
function $T(e) {
    const t = iue(e);
    return nue(t) ? e.ownerDocument ? e.ownerDocument.body : e.body : e0(t) && VT(t) ? t : $T(t)
}
function Zh(e, t, r) {
    var a;
    t === void 0 && (t = []),
    r === void 0 && (r = !0);
    const n = $T(e)
      , i = n === ((a = e.ownerDocument) == null ? void 0 : a.body)
      , o = qn(n);
    return i ? t.concat(o, o.visualViewport || [], VT(n) ? n : [], o.frameElement && r ? Zh(o.frameElement) : []) : t.concat(n, Zh(n, [], r))
}
function oue(e) {
    const t = t0(e);
    let r = parseFloat(t.width) || 0
      , a = parseFloat(t.height) || 0;
    const n = e0(e)
      , i = n ? e.offsetWidth : r
      , o = n ? e.offsetHeight : a
      , s = Kh(r) !== i || Kh(a) !== o;
    return s && (r = i,
    a = o),
    {
        width: r,
        height: a,
        $: s
    }
}
function r0(e) {
    return Ew(e) ? e : e.contextElement
}
function Dp(e) {
    const t = r0(e);
    if (!e0(t))
        return Qh(1);
    const r = t.getBoundingClientRect()
      , {width: a, height: n, $: i} = oue(t);
    let o = (i ? Kh(r.width) : r.width) / a
      , s = (i ? Kh(r.height) : r.height) / n;
    return (!o || !Number.isFinite(o)) && (o = 1),
    (!s || !Number.isFinite(s)) && (s = 1),
    {
        x: o,
        y: s
    }
}
const sue = Qh(0);
function lue(e) {
    const t = qn(e);
    return !aue() || !t.visualViewport ? sue : {
        x: t.visualViewport.offsetLeft,
        y: t.visualViewport.offsetTop
    }
}
function uue(e, t, r) {
    return t === void 0 && (t = !1),
    !r || t && r !== qn(e) ? !1 : t
}
function yx(e, t, r, a) {
    t === void 0 && (t = !1),
    r === void 0 && (r = !1);
    const n = e.getBoundingClientRect()
      , i = r0(e);
    let o = Qh(1);
    t && (a ? Ew(a) && (o = Dp(a)) : o = Dp(e));
    const s = uue(i, r, a) ? lue(i) : Qh(0);
    let l = (n.left + s.x) / o.x
      , u = (n.top + s.y) / o.y
      , c = n.width / o.x
      , d = n.height / o.y;
    if (i) {
        const v = qn(i)
          , h = a && Ew(a) ? qn(a) : a;
        let p = v.frameElement;
        for (; p && a && h !== v; ) {
            const f = Dp(p)
              , _ = p.getBoundingClientRect()
              , y = t0(p)
              , g = _.left + (p.clientLeft + parseFloat(y.paddingLeft)) * f.x
              , m = _.top + (p.clientTop + parseFloat(y.paddingTop)) * f.y;
            l *= f.x,
            u *= f.y,
            c *= f.x,
            d *= f.y,
            l += g,
            u += m,
            p = qn(p).frameElement
        }
    }
    return rue({
        width: c,
        height: d,
        x: l,
        y: u
    })
}
function cue(e, t) {
    let r = null, a;
    const n = LT(e);
    function i() {
        clearTimeout(a),
        r && r.disconnect(),
        r = null
    }
    function o(s, l) {
        s === void 0 && (s = !1),
        l === void 0 && (l = 1),
        i();
        const {left: u, top: c, width: d, height: v} = e.getBoundingClientRect();
        if (s || t(),
        !d || !v)
            return;
        const h = fv(c)
          , p = fv(n.clientWidth - (u + d))
          , f = fv(n.clientHeight - (c + v))
          , _ = fv(u)
          , g = {
            rootMargin: -h + "px " + -p + "px " + -f + "px " + -_ + "px",
            threshold: tue(0, eue(1, l)) || 1
        };
        let m = !0;
        function w(C) {
            const b = C[0].intersectionRatio;
            if (b !== l) {
                if (!m)
                    return o();
                b ? o(!1, b) : a = setTimeout( () => {
                    o(!1, 1e-7)
                }
                , 100)
            }
            m = !1
        }
        try {
            r = new IntersectionObserver(w,{
                ...g,
                root: n.ownerDocument
            })
        } catch {
            r = new IntersectionObserver(w,g)
        }
        r.observe(e)
    }
    return o(!0),
    i
}
function due(e, t, r, a) {
    a === void 0 && (a = {});
    const {ancestorScroll: n=!0, ancestorResize: i=!0, elementResize: o=typeof ResizeObserver == "function", layoutShift: s=typeof IntersectionObserver == "function", animationFrame: l=!1} = a
      , u = r0(e)
      , c = n || i ? [...u ? Zh(u) : [], ...Zh(t)] : [];
    c.forEach(y => {
        n && y.addEventListener("scroll", r, {
            passive: !0
        }),
        i && y.addEventListener("resize", r)
    }
    );
    const d = u && s ? cue(u, r) : null;
    let v = -1
      , h = null;
    o && (h = new ResizeObserver(y => {
        let[g] = y;
        g && g.target === u && h && (h.unobserve(t),
        cancelAnimationFrame(v),
        v = requestAnimationFrame( () => {
            h && h.observe(t)
        }
        )),
        r()
    }
    ),
    u && !l && h.observe(u),
    h.observe(t));
    let p, f = l ? yx(e) : null;
    l && _();
    function _() {
        const y = yx(e);
        f && (y.x !== f.x || y.y !== f.y || y.width !== f.width || y.height !== f.height) && r(),
        f = y,
        p = requestAnimationFrame(_)
    }
    return r(),
    () => {
        c.forEach(y => {
            n && y.removeEventListener("scroll", r),
            i && y.removeEventListener("resize", r)
        }
        ),
        d && d(),
        h && h.disconnect(),
        h = null,
        l && cancelAnimationFrame(p)
    }
}
var kw = q.useLayoutEffect
  , vue = ["className", "clearValue", "cx", "getStyles", "getClassNames", "getValue", "hasValue", "isMulti", "isRtl", "options", "selectOption", "selectProps", "setValue", "theme"]
  , Xh = function() {};
function hue(e, t) {
    return t ? t[0] === "-" ? e + t : e + "__" + t : e
}
function mue(e, t) {
    for (var r = arguments.length, a = new Array(r > 2 ? r - 2 : 0), n = 2; n < r; n++)
        a[n - 2] = arguments[n];
    var i = [].concat(a);
    if (t && e)
        for (var o in t)
            t.hasOwnProperty(o) && t[o] && i.push("".concat(hue(e, o)));
    return i.filter(function(s) {
        return s
    }).map(function(s) {
        return String(s).trim()
    }).join(" ")
}
var em = function(t) {
    return Sue(t) ? t.filter(Boolean) : Na(t) === "object" && t !== null ? [t] : []
}
  , zT = function(t) {
    t.className,
    t.clearValue,
    t.cx,
    t.getStyles,
    t.getClassNames,
    t.getValue,
    t.hasValue,
    t.isMulti,
    t.isRtl,
    t.options,
    t.selectOption,
    t.selectProps,
    t.setValue,
    t.theme;
    var r = Zr(t, vue);
    return _e({}, r)
}
  , or = function(t, r, a) {
    var n = t.cx
      , i = t.getStyles
      , o = t.getClassNames
      , s = t.className;
    return {
        css: i(r, t),
        className: n(a ?? {}, o(r, t), s)
    }
};
function yf(e) {
    return [document.documentElement, document.body, window].indexOf(e) > -1
}
function fue(e) {
    return yf(e) ? window.innerHeight : e.clientHeight
}
function GT(e) {
    return yf(e) ? window.pageYOffset : e.scrollTop
}
function tm(e, t) {
    if (yf(e)) {
        window.scrollTo(0, t);
        return
    }
    e.scrollTop = t
}
function pue(e) {
    var t = getComputedStyle(e)
      , r = t.position === "absolute"
      , a = /(auto|scroll)/;
    if (t.position === "fixed")
        return document.documentElement;
    for (var n = e; n = n.parentElement; )
        if (t = getComputedStyle(n),
        !(r && t.position === "static") && a.test(t.overflow + t.overflowY + t.overflowX))
            return n;
    return document.documentElement
}
function yue(e, t, r, a) {
    return r * ((e = e / a - 1) * e * e + 1) + t
}
function pv(e, t) {
    var r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 200
      , a = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : Xh
      , n = GT(e)
      , i = t - n
      , o = 10
      , s = 0;
    function l() {
        s += o;
        var u = yue(s, n, i, r);
        tm(e, u),
        s < r ? window.requestAnimationFrame(l) : a(e)
    }
    l()
}
function wx(e, t) {
    var r = e.getBoundingClientRect()
      , a = t.getBoundingClientRect()
      , n = t.offsetHeight / 3;
    a.bottom + n > r.bottom ? tm(e, Math.min(t.offsetTop + t.clientHeight - e.offsetHeight + n, e.scrollHeight)) : a.top - n < r.top && tm(e, Math.max(t.offsetTop - n, 0))
}
function wue(e) {
    var t = e.getBoundingClientRect();
    return {
        bottom: t.bottom,
        height: t.height,
        left: t.left,
        right: t.right,
        top: t.top,
        width: t.width
    }
}
function gx() {
    try {
        return document.createEvent("TouchEvent"),
        !0
    } catch {
        return !1
    }
}
function gue() {
    try {
        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)
    } catch {
        return !1
    }
}
var jT = !1
  , _ue = {
    get passive() {
        return jT = !0
    }
}
  , yv = typeof window < "u" ? window : {};
yv.addEventListener && yv.removeEventListener && (yv.addEventListener("p", Xh, _ue),
yv.removeEventListener("p", Xh, !1));
var bue = jT;
function Cue(e) {
    return e != null
}
function Sue(e) {
    return Array.isArray(e)
}
function Zu(e, t, r) {
    return e ? t : r
}
var xue = function(t) {
    for (var r = arguments.length, a = new Array(r > 1 ? r - 1 : 0), n = 1; n < r; n++)
        a[n - 1] = arguments[n];
    var i = Object.entries(t).filter(function(o) {
        var s = qe(o, 1)
          , l = s[0];
        return !a.includes(l)
    });
    return i.reduce(function(o, s) {
        var l = qe(s, 2)
          , u = l[0]
          , c = l[1];
        return o[u] = c,
        o
    }, {})
}
  , Aue = ["children", "innerProps"]
  , Eue = ["children", "innerProps"];
function kue(e) {
    var t = e.maxHeight
      , r = e.menuEl
      , a = e.minHeight
      , n = e.placement
      , i = e.shouldScroll
      , o = e.isFixedPosition
      , s = e.controlHeight
      , l = pue(r)
      , u = {
        placement: "bottom",
        maxHeight: t
    };
    if (!r || !r.offsetParent)
        return u;
    var c = l.getBoundingClientRect()
      , d = c.height
      , v = r.getBoundingClientRect()
      , h = v.bottom
      , p = v.height
      , f = v.top
      , _ = r.offsetParent.getBoundingClientRect()
      , y = _.top
      , g = o ? window.innerHeight : fue(l)
      , m = GT(l)
      , w = parseInt(getComputedStyle(r).marginBottom, 10)
      , C = parseInt(getComputedStyle(r).marginTop, 10)
      , b = y - C
      , x = g - f
      , E = b + m
      , k = d - m - f
      , A = h - g + m + w
      , I = m + f - C
      , T = 160;
    switch (n) {
    case "auto":
    case "bottom":
        if (x >= p)
            return {
                placement: "bottom",
                maxHeight: t
            };
        if (k >= p && !o)
            return i && pv(l, A, T),
            {
                placement: "bottom",
                maxHeight: t
            };
        if (!o && k >= a || o && x >= a) {
            i && pv(l, A, T);
            var F = o ? x - w : k - w;
            return {
                placement: "bottom",
                maxHeight: F
            }
        }
        if (n === "auto" || o) {
            var R = t
              , O = o ? b : E;
            return O >= a && (R = Math.min(O - w - s, t)),
            {
                placement: "top",
                maxHeight: R
            }
        }
        if (n === "bottom")
            return i && tm(l, A),
            {
                placement: "bottom",
                maxHeight: t
            };
        break;
    case "top":
        if (b >= p)
            return {
                placement: "top",
                maxHeight: t
            };
        if (E >= p && !o)
            return i && pv(l, I, T),
            {
                placement: "top",
                maxHeight: t
            };
        if (!o && E >= a || o && b >= a) {
            var M = t;
            return (!o && E >= a || o && b >= a) && (M = o ? b - C : E - C),
            i && pv(l, I, T),
            {
                placement: "top",
                maxHeight: M
            }
        }
        return {
            placement: "bottom",
            maxHeight: t
        };
    default:
        throw new Error('Invalid placement provided "'.concat(n, '".'))
    }
    return u
}
function Tue(e) {
    var t = {
        bottom: "top",
        top: "bottom"
    };
    return e ? t[e] : "bottom"
}
var HT = function(t) {
    return t === "auto" ? "bottom" : t
}, Nue = function(t, r) {
    var a, n = t.placement, i = t.theme, o = i.borderRadius, s = i.spacing, l = i.colors;
    return _e((a = {
        label: "menu"
    },
    Ze(a, Tue(n), "100%"),
    Ze(a, "position", "absolute"),
    Ze(a, "width", "100%"),
    Ze(a, "zIndex", 1),
    a), r ? {} : {
        backgroundColor: l.neutral0,
        borderRadius: o,
        boxShadow: "0 0 0 1px hsla(0, 0%, 0%, 0.1), 0 4px 11px hsla(0, 0%, 0%, 0.1)",
        marginBottom: s.menuGutter,
        marginTop: s.menuGutter
    })
}, WT = q.createContext(null), Mue = function(t) {
    var r = t.children
      , a = t.minMenuHeight
      , n = t.maxMenuHeight
      , i = t.menuPlacement
      , o = t.menuPosition
      , s = t.menuShouldScrollIntoView
      , l = t.theme
      , u = q.useContext(WT) || {}
      , c = u.setPortalPlacement
      , d = q.useRef(null)
      , v = q.useState(n)
      , h = qe(v, 2)
      , p = h[0]
      , f = h[1]
      , _ = q.useState(null)
      , y = qe(_, 2)
      , g = y[0]
      , m = y[1]
      , w = l.spacing.controlHeight;
    return kw(function() {
        var C = d.current;
        if (C) {
            var b = o === "fixed"
              , x = s && !b
              , E = kue({
                maxHeight: n,
                menuEl: C,
                minHeight: a,
                placement: i,
                shouldScroll: x,
                isFixedPosition: b,
                controlHeight: w
            });
            f(E.maxHeight),
            m(E.placement),
            c == null || c(E.placement)
        }
    }, [n, i, o, s, a, c, w]),
    r({
        ref: d,
        placerProps: _e(_e({}, t), {}, {
            placement: g || HT(i),
            maxHeight: p
        })
    })
}, Iue = function(t) {
    var r = t.children
      , a = t.innerRef
      , n = t.innerProps;
    return Je("div", Ie({}, or(t, "menu", {
        menu: !0
    }), {
        ref: a
    }, n), r)
}, Due = Iue, Uue = function(t, r) {
    var a = t.maxHeight
      , n = t.theme.spacing.baseUnit;
    return _e({
        maxHeight: a,
        overflowY: "auto",
        position: "relative",
        WebkitOverflowScrolling: "touch"
    }, r ? {} : {
        paddingBottom: n,
        paddingTop: n
    })
}, Fue = function(t) {
    var r = t.children
      , a = t.innerProps
      , n = t.innerRef
      , i = t.isMulti;
    return Je("div", Ie({}, or(t, "menuList", {
        "menu-list": !0,
        "menu-list--is-multi": i
    }), {
        ref: n
    }, a), r)
}, YT = function(t, r) {
    var a = t.theme
      , n = a.spacing.baseUnit
      , i = a.colors;
    return _e({
        textAlign: "center"
    }, r ? {} : {
        color: i.neutral40,
        padding: "".concat(n * 2, "px ").concat(n * 3, "px")
    })
}, Oue = YT, Pue = YT, Bue = function(t) {
    var r = t.children
      , a = r === void 0 ? "No options" : r
      , n = t.innerProps
      , i = Zr(t, Aue);
    return Je("div", Ie({}, or(_e(_e({}, i), {}, {
        children: a,
        innerProps: n
    }), "noOptionsMessage", {
        "menu-notice": !0,
        "menu-notice--no-options": !0
    }), n), a)
}, Rue = function(t) {
    var r = t.children
      , a = r === void 0 ? "Loading..." : r
      , n = t.innerProps
      , i = Zr(t, Eue);
    return Je("div", Ie({}, or(_e(_e({}, i), {}, {
        children: a,
        innerProps: n
    }), "loadingMessage", {
        "menu-notice": !0,
        "menu-notice--loading": !0
    }), n), a)
}, Lue = function(t) {
    var r = t.rect
      , a = t.offset
      , n = t.position;
    return {
        left: r.left,
        position: n,
        top: a,
        width: r.width,
        zIndex: 1
    }
}, que = function(t) {
    var r = t.appendTo
      , a = t.children
      , n = t.controlElement
      , i = t.innerProps
      , o = t.menuPlacement
      , s = t.menuPosition
      , l = q.useRef(null)
      , u = q.useRef(null)
      , c = q.useState(HT(o))
      , d = qe(c, 2)
      , v = d[0]
      , h = d[1]
      , p = q.useMemo(function() {
        return {
            setPortalPlacement: h
        }
    }, [])
      , f = q.useState(null)
      , _ = qe(f, 2)
      , y = _[0]
      , g = _[1]
      , m = q.useCallback(function() {
        if (n) {
            var x = wue(n)
              , E = s === "fixed" ? 0 : window.pageYOffset
              , k = x[v] + E;
            (k !== (y == null ? void 0 : y.offset) || x.left !== (y == null ? void 0 : y.rect.left) || x.width !== (y == null ? void 0 : y.rect.width)) && g({
                offset: k,
                rect: x
            })
        }
    }, [n, s, v, y == null ? void 0 : y.offset, y == null ? void 0 : y.rect.left, y == null ? void 0 : y.rect.width]);
    kw(function() {
        m()
    }, [m]);
    var w = q.useCallback(function() {
        typeof u.current == "function" && (u.current(),
        u.current = null),
        n && l.current && (u.current = due(n, l.current, m, {
            elementResize: "ResizeObserver"in window
        }))
    }, [n, m]);
    kw(function() {
        w()
    }, [w]);
    var C = q.useCallback(function(x) {
        l.current = x,
        w()
    }, [w]);
    if (!r && s !== "fixed" || !y)
        return null;
    var b = Je("div", Ie({
        ref: C
    }, or(_e(_e({}, t), {}, {
        offset: y.offset,
        position: s,
        rect: y.rect
    }), "menuPortal", {
        "menu-portal": !0
    }), i), a);
    return Je(WT.Provider, {
        value: p
    }, r ? Gc.createPortal(b, r) : b)
}, Vue = function(t) {
    var r = t.isDisabled
      , a = t.isRtl;
    return {
        label: "container",
        direction: a ? "rtl" : void 0,
        pointerEvents: r ? "none" : void 0,
        position: "relative"
    }
}, $ue = function(t) {
    var r = t.children
      , a = t.innerProps
      , n = t.isDisabled
      , i = t.isRtl;
    return Je("div", Ie({}, or(t, "container", {
        "--is-disabled": n,
        "--is-rtl": i
    }), a), r)
}, zue = function(t, r) {
    var a = t.theme.spacing
      , n = t.isMulti
      , i = t.hasValue
      , o = t.selectProps.controlShouldRenderValue;
    return _e({
        alignItems: "center",
        display: n && i && o ? "flex" : "grid",
        flex: 1,
        flexWrap: "wrap",
        WebkitOverflowScrolling: "touch",
        position: "relative",
        overflow: "hidden"
    }, r ? {} : {
        padding: "".concat(a.baseUnit / 2, "px ").concat(a.baseUnit * 2, "px")
    })
}, Gue = function(t) {
    var r = t.children
      , a = t.innerProps
      , n = t.isMulti
      , i = t.hasValue;
    return Je("div", Ie({}, or(t, "valueContainer", {
        "value-container": !0,
        "value-container--is-multi": n,
        "value-container--has-value": i
    }), a), r)
}, jue = function() {
    return {
        alignItems: "center",
        alignSelf: "stretch",
        display: "flex",
        flexShrink: 0
    }
}, Hue = function(t) {
    var r = t.children
      , a = t.innerProps;
    return Je("div", Ie({}, or(t, "indicatorsContainer", {
        indicators: !0
    }), a), r)
}, _x, Wue = ["size"], Yue = ["innerProps", "isRtl", "size"], Jue = {
    name: "8mmkcg",
    styles: "display:inline-block;fill:currentColor;line-height:1;stroke:currentColor;stroke-width:0"
}, JT = function(t) {
    var r = t.size
      , a = Zr(t, Wue);
    return Je("svg", Ie({
        height: r,
        width: r,
        viewBox: "0 0 20 20",
        "aria-hidden": "true",
        focusable: "false",
        css: Jue
    }, a))
}, a0 = function(t) {
    return Je(JT, Ie({
        size: 20
    }, t), Je("path", {
        d: "M14.348 14.849c-0.469 0.469-1.229 0.469-1.697 0l-2.651-3.030-2.651 3.029c-0.469 0.469-1.229 0.469-1.697 0-0.469-0.469-0.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-0.469-0.469-0.469-1.228 0-1.697s1.228-0.469 1.697 0l2.652 3.031 2.651-3.031c0.469-0.469 1.228-0.469 1.697 0s0.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c0.469 0.469 0.469 1.229 0 1.698z"
    }))
}, KT = function(t) {
    return Je(JT, Ie({
        size: 20
    }, t), Je("path", {
        d: "M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
    }))
}, QT = function(t, r) {
    var a = t.isFocused
      , n = t.theme
      , i = n.spacing.baseUnit
      , o = n.colors;
    return _e({
        label: "indicatorContainer",
        display: "flex",
        transition: "color 150ms"
    }, r ? {} : {
        color: a ? o.neutral60 : o.neutral20,
        padding: i * 2,
        ":hover": {
            color: a ? o.neutral80 : o.neutral40
        }
    })
}, Kue = QT, Que = function(t) {
    var r = t.children
      , a = t.innerProps;
    return Je("div", Ie({}, or(t, "dropdownIndicator", {
        indicator: !0,
        "dropdown-indicator": !0
    }), a), r || Je(KT, null))
}, Zue = QT, Xue = function(t) {
    var r = t.children
      , a = t.innerProps;
    return Je("div", Ie({}, or(t, "clearIndicator", {
        indicator: !0,
        "clear-indicator": !0
    }), a), r || Je(a0, null))
}, ece = function(t, r) {
    var a = t.isDisabled
      , n = t.theme
      , i = n.spacing.baseUnit
      , o = n.colors;
    return _e({
        label: "indicatorSeparator",
        alignSelf: "stretch",
        width: 1
    }, r ? {} : {
        backgroundColor: a ? o.neutral10 : o.neutral20,
        marginBottom: i * 2,
        marginTop: i * 2
    })
}, tce = function(t) {
    var r = t.innerProps;
    return Je("span", Ie({}, r, or(t, "indicatorSeparator", {
        "indicator-separator": !0
    })))
}, rce = Zle(_x || (_x = Xle([`
  0%, 80%, 100% { opacity: 0; }
  40% { opacity: 1; }
`]))), ace = function(t, r) {
    var a = t.isFocused
      , n = t.size
      , i = t.theme
      , o = i.colors
      , s = i.spacing.baseUnit;
    return _e({
        label: "loadingIndicator",
        display: "flex",
        transition: "color 150ms",
        alignSelf: "center",
        fontSize: n,
        lineHeight: 1,
        marginRight: n,
        textAlign: "center",
        verticalAlign: "middle"
    }, r ? {} : {
        color: a ? o.neutral60 : o.neutral20,
        padding: s * 2
    })
}, Up = function(t) {
    var r = t.delay
      , a = t.offset;
    return Je("span", {
        css: X2({
            animation: "".concat(rce, " 1s ease-in-out ").concat(r, "ms infinite;"),
            backgroundColor: "currentColor",
            borderRadius: "1em",
            display: "inline-block",
            marginLeft: a ? "1em" : void 0,
            height: "1em",
            verticalAlign: "top",
            width: "1em"
        }, "", "")
    })
}, nce = function(t) {
    var r = t.innerProps
      , a = t.isRtl
      , n = t.size
      , i = n === void 0 ? 4 : n
      , o = Zr(t, Yue);
    return Je("div", Ie({}, or(_e(_e({}, o), {}, {
        innerProps: r,
        isRtl: a,
        size: i
    }), "loadingIndicator", {
        indicator: !0,
        "loading-indicator": !0
    }), r), Je(Up, {
        delay: 0,
        offset: a
    }), Je(Up, {
        delay: 160,
        offset: !0
    }), Je(Up, {
        delay: 320,
        offset: !a
    }))
}, ice = function(t, r) {
    var a = t.isDisabled
      , n = t.isFocused
      , i = t.theme
      , o = i.colors
      , s = i.borderRadius
      , l = i.spacing;
    return _e({
        label: "control",
        alignItems: "center",
        cursor: "default",
        display: "flex",
        flexWrap: "wrap",
        justifyContent: "space-between",
        minHeight: l.controlHeight,
        outline: "0 !important",
        position: "relative",
        transition: "all 100ms"
    }, r ? {} : {
        backgroundColor: a ? o.neutral5 : o.neutral0,
        borderColor: a ? o.neutral10 : n ? o.primary : o.neutral20,
        borderRadius: s,
        borderStyle: "solid",
        borderWidth: 1,
        boxShadow: n ? "0 0 0 1px ".concat(o.primary) : void 0,
        "&:hover": {
            borderColor: n ? o.primary : o.neutral30
        }
    })
}, oce = function(t) {
    var r = t.children
      , a = t.isDisabled
      , n = t.isFocused
      , i = t.innerRef
      , o = t.innerProps
      , s = t.menuIsOpen;
    return Je("div", Ie({
        ref: i
    }, or(t, "control", {
        control: !0,
        "control--is-disabled": a,
        "control--is-focused": n,
        "control--menu-is-open": s
    }), o, {
        "aria-disabled": a || void 0
    }), r)
}, sce = oce, lce = ["data"], uce = function(t, r) {
    var a = t.theme.spacing;
    return r ? {} : {
        paddingBottom: a.baseUnit * 2,
        paddingTop: a.baseUnit * 2
    }
}, cce = function(t) {
    var r = t.children
      , a = t.cx
      , n = t.getStyles
      , i = t.getClassNames
      , o = t.Heading
      , s = t.headingProps
      , l = t.innerProps
      , u = t.label
      , c = t.theme
      , d = t.selectProps;
    return Je("div", Ie({}, or(t, "group", {
        group: !0
    }), l), Je(o, Ie({}, s, {
        selectProps: d,
        theme: c,
        getStyles: n,
        getClassNames: i,
        cx: a
    }), u), Je("div", null, r))
}, dce = function(t, r) {
    var a = t.theme
      , n = a.colors
      , i = a.spacing;
    return _e({
        label: "group",
        cursor: "default",
        display: "block"
    }, r ? {} : {
        color: n.neutral40,
        fontSize: "75%",
        fontWeight: 500,
        marginBottom: "0.25em",
        paddingLeft: i.baseUnit * 3,
        paddingRight: i.baseUnit * 3,
        textTransform: "uppercase"
    })
}, vce = function(t) {
    var r = zT(t);
    r.data;
    var a = Zr(r, lce);
    return Je("div", Ie({}, or(t, "groupHeading", {
        "group-heading": !0
    }), a))
}, hce = cce, mce = ["innerRef", "isDisabled", "isHidden", "inputClassName"], fce = function(t, r) {
    var a = t.isDisabled
      , n = t.value
      , i = t.theme
      , o = i.spacing
      , s = i.colors;
    return _e(_e({
        visibility: a ? "hidden" : "visible",
        transform: n ? "translateZ(0)" : ""
    }, pce), r ? {} : {
        margin: o.baseUnit / 2,
        paddingBottom: o.baseUnit / 2,
        paddingTop: o.baseUnit / 2,
        color: s.neutral80
    })
}, ZT = {
    gridArea: "1 / 2",
    font: "inherit",
    minWidth: "2px",
    border: 0,
    margin: 0,
    outline: 0,
    padding: 0
}, pce = {
    flex: "1 1 auto",
    display: "inline-grid",
    gridArea: "1 / 1 / 2 / 3",
    gridTemplateColumns: "0 min-content",
    "&:after": _e({
        content: 'attr(data-value) " "',
        visibility: "hidden",
        whiteSpace: "pre"
    }, ZT)
}, yce = function(t) {
    return _e({
        label: "input",
        color: "inherit",
        background: 0,
        opacity: t ? 0 : 1,
        width: "100%"
    }, ZT)
}, wce = function(t) {
    var r = t.cx
      , a = t.value
      , n = zT(t)
      , i = n.innerRef
      , o = n.isDisabled
      , s = n.isHidden
      , l = n.inputClassName
      , u = Zr(n, mce);
    return Je("div", Ie({}, or(t, "input", {
        "input-container": !0
    }), {
        "data-value": a || ""
    }), Je("input", Ie({
        className: r({
            input: !0
        }, l),
        ref: i,
        style: yce(s),
        disabled: o
    }, u)))
}, gce = wce, _ce = function(t, r) {
    var a = t.theme
      , n = a.spacing
      , i = a.borderRadius
      , o = a.colors;
    return _e({
        label: "multiValue",
        display: "flex",
        minWidth: 0
    }, r ? {} : {
        backgroundColor: o.neutral10,
        borderRadius: i / 2,
        margin: n.baseUnit / 2
    })
}, bce = function(t, r) {
    var a = t.theme
      , n = a.borderRadius
      , i = a.colors
      , o = t.cropWithEllipsis;
    return _e({
        overflow: "hidden",
        textOverflow: o || o === void 0 ? "ellipsis" : void 0,
        whiteSpace: "nowrap"
    }, r ? {} : {
        borderRadius: n / 2,
        color: i.neutral80,
        fontSize: "85%",
        padding: 3,
        paddingLeft: 6
    })
}, Cce = function(t, r) {
    var a = t.theme
      , n = a.spacing
      , i = a.borderRadius
      , o = a.colors
      , s = t.isFocused;
    return _e({
        alignItems: "center",
        display: "flex"
    }, r ? {} : {
        borderRadius: i / 2,
        backgroundColor: s ? o.dangerLight : void 0,
        paddingLeft: n.baseUnit,
        paddingRight: n.baseUnit,
        ":hover": {
            backgroundColor: o.dangerLight,
            color: o.danger
        }
    })
}, XT = function(t) {
    var r = t.children
      , a = t.innerProps;
    return Je("div", a, r)
}, Sce = XT, xce = XT;
function Ace(e) {
    var t = e.children
      , r = e.innerProps;
    return Je("div", Ie({
        role: "button"
    }, r), t || Je(a0, {
        size: 14
    }))
}
var Ece = function(t) {
    var r = t.children
      , a = t.components
      , n = t.data
      , i = t.innerProps
      , o = t.isDisabled
      , s = t.removeProps
      , l = t.selectProps
      , u = a.Container
      , c = a.Label
      , d = a.Remove;
    return Je(u, {
        data: n,
        innerProps: _e(_e({}, or(t, "multiValue", {
            "multi-value": !0,
            "multi-value--is-disabled": o
        })), i),
        selectProps: l
    }, Je(c, {
        data: n,
        innerProps: _e({}, or(t, "multiValueLabel", {
            "multi-value__label": !0
        })),
        selectProps: l
    }, r), Je(d, {
        data: n,
        innerProps: _e(_e({}, or(t, "multiValueRemove", {
            "multi-value__remove": !0
        })), {}, {
            "aria-label": "Remove ".concat(r || "option")
        }, s),
        selectProps: l
    }))
}
  , kce = Ece
  , Tce = function(t, r) {
    var a = t.isDisabled
      , n = t.isFocused
      , i = t.isSelected
      , o = t.theme
      , s = o.spacing
      , l = o.colors;
    return _e({
        label: "option",
        cursor: "default",
        display: "block",
        fontSize: "inherit",
        width: "100%",
        userSelect: "none",
        WebkitTapHighlightColor: "rgba(0, 0, 0, 0)"
    }, r ? {} : {
        backgroundColor: i ? l.primary : n ? l.primary25 : "transparent",
        color: a ? l.neutral20 : i ? l.neutral0 : "inherit",
        padding: "".concat(s.baseUnit * 2, "px ").concat(s.baseUnit * 3, "px"),
        ":active": {
            backgroundColor: a ? void 0 : i ? l.primary : l.primary50
        }
    })
}
  , Nce = function(t) {
    var r = t.children
      , a = t.isDisabled
      , n = t.isFocused
      , i = t.isSelected
      , o = t.innerRef
      , s = t.innerProps;
    return Je("div", Ie({}, or(t, "option", {
        option: !0,
        "option--is-disabled": a,
        "option--is-focused": n,
        "option--is-selected": i
    }), {
        ref: o,
        "aria-disabled": a
    }, s), r)
}
  , Mce = Nce
  , Ice = function(t, r) {
    var a = t.theme
      , n = a.spacing
      , i = a.colors;
    return _e({
        label: "placeholder",
        gridArea: "1 / 1 / 2 / 3"
    }, r ? {} : {
        color: i.neutral50,
        marginLeft: n.baseUnit / 2,
        marginRight: n.baseUnit / 2
    })
}
  , Dce = function(t) {
    var r = t.children
      , a = t.innerProps;
    return Je("div", Ie({}, or(t, "placeholder", {
        placeholder: !0
    }), a), r)
}
  , Uce = Dce
  , Fce = function(t, r) {
    var a = t.isDisabled
      , n = t.theme
      , i = n.spacing
      , o = n.colors;
    return _e({
        label: "singleValue",
        gridArea: "1 / 1 / 2 / 3",
        maxWidth: "100%",
        overflow: "hidden",
        textOverflow: "ellipsis",
        whiteSpace: "nowrap"
    }, r ? {} : {
        color: a ? o.neutral40 : o.neutral80,
        marginLeft: i.baseUnit / 2,
        marginRight: i.baseUnit / 2
    })
}
  , Oce = function(t) {
    var r = t.children
      , a = t.isDisabled
      , n = t.innerProps;
    return Je("div", Ie({}, or(t, "singleValue", {
        "single-value": !0,
        "single-value--is-disabled": a
    }), n), r)
}
  , Pce = Oce
  , Bce = {
    ClearIndicator: Xue,
    Control: sce,
    DropdownIndicator: Que,
    DownChevron: KT,
    CrossIcon: a0,
    Group: hce,
    GroupHeading: vce,
    IndicatorsContainer: Hue,
    IndicatorSeparator: tce,
    Input: gce,
    LoadingIndicator: nce,
    Menu: Due,
    MenuList: Fue,
    MenuPortal: que,
    LoadingMessage: Rue,
    NoOptionsMessage: Bue,
    MultiValue: kce,
    MultiValueContainer: Sce,
    MultiValueLabel: xce,
    MultiValueRemove: Ace,
    Option: Mce,
    Placeholder: Uce,
    SelectContainer: $ue,
    SingleValue: Pce,
    ValueContainer: Gue
}
  , Rce = function(t) {
    return _e(_e({}, Bce), t.components)
}
  , bx = Number.isNaN || function(t) {
    return typeof t == "number" && t !== t
}
;
function Lce(e, t) {
    return !!(e === t || bx(e) && bx(t))
}
function qce(e, t) {
    if (e.length !== t.length)
        return !1;
    for (var r = 0; r < e.length; r++)
        if (!Lce(e[r], t[r]))
            return !1;
    return !0
}
function Vce(e, t) {
    t === void 0 && (t = qce);
    var r = null;
    function a() {
        for (var n = [], i = 0; i < arguments.length; i++)
            n[i] = arguments[i];
        if (r && r.lastThis === this && t(n, r.lastArgs))
            return r.lastResult;
        var o = e.apply(this, n);
        return r = {
            lastResult: o,
            lastArgs: n,
            lastThis: this
        },
        o
    }
    return a.clear = function() {
        r = null
    }
    ,
    a
}
var $ce = {
    name: "7pg0cj-a11yText",
    styles: "label:a11yText;z-index:9999;border:0;clip:rect(1px, 1px, 1px, 1px);height:1px;width:1px;position:absolute;overflow:hidden;padding:0;white-space:nowrap"
}
  , zce = function(t) {
    return Je("span", Ie({
        css: $ce
    }, t))
}
  , Cx = zce
  , Gce = {
    guidance: function(t) {
        var r = t.isSearchable
          , a = t.isMulti
          , n = t.isDisabled
          , i = t.tabSelectsValue
          , o = t.context;
        switch (o) {
        case "menu":
            return "Use Up and Down to choose options".concat(n ? "" : ", press Enter to select the currently focused option", ", press Escape to exit the menu").concat(i ? ", press Tab to select the option and exit the menu" : "", ".");
        case "input":
            return "".concat(t["aria-label"] || "Select", " is focused ").concat(r ? ",type to refine list" : "", ", press Down to open the menu, ").concat(a ? " press left to focus selected values" : "");
        case "value":
            return "Use left and right to toggle between focused values, press Backspace to remove the currently focused value";
        default:
            return ""
        }
    },
    onChange: function(t) {
        var r = t.action
          , a = t.label
          , n = a === void 0 ? "" : a
          , i = t.labels
          , o = t.isDisabled;
        switch (r) {
        case "deselect-option":
        case "pop-value":
        case "remove-value":
            return "option ".concat(n, ", deselected.");
        case "clear":
            return "All selected options have been cleared.";
        case "initial-input-focus":
            return "option".concat(i.length > 1 ? "s" : "", " ").concat(i.join(","), ", selected.");
        case "select-option":
            return o ? "option ".concat(n, " is disabled. Select another option.") : "option ".concat(n, ", selected.");
        default:
            return ""
        }
    },
    onFocus: function(t) {
        var r = t.context
          , a = t.focused
          , n = t.options
          , i = t.label
          , o = i === void 0 ? "" : i
          , s = t.selectValue
          , l = t.isDisabled
          , u = t.isSelected
          , c = function(p, f) {
            return p && p.length ? "".concat(p.indexOf(f) + 1, " of ").concat(p.length) : ""
        };
        if (r === "value" && s)
            return "value ".concat(o, " focused, ").concat(c(s, a), ".");
        if (r === "menu") {
            var d = l ? " disabled" : ""
              , v = "".concat(u ? "selected" : "focused").concat(d);
            return "option ".concat(o, " ").concat(v, ", ").concat(c(n, a), ".")
        }
        return ""
    },
    onFilter: function(t) {
        var r = t.inputValue
          , a = t.resultsMessage;
        return "".concat(a).concat(r ? " for search term " + r : "", ".")
    }
}
  , jce = function(t) {
    var r = t.ariaSelection
      , a = t.focusedOption
      , n = t.focusedValue
      , i = t.focusableOptions
      , o = t.isFocused
      , s = t.selectValue
      , l = t.selectProps
      , u = t.id
      , c = l.ariaLiveMessages
      , d = l.getOptionLabel
      , v = l.inputValue
      , h = l.isMulti
      , p = l.isOptionDisabled
      , f = l.isSearchable
      , _ = l.menuIsOpen
      , y = l.options
      , g = l.screenReaderStatus
      , m = l.tabSelectsValue
      , w = l["aria-label"]
      , C = l["aria-live"]
      , b = q.useMemo(function() {
        return _e(_e({}, Gce), c || {})
    }, [c])
      , x = q.useMemo(function() {
        var R = "";
        if (r && b.onChange) {
            var O = r.option
              , M = r.options
              , N = r.removedValue
              , B = r.removedValues
              , D = r.value
              , V = function(se) {
                return Array.isArray(se) ? null : se
            }
              , J = N || O || V(D)
              , Y = J ? d(J) : ""
              , G = M || B || void 0
              , Z = G ? G.map(d) : []
              , ie = _e({
                isDisabled: J && p(J, s),
                label: Y,
                labels: Z
            }, r);
            R = b.onChange(ie)
        }
        return R
    }, [r, b, p, s, d])
      , E = q.useMemo(function() {
        var R = ""
          , O = a || n
          , M = !!(a && s && s.includes(a));
        if (O && b.onFocus) {
            var N = {
                focused: O,
                label: d(O),
                isDisabled: p(O, s),
                isSelected: M,
                options: i,
                context: O === a ? "menu" : "value",
                selectValue: s
            };
            R = b.onFocus(N)
        }
        return R
    }, [a, n, d, p, b, i, s])
      , k = q.useMemo(function() {
        var R = "";
        if (_ && y.length && b.onFilter) {
            var O = g({
                count: i.length
            });
            R = b.onFilter({
                inputValue: v,
                resultsMessage: O
            })
        }
        return R
    }, [i, v, _, b, y, g])
      , A = q.useMemo(function() {
        var R = "";
        if (b.guidance) {
            var O = n ? "value" : _ ? "menu" : "input";
            R = b.guidance({
                "aria-label": w,
                context: O,
                isDisabled: a && p(a, s),
                isMulti: h,
                isSearchable: f,
                tabSelectsValue: m
            })
        }
        return R
    }, [w, a, n, h, p, f, _, b, s, m])
      , I = "".concat(E, " ").concat(k, " ").concat(A)
      , T = Je(q.Fragment, null, Je("span", {
        id: "aria-selection"
    }, x), Je("span", {
        id: "aria-context"
    }, I))
      , F = (r == null ? void 0 : r.action) === "initial-input-focus";
    return Je(q.Fragment, null, Je(Cx, {
        id: u
    }, F && T), Je(Cx, {
        "aria-live": C,
        "aria-atomic": "false",
        "aria-relevant": "additions text"
    }, o && !F && T))
}
  , Hce = jce
  , Tw = [{
    base: "A",
    letters: "AⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ"
}, {
    base: "AA",
    letters: "Ꜳ"
}, {
    base: "AE",
    letters: "ÆǼǢ"
}, {
    base: "AO",
    letters: "Ꜵ"
}, {
    base: "AU",
    letters: "Ꜷ"
}, {
    base: "AV",
    letters: "ꜸꜺ"
}, {
    base: "AY",
    letters: "Ꜽ"
}, {
    base: "B",
    letters: "BⒷＢḂḄḆɃƂƁ"
}, {
    base: "C",
    letters: "CⒸＣĆĈĊČÇḈƇȻꜾ"
}, {
    base: "D",
    letters: "DⒹＤḊĎḌḐḒḎĐƋƊƉꝹ"
}, {
    base: "DZ",
    letters: "ǱǄ"
}, {
    base: "Dz",
    letters: "ǲǅ"
}, {
    base: "E",
    letters: "EⒺＥÈÉÊỀẾỄỂẼĒḔḖĔĖËẺĚȄȆẸỆȨḜĘḘḚƐƎ"
}, {
    base: "F",
    letters: "FⒻＦḞƑꝻ"
}, {
    base: "G",
    letters: "GⒼＧǴĜḠĞĠǦĢǤƓꞠꝽꝾ"
}, {
    base: "H",
    letters: "HⒽＨĤḢḦȞḤḨḪĦⱧⱵꞍ"
}, {
    base: "I",
    letters: "IⒾＩÌÍÎĨĪĬİÏḮỈǏȈȊỊĮḬƗ"
}, {
    base: "J",
    letters: "JⒿＪĴɈ"
}, {
    base: "K",
    letters: "KⓀＫḰǨḲĶḴƘⱩꝀꝂꝄꞢ"
}, {
    base: "L",
    letters: "LⓁＬĿĹĽḶḸĻḼḺŁȽⱢⱠꝈꝆꞀ"
}, {
    base: "LJ",
    letters: "Ǉ"
}, {
    base: "Lj",
    letters: "ǈ"
}, {
    base: "M",
    letters: "MⓂＭḾṀṂⱮƜ"
}, {
    base: "N",
    letters: "NⓃＮǸŃÑṄŇṆŅṊṈȠƝꞐꞤ"
}, {
    base: "NJ",
    letters: "Ǌ"
}, {
    base: "Nj",
    letters: "ǋ"
}, {
    base: "O",
    letters: "OⓄＯÒÓÔỒỐỖỔÕṌȬṎŌṐṒŎȮȰÖȪỎŐǑȌȎƠỜỚỠỞỢỌỘǪǬØǾƆƟꝊꝌ"
}, {
    base: "OI",
    letters: "Ƣ"
}, {
    base: "OO",
    letters: "Ꝏ"
}, {
    base: "OU",
    letters: "Ȣ"
}, {
    base: "P",
    letters: "PⓅＰṔṖƤⱣꝐꝒꝔ"
}, {
    base: "Q",
    letters: "QⓆＱꝖꝘɊ"
}, {
    base: "R",
    letters: "RⓇＲŔṘŘȐȒṚṜŖṞɌⱤꝚꞦꞂ"
}, {
    base: "S",
    letters: "SⓈＳẞŚṤŜṠŠṦṢṨȘŞⱾꞨꞄ"
}, {
    base: "T",
    letters: "TⓉＴṪŤṬȚŢṰṮŦƬƮȾꞆ"
}, {
    base: "TZ",
    letters: "Ꜩ"
}, {
    base: "U",
    letters: "UⓊＵÙÚÛŨṸŪṺŬÜǛǗǕǙỦŮŰǓȔȖƯỪỨỮỬỰỤṲŲṶṴɄ"
}, {
    base: "V",
    letters: "VⓋＶṼṾƲꝞɅ"
}, {
    base: "VY",
    letters: "Ꝡ"
}, {
    base: "W",
    letters: "WⓌＷẀẂŴẆẄẈⱲ"
}, {
    base: "X",
    letters: "XⓍＸẊẌ"
}, {
    base: "Y",
    letters: "YⓎＹỲÝŶỸȲẎŸỶỴƳɎỾ"
}, {
    base: "Z",
    letters: "ZⓏＺŹẐŻŽẒẔƵȤⱿⱫꝢ"
}, {
    base: "a",
    letters: "aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐ"
}, {
    base: "aa",
    letters: "ꜳ"
}, {
    base: "ae",
    letters: "æǽǣ"
}, {
    base: "ao",
    letters: "ꜵ"
}, {
    base: "au",
    letters: "ꜷ"
}, {
    base: "av",
    letters: "ꜹꜻ"
}, {
    base: "ay",
    letters: "ꜽ"
}, {
    base: "b",
    letters: "bⓑｂḃḅḇƀƃɓ"
}, {
    base: "c",
    letters: "cⓒｃćĉċčçḉƈȼꜿↄ"
}, {
    base: "d",
    letters: "dⓓｄḋďḍḑḓḏđƌɖɗꝺ"
}, {
    base: "dz",
    letters: "ǳǆ"
}, {
    base: "e",
    letters: "eⓔｅèéêềếễểẽēḕḗĕėëẻěȅȇẹệȩḝęḙḛɇɛǝ"
}, {
    base: "f",
    letters: "fⓕｆḟƒꝼ"
}, {
    base: "g",
    letters: "gⓖｇǵĝḡğġǧģǥɠꞡᵹꝿ"
}, {
    base: "h",
    letters: "hⓗｈĥḣḧȟḥḩḫẖħⱨⱶɥ"
}, {
    base: "hv",
    letters: "ƕ"
}, {
    base: "i",
    letters: "iⓘｉìíîĩīĭïḯỉǐȉȋịįḭɨı"
}, {
    base: "j",
    letters: "jⓙｊĵǰɉ"
}, {
    base: "k",
    letters: "kⓚｋḱǩḳķḵƙⱪꝁꝃꝅꞣ"
}, {
    base: "l",
    letters: "lⓛｌŀĺľḷḹļḽḻſłƚɫⱡꝉꞁꝇ"
}, {
    base: "lj",
    letters: "ǉ"
}, {
    base: "m",
    letters: "mⓜｍḿṁṃɱɯ"
}, {
    base: "n",
    letters: "nⓝｎǹńñṅňṇņṋṉƞɲŉꞑꞥ"
}, {
    base: "nj",
    letters: "ǌ"
}, {
    base: "o",
    letters: "oⓞｏòóôồốỗổõṍȭṏōṑṓŏȯȱöȫỏőǒȍȏơờớỡởợọộǫǭøǿɔꝋꝍɵ"
}, {
    base: "oi",
    letters: "ƣ"
}, {
    base: "ou",
    letters: "ȣ"
}, {
    base: "oo",
    letters: "ꝏ"
}, {
    base: "p",
    letters: "pⓟｐṕṗƥᵽꝑꝓꝕ"
}, {
    base: "q",
    letters: "qⓠｑɋꝗꝙ"
}, {
    base: "r",
    letters: "rⓡｒŕṙřȑȓṛṝŗṟɍɽꝛꞧꞃ"
}, {
    base: "s",
    letters: "sⓢｓßśṥŝṡšṧṣṩșşȿꞩꞅẛ"
}, {
    base: "t",
    letters: "tⓣｔṫẗťṭțţṱṯŧƭʈⱦꞇ"
}, {
    base: "tz",
    letters: "ꜩ"
}, {
    base: "u",
    letters: "uⓤｕùúûũṹūṻŭüǜǘǖǚủůűǔȕȗưừứữửựụṳųṷṵʉ"
}, {
    base: "v",
    letters: "vⓥｖṽṿʋꝟʌ"
}, {
    base: "vy",
    letters: "ꝡ"
}, {
    base: "w",
    letters: "wⓦｗẁẃŵẇẅẘẉⱳ"
}, {
    base: "x",
    letters: "xⓧｘẋẍ"
}, {
    base: "y",
    letters: "yⓨｙỳýŷỹȳẏÿỷẙỵƴɏỿ"
}, {
    base: "z",
    letters: "zⓩｚźẑżžẓẕƶȥɀⱬꝣ"
}]
  , Wce = new RegExp("[" + Tw.map(function(e) {
    return e.letters
}).join("") + "]","g")
  , eN = {};
for (var Fp = 0; Fp < Tw.length; Fp++)
    for (var Op = Tw[Fp], Pp = 0; Pp < Op.letters.length; Pp++)
        eN[Op.letters[Pp]] = Op.base;
var tN = function(t) {
    return t.replace(Wce, function(r) {
        return eN[r]
    })
}
  , Yce = Vce(tN)
  , Sx = function(t) {
    return t.replace(/^\s+|\s+$/g, "")
}
  , Jce = function(t) {
    return "".concat(t.label, " ").concat(t.value)
}
  , Kce = function(t) {
    return function(r, a) {
        if (r.data.__isNew__)
            return !0;
        var n = _e({
            ignoreCase: !0,
            ignoreAccents: !0,
            stringify: Jce,
            trim: !0,
            matchFrom: "any"
        }, t)
          , i = n.ignoreCase
          , o = n.ignoreAccents
          , s = n.stringify
          , l = n.trim
          , u = n.matchFrom
          , c = l ? Sx(a) : a
          , d = l ? Sx(s(r)) : s(r);
        return i && (c = c.toLowerCase(),
        d = d.toLowerCase()),
        o && (c = Yce(c),
        d = tN(d)),
        u === "start" ? d.substr(0, c.length) === c : d.indexOf(c) > -1
    }
}
  , Qce = ["innerRef"];
function Zce(e) {
    var t = e.innerRef
      , r = Zr(e, Qce)
      , a = xue(r, "onExited", "in", "enter", "exit", "appear");
    return Je("input", Ie({
        ref: t
    }, a, {
        css: X2({
            label: "dummyInput",
            background: 0,
            border: 0,
            caretColor: "transparent",
            fontSize: "inherit",
            gridArea: "1 / 1 / 2 / 3",
            outline: 0,
            padding: 0,
            width: 1,
            color: "transparent",
            left: -100,
            opacity: 0,
            position: "relative",
            transform: "scale(.01)"
        }, "", "")
    }))
}
var Xce = function(t) {
    t.cancelable && t.preventDefault(),
    t.stopPropagation()
};
function ede(e) {
    var t = e.isEnabled
      , r = e.onBottomArrive
      , a = e.onBottomLeave
      , n = e.onTopArrive
      , i = e.onTopLeave
      , o = q.useRef(!1)
      , s = q.useRef(!1)
      , l = q.useRef(0)
      , u = q.useRef(null)
      , c = q.useCallback(function(_, y) {
        if (u.current !== null) {
            var g = u.current
              , m = g.scrollTop
              , w = g.scrollHeight
              , C = g.clientHeight
              , b = u.current
              , x = y > 0
              , E = w - C - m
              , k = !1;
            E > y && o.current && (a && a(_),
            o.current = !1),
            x && s.current && (i && i(_),
            s.current = !1),
            x && y > E ? (r && !o.current && r(_),
            b.scrollTop = w,
            k = !0,
            o.current = !0) : !x && -y > m && (n && !s.current && n(_),
            b.scrollTop = 0,
            k = !0,
            s.current = !0),
            k && Xce(_)
        }
    }, [r, a, n, i])
      , d = q.useCallback(function(_) {
        c(_, _.deltaY)
    }, [c])
      , v = q.useCallback(function(_) {
        l.current = _.changedTouches[0].clientY
    }, [])
      , h = q.useCallback(function(_) {
        var y = l.current - _.changedTouches[0].clientY;
        c(_, y)
    }, [c])
      , p = q.useCallback(function(_) {
        if (_) {
            var y = bue ? {
                passive: !1
            } : !1;
            _.addEventListener("wheel", d, y),
            _.addEventListener("touchstart", v, y),
            _.addEventListener("touchmove", h, y)
        }
    }, [h, v, d])
      , f = q.useCallback(function(_) {
        _ && (_.removeEventListener("wheel", d, !1),
        _.removeEventListener("touchstart", v, !1),
        _.removeEventListener("touchmove", h, !1))
    }, [h, v, d]);
    return q.useEffect(function() {
        if (t) {
            var _ = u.current;
            return p(_),
            function() {
                f(_)
            }
        }
    }, [t, p, f]),
    function(_) {
        u.current = _
    }
}
var xx = ["boxSizing", "height", "overflow", "paddingRight", "position"]
  , Ax = {
    boxSizing: "border-box",
    overflow: "hidden",
    position: "relative",
    height: "100%"
};
function Ex(e) {
    e.preventDefault()
}
function kx(e) {
    e.stopPropagation()
}
function Tx() {
    var e = this.scrollTop
      , t = this.scrollHeight
      , r = e + this.offsetHeight;
    e === 0 ? this.scrollTop = 1 : r === t && (this.scrollTop = e - 1)
}
function Nx() {
    return "ontouchstart"in window || navigator.maxTouchPoints
}
var Mx = !!(typeof window < "u" && window.document && window.document.createElement)
  , zu = 0
  , al = {
    capture: !1,
    passive: !1
};
function tde(e) {
    var t = e.isEnabled
      , r = e.accountForScrollbars
      , a = r === void 0 ? !0 : r
      , n = q.useRef({})
      , i = q.useRef(null)
      , o = q.useCallback(function(l) {
        if (Mx) {
            var u = document.body
              , c = u && u.style;
            if (a && xx.forEach(function(p) {
                var f = c && c[p];
                n.current[p] = f
            }),
            a && zu < 1) {
                var d = parseInt(n.current.paddingRight, 10) || 0
                  , v = document.body ? document.body.clientWidth : 0
                  , h = window.innerWidth - v + d || 0;
                Object.keys(Ax).forEach(function(p) {
                    var f = Ax[p];
                    c && (c[p] = f)
                }),
                c && (c.paddingRight = "".concat(h, "px"))
            }
            u && Nx() && (u.addEventListener("touchmove", Ex, al),
            l && (l.addEventListener("touchstart", Tx, al),
            l.addEventListener("touchmove", kx, al))),
            zu += 1
        }
    }, [a])
      , s = q.useCallback(function(l) {
        if (Mx) {
            var u = document.body
              , c = u && u.style;
            zu = Math.max(zu - 1, 0),
            a && zu < 1 && xx.forEach(function(d) {
                var v = n.current[d];
                c && (c[d] = v)
            }),
            u && Nx() && (u.removeEventListener("touchmove", Ex, al),
            l && (l.removeEventListener("touchstart", Tx, al),
            l.removeEventListener("touchmove", kx, al)))
        }
    }, [a]);
    return q.useEffect(function() {
        if (t) {
            var l = i.current;
            return o(l),
            function() {
                s(l)
            }
        }
    }, [t, o, s]),
    function(l) {
        i.current = l
    }
}
var rde = function(t) {
    var r = t.target;
    return r.ownerDocument.activeElement && r.ownerDocument.activeElement.blur()
}
  , ade = {
    name: "1kfdb0e",
    styles: "position:fixed;left:0;bottom:0;right:0;top:0"
};
function nde(e) {
    var t = e.children
      , r = e.lockEnabled
      , a = e.captureEnabled
      , n = a === void 0 ? !0 : a
      , i = e.onBottomArrive
      , o = e.onBottomLeave
      , s = e.onTopArrive
      , l = e.onTopLeave
      , u = ede({
        isEnabled: n,
        onBottomArrive: i,
        onBottomLeave: o,
        onTopArrive: s,
        onTopLeave: l
    })
      , c = tde({
        isEnabled: r
    })
      , d = function(h) {
        u(h),
        c(h)
    };
    return Je(q.Fragment, null, r && Je("div", {
        onClick: rde,
        css: ade
    }), t(d))
}
var ide = {
    name: "1a0ro4n-requiredInput",
    styles: "label:requiredInput;opacity:0;pointer-events:none;position:absolute;bottom:0;left:0;right:0;width:100%"
}
  , ode = function(t) {
    var r = t.name
      , a = t.onFocus;
    return Je("input", {
        required: !0,
        name: r,
        tabIndex: -1,
        "aria-hidden": "true",
        onFocus: a,
        css: ide,
        value: "",
        onChange: function() {}
    })
}
  , sde = ode
  , lde = function(t) {
    return t.label
}
  , rN = function(t) {
    return t.label
}
  , aN = function(t) {
    return t.value
}
  , ude = function(t) {
    return !!t.isDisabled
}
  , cde = {
    clearIndicator: Zue,
    container: Vue,
    control: ice,
    dropdownIndicator: Kue,
    group: uce,
    groupHeading: dce,
    indicatorsContainer: jue,
    indicatorSeparator: ece,
    input: fce,
    loadingIndicator: ace,
    loadingMessage: Pue,
    menu: Nue,
    menuList: Uue,
    menuPortal: Lue,
    multiValue: _ce,
    multiValueLabel: bce,
    multiValueRemove: Cce,
    noOptionsMessage: Oue,
    option: Tce,
    placeholder: Ice,
    singleValue: Fce,
    valueContainer: zue
}
  , dde = {
    primary: "#2684FF",
    primary75: "#4C9AFF",
    primary50: "#B2D4FF",
    primary25: "#DEEBFF",
    danger: "#DE350B",
    dangerLight: "#FFBDAD",
    neutral0: "hsl(0, 0%, 100%)",
    neutral5: "hsl(0, 0%, 95%)",
    neutral10: "hsl(0, 0%, 90%)",
    neutral20: "hsl(0, 0%, 80%)",
    neutral30: "hsl(0, 0%, 70%)",
    neutral40: "hsl(0, 0%, 60%)",
    neutral50: "hsl(0, 0%, 50%)",
    neutral60: "hsl(0, 0%, 40%)",
    neutral70: "hsl(0, 0%, 30%)",
    neutral80: "hsl(0, 0%, 20%)",
    neutral90: "hsl(0, 0%, 10%)"
}
  , vde = 4
  , nN = 4
  , hde = 38
  , mde = nN * 2
  , fde = {
    baseUnit: nN,
    controlHeight: hde,
    menuGutter: mde
}
  , Bp = {
    borderRadius: vde,
    colors: dde,
    spacing: fde
}
  , pde = {
    "aria-live": "polite",
    backspaceRemovesValue: !0,
    blurInputOnSelect: gx(),
    captureMenuScroll: !gx(),
    classNames: {},
    closeMenuOnSelect: !0,
    closeMenuOnScroll: !1,
    components: {},
    controlShouldRenderValue: !0,
    escapeClearsValue: !1,
    filterOption: Kce(),
    formatGroupLabel: lde,
    getOptionLabel: rN,
    getOptionValue: aN,
    isDisabled: !1,
    isLoading: !1,
    isMulti: !1,
    isRtl: !1,
    isSearchable: !0,
    isOptionDisabled: ude,
    loadingMessage: function() {
        return "Loading..."
    },
    maxMenuHeight: 300,
    minMenuHeight: 140,
    menuIsOpen: !1,
    menuPlacement: "bottom",
    menuPosition: "absolute",
    menuShouldBlockScroll: !1,
    menuShouldScrollIntoView: !gue(),
    noOptionsMessage: function() {
        return "No options"
    },
    openMenuOnFocus: !1,
    openMenuOnClick: !0,
    options: [],
    pageSize: 5,
    placeholder: "Select...",
    screenReaderStatus: function(t) {
        var r = t.count;
        return "".concat(r, " result").concat(r !== 1 ? "s" : "", " available")
    },
    styles: {},
    tabIndex: 0,
    tabSelectsValue: !0,
    unstyled: !1
};
function Ix(e, t, r, a) {
    var n = lN(e, t, r)
      , i = uN(e, t, r)
      , o = sN(e, t)
      , s = rm(e, t);
    return {
        type: "option",
        data: t,
        isDisabled: n,
        isSelected: i,
        label: o,
        value: s,
        index: a
    }
}
function iN(e, t) {
    return e.options.map(function(r, a) {
        if ("options"in r) {
            var n = r.options.map(function(o, s) {
                return Ix(e, o, t, s)
            }).filter(function(o) {
                return Dx(e, o)
            });
            return n.length > 0 ? {
                type: "group",
                data: r,
                options: n,
                index: a
            } : void 0
        }
        var i = Ix(e, r, t, a);
        return Dx(e, i) ? i : void 0
    }).filter(Cue)
}
function oN(e) {
    return e.reduce(function(t, r) {
        return r.type === "group" ? t.push.apply(t, Jr(r.options.map(function(a) {
            return a.data
        }))) : t.push(r.data),
        t
    }, [])
}
function yde(e, t) {
    return oN(iN(e, t))
}
function Dx(e, t) {
    var r = e.inputValue
      , a = r === void 0 ? "" : r
      , n = t.data
      , i = t.isSelected
      , o = t.label
      , s = t.value;
    return (!dN(e) || !i) && cN(e, {
        label: o,
        value: s,
        data: n
    }, a)
}
function wde(e, t) {
    var r = e.focusedValue
      , a = e.selectValue
      , n = a.indexOf(r);
    if (n > -1) {
        var i = t.indexOf(r);
        if (i > -1)
            return r;
        if (n < t.length)
            return t[n]
    }
    return null
}
function gde(e, t) {
    var r = e.focusedOption;
    return r && t.indexOf(r) > -1 ? r : t[0]
}
var sN = function(t, r) {
    return t.getOptionLabel(r)
}
  , rm = function(t, r) {
    return t.getOptionValue(r)
};
function lN(e, t, r) {
    return typeof e.isOptionDisabled == "function" ? e.isOptionDisabled(t, r) : !1
}
function uN(e, t, r) {
    if (r.indexOf(t) > -1)
        return !0;
    if (typeof e.isOptionSelected == "function")
        return e.isOptionSelected(t, r);
    var a = rm(e, t);
    return r.some(function(n) {
        return rm(e, n) === a
    })
}
function cN(e, t, r) {
    return e.filterOption ? e.filterOption(t, r) : !0
}
var dN = function(t) {
    var r = t.hideSelectedOptions
      , a = t.isMulti;
    return r === void 0 ? a : r
}
  , _de = 1
  , n0 = function(e) {
    Bm(r, e);
    var t = Rm(r);
    function r(a) {
        var n;
        if (Om(this, r),
        n = t.call(this, a),
        n.state = {
            ariaSelection: null,
            focusedOption: null,
            focusedValue: null,
            inputIsHidden: !1,
            isFocused: !1,
            selectValue: [],
            clearFocusValueOnUpdate: !1,
            prevWasFocused: !1,
            inputIsHiddenAfterUpdate: void 0,
            prevProps: void 0
        },
        n.blockOptionHover = !1,
        n.isComposing = !1,
        n.commonProps = void 0,
        n.initialTouchX = 0,
        n.initialTouchY = 0,
        n.instancePrefix = "",
        n.openAfterFocus = !1,
        n.scrollToFocusedOptionOnUpdate = !1,
        n.userIsDragging = void 0,
        n.controlRef = null,
        n.getControlRef = function(s) {
            n.controlRef = s
        }
        ,
        n.focusedOptionRef = null,
        n.getFocusedOptionRef = function(s) {
            n.focusedOptionRef = s
        }
        ,
        n.menuListRef = null,
        n.getMenuListRef = function(s) {
            n.menuListRef = s
        }
        ,
        n.inputRef = null,
        n.getInputRef = function(s) {
            n.inputRef = s
        }
        ,
        n.focus = n.focusInput,
        n.blur = n.blurInput,
        n.onChange = function(s, l) {
            var u = n.props
              , c = u.onChange
              , d = u.name;
            l.name = d,
            n.ariaOnChange(s, l),
            c(s, l)
        }
        ,
        n.setValue = function(s, l, u) {
            var c = n.props
              , d = c.closeMenuOnSelect
              , v = c.isMulti
              , h = c.inputValue;
            n.onInputChange("", {
                action: "set-value",
                prevInputValue: h
            }),
            d && (n.setState({
                inputIsHiddenAfterUpdate: !v
            }),
            n.onMenuClose()),
            n.setState({
                clearFocusValueOnUpdate: !0
            }),
            n.onChange(s, {
                action: l,
                option: u
            })
        }
        ,
        n.selectOption = function(s) {
            var l = n.props
              , u = l.blurInputOnSelect
              , c = l.isMulti
              , d = l.name
              , v = n.state.selectValue
              , h = c && n.isOptionSelected(s, v)
              , p = n.isOptionDisabled(s, v);
            if (h) {
                var f = n.getOptionValue(s);
                n.setValue(v.filter(function(_) {
                    return n.getOptionValue(_) !== f
                }), "deselect-option", s)
            } else if (!p)
                c ? n.setValue([].concat(Jr(v), [s]), "select-option", s) : n.setValue(s, "select-option");
            else {
                n.ariaOnChange(s, {
                    action: "select-option",
                    option: s,
                    name: d
                });
                return
            }
            u && n.blurInput()
        }
        ,
        n.removeValue = function(s) {
            var l = n.props.isMulti
              , u = n.state.selectValue
              , c = n.getOptionValue(s)
              , d = u.filter(function(h) {
                return n.getOptionValue(h) !== c
            })
              , v = Zu(l, d, d[0] || null);
            n.onChange(v, {
                action: "remove-value",
                removedValue: s
            }),
            n.focusInput()
        }
        ,
        n.clearValue = function() {
            var s = n.state.selectValue;
            n.onChange(Zu(n.props.isMulti, [], null), {
                action: "clear",
                removedValues: s
            })
        }
        ,
        n.popValue = function() {
            var s = n.props.isMulti
              , l = n.state.selectValue
              , u = l[l.length - 1]
              , c = l.slice(0, l.length - 1)
              , d = Zu(s, c, c[0] || null);
            n.onChange(d, {
                action: "pop-value",
                removedValue: u
            })
        }
        ,
        n.getValue = function() {
            return n.state.selectValue
        }
        ,
        n.cx = function() {
            for (var s = arguments.length, l = new Array(s), u = 0; u < s; u++)
                l[u] = arguments[u];
            return mue.apply(void 0, [n.props.classNamePrefix].concat(l))
        }
        ,
        n.getOptionLabel = function(s) {
            return sN(n.props, s)
        }
        ,
        n.getOptionValue = function(s) {
            return rm(n.props, s)
        }
        ,
        n.getStyles = function(s, l) {
            var u = n.props.unstyled
              , c = cde[s](l, u);
            c.boxSizing = "border-box";
            var d = n.props.styles[s];
            return d ? d(c, l) : c
        }
        ,
        n.getClassNames = function(s, l) {
            var u, c;
            return (u = (c = n.props.classNames)[s]) === null || u === void 0 ? void 0 : u.call(c, l)
        }
        ,
        n.getElementId = function(s) {
            return "".concat(n.instancePrefix, "-").concat(s)
        }
        ,
        n.getComponents = function() {
            return Rce(n.props)
        }
        ,
        n.buildCategorizedOptions = function() {
            return iN(n.props, n.state.selectValue)
        }
        ,
        n.getCategorizedOptions = function() {
            return n.props.menuIsOpen ? n.buildCategorizedOptions() : []
        }
        ,
        n.buildFocusableOptions = function() {
            return oN(n.buildCategorizedOptions())
        }
        ,
        n.getFocusableOptions = function() {
            return n.props.menuIsOpen ? n.buildFocusableOptions() : []
        }
        ,
        n.ariaOnChange = function(s, l) {
            n.setState({
                ariaSelection: _e({
                    value: s
                }, l)
            })
        }
        ,
        n.onMenuMouseDown = function(s) {
            s.button === 0 && (s.stopPropagation(),
            s.preventDefault(),
            n.focusInput())
        }
        ,
        n.onMenuMouseMove = function(s) {
            n.blockOptionHover = !1
        }
        ,
        n.onControlMouseDown = function(s) {
            if (!s.defaultPrevented) {
                var l = n.props.openMenuOnClick;
                n.state.isFocused ? n.props.menuIsOpen ? s.target.tagName !== "INPUT" && s.target.tagName !== "TEXTAREA" && n.onMenuClose() : l && n.openMenu("first") : (l && (n.openAfterFocus = !0),
                n.focusInput()),
                s.target.tagName !== "INPUT" && s.target.tagName !== "TEXTAREA" && s.preventDefault()
            }
        }
        ,
        n.onDropdownIndicatorMouseDown = function(s) {
            if (!(s && s.type === "mousedown" && s.button !== 0) && !n.props.isDisabled) {
                var l = n.props
                  , u = l.isMulti
                  , c = l.menuIsOpen;
                n.focusInput(),
                c ? (n.setState({
                    inputIsHiddenAfterUpdate: !u
                }),
                n.onMenuClose()) : n.openMenu("first"),
                s.preventDefault()
            }
        }
        ,
        n.onClearIndicatorMouseDown = function(s) {
            s && s.type === "mousedown" && s.button !== 0 || (n.clearValue(),
            s.preventDefault(),
            n.openAfterFocus = !1,
            s.type === "touchend" ? n.focusInput() : setTimeout(function() {
                return n.focusInput()
            }))
        }
        ,
        n.onScroll = function(s) {
            typeof n.props.closeMenuOnScroll == "boolean" ? s.target instanceof HTMLElement && yf(s.target) && n.props.onMenuClose() : typeof n.props.closeMenuOnScroll == "function" && n.props.closeMenuOnScroll(s) && n.props.onMenuClose()
        }
        ,
        n.onCompositionStart = function() {
            n.isComposing = !0
        }
        ,
        n.onCompositionEnd = function() {
            n.isComposing = !1
        }
        ,
        n.onTouchStart = function(s) {
            var l = s.touches
              , u = l && l.item(0);
            u && (n.initialTouchX = u.clientX,
            n.initialTouchY = u.clientY,
            n.userIsDragging = !1)
        }
        ,
        n.onTouchMove = function(s) {
            var l = s.touches
              , u = l && l.item(0);
            if (u) {
                var c = Math.abs(u.clientX - n.initialTouchX)
                  , d = Math.abs(u.clientY - n.initialTouchY)
                  , v = 5;
                n.userIsDragging = c > v || d > v
            }
        }
        ,
        n.onTouchEnd = function(s) {
            n.userIsDragging || (n.controlRef && !n.controlRef.contains(s.target) && n.menuListRef && !n.menuListRef.contains(s.target) && n.blurInput(),
            n.initialTouchX = 0,
            n.initialTouchY = 0)
        }
        ,
        n.onControlTouchEnd = function(s) {
            n.userIsDragging || n.onControlMouseDown(s)
        }
        ,
        n.onClearIndicatorTouchEnd = function(s) {
            n.userIsDragging || n.onClearIndicatorMouseDown(s)
        }
        ,
        n.onDropdownIndicatorTouchEnd = function(s) {
            n.userIsDragging || n.onDropdownIndicatorMouseDown(s)
        }
        ,
        n.handleInputChange = function(s) {
            var l = n.props.inputValue
              , u = s.currentTarget.value;
            n.setState({
                inputIsHiddenAfterUpdate: !1
            }),
            n.onInputChange(u, {
                action: "input-change",
                prevInputValue: l
            }),
            n.props.menuIsOpen || n.onMenuOpen()
        }
        ,
        n.onInputFocus = function(s) {
            n.props.onFocus && n.props.onFocus(s),
            n.setState({
                inputIsHiddenAfterUpdate: !1,
                isFocused: !0
            }),
            (n.openAfterFocus || n.props.openMenuOnFocus) && n.openMenu("first"),
            n.openAfterFocus = !1
        }
        ,
        n.onInputBlur = function(s) {
            var l = n.props.inputValue;
            if (n.menuListRef && n.menuListRef.contains(document.activeElement)) {
                n.inputRef.focus();
                return
            }
            n.props.onBlur && n.props.onBlur(s),
            n.onInputChange("", {
                action: "input-blur",
                prevInputValue: l
            }),
            n.onMenuClose(),
            n.setState({
                focusedValue: null,
                isFocused: !1
            })
        }
        ,
        n.onOptionHover = function(s) {
            n.blockOptionHover || n.state.focusedOption === s || n.setState({
                focusedOption: s
            })
        }
        ,
        n.shouldHideSelectedOptions = function() {
            return dN(n.props)
        }
        ,
        n.onValueInputFocus = function(s) {
            s.preventDefault(),
            s.stopPropagation(),
            n.focus()
        }
        ,
        n.onKeyDown = function(s) {
            var l = n.props
              , u = l.isMulti
              , c = l.backspaceRemovesValue
              , d = l.escapeClearsValue
              , v = l.inputValue
              , h = l.isClearable
              , p = l.isDisabled
              , f = l.menuIsOpen
              , _ = l.onKeyDown
              , y = l.tabSelectsValue
              , g = l.openMenuOnFocus
              , m = n.state
              , w = m.focusedOption
              , C = m.focusedValue
              , b = m.selectValue;
            if (!p && !(typeof _ == "function" && (_(s),
            s.defaultPrevented))) {
                switch (n.blockOptionHover = !0,
                s.key) {
                case "ArrowLeft":
                    if (!u || v)
                        return;
                    n.focusValue("previous");
                    break;
                case "ArrowRight":
                    if (!u || v)
                        return;
                    n.focusValue("next");
                    break;
                case "Delete":
                case "Backspace":
                    if (v)
                        return;
                    if (C)
                        n.removeValue(C);
                    else {
                        if (!c)
                            return;
                        u ? n.popValue() : h && n.clearValue()
                    }
                    break;
                case "Tab":
                    if (n.isComposing || s.shiftKey || !f || !y || !w || g && n.isOptionSelected(w, b))
                        return;
                    n.selectOption(w);
                    break;
                case "Enter":
                    if (s.keyCode === 229)
                        break;
                    if (f) {
                        if (!w || n.isComposing)
                            return;
                        n.selectOption(w);
                        break
                    }
                    return;
                case "Escape":
                    f ? (n.setState({
                        inputIsHiddenAfterUpdate: !1
                    }),
                    n.onInputChange("", {
                        action: "menu-close",
                        prevInputValue: v
                    }),
                    n.onMenuClose()) : h && d && n.clearValue();
                    break;
                case " ":
                    if (v)
                        return;
                    if (!f) {
                        n.openMenu("first");
                        break
                    }
                    if (!w)
                        return;
                    n.selectOption(w);
                    break;
                case "ArrowUp":
                    f ? n.focusOption("up") : n.openMenu("last");
                    break;
                case "ArrowDown":
                    f ? n.focusOption("down") : n.openMenu("first");
                    break;
                case "PageUp":
                    if (!f)
                        return;
                    n.focusOption("pageup");
                    break;
                case "PageDown":
                    if (!f)
                        return;
                    n.focusOption("pagedown");
                    break;
                case "Home":
                    if (!f)
                        return;
                    n.focusOption("first");
                    break;
                case "End":
                    if (!f)
                        return;
                    n.focusOption("last");
                    break;
                default:
                    return
                }
                s.preventDefault()
            }
        }
        ,
        n.instancePrefix = "react-select-" + (n.props.instanceId || ++_de),
        n.state.selectValue = em(a.value),
        a.menuIsOpen && n.state.selectValue.length) {
            var i = n.buildFocusableOptions()
              , o = i.indexOf(n.state.selectValue[0]);
            n.state.focusedOption = i[o]
        }
        return n
    }
    return Pm(r, [{
        key: "componentDidMount",
        value: function() {
            this.startListeningComposition(),
            this.startListeningToTouch(),
            this.props.closeMenuOnScroll && document && document.addEventListener && document.addEventListener("scroll", this.onScroll, !0),
            this.props.autoFocus && this.focusInput(),
            this.props.menuIsOpen && this.state.focusedOption && this.menuListRef && this.focusedOptionRef && wx(this.menuListRef, this.focusedOptionRef)
        }
    }, {
        key: "componentDidUpdate",
        value: function(n) {
            var i = this.props
              , o = i.isDisabled
              , s = i.menuIsOpen
              , l = this.state.isFocused;
            (l && !o && n.isDisabled || l && s && !n.menuIsOpen) && this.focusInput(),
            l && o && !n.isDisabled ? this.setState({
                isFocused: !1
            }, this.onMenuClose) : !l && !o && n.isDisabled && this.inputRef === document.activeElement && this.setState({
                isFocused: !0
            }),
            this.menuListRef && this.focusedOptionRef && this.scrollToFocusedOptionOnUpdate && (wx(this.menuListRef, this.focusedOptionRef),
            this.scrollToFocusedOptionOnUpdate = !1)
        }
    }, {
        key: "componentWillUnmount",
        value: function() {
            this.stopListeningComposition(),
            this.stopListeningToTouch(),
            document.removeEventListener("scroll", this.onScroll, !0)
        }
    }, {
        key: "onMenuOpen",
        value: function() {
            this.props.onMenuOpen()
        }
    }, {
        key: "onMenuClose",
        value: function() {
            this.onInputChange("", {
                action: "menu-close",
                prevInputValue: this.props.inputValue
            }),
            this.props.onMenuClose()
        }
    }, {
        key: "onInputChange",
        value: function(n, i) {
            this.props.onInputChange(n, i)
        }
    }, {
        key: "focusInput",
        value: function() {
            this.inputRef && this.inputRef.focus()
        }
    }, {
        key: "blurInput",
        value: function() {
            this.inputRef && this.inputRef.blur()
        }
    }, {
        key: "openMenu",
        value: function(n) {
            var i = this
              , o = this.state
              , s = o.selectValue
              , l = o.isFocused
              , u = this.buildFocusableOptions()
              , c = n === "first" ? 0 : u.length - 1;
            if (!this.props.isMulti) {
                var d = u.indexOf(s[0]);
                d > -1 && (c = d)
            }
            this.scrollToFocusedOptionOnUpdate = !(l && this.menuListRef),
            this.setState({
                inputIsHiddenAfterUpdate: !1,
                focusedValue: null,
                focusedOption: u[c]
            }, function() {
                return i.onMenuOpen()
            })
        }
    }, {
        key: "focusValue",
        value: function(n) {
            var i = this.state
              , o = i.selectValue
              , s = i.focusedValue;
            if (this.props.isMulti) {
                this.setState({
                    focusedOption: null
                });
                var l = o.indexOf(s);
                s || (l = -1);
                var u = o.length - 1
                  , c = -1;
                if (o.length) {
                    switch (n) {
                    case "previous":
                        l === 0 ? c = 0 : l === -1 ? c = u : c = l - 1;
                        break;
                    case "next":
                        l > -1 && l < u && (c = l + 1);
                        break
                    }
                    this.setState({
                        inputIsHidden: c !== -1,
                        focusedValue: o[c]
                    })
                }
            }
        }
    }, {
        key: "focusOption",
        value: function() {
            var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "first"
              , i = this.props.pageSize
              , o = this.state.focusedOption
              , s = this.getFocusableOptions();
            if (s.length) {
                var l = 0
                  , u = s.indexOf(o);
                o || (u = -1),
                n === "up" ? l = u > 0 ? u - 1 : s.length - 1 : n === "down" ? l = (u + 1) % s.length : n === "pageup" ? (l = u - i,
                l < 0 && (l = 0)) : n === "pagedown" ? (l = u + i,
                l > s.length - 1 && (l = s.length - 1)) : n === "last" && (l = s.length - 1),
                this.scrollToFocusedOptionOnUpdate = !0,
                this.setState({
                    focusedOption: s[l],
                    focusedValue: null
                })
            }
        }
    }, {
        key: "getTheme",
        value: function() {
            return this.props.theme ? typeof this.props.theme == "function" ? this.props.theme(Bp) : _e(_e({}, Bp), this.props.theme) : Bp
        }
    }, {
        key: "getCommonProps",
        value: function() {
            var n = this.clearValue
              , i = this.cx
              , o = this.getStyles
              , s = this.getClassNames
              , l = this.getValue
              , u = this.selectOption
              , c = this.setValue
              , d = this.props
              , v = d.isMulti
              , h = d.isRtl
              , p = d.options
              , f = this.hasValue();
            return {
                clearValue: n,
                cx: i,
                getStyles: o,
                getClassNames: s,
                getValue: l,
                hasValue: f,
                isMulti: v,
                isRtl: h,
                options: p,
                selectOption: u,
                selectProps: d,
                setValue: c,
                theme: this.getTheme()
            }
        }
    }, {
        key: "hasValue",
        value: function() {
            var n = this.state.selectValue;
            return n.length > 0
        }
    }, {
        key: "hasOptions",
        value: function() {
            return !!this.getFocusableOptions().length
        }
    }, {
        key: "isClearable",
        value: function() {
            var n = this.props
              , i = n.isClearable
              , o = n.isMulti;
            return i === void 0 ? o : i
        }
    }, {
        key: "isOptionDisabled",
        value: function(n, i) {
            return lN(this.props, n, i)
        }
    }, {
        key: "isOptionSelected",
        value: function(n, i) {
            return uN(this.props, n, i)
        }
    }, {
        key: "filterOption",
        value: function(n, i) {
            return cN(this.props, n, i)
        }
    }, {
        key: "formatOptionLabel",
        value: function(n, i) {
            if (typeof this.props.formatOptionLabel == "function") {
                var o = this.props.inputValue
                  , s = this.state.selectValue;
                return this.props.formatOptionLabel(n, {
                    context: i,
                    inputValue: o,
                    selectValue: s
                })
            } else
                return this.getOptionLabel(n)
        }
    }, {
        key: "formatGroupLabel",
        value: function(n) {
            return this.props.formatGroupLabel(n)
        }
    }, {
        key: "startListeningComposition",
        value: function() {
            document && document.addEventListener && (document.addEventListener("compositionstart", this.onCompositionStart, !1),
            document.addEventListener("compositionend", this.onCompositionEnd, !1))
        }
    }, {
        key: "stopListeningComposition",
        value: function() {
            document && document.removeEventListener && (document.removeEventListener("compositionstart", this.onCompositionStart),
            document.removeEventListener("compositionend", this.onCompositionEnd))
        }
    }, {
        key: "startListeningToTouch",
        value: function() {
            document && document.addEventListener && (document.addEventListener("touchstart", this.onTouchStart, !1),
            document.addEventListener("touchmove", this.onTouchMove, !1),
            document.addEventListener("touchend", this.onTouchEnd, !1))
        }
    }, {
        key: "stopListeningToTouch",
        value: function() {
            document && document.removeEventListener && (document.removeEventListener("touchstart", this.onTouchStart),
            document.removeEventListener("touchmove", this.onTouchMove),
            document.removeEventListener("touchend", this.onTouchEnd))
        }
    }, {
        key: "renderInput",
        value: function() {
            var n = this.props
              , i = n.isDisabled
              , o = n.isSearchable
              , s = n.inputId
              , l = n.inputValue
              , u = n.tabIndex
              , c = n.form
              , d = n.menuIsOpen
              , v = n.required
              , h = this.getComponents()
              , p = h.Input
              , f = this.state
              , _ = f.inputIsHidden
              , y = f.ariaSelection
              , g = this.commonProps
              , m = s || this.getElementId("input")
              , w = _e(_e(_e({
                "aria-autocomplete": "list",
                "aria-expanded": d,
                "aria-haspopup": !0,
                "aria-errormessage": this.props["aria-errormessage"],
                "aria-invalid": this.props["aria-invalid"],
                "aria-label": this.props["aria-label"],
                "aria-labelledby": this.props["aria-labelledby"],
                "aria-required": v,
                role: "combobox"
            }, d && {
                "aria-controls": this.getElementId("listbox"),
                "aria-owns": this.getElementId("listbox")
            }), !o && {
                "aria-readonly": !0
            }), this.hasValue() ? (y == null ? void 0 : y.action) === "initial-input-focus" && {
                "aria-describedby": this.getElementId("live-region")
            } : {
                "aria-describedby": this.getElementId("placeholder")
            });
            return o ? q.createElement(p, Ie({}, g, {
                autoCapitalize: "none",
                autoComplete: "off",
                autoCorrect: "off",
                id: m,
                innerRef: this.getInputRef,
                isDisabled: i,
                isHidden: _,
                onBlur: this.onInputBlur,
                onChange: this.handleInputChange,
                onFocus: this.onInputFocus,
                spellCheck: "false",
                tabIndex: u,
                form: c,
                type: "text",
                value: l
            }, w)) : q.createElement(Zce, Ie({
                id: m,
                innerRef: this.getInputRef,
                onBlur: this.onInputBlur,
                onChange: Xh,
                onFocus: this.onInputFocus,
                disabled: i,
                tabIndex: u,
                inputMode: "none",
                form: c,
                value: ""
            }, w))
        }
    }, {
        key: "renderPlaceholderOrValue",
        value: function() {
            var n = this
              , i = this.getComponents()
              , o = i.MultiValue
              , s = i.MultiValueContainer
              , l = i.MultiValueLabel
              , u = i.MultiValueRemove
              , c = i.SingleValue
              , d = i.Placeholder
              , v = this.commonProps
              , h = this.props
              , p = h.controlShouldRenderValue
              , f = h.isDisabled
              , _ = h.isMulti
              , y = h.inputValue
              , g = h.placeholder
              , m = this.state
              , w = m.selectValue
              , C = m.focusedValue
              , b = m.isFocused;
            if (!this.hasValue() || !p)
                return y ? null : q.createElement(d, Ie({}, v, {
                    key: "placeholder",
                    isDisabled: f,
                    isFocused: b,
                    innerProps: {
                        id: this.getElementId("placeholder")
                    }
                }), g);
            if (_)
                return w.map(function(E, k) {
                    var A = E === C
                      , I = "".concat(n.getOptionLabel(E), "-").concat(n.getOptionValue(E));
                    return q.createElement(o, Ie({}, v, {
                        components: {
                            Container: s,
                            Label: l,
                            Remove: u
                        },
                        isFocused: A,
                        isDisabled: f,
                        key: I,
                        index: k,
                        removeProps: {
                            onClick: function() {
                                return n.removeValue(E)
                            },
                            onTouchEnd: function() {
                                return n.removeValue(E)
                            },
                            onMouseDown: function(F) {
                                F.preventDefault()
                            }
                        },
                        data: E
                    }), n.formatOptionLabel(E, "value"))
                });
            if (y)
                return null;
            var x = w[0];
            return q.createElement(c, Ie({}, v, {
                data: x,
                isDisabled: f
            }), this.formatOptionLabel(x, "value"))
        }
    }, {
        key: "renderClearIndicator",
        value: function() {
            var n = this.getComponents()
              , i = n.ClearIndicator
              , o = this.commonProps
              , s = this.props
              , l = s.isDisabled
              , u = s.isLoading
              , c = this.state.isFocused;
            if (!this.isClearable() || !i || l || !this.hasValue() || u)
                return null;
            var d = {
                onMouseDown: this.onClearIndicatorMouseDown,
                onTouchEnd: this.onClearIndicatorTouchEnd,
                "aria-hidden": "true"
            };
            return q.createElement(i, Ie({}, o, {
                innerProps: d,
                isFocused: c
            }))
        }
    }, {
        key: "renderLoadingIndicator",
        value: function() {
            var n = this.getComponents()
              , i = n.LoadingIndicator
              , o = this.commonProps
              , s = this.props
              , l = s.isDisabled
              , u = s.isLoading
              , c = this.state.isFocused;
            if (!i || !u)
                return null;
            var d = {
                "aria-hidden": "true"
            };
            return q.createElement(i, Ie({}, o, {
                innerProps: d,
                isDisabled: l,
                isFocused: c
            }))
        }
    }, {
        key: "renderIndicatorSeparator",
        value: function() {
            var n = this.getComponents()
              , i = n.DropdownIndicator
              , o = n.IndicatorSeparator;
            if (!i || !o)
                return null;
            var s = this.commonProps
              , l = this.props.isDisabled
              , u = this.state.isFocused;
            return q.createElement(o, Ie({}, s, {
                isDisabled: l,
                isFocused: u
            }))
        }
    }, {
        key: "renderDropdownIndicator",
        value: function() {
            var n = this.getComponents()
              , i = n.DropdownIndicator;
            if (!i)
                return null;
            var o = this.commonProps
              , s = this.props.isDisabled
              , l = this.state.isFocused
              , u = {
                onMouseDown: this.onDropdownIndicatorMouseDown,
                onTouchEnd: this.onDropdownIndicatorTouchEnd,
                "aria-hidden": "true"
            };
            return q.createElement(i, Ie({}, o, {
                innerProps: u,
                isDisabled: s,
                isFocused: l
            }))
        }
    }, {
        key: "renderMenu",
        value: function() {
            var n = this
              , i = this.getComponents()
              , o = i.Group
              , s = i.GroupHeading
              , l = i.Menu
              , u = i.MenuList
              , c = i.MenuPortal
              , d = i.LoadingMessage
              , v = i.NoOptionsMessage
              , h = i.Option
              , p = this.commonProps
              , f = this.state.focusedOption
              , _ = this.props
              , y = _.captureMenuScroll
              , g = _.inputValue
              , m = _.isLoading
              , w = _.loadingMessage
              , C = _.minMenuHeight
              , b = _.maxMenuHeight
              , x = _.menuIsOpen
              , E = _.menuPlacement
              , k = _.menuPosition
              , A = _.menuPortalTarget
              , I = _.menuShouldBlockScroll
              , T = _.menuShouldScrollIntoView
              , F = _.noOptionsMessage
              , R = _.onMenuScrollToTop
              , O = _.onMenuScrollToBottom;
            if (!x)
                return null;
            var M = function(G, Z) {
                var ie = G.type
                  , re = G.data
                  , se = G.isDisabled
                  , ce = G.isSelected
                  , ue = G.label
                  , oe = G.value
                  , me = f === re
                  , xe = se ? void 0 : function() {
                    return n.onOptionHover(re)
                }
                  , pe = se ? void 0 : function() {
                    return n.selectOption(re)
                }
                  , be = "".concat(n.getElementId("option"), "-").concat(Z)
                  , H = {
                    id: be,
                    onClick: pe,
                    onMouseMove: xe,
                    onMouseOver: xe,
                    tabIndex: -1
                };
                return q.createElement(h, Ie({}, p, {
                    innerProps: H,
                    data: re,
                    isDisabled: se,
                    isSelected: ce,
                    key: be,
                    label: ue,
                    type: ie,
                    value: oe,
                    isFocused: me,
                    innerRef: me ? n.getFocusedOptionRef : void 0
                }), n.formatOptionLabel(G.data, "menu"))
            }, N;
            if (this.hasOptions())
                N = this.getCategorizedOptions().map(function(Y) {
                    if (Y.type === "group") {
                        var G = Y.data
                          , Z = Y.options
                          , ie = Y.index
                          , re = "".concat(n.getElementId("group"), "-").concat(ie)
                          , se = "".concat(re, "-heading");
                        return q.createElement(o, Ie({}, p, {
                            key: re,
                            data: G,
                            options: Z,
                            Heading: s,
                            headingProps: {
                                id: se,
                                data: Y.data
                            },
                            label: n.formatGroupLabel(Y.data)
                        }), Y.options.map(function(ce) {
                            return M(ce, "".concat(ie, "-").concat(ce.index))
                        }))
                    } else if (Y.type === "option")
                        return M(Y, "".concat(Y.index))
                });
            else if (m) {
                var B = w({
                    inputValue: g
                });
                if (B === null)
                    return null;
                N = q.createElement(d, p, B)
            } else {
                var D = F({
                    inputValue: g
                });
                if (D === null)
                    return null;
                N = q.createElement(v, p, D)
            }
            var V = {
                minMenuHeight: C,
                maxMenuHeight: b,
                menuPlacement: E,
                menuPosition: k,
                menuShouldScrollIntoView: T
            }
              , J = q.createElement(Mue, Ie({}, p, V), function(Y) {
                var G = Y.ref
                  , Z = Y.placerProps
                  , ie = Z.placement
                  , re = Z.maxHeight;
                return q.createElement(l, Ie({}, p, V, {
                    innerRef: G,
                    innerProps: {
                        onMouseDown: n.onMenuMouseDown,
                        onMouseMove: n.onMenuMouseMove,
                        id: n.getElementId("listbox")
                    },
                    isLoading: m,
                    placement: ie
                }), q.createElement(nde, {
                    captureEnabled: y,
                    onTopArrive: R,
                    onBottomArrive: O,
                    lockEnabled: I
                }, function(se) {
                    return q.createElement(u, Ie({}, p, {
                        innerRef: function(ue) {
                            n.getMenuListRef(ue),
                            se(ue)
                        },
                        isLoading: m,
                        maxHeight: re,
                        focusedOption: f
                    }), N)
                }))
            });
            return A || k === "fixed" ? q.createElement(c, Ie({}, p, {
                appendTo: A,
                controlElement: this.controlRef,
                menuPlacement: E,
                menuPosition: k
            }), J) : J
        }
    }, {
        key: "renderFormField",
        value: function() {
            var n = this
              , i = this.props
              , o = i.delimiter
              , s = i.isDisabled
              , l = i.isMulti
              , u = i.name
              , c = i.required
              , d = this.state.selectValue;
            if (c && !this.hasValue() && !s)
                return q.createElement(sde, {
                    name: u,
                    onFocus: this.onValueInputFocus
                });
            if (!(!u || s))
                if (l)
                    if (o) {
                        var v = d.map(function(f) {
                            return n.getOptionValue(f)
                        }).join(o);
                        return q.createElement("input", {
                            name: u,
                            type: "hidden",
                            value: v
                        })
                    } else {
                        var h = d.length > 0 ? d.map(function(f, _) {
                            return q.createElement("input", {
                                key: "i-".concat(_),
                                name: u,
                                type: "hidden",
                                value: n.getOptionValue(f)
                            })
                        }) : q.createElement("input", {
                            name: u,
                            type: "hidden",
                            value: ""
                        });
                        return q.createElement("div", null, h)
                    }
                else {
                    var p = d[0] ? this.getOptionValue(d[0]) : "";
                    return q.createElement("input", {
                        name: u,
                        type: "hidden",
                        value: p
                    })
                }
        }
    }, {
        key: "renderLiveRegion",
        value: function() {
            var n = this.commonProps
              , i = this.state
              , o = i.ariaSelection
              , s = i.focusedOption
              , l = i.focusedValue
              , u = i.isFocused
              , c = i.selectValue
              , d = this.getFocusableOptions();
            return q.createElement(Hce, Ie({}, n, {
                id: this.getElementId("live-region"),
                ariaSelection: o,
                focusedOption: s,
                focusedValue: l,
                isFocused: u,
                selectValue: c,
                focusableOptions: d
            }))
        }
    }, {
        key: "render",
        value: function() {
            var n = this.getComponents()
              , i = n.Control
              , o = n.IndicatorsContainer
              , s = n.SelectContainer
              , l = n.ValueContainer
              , u = this.props
              , c = u.className
              , d = u.id
              , v = u.isDisabled
              , h = u.menuIsOpen
              , p = this.state.isFocused
              , f = this.commonProps = this.getCommonProps();
            return q.createElement(s, Ie({}, f, {
                className: c,
                innerProps: {
                    id: d,
                    onKeyDown: this.onKeyDown
                },
                isDisabled: v,
                isFocused: p
            }), this.renderLiveRegion(), q.createElement(i, Ie({}, f, {
                innerRef: this.getControlRef,
                innerProps: {
                    onMouseDown: this.onControlMouseDown,
                    onTouchEnd: this.onControlTouchEnd
                },
                isDisabled: v,
                isFocused: p,
                menuIsOpen: h
            }), q.createElement(l, Ie({}, f, {
                isDisabled: v
            }), this.renderPlaceholderOrValue(), this.renderInput()), q.createElement(o, Ie({}, f, {
                isDisabled: v
            }), this.renderClearIndicator(), this.renderLoadingIndicator(), this.renderIndicatorSeparator(), this.renderDropdownIndicator())), this.renderMenu(), this.renderFormField())
        }
    }], [{
        key: "getDerivedStateFromProps",
        value: function(n, i) {
            var o = i.prevProps
              , s = i.clearFocusValueOnUpdate
              , l = i.inputIsHiddenAfterUpdate
              , u = i.ariaSelection
              , c = i.isFocused
              , d = i.prevWasFocused
              , v = n.options
              , h = n.value
              , p = n.menuIsOpen
              , f = n.inputValue
              , _ = n.isMulti
              , y = em(h)
              , g = {};
            if (o && (h !== o.value || v !== o.options || p !== o.menuIsOpen || f !== o.inputValue)) {
                var m = p ? yde(n, y) : []
                  , w = s ? wde(i, y) : null
                  , C = gde(i, m);
                g = {
                    selectValue: y,
                    focusedOption: C,
                    focusedValue: w,
                    clearFocusValueOnUpdate: !1
                }
            }
            var b = l != null && n !== o ? {
                inputIsHidden: l,
                inputIsHiddenAfterUpdate: void 0
            } : {}
              , x = u
              , E = c && d;
            return c && !E && (x = {
                value: Zu(_, y, y[0] || null),
                options: y,
                action: "initial-input-focus"
            },
            E = !d),
            (u == null ? void 0 : u.action) === "initial-input-focus" && (x = null),
            _e(_e(_e({}, g), b), {}, {
                prevProps: n,
                ariaSelection: x,
                prevWasFocused: E
            })
        }
    }]),
    r
}(q.Component);
n0.defaultProps = pde;
var bde = q.forwardRef(function(e, t) {
    var r = xT(e);
    return q.createElement(n0, Ie({
        ref: t
    }, r))
})
  , Cde = bde
  , Sde = ["allowCreateWhileLoading", "createOptionPosition", "formatCreateLabel", "isValidNewOption", "getNewOptionData", "onCreateOption", "options", "onChange"]
  , Ux = function() {
    var t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : ""
      , r = arguments.length > 1 ? arguments[1] : void 0
      , a = arguments.length > 2 ? arguments[2] : void 0
      , n = String(t).toLowerCase()
      , i = String(a.getOptionValue(r)).toLowerCase()
      , o = String(a.getOptionLabel(r)).toLowerCase();
    return i === n || o === n
}
  , Rp = {
    formatCreateLabel: function(t) {
        return 'Create "'.concat(t, '"')
    },
    isValidNewOption: function(t, r, a, n) {
        return !(!t || r.some(function(i) {
            return Ux(t, i, n)
        }) || a.some(function(i) {
            return Ux(t, i, n)
        }))
    },
    getNewOptionData: function(t, r) {
        return {
            label: r,
            value: t,
            __isNew__: !0
        }
    }
};
function xde(e) {
    var t = e.allowCreateWhileLoading
      , r = t === void 0 ? !1 : t
      , a = e.createOptionPosition
      , n = a === void 0 ? "last" : a
      , i = e.formatCreateLabel
      , o = i === void 0 ? Rp.formatCreateLabel : i
      , s = e.isValidNewOption
      , l = s === void 0 ? Rp.isValidNewOption : s
      , u = e.getNewOptionData
      , c = u === void 0 ? Rp.getNewOptionData : u
      , d = e.onCreateOption
      , v = e.options
      , h = v === void 0 ? [] : v
      , p = e.onChange
      , f = Zr(e, Sde)
      , _ = f.getOptionValue
      , y = _ === void 0 ? aN : _
      , g = f.getOptionLabel
      , m = g === void 0 ? rN : g
      , w = f.inputValue
      , C = f.isLoading
      , b = f.isMulti
      , x = f.value
      , E = f.name
      , k = q.useMemo(function() {
        return l(w, em(x), h, {
            getOptionValue: y,
            getOptionLabel: m
        }) ? c(w, o(w)) : void 0
    }, [o, c, m, y, w, l, h, x])
      , A = q.useMemo(function() {
        return (r || !C) && k ? n === "first" ? [k].concat(Jr(h)) : [].concat(Jr(h), [k]) : h
    }, [r, n, C, k, h])
      , I = q.useCallback(function(T, F) {
        if (F.action !== "select-option")
            return p(T, F);
        var R = Array.isArray(T) ? T : [T];
        if (R[R.length - 1] === k) {
            if (d)
                d(w);
            else {
                var O = c(w, w)
                  , M = {
                    action: "create-option",
                    name: E,
                    option: O
                };
                p(Zu(b, [].concat(Jr(em(x)), [O]), O), M)
            }
            return
        }
        p(T, F)
    }, [c, w, b, E, k, d, p, x]);
    return _e(_e({}, f), {}, {
        options: A,
        onChange: I
    })
}
var Ade = q.forwardRef(function(e, t) {
    var r = xT(e)
      , a = xde(r);
    return q.createElement(n0, Ie({
        ref: t
    }, a))
})
  , Ede = Ade;
const Fx = () => S.jsx("svg", {
    width: "19",
    height: "11",
    viewBox: "0 0 19 11",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    children: S.jsx("g", {
        id: "Vector",
        children: S.jsx("path", {
            id: "Vector_2",
            d: "M8.54679 10.124L0.960297 2.50498C0.4419 1.98415 0.4419 1.13998 0.960297 0.619382C1.47869 0.0985512 2.31947 0.0985512 2.83785 0.619383L9.48578 7.29583L16.1337 0.619383C16.6521 0.0985519 17.4929 0.0985519 18.0113 0.619383C18.5297 1.14 18.5297 1.98417 18.0113 2.50498L10.4248 10.124C9.90638 10.6446 9.06517 10.6446 8.54679 10.124Z",
            fill: "#002769"
        })
    })
});
function Cu(e) {
    const {name: t, value: r, isRequired: a, onFocus: n, onBlur: i, label: o, message: s, placeholder: l, onChange: u, options: c, isValid: d, isSearchable: v, allowInput: h} = e
      , [p,f] = q.useState(!1)
      , _ = () => {
        n && n(),
        f(!0)
    }
      , y = () => {
        i && i(),
        f(!1)
    }
      , g = m => {
        u && u(m)
    }
    ;
    return S.jsxs("div", {
        className: `form-field form-field__select${d ? "" : " form-field__error"}`,
        children: [S.jsxs("label", {
            className: "form-field__label-container",
            children: [S.jsx("p", {
                className: "form-field__label",
                children: o
            }), h ? S.jsx(Ede, {
                isSearchable: v ?? !1,
                className: "form-field-select__container",
                classNamePrefix: "form-field-select",
                instanceId: o,
                isFocused: p,
                isValid: d,
                "aria-required": a,
                "aria-invalid": !d,
                "aria-describedby": s,
                "aria-labelledby": o,
                value: r,
                onFocus: _,
                onBlur: y,
                onChange: g,
                placeholder: l,
                options: c,
                components: {
                    DropdownIndicator: Fx
                }
            }) : S.jsx(Cde, {
                isSearchable: v ?? !1,
                className: "form-field-select__container",
                classNamePrefix: "form-field-select",
                instanceId: o,
                isFocused: p,
                isValid: d,
                "aria-required": a,
                "aria-invalid": !d,
                "aria-describedby": s,
                "aria-labelledby": o,
                value: r,
                onFocus: _,
                onBlur: y,
                onChange: g,
                placeholder: l,
                options: c,
                components: {
                    DropdownIndicator: Fx
                }
            })]
        }), !!s && S.jsx("p", {
            className: "form-field__message",
            children: s
        })]
    })
}
const Ox = [{
    label: "1 year",
    value: 1
}, {
    label: "2 years",
    value: 2
}, {
    label: "3 years",
    value: 3
}, {
    label: "4 years",
    value: 4
}, {
    label: "5 years",
    value: 5
}];
function i0({value: e, onChange: t, handleAnalytics: r}) {
    const a = Ox.find(i => i.value === e)
      , n = i => {
        if (t)
            return t(i.value)
    }
    ;
    return S.jsx(Cu, {
        label: "Years Left in School",
        value: a,
        options: Ox,
        onBlur: () => r("Years Until Graduation"),
        onChange: n
    })
}
function kde(e, t) {
    var r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1
      , a = new Set;
    function n(i, o) {
        var s = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1
          , l = a.has(i);
        if (bm(!l, "Warning: There may be circular references"),
        l)
            return !1;
        if (i === o)
            return !0;
        if (r && s > 1)
            return !1;
        a.add(i);
        var u = s + 1;
        if (Array.isArray(i)) {
            if (!Array.isArray(o) || i.length !== o.length)
                return !1;
            for (var c = 0; c < i.length; c++)
                if (!n(i[c], o[c], u))
                    return !1;
            return !0
        }
        if (i && o && Na(i) === "object" && Na(o) === "object") {
            var d = Object.keys(i);
            return d.length !== Object.keys(o).length ? !1 : d.every(function(v) {
                return n(i[v], o[v], u)
            })
        }
        return !1
    }
    return n(e, t)
}
var qs = q.createContext({
    min: 0,
    max: 0,
    direction: "ltr",
    step: 1,
    includedStart: 0,
    includedEnd: 0,
    tabIndex: 0,
    keyboard: !0,
    styles: {},
    classNames: {}
})
  , Le = {
    MAC_ENTER: 3,
    BACKSPACE: 8,
    TAB: 9,
    NUM_CENTER: 12,
    ENTER: 13,
    SHIFT: 16,
    CTRL: 17,
    ALT: 18,
    PAUSE: 19,
    CAPS_LOCK: 20,
    ESC: 27,
    SPACE: 32,
    PAGE_UP: 33,
    PAGE_DOWN: 34,
    END: 35,
    HOME: 36,
    LEFT: 37,
    UP: 38,
    RIGHT: 39,
    DOWN: 40,
    PRINT_SCREEN: 44,
    INSERT: 45,
    DELETE: 46,
    ZERO: 48,
    ONE: 49,
    TWO: 50,
    THREE: 51,
    FOUR: 52,
    FIVE: 53,
    SIX: 54,
    SEVEN: 55,
    EIGHT: 56,
    NINE: 57,
    QUESTION_MARK: 63,
    A: 65,
    B: 66,
    C: 67,
    D: 68,
    E: 69,
    F: 70,
    G: 71,
    H: 72,
    I: 73,
    J: 74,
    K: 75,
    L: 76,
    M: 77,
    N: 78,
    O: 79,
    P: 80,
    Q: 81,
    R: 82,
    S: 83,
    T: 84,
    U: 85,
    V: 86,
    W: 87,
    X: 88,
    Y: 89,
    Z: 90,
    META: 91,
    WIN_KEY_RIGHT: 92,
    CONTEXT_MENU: 93,
    NUM_ZERO: 96,
    NUM_ONE: 97,
    NUM_TWO: 98,
    NUM_THREE: 99,
    NUM_FOUR: 100,
    NUM_FIVE: 101,
    NUM_SIX: 102,
    NUM_SEVEN: 103,
    NUM_EIGHT: 104,
    NUM_NINE: 105,
    NUM_MULTIPLY: 106,
    NUM_PLUS: 107,
    NUM_MINUS: 109,
    NUM_PERIOD: 110,
    NUM_DIVISION: 111,
    F1: 112,
    F2: 113,
    F3: 114,
    F4: 115,
    F5: 116,
    F6: 117,
    F7: 118,
    F8: 119,
    F9: 120,
    F10: 121,
    F11: 122,
    F12: 123,
    NUMLOCK: 144,
    SEMICOLON: 186,
    DASH: 189,
    EQUALS: 187,
    COMMA: 188,
    PERIOD: 190,
    SLASH: 191,
    APOSTROPHE: 192,
    SINGLE_QUOTE: 222,
    OPEN_SQUARE_BRACKET: 219,
    BACKSLASH: 220,
    CLOSE_SQUARE_BRACKET: 221,
    WIN_KEY: 224,
    MAC_FF_META: 224,
    WIN_IME: 229,
    isTextModifyingKeyEvent: function(t) {
        var r = t.keyCode;
        if (t.altKey && !t.ctrlKey || t.metaKey || r >= Le.F1 && r <= Le.F12)
            return !1;
        switch (r) {
        case Le.ALT:
        case Le.CAPS_LOCK:
        case Le.CONTEXT_MENU:
        case Le.CTRL:
        case Le.DOWN:
        case Le.END:
        case Le.ESC:
        case Le.HOME:
        case Le.INSERT:
        case Le.LEFT:
        case Le.MAC_FF_META:
        case Le.META:
        case Le.NUMLOCK:
        case Le.NUM_CENTER:
        case Le.PAGE_DOWN:
        case Le.PAGE_UP:
        case Le.PAUSE:
        case Le.PRINT_SCREEN:
        case Le.RIGHT:
        case Le.SHIFT:
        case Le.UP:
        case Le.WIN_KEY:
        case Le.WIN_KEY_RIGHT:
            return !1;
        default:
            return !0
        }
    },
    isCharacterKey: function(t) {
        if (t >= Le.ZERO && t <= Le.NINE || t >= Le.NUM_ZERO && t <= Le.NUM_MULTIPLY || t >= Le.A && t <= Le.Z || window.navigator.userAgent.indexOf("WebKit") !== -1 && t === 0)
            return !0;
        switch (t) {
        case Le.SPACE:
        case Le.QUESTION_MARK:
        case Le.NUM_PLUS:
        case Le.NUM_MINUS:
        case Le.NUM_PERIOD:
        case Le.NUM_DIVISION:
        case Le.SEMICOLON:
        case Le.DASH:
        case Le.EQUALS:
        case Le.COMMA:
        case Le.PERIOD:
        case Le.SLASH:
        case Le.APOSTROPHE:
        case Le.SINGLE_QUOTE:
        case Le.OPEN_SQUARE_BRACKET:
        case Le.BACKSLASH:
        case Le.CLOSE_SQUARE_BRACKET:
            return !0;
        default:
            return !1
        }
    }
};
function Nw(e, t, r) {
    return (e - t) / (r - t)
}
function o0(e, t, r, a) {
    var n = Nw(t, r, a)
      , i = {};
    switch (e) {
    case "rtl":
        i.right = "".concat(n * 100, "%"),
        i.transform = "translateX(50%)";
        break;
    case "btt":
        i.bottom = "".concat(n * 100, "%"),
        i.transform = "translateY(50%)";
        break;
    case "ttb":
        i.top = "".concat(n * 100, "%"),
        i.transform = "translateY(-50%)";
        break;
    default:
        i.left = "".concat(n * 100, "%"),
        i.transform = "translateX(-50%)";
        break
    }
    return i
}
function Cl(e, t) {
    return Array.isArray(e) ? e[t] : e
}
var Tde = ["prefixCls", "value", "valueIndex", "onStartMove", "style", "render", "dragging", "onOffsetChange"]
  , Nde = q.forwardRef(function(e, t) {
    var r, a, n = e.prefixCls, i = e.value, o = e.valueIndex, s = e.onStartMove, l = e.style, u = e.render, c = e.dragging, d = e.onOffsetChange, v = Zr(e, Tde), h = q.useContext(qs), p = h.min, f = h.max, _ = h.direction, y = h.disabled, g = h.keyboard, m = h.range, w = h.tabIndex, C = h.ariaLabelForHandle, b = h.ariaLabelledByForHandle, x = h.ariaValueTextFormatterForHandle, E = h.styles, k = h.classNames, A = "".concat(n, "-handle"), I = function(M) {
        y || s(M, o)
    }, T = function(M) {
        if (!y && g) {
            var N = null;
            switch (M.which || M.keyCode) {
            case Le.LEFT:
                N = _ === "ltr" || _ === "btt" ? -1 : 1;
                break;
            case Le.RIGHT:
                N = _ === "ltr" || _ === "btt" ? 1 : -1;
                break;
            case Le.UP:
                N = _ !== "ttb" ? 1 : -1;
                break;
            case Le.DOWN:
                N = _ !== "ttb" ? -1 : 1;
                break;
            case Le.HOME:
                N = "min";
                break;
            case Le.END:
                N = "max";
                break;
            case Le.PAGE_UP:
                N = 2;
                break;
            case Le.PAGE_DOWN:
                N = -2;
                break
            }
            N !== null && (M.preventDefault(),
            d(N, o))
        }
    }, F = o0(_, i, p, f), R = q.createElement("div", Ie({
        ref: t,
        className: sa(A, (r = {},
        Ze(r, "".concat(A, "-").concat(o + 1), m),
        Ze(r, "".concat(A, "-dragging"), c),
        r), k.handle),
        style: _e(_e(_e({}, F), l), E.handle),
        onMouseDown: I,
        onTouchStart: I,
        onKeyDown: T,
        tabIndex: y ? null : Cl(w, o),
        role: "slider",
        "aria-valuemin": p,
        "aria-valuemax": f,
        "aria-valuenow": i,
        "aria-disabled": y,
        "aria-label": Cl(C, o),
        "aria-labelledby": Cl(b, o),
        "aria-valuetext": (a = Cl(x, o)) === null || a === void 0 ? void 0 : a(i),
        "aria-orientation": _ === "ltr" || _ === "rtl" ? "horizontal" : "vertical"
    }, v));
    return u && (R = u(R, {
        index: o,
        prefixCls: n,
        value: i,
        dragging: c
    })),
    R
})
  , Mde = ["prefixCls", "style", "onStartMove", "onOffsetChange", "values", "handleRender", "draggingIndex"]
  , Ide = q.forwardRef(function(e, t) {
    var r = e.prefixCls
      , a = e.style
      , n = e.onStartMove
      , i = e.onOffsetChange
      , o = e.values
      , s = e.handleRender
      , l = e.draggingIndex
      , u = Zr(e, Mde)
      , c = q.useRef({});
    return q.useImperativeHandle(t, function() {
        return {
            focus: function(v) {
                var h;
                (h = c.current[v]) === null || h === void 0 || h.focus()
            }
        }
    }),
    q.createElement(q.Fragment, null, o.map(function(d, v) {
        return q.createElement(Nde, Ie({
            ref: function(p) {
                p ? c.current[v] = p : delete c.current[v]
            },
            dragging: l === v,
            prefixCls: r,
            style: Cl(a, v),
            key: v,
            value: d,
            valueIndex: v,
            onStartMove: n,
            onOffsetChange: i,
            render: s
        }, u))
    }))
});
function Px(e) {
    var t = "touches"in e ? e.touches[0] : e;
    return {
        pageX: t.pageX,
        pageY: t.pageY
    }
}
function Dde(e, t, r, a, n, i, o, s, l) {
    var u = q.useState(null)
      , c = qe(u, 2)
      , d = c[0]
      , v = c[1]
      , h = q.useState(-1)
      , p = qe(h, 2)
      , f = p[0]
      , _ = p[1]
      , y = q.useState(r)
      , g = qe(y, 2)
      , m = g[0]
      , w = g[1]
      , C = q.useState(r)
      , b = qe(C, 2)
      , x = b[0]
      , E = b[1]
      , k = q.useRef(null)
      , A = q.useRef(null);
    q.useEffect(function() {
        f === -1 && w(r)
    }, [r, f]),
    q.useEffect(function() {
        return function() {
            document.removeEventListener("mousemove", k.current),
            document.removeEventListener("mouseup", A.current),
            document.removeEventListener("touchmove", k.current),
            document.removeEventListener("touchend", A.current)
        }
    }, []);
    var I = function(N, B) {
        m.some(function(D, V) {
            return D !== N[V]
        }) && (B !== void 0 && v(B),
        w(N),
        o(N))
    }
      , T = function(N, B) {
        if (N === -1) {
            var D = x[0]
              , V = x[x.length - 1]
              , J = a - D
              , Y = n - V
              , G = B * (n - a);
            G = Math.max(G, J),
            G = Math.min(G, Y);
            var Z = i(D + G);
            G = Z - D;
            var ie = x.map(function(ue) {
                return ue + G
            });
            I(ie)
        } else {
            var re = (n - a) * B
              , se = Jr(m);
            se[N] = x[N];
            var ce = l(se, re, N, "dist");
            I(ce.values, ce.value)
        }
    }
      , F = q.useRef(T);
    F.current = T;
    var R = function(N, B) {
        N.stopPropagation();
        var D = r[B];
        _(B),
        v(D),
        E(r);
        var V = Px(N)
          , J = V.pageX
          , Y = V.pageY
          , G = function(re) {
            re.preventDefault();
            var se = Px(re), ce = se.pageX, ue = se.pageY, oe = ce - J, me = ue - Y, xe = e.current.getBoundingClientRect(), pe = xe.width, be = xe.height, H;
            switch (t) {
            case "btt":
                H = -me / be;
                break;
            case "ttb":
                H = me / be;
                break;
            case "rtl":
                H = -oe / pe;
                break;
            default:
                H = oe / pe
            }
            F.current(B, H)
        }
          , Z = function ie(re) {
            re.preventDefault(),
            document.removeEventListener("mouseup", ie),
            document.removeEventListener("mousemove", G),
            document.removeEventListener("touchend", ie),
            document.removeEventListener("touchmove", G),
            k.current = null,
            A.current = null,
            _(-1),
            s()
        };
        document.addEventListener("mouseup", Z),
        document.addEventListener("mousemove", G),
        document.addEventListener("touchend", Z),
        document.addEventListener("touchmove", G),
        k.current = G,
        A.current = Z
    }
      , O = q.useMemo(function() {
        var M = Jr(r).sort(function(B, D) {
            return B - D
        })
          , N = Jr(m).sort(function(B, D) {
            return B - D
        });
        return M.every(function(B, D) {
            return B === N[D]
        }) ? m : r
    }, [r, m]);
    return [f, d, O, R]
}
function Ude(e, t, r, a, n, i) {
    var o = q.useCallback(function(h) {
        var p = isFinite(h) ? h : e;
        return p = Math.min(t, h),
        p = Math.max(e, p),
        p
    }, [e, t])
      , s = q.useCallback(function(h) {
        if (r !== null) {
            var p = e + Math.round((o(h) - e) / r) * r
              , f = function(m) {
                return (String(m).split(".")[1] || "").length
            }
              , _ = Math.max(f(r), f(t), f(e))
              , y = Number(p.toFixed(_));
            return e <= y && y <= t ? y : null
        }
        return null
    }, [r, e, t, o])
      , l = q.useCallback(function(h) {
        var p = o(h)
          , f = a.map(function(g) {
            return g.value
        });
        r !== null && f.push(s(h)),
        f.push(e, t);
        var _ = f[0]
          , y = t - e;
        return f.forEach(function(g) {
            var m = Math.abs(p - g);
            m <= y && (_ = g,
            y = m)
        }),
        _
    }, [e, t, a, r, o, s])
      , u = function h(p, f, _) {
        var y = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : "unit";
        if (typeof f == "number") {
            var g, m = p[_], w = m + f, C = [];
            a.forEach(function(A) {
                C.push(A.value)
            }),
            C.push(e, t),
            C.push(s(m));
            var b = f > 0 ? 1 : -1;
            y === "unit" ? C.push(s(m + b * r)) : C.push(s(w)),
            C = C.filter(function(A) {
                return A !== null
            }).filter(function(A) {
                return f < 0 ? A <= m : A >= m
            }),
            y === "unit" && (C = C.filter(function(A) {
                return A !== m
            }));
            var x = y === "unit" ? m : w;
            g = C[0];
            var E = Math.abs(g - x);
            if (C.forEach(function(A) {
                var I = Math.abs(A - x);
                I < E && (g = A,
                E = I)
            }),
            g === void 0)
                return f < 0 ? e : t;
            if (y === "dist")
                return g;
            if (Math.abs(f) > 1) {
                var k = Jr(p);
                return k[_] = g,
                h(k, f - b, _, y)
            }
            return g
        } else {
            if (f === "min")
                return e;
            if (f === "max")
                return t
        }
    }
      , c = function(p, f, _) {
        var y = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : "unit"
          , g = p[_]
          , m = u(p, f, _, y);
        return {
            value: m,
            changed: m !== g
        }
    }
      , d = function(p) {
        return i === null && p === 0 || typeof i == "number" && p < i
    }
      , v = function(p, f, _) {
        var y = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : "unit"
          , g = p.map(l)
          , m = g[_]
          , w = u(g, f, _, y);
        if (g[_] = w,
        n === !1) {
            var C = i || 0;
            _ > 0 && g[_ - 1] !== m && (g[_] = Math.max(g[_], g[_ - 1] + C)),
            _ < g.length - 1 && g[_ + 1] !== m && (g[_] = Math.min(g[_], g[_ + 1] - C))
        } else if (typeof i == "number" || i === null) {
            for (var b = _ + 1; b < g.length; b += 1)
                for (var x = !0; d(g[b] - g[b - 1]) && x; ) {
                    var E = c(g, 1, b);
                    g[b] = E.value,
                    x = E.changed
                }
            for (var k = _; k > 0; k -= 1)
                for (var A = !0; d(g[k] - g[k - 1]) && A; ) {
                    var I = c(g, -1, k - 1);
                    g[k - 1] = I.value,
                    A = I.changed
                }
            for (var T = g.length - 1; T > 0; T -= 1)
                for (var F = !0; d(g[T] - g[T - 1]) && F; ) {
                    var R = c(g, -1, T - 1);
                    g[T - 1] = R.value,
                    F = R.changed
                }
            for (var O = 0; O < g.length - 1; O += 1)
                for (var M = !0; d(g[O + 1] - g[O]) && M; ) {
                    var N = c(g, 1, O + 1);
                    g[O + 1] = N.value,
                    M = N.changed
                }
        }
        return {
            value: g[_],
            values: g
        }
    };
    return [l, v]
}
function Fde(e) {
    var t = e.prefixCls
      , r = e.style
      , a = e.children
      , n = e.value
      , i = e.onClick
      , o = q.useContext(qs)
      , s = o.min
      , l = o.max
      , u = o.direction
      , c = o.includedStart
      , d = o.includedEnd
      , v = o.included
      , h = "".concat(t, "-text")
      , p = o0(u, n, s, l);
    return q.createElement("span", {
        className: sa(h, Ze({}, "".concat(h, "-active"), v && c <= n && n <= d)),
        style: _e(_e({}, p), r),
        onMouseDown: function(_) {
            _.stopPropagation()
        },
        onClick: function() {
            i(n)
        }
    }, a)
}
function Ode(e) {
    var t = e.prefixCls
      , r = e.marks
      , a = e.onClick
      , n = "".concat(t, "-mark");
    return r.length ? q.createElement("div", {
        className: n
    }, r.map(function(i) {
        var o = i.value
          , s = i.style
          , l = i.label;
        return q.createElement(Fde, {
            key: o,
            prefixCls: n,
            style: s,
            value: o,
            onClick: a
        }, l)
    })) : null
}
function Pde(e) {
    var t = e.prefixCls
      , r = e.value
      , a = e.style
      , n = e.activeStyle
      , i = q.useContext(qs)
      , o = i.min
      , s = i.max
      , l = i.direction
      , u = i.included
      , c = i.includedStart
      , d = i.includedEnd
      , v = "".concat(t, "-dot")
      , h = u && c <= r && r <= d
      , p = _e(_e({}, o0(l, r, o, s)), typeof a == "function" ? a(r) : a);
    return h && (p = _e(_e({}, p), typeof n == "function" ? n(r) : n)),
    q.createElement("span", {
        className: sa(v, Ze({}, "".concat(v, "-active"), h)),
        style: p
    })
}
function Bde(e) {
    var t = e.prefixCls
      , r = e.marks
      , a = e.dots
      , n = e.style
      , i = e.activeStyle
      , o = q.useContext(qs)
      , s = o.min
      , l = o.max
      , u = o.step
      , c = q.useMemo(function() {
        var d = new Set;
        if (r.forEach(function(h) {
            d.add(h.value)
        }),
        a && u !== null)
            for (var v = s; v <= l; )
                d.add(v),
                v += u;
        return Array.from(d)
    }, [s, l, u, a, r]);
    return q.createElement("div", {
        className: "".concat(t, "-step")
    }, c.map(function(d) {
        return q.createElement(Pde, {
            prefixCls: t,
            key: d,
            value: d,
            style: n,
            activeStyle: i
        })
    }))
}
function Bx(e) {
    var t, r = e.prefixCls, a = e.style, n = e.start, i = e.end, o = e.index, s = e.onStartMove, l = e.replaceCls, u = q.useContext(qs), c = u.direction, d = u.min, v = u.max, h = u.disabled, p = u.range, f = u.classNames, _ = "".concat(r, "-track"), y = Nw(n, d, v), g = Nw(i, d, v), m = function(x) {
        !h && s && s(x, -1)
    }, w = {};
    switch (c) {
    case "rtl":
        w.right = "".concat(y * 100, "%"),
        w.width = "".concat(g * 100 - y * 100, "%");
        break;
    case "btt":
        w.bottom = "".concat(y * 100, "%"),
        w.height = "".concat(g * 100 - y * 100, "%");
        break;
    case "ttb":
        w.top = "".concat(y * 100, "%"),
        w.height = "".concat(g * 100 - y * 100, "%");
        break;
    default:
        w.left = "".concat(y * 100, "%"),
        w.width = "".concat(g * 100 - y * 100, "%")
    }
    var C = l || sa(_, (t = {},
    Ze(t, "".concat(_, "-").concat(o + 1), o !== null && p),
    Ze(t, "".concat(r, "-track-draggable"), s),
    t), f.track);
    return q.createElement("div", {
        className: C,
        style: _e(_e({}, w), a),
        onMouseDown: m,
        onTouchStart: m
    })
}
function Rde(e) {
    var t = e.prefixCls
      , r = e.style
      , a = e.values
      , n = e.startPoint
      , i = e.onStartMove
      , o = q.useContext(qs)
      , s = o.included
      , l = o.range
      , u = o.min
      , c = o.styles
      , d = o.classNames
      , v = q.useMemo(function() {
        if (!l) {
            if (a.length === 0)
                return [];
            var p = n ?? u
              , f = a[0];
            return [{
                start: Math.min(p, f),
                end: Math.max(p, f)
            }]
        }
        for (var _ = [], y = 0; y < a.length - 1; y += 1)
            _.push({
                start: a[y],
                end: a[y + 1]
            });
        return _
    }, [a, l, n, u])
      , h = null;
    return (d.tracks || c.tracks) && (h = q.createElement(Bx, {
        index: null,
        prefixCls: t,
        start: v[0].start,
        end: v[v.length - 1].end,
        replaceCls: sa(d.tracks, "".concat(t, "-tracks")),
        style: c.tracks
    })),
    s ? q.createElement(q.Fragment, null, h, v.map(function(p, f) {
        var _ = p.start
          , y = p.end;
        return q.createElement(Bx, {
            index: f,
            prefixCls: t,
            style: _e(_e({}, Cl(r, f)), c.track),
            start: _,
            end: y,
            key: f,
            onStartMove: i
        })
    })) : null
}
var Lde = q.forwardRef(function(e, t) {
    var r, a = e.prefixCls, n = a === void 0 ? "rc-slider" : a, i = e.className, o = e.style, s = e.classNames, l = e.styles, u = e.disabled, c = u === void 0 ? !1 : u, d = e.keyboard, v = d === void 0 ? !0 : d, h = e.autoFocus, p = e.onFocus, f = e.onBlur, _ = e.min, y = _ === void 0 ? 0 : _, g = e.max, m = g === void 0 ? 100 : g, w = e.step, C = w === void 0 ? 1 : w, b = e.value, x = e.defaultValue, E = e.range, k = e.count, A = e.onChange, I = e.onBeforeChange, T = e.onAfterChange, F = e.allowCross, R = F === void 0 ? !0 : F, O = e.pushable, M = O === void 0 ? !1 : O, N = e.draggableTrack, B = e.reverse, D = e.vertical, V = e.included, J = V === void 0 ? !0 : V, Y = e.startPoint, G = e.trackStyle, Z = e.handleStyle, ie = e.railStyle, re = e.dotStyle, se = e.activeDotStyle, ce = e.marks, ue = e.dots, oe = e.handleRender, me = e.tabIndex, xe = me === void 0 ? 0 : me, pe = e.ariaLabelForHandle, be = e.ariaLabelledByForHandle, H = e.ariaValueTextFormatterForHandle, Q = q.useRef(), z = q.useRef(), P = q.useMemo(function() {
        return D ? B ? "ttb" : "btt" : B ? "rtl" : "ltr"
    }, [B, D]), $ = q.useMemo(function() {
        return isFinite(y) ? y : 0
    }, [y]), K = q.useMemo(function() {
        return isFinite(m) ? m : 100
    }, [m]), ae = q.useMemo(function() {
        return C !== null && C <= 0 ? 1 : C
    }, [C]), te = q.useMemo(function() {
        return typeof M == "boolean" ? M ? ae : !1 : M >= 0 ? M : !1
    }, [M, ae]), L = q.useMemo(function() {
        var Ut = Object.keys(ce || {});
        return Ut.map(function(ht) {
            var et = ce[ht]
              , Ht = {
                value: Number(ht)
            };
            return et && Na(et) === "object" && !q.isValidElement(et) && ("label"in et || "style"in et) ? (Ht.style = et.style,
            Ht.label = et.label) : Ht.label = et,
            Ht
        }).filter(function(ht) {
            var et = ht.label;
            return et || typeof et == "number"
        }).sort(function(ht, et) {
            return ht.value - et.value
        })
    }, [ce]), W = Ude($, K, ae, L, R, te), ne = qe(W, 2), le = ne[0], he = ne[1], ve = s7(x, {
        value: b
    }), we = qe(ve, 2), ye = we[0], Ce = we[1], ge = q.useMemo(function() {
        var Ut = ye == null ? [] : Array.isArray(ye) ? ye : [ye]
          , ht = qe(Ut, 1)
          , et = ht[0]
          , Ht = et === void 0 ? $ : et
          , wt = ye === null ? [] : [Ht];
        if (E) {
            if (wt = Jr(Ut),
            k || ye === void 0) {
                var Da = k >= 0 ? k + 1 : 2;
                for (wt = wt.slice(0, Da); wt.length < Da; ) {
                    var Xt;
                    wt.push((Xt = wt[wt.length - 1]) !== null && Xt !== void 0 ? Xt : $)
                }
            }
            wt.sort(function(xr, Qa) {
                return xr - Qa
            })
        }
        return wt.forEach(function(xr, Qa) {
            wt[Qa] = le(xr)
        }),
        wt
    }, [ye, E, $, k, le]), We = q.useRef(ge);
    We.current = ge;
    var He = function(ht) {
        return E ? ht : ht[0]
    }
      , $e = function(ht) {
        var et = Jr(ht).sort(function(Ht, wt) {
            return Ht - wt
        });
        A && !kde(et, We.current, !0) && A(He(et)),
        Ce(et)
    }
      , Ge = function(ht) {
        if (!c) {
            var et = 0
              , Ht = K - $;
            ge.forEach(function(Da, Xt) {
                var xr = Math.abs(ht - Da);
                xr <= Ht && (Ht = xr,
                et = Xt)
            });
            var wt = Jr(ge);
            wt[et] = ht,
            E && !ge.length && k === void 0 && wt.push(ht),
            I == null || I(He(wt)),
            $e(wt),
            T == null || T(He(wt))
        }
    }
      , St = function(ht) {
        ht.preventDefault();
        var et = z.current.getBoundingClientRect(), Ht = et.width, wt = et.height, Da = et.left, Xt = et.top, xr = et.bottom, Qa = et.right, Ji = ht.clientX, _i = ht.clientY, $r;
        switch (P) {
        case "btt":
            $r = (xr - _i) / wt;
            break;
        case "ttb":
            $r = (_i - Xt) / wt;
            break;
        case "rtl":
            $r = (Qa - Ji) / Ht;
            break;
        default:
            $r = (Ji - Da) / Ht
        }
        var mt = $ + $r * (K - $);
        Ge(le(mt))
    }
      , U = q.useState(null)
      , X = qe(U, 2)
      , de = X[0]
      , Ae = X[1]
      , ze = function(ht, et) {
        if (!c) {
            var Ht = he(ge, ht, et);
            I == null || I(He(ge)),
            $e(Ht.values),
            T == null || T(He(Ht.values)),
            Ae(Ht.value)
        }
    };
    q.useEffect(function() {
        if (de !== null) {
            var Ut = ge.indexOf(de);
            Ut >= 0 && Q.current.focus(Ut)
        }
        Ae(null)
    }, [de]);
    var Oe = q.useMemo(function() {
        return N && ae === null ? !1 : N
    }, [N, ae])
      , Xe = function() {
        T == null || T(He(We.current))
    }
      , qr = Dde(z, P, ge, $, K, le, $e, Xe, he)
      , Mr = qe(qr, 4)
      , Qn = Mr[0]
      , pi = Mr[1]
      , _n = Mr[2]
      , Vr = Mr[3]
      , bn = function(ht, et) {
        Vr(ht, et),
        I == null || I(He(We.current))
    }
      , yi = Qn !== -1;
    q.useEffect(function() {
        if (!yi) {
            var Ut = ge.lastIndexOf(pi);
            Q.current.focus(Ut)
        }
    }, [yi]);
    var wa = q.useMemo(function() {
        return Jr(_n).sort(function(Ut, ht) {
            return Ut - ht
        })
    }, [_n])
      , wi = q.useMemo(function() {
        return E ? [wa[0], wa[wa.length - 1]] : [$, wa[0]]
    }, [wa, E, $])
      , gi = qe(wi, 2)
      , Zn = gi[0]
      , ga = gi[1];
    q.useImperativeHandle(t, function() {
        return {
            focus: function() {
                Q.current.focus(0)
            },
            blur: function() {
                var ht = document
                  , et = ht.activeElement;
                z.current.contains(et) && (et == null || et.blur())
            }
        }
    }),
    q.useEffect(function() {
        h && Q.current.focus(0)
    }, []);
    var Cn = q.useMemo(function() {
        return {
            min: $,
            max: K,
            direction: P,
            disabled: c,
            keyboard: v,
            step: ae,
            included: J,
            includedStart: Zn,
            includedEnd: ga,
            range: E,
            tabIndex: xe,
            ariaLabelForHandle: pe,
            ariaLabelledByForHandle: be,
            ariaValueTextFormatterForHandle: H,
            styles: l || {},
            classNames: s || {}
        }
    }, [$, K, P, c, v, ae, J, Zn, ga, E, xe, pe, be, H, l, s]);
    return q.createElement(qs.Provider, {
        value: Cn
    }, q.createElement("div", {
        ref: z,
        className: sa(n, i, (r = {},
        Ze(r, "".concat(n, "-disabled"), c),
        Ze(r, "".concat(n, "-vertical"), D),
        Ze(r, "".concat(n, "-horizontal"), !D),
        Ze(r, "".concat(n, "-with-marks"), L.length),
        r)),
        style: o,
        onMouseDown: St
    }, q.createElement("div", {
        className: sa("".concat(n, "-rail"), s == null ? void 0 : s.rail),
        style: _e(_e({}, ie), l == null ? void 0 : l.rail)
    }), q.createElement(Rde, {
        prefixCls: n,
        style: G,
        values: wa,
        startPoint: Y,
        onStartMove: Oe ? bn : null
    }), q.createElement(Bde, {
        prefixCls: n,
        marks: L,
        dots: ue,
        style: re,
        activeStyle: se
    }), q.createElement(Ide, {
        ref: Q,
        prefixCls: n,
        style: Z,
        values: _n,
        draggingIndex: Qn,
        onStartMove: bn,
        onOffsetChange: ze,
        onFocus: p,
        onBlur: f,
        handleRender: oe
    }), q.createElement(Ode, {
        prefixCls: n,
        marks: L,
        onClick: Ge
    })))
});
function qde(e) {
    const {sliderRef: t, value: r, tooltipContent: a, visible: n, children: i, min: o, max: s} = e
      , [l,u] = q.useState()
      , c = q.useRef()
      , d = q.useRef();
    function v() {
        Ic.cancel(d.current)
    }
    function h() {
        d.current = Ic( () => {
            var p;
            (p = c.current) == null || p.forceAlign()
        }
        )
    }
    return q.useEffect( () => (n ? h() : v(),
    v), [r, n, o, s]),
    q.useEffect( () => {
        n && u(t.current.offsetWidth)
    }
    ),
    S.jsx(iA, {
        overlayInnerStyle: {
            minHeight: "auto",
            width: l
        },
        overlay: r,
        align: {
            points: ["tc", "bc"],
            overflow: {
                shiftY: !1
            },
            offset: [0, 4]
        },
        ref: c,
        visible: n,
        overlayClassName: a ? "" : "tooltip__mini-display rc-tooltip-placement-bottom",
        children: i
    })
}
const Su = RangeSlider = e => {
    const {min: t, max: r, marks: a, step: n, reverse: i, tooltipContent: o, tooltipValue: s, tooltipVisible: l, value: u, onChange: c, onMouseUp: d} = e
      , v = q.useRef()
      , h = q.useMemo( () => Object.keys(a).length !== 2 ? "calculator-slider" : i ? "calculator-slider calculator-slider--marks-adjust-reverse" : "calculator-slider calculator-slider--marks-adjust", [a, i]);
    return S.jsx("div", {
        className: h,
        ref: v,
        children: S.jsx(Lde, {
            handleRender: (p, f) => S.jsx(qde, {
                tooltipContent: o,
                sliderRef: v,
                value: s,
                visible: l,
                min: t,
                max: r,
                children: p
            }),
            reverse: i,
            min: t,
            max: r,
            marks: a,
            defaultValue: u,
            value: u,
            onChange: c,
            onAfterChange: d,
            step: n
        })
    })
}
;
function s0({max: e, onChange: t, value: r, handleAnalytics: a}) {
    return S.jsxs("div", {
        className: "calculator-section__slider-container",
        children: [S.jsx("label", {
            className: "calculator-input-label",
            children: S.jsx(As, {
                anchorText: "Loan Amount",
                children: S.jsx("p", {
                    class: "p-xsmall",
                    children: "The total amount of money you need to borrow to cover the cost of tuition, room and board, and other college expenses."
                })
            })
        }), S.jsx(Su, {
            min: 1,
            max: e,
            marks: {
                1: "KES 1k",
                [e]: `KES ${e}k`
            },
            step: 1,
            tooltipValue: `KES ${r}k`,
            tooltipVisible: !0,
            onChange: t,
            value: r,
            onMouseUp: () => a("Loan Amount")
        })]
    })
}
function vN({terms: e, onChange: t, value: r, handleAnalytics: a}) {
    const n = e.reduce( (o, s, l) => {
        const u = `${s / 12}`;
        return {
            ...o,
            [l]: u
        }
    }
    , {})
      , i = o => t(e[o] / 12);
    return S.jsxs("div", {
        className: "calculator-section__slider-container",
        children: [S.jsx("label", {
            className: "calculator-input-label",
            children: S.jsx(As, {
                anchorText: "Loan Term (In years)",
                children: S.jsx("p", {
                    class: "p-xsmall",
                    children: "How many years you plan to take to pay back the loan once you’re in full repayment. 10 years is the federal standard."
                })
            })
        }), S.jsx(Su, {
            min: 0,
            max: e.length - 1,
            marks: n,
            tooltipVisible: !1,
            onChange: i,
            value: e.indexOf(r * 12),
            onMouseUp: () => a("Loan Term")
        })]
    })
}
const Vde = {
    FD: {
        header: "Deferred Payment",
        text: "No in-school payments required."
    },
    FP: {
        header: "Flat Payment",
        text: "Make $25 payments each month during school to reduce your accrued interest."
    },
    IO: {
        header: "Interest Only",
        text: "Pay the interest charges each month as you go during school"
    },
    PI: {
        header: "Full Principal & Interest Payment",
        text: "Start repaying your principal and interest right away to save the most."
    }
};
function hN({payments: e, onChange: t, value: r, handleAnalytics: a}) {
    const n = Object.keys(e).indexOf(r)
      , i = Object.values(e).reduce( (l, u, c) => ({
        ...l,
        [c]: `$${u.toFixed(0)}`
    }), {})
      , o = l => {
        t(Object.keys(e)[l])
    }
      , s = q.useMemo( () => Vde[r], [r]);
    return S.jsxs("div", {
        className: "calculator-section__slider-container",
        children: [S.jsx("label", {
            className: "calculator-input-label",
            children: S.jsx(As, {
                anchorText: "Make Monthly Payments During School",
                children: S.jsx("p", {
                    class: "p-xsmall",
                    children: "See how making payments in school can help you save money by reducing the total cost of a student loan. In-school payments cannot exceed the calculated full principal + interest amount."
                })
            })
        }), S.jsxs("div", {
            children: [S.jsx(Su, {
                min: 0,
                max: 3,
                marks: i,
                step: 1,
                tooltipVisible: !1,
                onChange: o,
                value: n,
                onMouseUp: () => a("Repayment Option")
            }), S.jsxs("div", {
                className: "calculator-slider__monthly-payment-message",
                children: [S.jsx("div", {
                    className: `calculator-slider__monthly-payment-message--arrow calculator-slider__monthly-payment-message--arrow__${r}`
                }), S.jsxs("div", {
                    className: "calculator-slider__monthly-payment-message--container",
                    children: [S.jsx("p", {
                        className: "calculator-slider__monthly-payment-message--label",
                        children: s.header
                    }), S.jsx("p", {
                        className: "calculator-slider__monthly-payment-message--text",
                        children: s.text
                    })]
                })]
            })]
        })]
    })
}
function wf({value: e, onToggle: t, interestRate: r, handleAnalytics: a}) {
    const n = i => {
        t(i),
        a("Interest Rate Type")
    }
    ;
    return S.jsxs("div", {
        className: "calculator-section__interest-type",
        children: [S.jsx("label", {
            className: "calculator-input-label",
            children: S.jsxs(As, {
                anchorText: "Loan Interest Type",
                children: [S.jsxs("p", {
                    className: "p-xsmall",
                    children: [S.jsx("strong", {
                        children: "Fixed"
                    }), " rates stay the same for the life of the loan but are higher than starting variable rates."]
                }), S.jsxs("p", {
                    className: "p-xsmall",
                    children: [S.jsx("strong", {
                        children: "Variable"
                    }), " rates typically start lower than a fixed rate but are tied to a market index, so they go up and down over time as that index changes."]
                })]
            })
        }), S.jsx(Y2, {
            options: [{
                label: "Variable",
                value: "V"
            }, {
                label: "Fixed",
                value: "F"
            }],
            value: e,
            onToggle: n
        }), S.jsxs("p", {
            className: "calculator-input-label calculator-interest-rate",
            children: [(r == null ? void 0 : r.toFixed(2)) ?? "", "%"]
        })]
    })
}
function mN({handleUpdate: e, state: t}) {
    var a;
    const {sendEvent: r} = gn({
        sourceCode: t.sourceCode
    });
    return S.jsxs("div", {
        className: "calculator-section__input-column",
        children: [S.jsx("h4", {
            className: "h4",
            children: "Estimate Your Loan"
        }), S.jsx("div", {
            className: "calculator-section__input-column-container",
            children: S.jsxs("div", {
                className: "calculator-section__inputs-outer-container",
                children: [S.jsx(i0, {
                    value: t.yearsUntilGraduation,
                    onChange: e.yearsUntilGraduation,
                    handleAnalytics: r
                }), S.jsx("div", {
                    className: "calculator-section__inputs-container background-color__white",
                    children: S.jsxs("div", {
                        className: "calculator-section__inputs-inner-container",
                        children: [S.jsx(s0, {
                            max: t.maxLoanAmount,
                            onChange: e.amount,
                            value: t.amount,
                            handleAnalytics: r
                        }), S.jsx(vN, {
                            terms: t.possibleTerms,
                            onChange: e.term,
                            value: t.term,
                            handleAnalytics: r
                        }), S.jsx(hN, {
                            payments: {
                                FD: 0,
                                FP: 25,
                                IO: t.ioAmount,
                                PI: t.piAmount
                            },
                            onChange: e.repaymentOption,
                            value: t.repaymentOption,
                            handleAnalytics: r
                        })]
                    })
                }), S.jsx(wf, {
                    value: t.rateType,
                    onToggle: e.rateType,
                    interestRate: (a = t.results) == null ? void 0 : a.interestRate,
                    handleAnalytics: r
                })]
            })
        })]
    })
}
function $de() {
    return S.jsx(hf, {
        sourceCode: "CAIS01",
        InputsComponent: mN
    })
}
function zde() {
    return S.jsx(hf, {
        sourceCode: "CAIS03",
        InputsComponent: mN
    })
}
const Rx = [{
    label: "Graduate",
    value: "CAIS02"
}, {
    label: "Dental",
    value: "CAISDE"
}, {
    label: "Medical",
    value: "CAISMD"
}, {
    label: "Law",
    value: "CAISLW"
}, {
    label: "MBA",
    value: "CAISMB"
}, {
    label: "Health Professions",
    value: "CAISGH"
}];
function Gde({value: e, onChange: t, handleAnalytics: r}) {
    const a = Rx.find(i => i.value === e)
      , n = i => {
        if (t)
            return t(i.value)
    }
    ;
    return S.jsx(Cu, {
        label: "Degree Type",
        value: a,
        options: Rx,
        onBlur: () => r("Degree Type"),
        onChange: n
    })
}
function jde({handleUpdate: e, state: t}) {
    var a;
    const {sendEvent: r} = gn({
        sourceCode: t.sourceCode
    });
    return S.jsxs("div", {
        className: "calculator-section__input-column",
        children: [S.jsx("h4", {
            className: "h4",
            children: "Estimate Your Loan"
        }), S.jsx("div", {
            className: "calculator-section__input-column-container",
            children: S.jsxs("div", {
                className: "calculator-section__inputs-outer-container",
                children: [S.jsx(Gde, {
                    value: t.sourceCode,
                    onChange: e.sourceCode,
                    handleAnalytics: r
                }), S.jsx(i0, {
                    value: t.yearsUntilGraduation,
                    onChange: e.yearsUntilGraduation,
                    handleAnalytics: r
                }), S.jsx("div", {
                    className: "calculator-section__inputs-container background-color__white",
                    children: S.jsxs("div", {
                        className: "calculator-section__inputs-inner-container",
                        children: [S.jsx(s0, {
                            max: t.maxLoanAmount,
                            onChange: e.amount,
                            value: t.amount,
                            handleAnalytics: r
                        }), S.jsx(vN, {
                            terms: t.possibleTerms,
                            onChange: e.term,
                            value: t.term,
                            handleAnalytics: r
                        }), S.jsx(hN, {
                            payments: {
                                FD: 0,
                                FP: 25,
                                IO: t.ioAmount,
                                PI: t.piAmount
                            },
                            onChange: e.repaymentOption,
                            value: t.repaymentOption,
                            handleAnalytics: r
                        })]
                    })
                }), S.jsx(wf, {
                    value: t.rateType,
                    onToggle: e.rateType,
                    interestRate: (a = t.results) == null ? void 0 : a.interestRate,
                    handleAnalytics: r
                })]
            })
        })]
    })
}
function Hde() {
    return S.jsx(hf, {
        sourceCode: "CAIS02",
        InputsComponent: jde
    })
}
function Wde({min: e, max: t, onChange: r, value: a, handleAnalytics: n}) {
    return S.jsxs("div", {
        className: "calculator-section__slider-container",
        children: [S.jsx("label", {
            className: "calculator-input-label",
            children: S.jsx(As, {
                anchorText: "Loan Term (In Years)",
                children: S.jsx("p", {
                    class: "p-xsmall",
                    children: "How many years you plan to take to pay back the loan once you’re in full repayment. 10 years is the federal standard."
                })
            })
        }), S.jsx(Su, {
            min: e,
            max: t,
            marks: {
                [e]: `${e} years`,
                [t]: `${t} years`
            },
            step: 1,
            tooltipValue: `${a} years`,
            tooltipVisible: !0,
            onChange: r,
            value: a,
            onMouseUp: () => n("Loan Term")
        })]
    })
}
const Lp = 25;
function Yde({minAmount: e, maxAmount: t, payment: r, onChange: a, value: n}) {
    const i = () => {
        a(n - Lp)
    }
      , o = () => {
        a(n + Lp)
    }
    ;
    return q.useEffect( () => {
        a(0)
    }
    , [t]),
    S.jsxs("div", {
        className: "calculator-parent-incrementor",
        children: [S.jsx(Re, {
            disabled: n === 0,
            className: "calculator-parent-incrementor__button",
            onClick: i,
            "aria-label": "decrease",
            children: "—"
        }), S.jsx("div", {
            className: "calculator-parent-incrementor__loan-amount",
            children: S.jsx("p", {
                className: "calculator-input-label calculator-interest-rate",
                children: dd.format(r)
            })
        }), S.jsx(Re, {
            disabled: parseFloat(r.toFixed(2)) + Lp > t,
            className: "calculator-parent-incrementor__button",
            onClick: o,
            "aria-label": "increase",
            children: "╋"
        })]
    })
}
const Lx = {
    IO: {
        label: "Interest Only",
        text: "Pay interest only during each month you are in school."
    },
    FP: {
        label: "Interest + Flat Pay",
        text: "Pay interest plus an additional amount towards principal each month your child is in school."
    },
    PI: {
        label: "Full Principal and Interest",
        text: "Start repaying your principal and interest right away to save the most."
    }
};
function Jde({minAmount: e, maxAmount: t, payment: r, incrementVal: a, onChange: n, value: i, handleAnalytics: o}) {
    return S.jsxs("div", {
        className: "calculator-section__parent-payment-selector",
        children: [S.jsx("label", {
            children: S.jsx(As, {
                anchorText: "In-School Payment Options",
                children: S.jsx("p", {
                    class: "p-xsmall",
                    children: "See how making payments while your student is in school can help you save money by reducing the total cost of a student loan."
                })
            })
        }), S.jsx("div", {
            children: S.jsx("div", {
                className: "calculator-section__payment-selector-container",
                children: Object.entries(Lx).map( ([s,l]) => {
                    const u = i === s;
                    return S.jsx(Re, {
                        className: `calculator-section__payment-selector-option background-color__${u ? "dark-blue" : "light-gray"}`,
                        onClick: () => {
                            o("Repayment Option"),
                            n.repaymentOption(s)
                        }
                        ,
                        children: S.jsx("div", {
                            className: "calculator-section__payment-selector-message-container",
                            children: S.jsx("p", {
                                className: "calculator-section__payment-selector-message",
                                children: l.label
                            })
                        })
                    })
                }
                )
            })
        }), S.jsxs("div", {
            className: "calculator-slider__parent-payment-message-container",
            children: [S.jsxs("div", {
                className: "calculator-slider__parent-payment-amount-container",
                children: [i !== "FP" && S.jsx("p", {
                    className: `calculator-slider__parent-payment-amount calculator-slider__parent-payment-amount__${i}`,
                    children: dd.format(r)
                }), i === "FP" && S.jsx(Yde, {
                    minAmount: e,
                    maxAmount: t,
                    payment: r,
                    onChange: n.incrementVal,
                    value: a
                })]
            }), S.jsxs("div", {
                className: "calculator-slider__parent-payment-message",
                children: [S.jsx("div", {
                    className: `calculator-slider__parent-payment-message--arrow calculator-slider__parent-payment-message--arrow__${i}`
                }), S.jsx("div", {
                    className: "calculator-slider__parent-payment-message--container",
                    children: S.jsx("p", {
                        className: "calculator-slider__parent-payment-message--text",
                        children: Lx[i].text
                    })
                })]
            })]
        })]
    })
}
function Kde({handleUpdate: e, state: t}) {
    var a;
    const {sendEvent: r} = gn({
        sourceCode: t.sourceCode
    });
    return S.jsxs("div", {
        className: "calculator-section__input-column",
        children: [S.jsx("h4", {
            className: "h4",
            children: "Estimate Your Loan"
        }), S.jsx("div", {
            className: "calculator-section__input-column-container",
            children: S.jsxs("div", {
                className: "calculator-section__inputs-outer-container",
                children: [S.jsx(i0, {
                    value: t.yearsUntilGraduation,
                    onChange: e.yearsUntilGraduation,
                    handleAnalytics: r
                }), S.jsx("div", {
                    className: "calculator-section__inputs-container background-color__white",
                    children: S.jsxs("div", {
                        className: "calculator-section__inputs-inner-container",
                        children: [S.jsx(s0, {
                            max: t.maxLoanAmount,
                            onChange: e.amount,
                            value: t.amount,
                            handleAnalytics: r
                        }), S.jsx(Wde, {
                            min: t.possibleTerms.min,
                            max: t.possibleTerms.max,
                            onChange: e.term,
                            value: t.term,
                            handleAnalytics: r
                        }), S.jsx(Jde, {
                            maxAmount: t.piAmount,
                            minAmount: t.ioAmount,
                            payment: t.results.monthlyInSchoolPmt,
                            incrementVal: t.incrementVal,
                            onChange: e,
                            value: t.repaymentOption,
                            handleAnalytics: r
                        })]
                    })
                }), S.jsx(wf, {
                    value: t.rateType,
                    onToggle: e.rateType,
                    interestRate: (a = t.results) == null ? void 0 : a.interestRate,
                    handleAnalytics: r
                })]
            })
        })]
    })
}
function Qde() {
    return S.jsx(hf, {
        sourceCode: "CAPA01",
        InputsComponent: Kde
    })
}
const qx = StepDisplay = ({currentStep: e}) => S.jsxs("div", {
    className: "refi-step-display__container",
    children: [S.jsxs("div", {
        className: `refi-step-display__step ${e !== "new" ? "background-color__dark-blue" : ""} `,
        children: [S.jsx("p", {
            className: "refi-step-display__copy font-weight-700",
            children: "Step 1"
        }), S.jsx("p", {
            className: "refi-step-display__copy",
            children: "Your Current Loan"
        })]
    }), S.jsxs("div", {
        className: `refi-step-display__step ${e === "new" ? "background-color__dark-blue" : ""} `,
        children: [S.jsx("p", {
            className: "refi-step-display__copy font-weight-700",
            children: "Step 2"
        }), S.jsx("p", {
            className: "refi-step-display__copy",
            children: "Customize Your New Loan"
        })]
    })]
})
  , Vx = [{
    label: "Undergrad",
    value: "UG",
    maxLoanAmount: 150
}, {
    label: "MBA",
    value: "MBA",
    maxLoanAmount: 300
}, {
    label: "Medical (MD, DO)",
    value: "MD",
    maxLoanAmount: 500
}, {
    label: "Pharmacy (PharmD)",
    value: "PD",
    maxLoanAmount: 500
}, {
    label: "Dental (DMD, DDS)",
    value: "DE",
    maxLoanAmount: 500
}, {
    label: "Veterinary (DVM, VMD)",
    value: "VE",
    maxLoanAmount: 500
}, {
    label: "Other Grad (Masters, PhD)",
    value: "Other",
    maxLoanAmount: 300
}];
function Zde({value: e, onChange: t, handleAnalytics: r}) {
    const a = Vx.find(i => i.value === e)
      , n = i => {
        if (t)
            return t(i)
    }
    ;
    return S.jsx(Cu, {
        label: "Refi Loan Type",
        value: a,
        options: Vx,
        onBlur: () => r("Refi Loan Type"),
        onChange: n
    })
}
function Xde({max: e, onChange: t, value: r, handleAnalytics: a}) {
    return S.jsxs("div", {
        className: "calculator-section__slider-container",
        children: [S.jsx("label", {
            className: "calculator-input-label",
            children: "Loan Amount"
        }), S.jsx(Su, {
            min: 1,
            max: e,
            marks: {
                1: "KES 1k",
                [e]: `KES ${e}k`
            },
            step: 1,
            tooltipValue: `KES ${r}k`,
            tooltipVisible: !0,
            onChange: t,
            value: r,
            onMouseUp: () => a("Loan Amount")
        })]
    })
}
function fN({label: e, sublabel: t, min: r, max: a, reverse: n, onChange: i, value: o, handleAnalytics: s}) {
    return S.jsxs("div", {
        className: "calculator-section__slider-container",
        children: [S.jsxs("div", {
            className: "calculator-input-labels-container",
            children: [S.jsx("label", {
                className: "calculator-input-label",
                children: e
            }), !!t && S.jsx("p", {
                className: "calculator-input-sublabel",
                children: t
            })]
        }), S.jsx(Su, {
            reverse: n,
            min: r,
            max: a,
            marks: {
                [r]: `${r} years`,
                [a]: `${a} years`
            },
            step: 1,
            tooltipValue: `${o} years`,
            tooltipVisible: !0,
            onChange: i,
            value: o,
            onMouseUp: () => s(e)
        })]
    })
}
function eve({value: e, onChange: t, isValid: r, message: a, handleAnalytics: n}) {
    return S.jsx(Yc, {
        type: "tel",
        inputMode: "numeric",
        options: _m,
        name: "monthlyPayment",
        label: "Current Monthly Payments",
        placeholder: "",
        value: e,
        isValid: r,
        onChange: t,
        message: a,
        onBlur: () => n("Current Monthly Payments")
    })
}
function $x({state: e, handleUpdate: t}) {
    const {sendEvent: r} = gn({
        sourceCode: e.sourceCode
    });
    return S.jsxs("div", {
        className: "refinance-calculator__calculate-columns-container",
        children: [S.jsx("div", {
            className: "refinance-calculator__calculate-left-column",
            children: S.jsxs("div", {
                className: "refinance-calculator__calculate-column",
                children: [S.jsx(Zde, {
                    value: e.loanType,
                    onChange: t.loanType,
                    handleAnalytics: r
                }), S.jsx("div", {
                    className: "refinance-calculator__slider-container background-color__white",
                    children: S.jsxs("div", {
                        className: "refinance-calculator__slider-inner-container",
                        children: [S.jsx(Xde, {
                            max: e.maxLoanAmount,
                            onChange: t.amount,
                            value: e.currentLoanInformation.amount,
                            handleAnalytics: r
                        }), S.jsx(fN, {
                            label: "Remaining Years",
                            min: 1,
                            max: 10,
                            onChange: t.yearsRemaining,
                            value: e.currentLoanInformation.yearsRemaining,
                            handleAnalytics: r
                        })]
                    })
                })]
            })
        }), S.jsx("div", {
            className: "refinance-calculator__calculate-right-column",
            children: S.jsxs("div", {
                className: "refinance-calculator__calculate-column",
                children: [S.jsx(eve, {
                    value: e.currentLoanInformation.monthlyPayment,
                    onChange: t.monthlyPayment,
                    isValid: e.currentLoanInformation.validMonthlyPayment,
                    message: e.currentLoanInformation.validMonthlyPayment ? "" : "Invalid payment amount",
                    handleAnalytics: r
                }), S.jsxs("p", {
                    className: "refinance-calculator__multi-loan-label",
                    children: ["*Need to factor in multiple loans? ", S.jsx(Re, {
                        onClick: t.multiLoanStep,
                        children: "Calculate multiple loans"
                    })]
                })]
            })
        })]
    })
}
const tve = {
    totalCost: "Remember the faster you pay, the more you save",
    monthlyPayment: "Lower Monthly payments require a longer term"
};
function zx({state: e, handleUpdate: t}) {
    const r = e.newLoanInformation.rateType
      , a = e.newLoanInformation.term
      , n = e.newLoanInformation.rates[r][a * 12].tier1
      , {sendEvent: i} = gn({
        sourceCode: e.sourceCode
    })
      , o = q.useCallback(s => {
        t.displayType(s),
        i("I Want to Reduce My")
    }
    , [t, i]);
    return S.jsxs("div", {
        className: "refinance-calculator__calculate-columns-container",
        children: [S.jsx("div", {
            className: "refinance-calculator__calculate-left-column",
            children: S.jsxs("div", {
                className: "refinance-calculator__calculate-column",
                children: [S.jsxs("div", {
                    className: "calculator-section__interest-type",
                    children: [S.jsx("label", {
                        htmlFor: "",
                        className: "calculator-input-label",
                        children: "I Want to Reduce My"
                    }), S.jsx(Y2, {
                        options: [{
                            label: "Monthly Payments",
                            value: "monthlyPayment"
                        }, {
                            label: "Total Loan Cost",
                            value: "totalCost"
                        }],
                        value: e.displayType,
                        onToggle: o
                    })]
                }), S.jsx(wf, {
                    value: r,
                    onToggle: t.rateType,
                    interestRate: n,
                    handleAnalytics: i
                })]
            })
        }), S.jsx("div", {
            className: "refinance-calculator__calculate-right-column",
            children: S.jsx("div", {
                className: "refinance-calculator__calculate-column",
                children: S.jsx("div", {
                    className: "refinance-calculator__slider-container background-color__white",
                    children: S.jsx("div", {
                        className: "refinance-calculator__slider-inner-container",
                        children: S.jsx(fN, {
                            reverse: e.displayType === "totalCost",
                            label: "Loan Term (in years)",
                            sublabel: tve[e.displayType],
                            min: 5,
                            max: 10,
                            value: a,
                            onChange: t.term,
                            handleAnalytics: i
                        })
                    })
                })
            })
        })]
    })
}
const rve = {
    white: "#fff",
    blue: "#002769"
}
  , pN = ({color: e, direction: t=1}) => {
    const r = rve[e];
    return r ? S.jsx("svg", {
        width: "6",
        height: "10",
        viewBox: "0 0 6 10",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg",
        transform: `scale(${t} 1)`,
        children: S.jsx("path", {
            d: "M5.77223 5.52668L1.3278 9.78193C1.02398 10.0727 0.531545 10.0727 0.227863 9.78193C-0.0759551 9.49116 -0.0759551 9.01957 0.227863 8.72881L4.12246 5L0.227864 1.27119C-0.0759546 0.980421 -0.0759546 0.50883 0.227864 0.218075C0.531558 -0.0726918 1.02399 -0.0726917 1.3278 0.218075L5.77223 4.47332C6.07592 4.76409 6.07592 5.23592 5.77223 5.52668Z",
            fill: r
        })
    }) : null
}
;
function ave({sourceCode: e, handleClick: t}) {
    const {sendEvent: r} = gn({
        sourceCode: e
    })
      , a = q.useCallback( () => {
        r("View All Inputs"),
        t.viewAll()
    }
    , [t, r])
      , n = q.useCallback( () => {
        r("Next"),
        t.calculateCurrent()
    }
    , [t, r]);
    return S.jsxs("div", {
        className: "refinance-calculator__bottom-buttons-container",
        children: [S.jsx("div", {
            className: "refinance-calculator__bottom-buttons-middle",
            children: S.jsx(Re, {
                onClick: a,
                className: "refinance-calculator__view-all-button",
                children: "View All Inputs"
            })
        }), S.jsxs(Re, {
            onClick: n,
            className: "button button__dark-teal button__width-229 dropshadow dropshadow__hover-off",
            children: ["Next ", S.jsx(pN, {
                color: "white"
            })]
        })]
    })
}
function nve({previousStep: e, sourceCode: t, handleClick: r}) {
    const {sendEvent: a} = gn({
        sourceCode: t
    })
      , n = q.useCallback( () => {
        a("Previous"),
        r.previousStep(e)
    }
    , [r, a])
      , i = q.useCallback( () => {
        a("View All Inputs"),
        r.viewAll()
    }
    , [r, a])
      , o = q.useCallback( () => {
        a("Estimate My Refi Loan"),
        r.viewResults()
    }
    , [r, a]);
    return S.jsxs("div", {
        className: "refinance-calculator__bottom-buttons-container",
        children: [S.jsxs(Re, {
            onClick: n,
            className: "button button__gray button__width-264",
            children: [S.jsx(pN, {
                color: "blue",
                direction: -1
            }), "Previous"]
        }), e !== "multiLoan" && S.jsx("div", {
            className: "refinance-calculator__bottom-buttons-middle",
            children: S.jsx(Re, {
                onClick: i,
                className: "refinance-calculator__view-all-button",
                children: "View All Inputs"
            })
        }), S.jsx(Re, {
            onClick: o,
            className: "button button__dark-teal button__width-293 dropshadow dropshadow__hover-off",
            children: "Estimate My Refi Loan"
        })]
    })
}
function ive({previousStep: e, sourceCode: t, handleClick: r}) {
    const {sendEvent: a} = gn({
        sourceCode: t
    })
      , n = q.useCallback( () => {
        a("View Separately"),
        r.previousStep(e)
    }
    , [r, a])
      , i = q.useCallback( () => {
        a("Estimate My Refi Loan"),
        r.calculateCurrent(),
        r.viewResults()
    }
    , [r, a]);
    return S.jsxs("div", {
        className: "refinance-calculator__bottom-buttons-container",
        children: [S.jsx(Re, {
            onClick: n,
            className: "refinance-calculator__view-all-button",
            children: "View Separately"
        }), S.jsx(Re, {
            onClick: i,
            className: "button button__dark-teal button__width-293 dropshadow dropshadow__hover-off",
            children: "Estimate My Refi Loan"
        })]
    })
}
function ove({value: e, onChange: t, isValid: r, message: a, handleAnalytics: n}) {
    return S.jsxs("div", {
        className: "refinance-calculator__multi-loans--loan-item",
        children: [S.jsx("p", {
            className: "p-large font-weight-700 hidden-md hidden-lg hidden-xl",
            children: "Loan Balance"
        }), S.jsx(Yc, {
            type: "tel",
            inputMode: "numeric",
            options: _m,
            name: "monthlyPayment",
            label: "KES",
            placeholder: "",
            value: e,
            isValid: r,
            onChange: t,
            message: a,
            onBlur: () => n("Loan Balance")
        })]
    })
}
function sve({value: e, onChange: t, isValid: r, message: a, handleAnalytics: n}) {
    return S.jsxs("div", {
        className: "refinance-calculator__multi-loans--loan-item",
        children: [S.jsx("p", {
            className: "p-large font-weight-700 hidden-md hidden-lg hidden-xl",
            children: "Pay off Date"
        }), S.jsx(Yc, {
            type: "tel",
            inputMode: "numeric",
            options: qD,
            name: "monthlyPayment",
            label: "MM/YY",
            placeholder: "",
            value: e,
            isValid: r,
            onChange: t,
            message: a,
            onBlur: () => n("Pay off Date")
        })]
    })
}
function lve({value: e, onChange: t, isValid: r, message: a, handleAnalytics: n}) {
    return S.jsxs("div", {
        className: "refinance-calculator__multi-loans--loan-item",
        children: [S.jsx("p", {
            className: "p-large font-weight-700 hidden-md hidden-lg hidden-xl",
            children: "Montly Payment"
        }), S.jsx(Yc, {
            type: "tel",
            inputMode: "numeric",
            options: _m,
            name: "monthlyPayment",
            label: "KES",
            placeholder: "",
            value: e,
            isValid: r,
            onChange: t,
            message: a,
            onBlur: () => n("Monthly Payment")
        })]
    })
}
const uve = e => ({
    rates: t => e({
        type: "SET_RATES",
        payload: t
    }),
    loanType: t => e({
        type: "SET_LOAN_TYPE",
        payload: t
    }),
    amount: t => e({
        type: "SET_AMOUNT",
        payload: t
    }),
    monthlyPayment: t => e({
        type: "SET_MONTHLY_PAYMENT",
        payload: t
    }),
    yearsRemaining: t => e({
        type: "SET_YEARS_REMAINING",
        payload: t
    }),
    displayType: t => e({
        type: "SET_DISPLAY_TYPE",
        payload: t
    }),
    rateType: t => e({
        type: "SET_RATE_TYPE",
        payload: t
    }),
    term: t => e({
        type: "SET_TERM",
        payload: t
    }),
    calculateCurrent: () => e({
        type: "CALCULATE_CURRENT_LOAN"
    }),
    multiLoanStep: () => e({
        type: "SET_CALCULATE_STEP",
        payload: "multiLoan"
    }),
    setMultiLoanInfo: t => e({
        type: "SET_MULTI_LOAN_INFO",
        payload: t
    }),
    setMultiLoanTotals: t => e({
        type: "SET_MULTI_LOAN_TOTALS",
        payload: t
    }),
    previousStep: t => e({
        type: "SET_CALCULATE_STEP",
        payload: t
    }),
    viewAll: () => e({
        type: "SET_CALCULATE_STEP",
        payload: "all"
    }),
    viewResults: () => e({
        type: "CALCULATE_RESULTS"
    }),
    clearCalculator: () => e({
        type: "CLEAR_CALCULATOR"
    })
})
  , Xu = new Intl.NumberFormat("en-US",{
    style: "currency",
    currency: "USD"
})
  , Gx = e => {
    const t = Object.entries(e).map(r => {
        const a = Object.values(r[1])
          , n = a.reduce( (o, s) => o + s)
          , i = parseFloat((n / a.length).toFixed(2));
        return [[r[0]], {
            tier1: i
        }]
    }
    );
    return Object.fromEntries(t)
}
  , cve = e => {
    const t = Gx(e.V)
      , r = Gx(e.F);
    return {
        V: t,
        F: r
    }
}
  , dve = e => !!e.balance
  , vve = e => !e.payoffDate || !e2(e.payoffDate, "MonthYearShort") ? !1 : t2(e.payoffDate, "MonthYearShort") + 1 > 12
  , hve = e => {
    if (!e.monthlyPayment || !e.payoffDate)
        return !1;
    const t = t2(e.payoffDate, "MonthYearShort") + 1;
    return parseInt(e.monthlyPayment) * t >= e.balance
}
  , Lv = e => {
    const t = dve(e)
      , r = vve(e)
      , a = hve(e);
    return {
        balance: t,
        payoffDate: r,
        monthlyPayment: a
    }
}
  , mve = e => e.reduce( (r, a) => {
    const n = t2(a.payoffDate, "MonthYearShort") + 1
      , i = r.totalCost + parseInt(a.monthlyPayment) * n
      , o = r.monthlyPayment + parseInt(a.monthlyPayment)
      , s = Object.values(a.errors).some(l => l === !1) || r.hasErrors;
    return {
        totalCost: i,
        monthlyPayment: o,
        hasErrors: s
    }
}
, {
    totalCost: 0,
    monthlyPayment: 0,
    hasErrors: !1
});
function fve({loan: e, updateLoan: t, deleteLoan: r, handleAnalytics: a, hideDelete: n}) {
    const i = l => {
        const u = {
            ...e,
            balance: l
        };
        if (typeof e.errors.balance == "boolean") {
            const c = Lv(u);
            return t({
                ...u,
                errors: c
            })
        }
        return t(u)
    }
      , o = l => {
        const u = {
            ...e,
            payoffDate: l
        };
        if (typeof e.errors.payoffDate == "boolean") {
            const c = Lv(u);
            return t({
                ...u,
                errors: c
            })
        }
        return t(u)
    }
      , s = l => {
        const u = {
            ...e,
            monthlyPayment: l
        };
        if (typeof e.errors.monthlyPayment == "boolean") {
            const c = Lv(u);
            return t({
                ...u,
                errors: c
            })
        }
        return t(u)
    }
    ;
    return S.jsx("div", {
        className: "refinance-calculator__multi-loans--inputs-row-container background-color__gray",
        children: S.jsxs("div", {
            className: "refinance-calculator__multi-loans--inputs-row",
            children: [S.jsxs("div", {
                className: "refinance-calculator__multi-loans--columns-row",
                children: [S.jsx(ove, {
                    value: e.balance,
                    onChange: i,
                    isValid: e.errors.balance ?? !0,
                    handleAnalytics: a,
                    message: e.errors.balance === !1 ? "Required" : ""
                }), S.jsx(sve, {
                    value: e.payoffDate,
                    onChange: o,
                    isValid: e.errors.payoffDate ?? !0,
                    handleAnalytics: a,
                    message: e.errors.payoffDate === !1 ? "Must be at least 1 year from now" : ""
                }), S.jsx(lve, {
                    value: e.monthlyPayment,
                    onChange: s,
                    isValid: e.errors.monthlyPayment ?? !0,
                    handleAnalytics: a,
                    message: e.errors.monthlyPayment === !1 ? "Invalid Payment Amount" : ""
                })]
            }), S.jsx("div", {
                className: "refinance-calculator__multi-loans--delete-loan-container",
                children: !n && S.jsxs(Re, {
                    className: "refinance-calculator__multi-loans--delete-button",
                    onClick: r,
                    children: [S.jsx("svg", {
                        width: "14",
                        height: "17",
                        viewBox: "0 0 14 17",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: S.jsx("path", {
                            d: "M13.3636 2.72H10.8182V2.04C10.8182 0.91528 9.96164 0 8.90909 0H5.09091C4.03836 0 3.18182 0.91528 3.18182 2.04V2.72H0.636364C0.285091 2.72 0 3.02464 0 3.4C0 3.77536 0.285091 4.08 0.636364 4.08H1.27273V14.96C1.27273 16.0847 2.12927 17 3.18182 17H10.8182C11.8707 17 12.7273 16.0847 12.7273 14.96V4.08H13.3636C13.7149 4.08 14 3.77536 14 3.4C14 3.02464 13.7149 2.72 13.3636 2.72ZM4.45455 2.04C4.45455 1.66532 4.74027 1.36 5.09091 1.36H8.90909C9.25973 1.36 9.54545 1.66532 9.54545 2.04V2.72H4.45455V2.04ZM11.4545 14.96C11.4545 15.3347 11.1688 15.64 10.8182 15.64H3.18182C2.83118 15.64 2.54545 15.3347 2.54545 14.96V4.08H11.4545V14.96ZM5.09091 6.8V13.6C5.09091 13.9754 4.80582 14.28 4.45455 14.28C4.10327 14.28 3.81818 13.9754 3.81818 13.6V6.8C3.81818 6.42464 4.10327 6.12 4.45455 6.12C4.80582 6.12 5.09091 6.42464 5.09091 6.8ZM10.1818 6.8V13.6C10.1818 13.9754 9.89673 14.28 9.54545 14.28C9.19418 14.28 8.90909 13.9754 8.90909 13.6V6.8C8.90909 6.42464 9.19418 6.12 9.54545 6.12C9.89673 6.12 10.1818 6.42464 10.1818 6.8ZM7.63636 6.8V13.6C7.63636 13.9754 7.35127 14.28 7 14.28C6.64873 14.28 6.36364 13.9754 6.36364 13.6V6.8C6.36364 6.42464 6.64873 6.12 7 6.12C7.35127 6.12 7.63636 6.42464 7.63636 6.8Z",
                            fill: "#01326B"
                        })
                    }), S.jsx("span", {
                        children: "Delete"
                    })]
                })
            })]
        })
    })
}
const pve = {
    balance: "",
    payoffDate: "",
    monthlyPayment: "",
    errors: {}
};
function yve({state: e, handleUpdate: t}) {
    const r = e.multiLoanInformation
      , {sendEvent: a} = gn({
        sourceCode: e.sourceCode
    })
      , n = () => {
        t.setMultiLoanInfo([...r, pve]),
        a("Add Another Loan")
    }
      , i = o => {
        const s = o.map(u => {
            const c = Lv(u);
            return {
                ...u,
                errors: c
            }
        }
        );
        t.setMultiLoanInfo([...s]),
        a("Calculate");
        const l = mve(s);
        l.hasErrors || t.setMultiLoanTotals(l)
    }
    ;
    return S.jsxs("div", {
        className: "refinance-calculator__multi-loans-container",
        children: [S.jsx(Re, {
            className: "modal-close-button",
            onClick: () => t.previousStep("current"),
            children: S.jsx("svg", {
                width: "20",
                height: "20",
                viewBox: "0 0 20 20",
                style: {
                    color: "#00818A"
                },
                children: S.jsx("use", {
                    href: "/static/assets/images/icons/global/x_close.svg#x_close"
                })
            })
        }), S.jsxs("div", {
            className: "refinance-calculator__multi-loans-inner-container",
            children: [S.jsx("h4", {
                className: "h4",
                children: "Your Current Loans"
            }), S.jsxs("div", {
                className: "refinance-calculator__multi-loans-rows-container",
                children: [S.jsx("div", {
                    className: "refinance-calculator__multi-loans--inputs-row-container refinance-calculator__multi-loans--headers hidden-sm hidden-xs",
                    children: S.jsxs("div", {
                        className: "refinance-calculator__multi-loans--inputs-row",
                        children: [S.jsxs("div", {
                            className: "refinance-calculator__multi-loans--columns-row",
                            children: [S.jsx("p", {
                                className: "refinance-calculator__multi-loans--loan-item p-large font-weight-700",
                                children: "Loan Balance"
                            }), S.jsx("p", {
                                className: "refinance-calculator__multi-loans--loan-item p-large font-weight-700",
                                children: "Pay off Date"
                            }), S.jsx("p", {
                                className: "refinance-calculator__multi-loans--loan-item p-large font-weight-700",
                                children: "Monthly Payment"
                            })]
                        }), S.jsx("div", {
                            className: "refinance-calculator__multi-loans--delete-loan-container"
                        })]
                    })
                }), S.jsx("div", {
                    className: "refinance-calculator__multi-loans--loan-rows-container",
                    children: r.map( (o, s) => {
                        const l = c => {
                            r[s] = c,
                            t.setMultiLoanInfo([...r])
                        }
                          , u = () => {
                            r.length !== 1 && (r.splice(s, 1),
                            t.setMultiLoanInfo([...r]))
                        }
                        ;
                        return S.jsx(fve, {
                            loan: o,
                            updateLoan: l,
                            deleteLoan: u,
                            handleAnalytics: a,
                            hideDelete: r.length === 1
                        }, s)
                    }
                    )
                })]
            })]
        }), S.jsxs("div", {
            className: "refinance-calculator__bottom-buttons-container",
            children: [S.jsxs(Re, {
                onClick: n,
                className: "button button__gray button__width-270",
                children: [S.jsx("span", {
                    className: "review-card__read-more-button--plus",
                    children: "╋"
                }), "Add Another Loan"]
            }), S.jsx(Re, {
                onClick: () => i(r),
                className: "button button__dark-teal button__width-203 dropshadow dropshadow__hover-off",
                children: "Calculate"
            })]
        })]
    })
}
function wve({state: e, handleUpdate: t}) {
    return S.jsxs("div", {
        className: "refinance-calculator__calculate-container",
        children: [e.calculateStep !== "all" && S.jsx("div", {
            className: "refinance-calculator__steps-container hidden-sm hidden-xs",
            children: S.jsx(qx, {
                currentStep: e.calculateStep
            })
        }), S.jsxs("div", {
            className: "refinance-calculator__container refinance-calculator__container--calculate background-color__white",
            children: [e.calculateStep !== "all" && S.jsx("div", {
                className: "refinance-calculator__steps-container hidden-md hidden-lg hidden-xl",
                children: S.jsx(qx, {
                    currentStep: e.calculateStep
                })
            }), e.calculateStep === "current" && S.jsxs("div", {
                className: "refinance-calculator__calculate-inner-container",
                children: [S.jsx($x, {
                    state: e,
                    handleUpdate: t
                }), S.jsx(ave, {
                    sourceCode: e.sourceCode,
                    handleClick: t
                })]
            }), e.calculateStep === "multiLoan" && S.jsx(yve, {
                state: e,
                handleUpdate: t
            }), e.calculateStep === "new" && S.jsxs("div", {
                className: "refinance-calculator__calculate-inner-container",
                children: [S.jsx(zx, {
                    state: e,
                    handleUpdate: t
                }), S.jsx(nve, {
                    previousStep: e.previousStep,
                    sourceCode: e.sourceCode,
                    handleClick: t
                })]
            }), e.calculateStep === "all" && S.jsxs("div", {
                className: "refinance-calculator__calculate-inner-container refinance-calculator__calculate-inner-container--all",
                children: [S.jsx("h4", {
                    className: "h4",
                    children: "Step 1: Your Current Loan"
                }), S.jsx($x, {
                    state: e,
                    handleUpdate: t
                }), S.jsx("div", {
                    className: "refinance-calculator__calculate-combined-divider"
                }), S.jsx("h4", {
                    className: "h4",
                    children: "Step 2: Customize Your Loan"
                }), S.jsx(zx, {
                    state: e,
                    handleUpdate: t
                }), S.jsx(ive, {
                    previousStep: e.previousStep,
                    sourceCode: e.sourceCode,
                    handleClick: t
                })]
            })]
        })]
    })
}
function wv({header: e, value: t, color: r}) {
    return S.jsxs("div", {
        className: "refi-results-item",
        children: [S.jsx("p", {
            className: "p-small",
            children: e
        }), S.jsx("div", {
            className: `refi-results-item__value-container background-color__${r}`,
            children: S.jsx("p", {
                className: "refi-results-item__value",
                children: t
            })
        })]
    })
}
function gve({results: e, currentLoan: t, newLoan: r}) {
    return S.jsxs("div", {
        className: "refi-results-grid",
        children: [S.jsx(wv, {
            header: "Original cost with interest",
            value: Xu.format(t.totalCost),
            color: "gray"
        }), S.jsx(wv, {
            header: "Original Monthly Payment",
            value: Xu.format(t.monthlyPayment),
            color: "gray"
        }), S.jsx(wv, {
            header: "Est. New Cost with Interest",
            value: Xu.format(r.totalCost),
            color: "dark-blue"
        }), S.jsx(wv, {
            header: "Est. New Monthly Payment",
            value: Xu.format(r.monthlyPayment),
            color: "dark-blue"
        })]
    })
}
const _ve = RefiResultsBar = ({title: e, displayType: t, currentLoan: r, newLoan: a}) => {
    const n = r[t] - a[t]
      , i = a[t] / r[t]
      , o = i > 1 ? 100 : i * 100;
    return S.jsxs("div", {
        className: "refi-results-bar__container",
        children: [S.jsx("div", {
            className: "refi-results-bar__text-output",
            children: n > 0 && S.jsxs(S.Fragment, {
                children: [S.jsx("p", {
                    className: "p-large",
                    children: e
                }), S.jsx("p", {
                    className: "refi-results-bar__currency",
                    children: Xu.format(n)
                })]
            })
        }), S.jsxs("svg", {
            className: "refi-results-bar",
            children: [S.jsx("rect", {
                className: "refi-results-bar__back",
                width: "100%",
                height: "60",
                rx: "6"
            }), S.jsx("rect", {
                className: "refi-results-bar__front",
                style: {
                    "--percentage": o + "%"
                },
                width: "0",
                height: "60",
                rx: "6"
            })]
        })]
    })
}
  , bve = {
    monthlyPayment: {
        title: "Est. Montly Savings",
        cost: "Est. new monthly payment",
        savings: "Est. monthly savings"
    },
    totalCost: {
        title: "Est. Total Savings",
        cost: "Est. new cost with interest",
        savings: "Est. overall savings"
    }
};
function Cve({state: e, handleUpdate: t}) {
    const {currentCalculated: r, newCalculated: a, displayType: n, sourceCode: i} = e
      , {sendEvent: o} = gn({
        sourceCode: i
    })
      , s = q.useCallback( () => {
        o("Clear Calculator"),
        t.clearCalculator()
    }
    , [t, o])
      , l = bve[n];
    return S.jsx("div", {
        className: "refinance-calculator__container refinance-calculator__container--results background-color__white",
        children: S.jsxs("div", {
            className: "refinance-calculator__results-container",
            children: [S.jsx("div", {
                className: "refinance-calculator__results-header",
                children: S.jsx("h4", {
                    className: "h4",
                    children: "Your Loan Breakdown"
                })
            }), S.jsxs("div", {
                className: "refinance-calculator__results-column",
                children: [S.jsxs("div", {
                    className: "refinance-calculator__results-inner-container background-color__light-teal",
                    children: [S.jsx("div", {
                        className: "refinance-calculator__inner-results-container background-color__white",
                        children: S.jsxs("div", {
                            className: "refinance-calculator__inner-results",
                            children: [S.jsxs("div", {
                                className: "refinance-calculator__inner-results-column",
                                children: [S.jsx(_ve, {
                                    title: l.title,
                                    displayType: n,
                                    currentLoan: r,
                                    newLoan: a
                                }), S.jsxs("div", {
                                    className: "refinance-calculator__results-details",
                                    children: [S.jsx(Wh, {
                                        type: "amount",
                                        title: l.cost
                                    }), S.jsx(Wh, {
                                        type: "interest",
                                        title: l.savings
                                    })]
                                })]
                            }), S.jsx("div", {
                                className: "refinance-calculator__inner-divider"
                            }), S.jsx("div", {
                                className: "refinance-calculator__inner-results-column",
                                children: S.jsx(gve, {
                                    currentLoan: r,
                                    newLoan: a
                                })
                            })]
                        })
                    }), S.jsxs("div", {
                        className: "refinance-calculator__results-bottom-container",
                        children: [S.jsx("h4", {
                            className: "h4",
                            children: "Ready to get started?"
                        }), S.jsx("a", {
                            href: "/loans/prequalify/",
                            className: "button button__dark-teal button__width-310 dropshadow dropshadow__hover-off",
                            children: "Check Your Rate In 1 Minute"
                        })]
                    })]
                }), S.jsx("div", {
                    className: "refinance-calculator__bottom-buttons-container",
                    children: S.jsx(Re, {
                        onClick: s,
                        className: "button button__gray button__width-264 dropshadow dropshadow__hover-off",
                        children: "Clear Calculator"
                    })
                })]
            })]
        })
    })
}
class Sve {
    constructor(t, r, a, n=0) {
        this.amount = t * 1e3,
        this.rate = r * .0559,
        this.termInMonths = a,
        this.minimumPayment = n
    }
    calculateInterest(t) {
        return Fr(`${t} * (${this.rate} / 12)`)
    }
    calculate() {
        var t = this.amount
          , r = 0
          , a = 0
          , n = 0;
        return Array.range(1, this.termInMonths + 1).forEach(i => {
            var o = this.calculateInterest(t)
              , s = Fr(`((${this.rate}/ 12) * ${t} * ${Math.pow(1 + this.rate / 12, this.termInMonths - i + 1)}) / (${Math.pow(1 + this.rate / 12, this.termInMonths - i + 1) - 1})`);
            return s < this.minimumPayment && (s = this.minimumPayment),
            Fr(`${t} + ${o}`) < s && (s = Fr(`${t} + ${o}`)),
            r < s && (r = s),
            t = Fr(`${t} + ${o} - ${s}`),
            t < 0 && (s = Fr(`${t} + ${this.minimumPayment}`)),
            n = Fr(`${n} + ${s}`),
            a = i,
            t > 0
        }
        ),
        {
            interestRate: rt(this.rate * 100, 2),
            term: this.termInMonths / 12,
            numPmts: a,
            monthlyPayment: rt(r, 2),
            totalInterest: rt(n - this.amount, 2),
            totalCost: rt(n, 2)
        }
    }
}
class xve {
    constructor(t, r, a, n=0) {
        this.amount = t,
        this.rate = r * .0559,
        this.termInMonths = a,
        this.minimumPayment = n,
        this.numIOPayments = 24
    }
    calculateInterest(t) {
        return Fr(t * (this.rate / 12))
    }
    calculate() {
        var t = this.amount
          , r = 0
          , a = this.numIOPayments
          , n = 0
          , i = 0
          , o = 0
          , s = this.termInMonths - a;
        return Array.range(1, a + 1).forEach(l => {
            var u = this.calculateInterest(t);
            r < u && (r = u),
            o = Fr(o + u)
        }
        ),
        Array.range(1, s + 1).forEach(l => {
            var u = this.calculateInterest(t)
              , c = Fr(this.rate / 12 * t * Math.pow(1 + this.rate / 12, s - l + 1) / (Math.pow(1 + this.rate / 12, s - l + 1) - 1));
            return c < this.minimumPayment && (c = this.minimumPayment),
            Fr(t + u) < c && (c = Fr(t + u)),
            n < c && (n = c),
            t = Fr(t + u - c),
            t < 0 && (c = Fr(t + this.minimumPayment)),
            o = Fr(o + c),
            i = l,
            t > 0
        }
        ),
        {
            interestRate: rt(this.rate * 100, 2),
            term: this.termInMonths / 12,
            numPmtsFirstTwoYrs: a,
            monthlyPmtFirstTwoYrs: rt(r, 2),
            numPmtsAfterThreeYrs: i,
            monthlyPmtAfterYrThree: rt(n, 2),
            totalInterest: rt(o - this.amount, 2),
            totalCost: rt(o, 2)
        }
    }
}
Array.range = (e, t) => Array.from({
    length: t - e
}, (r, a) => a + e);
function Ave({rates: e, amount: t, term: r, rateType: a, creditRating: n, repaymentOption: i}) {
    const o = parseInt(r) * 12
      , s = {
        PI: Sve,
        IO: xve
    };
    return new s[i](t,e[a][o][n],o).calculate()
}
function Eve({amount: e, yearsRemaining: t, monthlyPayment: r}) {
    const a = e * 1e3
      , n = kve(t * 12, r, a) * .01
      , i = t * 12 * (a * n / 12) / (1 - Math.pow(1 + n / 12, -12 * t))
      , o = i - a;
    return {
        monthlyPayment: r,
        totalAmount: a,
        totalInterest: o,
        totalCost: i
    }
}
function kve(e, t, r) {
    let a, n, i, o, s, l, u;
    for (a = 1e-7,
    n = 1,
    i = 0,
    o = 2 * (e * t - r) / (r * e); ; )
        if (l = Math.pow(1 + o, e),
        s = o * l / (l - 1),
        u = s - t / r,
        u > a)
            n = o,
            o = (n + i) / 2;
        else if (u < -a)
            i = o,
            o = (n + i) / 2;
        else
            break;
    return o * 12 * 100
}
const Tve = ({amount: e, monthlyPayment: t, yearsRemaining: r}) => r * 12 * t > e * 1e3
  , Nve = e => Ave(e);
function Mve(e, t) {
    const {type: r, payload: a} = t;
    switch (r) {
    case "SET_RATES":
        {
            const n = cve(a);
            return {
                ...e,
                newLoanInformation: {
                    ...e.newLoanInformation,
                    rates: n
                }
            }
        }
    case "SET_CALCULATE_STEP":
        return {
            ...e,
            calculateStep: a
        };
    case "SET_LOAN_TYPE":
        {
            const {maxLoanAmount: n} = a
              , i = e.currentLoanInformation.amount
              , o = i < n ? i : n;
            return {
                ...e,
                loanType: a.value,
                maxLoanAmount: a.maxLoanAmount,
                currentLoanInformation: {
                    ...e.currentLoanInformation,
                    amount: o
                },
                newLoanInformation: {
                    ...e.newLoanInformation,
                    amount: o
                }
            }
        }
    case "SET_AMOUNT":
        return {
            ...e,
            currentLoanInformation: {
                ...e.currentLoanInformation,
                amount: a
            },
            newLoanInformation: {
                ...e.newLoanInformation,
                amount: a
            }
        };
    case "SET_MONTHLY_PAYMENT":
        {
            const n = parseInt(a);
            return {
                ...e,
                currentLoanInformation: {
                    ...e.currentLoanInformation,
                    monthlyPayment: n
                }
            }
        }
    case "SET_YEARS_REMAINING":
        return {
            ...e,
            currentLoanInformation: {
                ...e.currentLoanInformation,
                yearsRemaining: a
            }
        };
    case "SET_DISPLAY_TYPE":
        return {
            ...e,
            displayType: a
        };
    case "SET_RATE_TYPE":
        return {
            ...e,
            newLoanInformation: {
                ...e.newLoanInformation,
                rateType: a
            }
        };
    case "SET_TERM":
        return {
            ...e,
            newLoanInformation: {
                ...e.newLoanInformation,
                term: a
            }
        };
    case "CALCULATE_CURRENT_LOAN":
        {
            const {currentLoanInformation: n} = e
              , i = Tve(n);
            if (!i)
                return {
                    ...e,
                    currentLoanInformation: {
                        ...e.currentLoanInformation,
                        validMonthlyPayment: i
                    }
                };
            const o = Eve(n);
            return {
                ...e,
                currentLoanInformation: {
                    ...e.currentLoanInformation,
                    validMonthlyPayment: i
                },
                previousStep: "current",
                calculateStep: "new",
                currentCalculated: o
            }
        }
    case "SET_MULTI_LOAN_INFO":
        return {
            ...e,
            multiLoanInformation: a
        };
    case "SET_MULTI_LOAN_TOTALS":
        return {
            ...e,
            previousStep: "multiLoan",
            calculateStep: "new",
            currentCalculated: a
        };
    case "CALCULATE_RESULTS":
        {
            if (!e.currentLoanInformation.validMonthlyPayment)
                return e;
            const n = Nve(e.newLoanInformation);
            return {
                ...e,
                view: "results",
                newCalculated: n
            }
        }
    case "CLEAR_CALCULATOR":
        return {
            ...Yh,
            newLoanInformation: {
                ...Yh.newLoanInformation,
                rates: e.newLoanInformation.rates
            }
        };
    default:
        return e
    }
}
function Ive() {
    const [e,t] = q.useReducer(Mve, Yh)
      , r = q.useMemo( () => uve(t), [t]);
    return q.useEffect( () => {
        e.newLoanInformation.rates === null && (async () => {
            try {
                const a = await za.get(`${wE}/${e.sourceCode}.json`);
                r.rates(a)
            } catch (a) {
                console.error(a)
            }
        }
        )()
    }
    , []),
    e.newLoanInformation.rates === null ? null : S.jsx("section", {
        className: "refinance-calculator-section background-color__gray",
        children: S.jsx("div", {
            className: "section-container",
            children: S.jsxs("div", {
                className: "refinance-calculator__main",
                children: [e.view === "calculate" && S.jsx(wve, {
                    state: e,
                    handleUpdate: r
                }), e.view === "results" && S.jsx(Cve, {
                    state: e,
                    handleUpdate: r
                })]
            })
        })
    })
}
function Ta(e) {
    const {name: t, control: r, setValue: a, defaultValue: n, errors: i, isRequired: o, isSearchable: s, allowInput: l, onFocus: u, onBlur: c, label: d, message: v, placeholder: h, onChange: p, options: f} = e
      , _ = !i || Object.keys(i).length === 0
      , y = g => (p && p(g),
    a && a(t, g.value),
    g.value);
    return S.jsx(au, {
        name: t,
        control: r,
        defaultValue: n || "",
        rules: {
            required: o ? "This field is required" : !1
        },
        render: ({field: g}) => {
            const {value: m} = g
              , w = f.find(C => C.value === m);
            return S.jsx(Cu, {
                allowInput: l,
                isSearchable: s,
                label: d,
                isValid: _,
                isRequired: o,
                message: v,
                value: w,
                onFocus: u,
                onBlur: c,
                onChange: C => g.onChange(y(C)),
                placeholder: h,
                options: f
            })
        }
    })
}
function Dve() {
    return S.jsxs("div", {
        className: "promotion-form__success-container",
        children: [S.jsx("img", {
            src: "/static/assets/images/icons/success.svg",
            alt: "success",
            className: "promotion-form__success-image"
        }), S.jsxs("div", {
            className: "promotion-form__success-text",
            children: [S.jsx("h2", {
                className: "h2",
                children: "Stay tuned!"
            }), S.jsx("p", {
                className: "p-large",
                children: "We'll be in touch to let you know if you've won."
            })]
        })]
    })
}
async function Uve(e, t) {
    try {
        const {certify: r, current_high_school: a, current_university: n, ...i} = e
          , o = {
            acqSource: t.acq_source,
            dataExtensionKey: t.data_extension,
            dataExtensionType: "sweepstakes",
            currentSchool: a || n,
            ...i
        };
        if (await za.put(`${Uo}/v1/crm/record`, o) !== "success")
            throw new Error("Response Not Success")
    } catch (r) {
        throw new Error("PromoSubmitFailed",{
            cause: r
        })
    }
    try {
        const r = {
            email: e.email,
            key: "Sweepstakes_Confirmation_Email",
            acctType: "marketing"
        };
        za.post(`${Uo}/v1/crm/send/notify`, r);
        return
    } catch (r) {
        console.error(r)
    }
}
async function Fve(e, t) {
    if (t != null && t.subscribe_keys)
        try {
            const r = t.subscribe_keys.split(",")
              , a = {
                email: e.email,
                listIds: r
            };
            za.post(`${Uo}/v1/crm/subscribe`, a);
            return
        } catch (r) {
            console.error(r)
        }
}
async function Ove(e, t) {
    if (t != null && t.triggered_email_key)
        try {
            const r = t.subscribe_keys.split(",")
              , a = {
                email: e.email,
                key: t.triggered_email_key
            };
            za.post(`${Uo}/v1/crm/send/notify`, a)
        } catch (r) {
            console.error(r)
        }
}
function Pve(e) {
    return e.type === "ongoing" ? "open" : e.type === "closed" || e.promo_status === "closed" || F1({
        date: e.start_date,
        format: "MonthDayYear"
    }) === "after" && yE === "production" || F1({
        date: e.end_date,
        format: "MonthDayYear"
    }) === "before" ? "closed" : "open"
}
const Bve = () => {
    const e = n => {
        const i = {
            type: "event",
            eventAction: "Form Field - interaction",
            eventLabel: `Promotion > ${n}`
        };
        return mn(i)
    }
      , t = n => {
        const i = {
            type: "event",
            eventAction: `Promotion Form - ${n}`,
            eventLabel: "Promotion"
        };
        return mn(i)
    }
      , r = n => mn({
        type: "event",
        eventAction: "Form Field - error",
        eventLabel: n
    });
    return {
        sendEvent: e,
        sendFormEvent: t,
        handleFormErrors: n => {
            const i = {
                address: "Street Address",
                certify: "Certify Checkbox",
                city: "City",
                email: "Email Address",
                firstname: "First Name",
                lastname: "Last Name",
                phoneNumber: "Phone Number",
                state: "State",
                year: "I'm a",
                zip: "Zip Code"
            };
            Object.keys(n).map(s => (i[s] || `${s}${n[s].message}`,
            `Promotion > ${i[s]} > ${n[s].message}`)).forEach(r)
        }
    }
}
  , Rve = [{
    label: "AL",
    value: "AL"
}, {
    label: "AK",
    value: "AK"
}, {
    label: "AZ",
    value: "AZ"
}]
  , Lve = [{
    label: "A. T. Still University of Health Sciences",
    value: "A. T. Still University of Health Sciences"
}, {
    label: "A. T. Still University of Health Sciences-Arizona",
    value: "A. T. Still University of Health Sciences-Arizona"
}, {
    label: "Abilene Christian University",
    value: "Abilene Christian University"
}, {
    label: "Abraham Baldwin Agricultural College",
    value: "Abraham Baldwin Agricultural College"
}, {
    label: "Academy For Nursing And Health Occupations",
    value: "Academy For Nursing And Health Occupations"
}, {
    label: "Academy of Art University",
    value: "Academy of Art University"
}, {
    label: "Academy of Chinese Culture And Health Sciences",
    value: "Academy of Chinese Culture And Health Sciences"
}, {
    label: "Acupuncture And Integrative Medicine College-Berkeley",
    value: "Acupuncture And Integrative Medicine College-Berkeley"
}, {
    label: "Adams State University",
    value: "Adams State University"
}, {
    label: "Adelphi University",
    value: "Adelphi University"
}, {
    label: "Adler Graduate School",
    value: "Adler Graduate School"
}, {
    label: "Adler University ",
    value: "Adler University "
}, {
    label: "Adrian College",
    value: "Adrian College"
}, {
    label: "Adventist University of Health Sciences",
    value: "Adventist University of Health Sciences"
}, {
    label: "Agnes Scott College",
    value: "Agnes Scott College"
}, {
    label: "Alabama Agricultural & Mechanical University",
    value: "Alabama Agricultural & Mechanical University"
}, {
    label: "University of Wisconsin-Eau Claire",
    value: "University of Wisconsin-Eau Claire"
}, {
    label: "University of Wisconsin-Green Bay",
    value: "University of Wisconsin-Green Bay"
}, {
    label: "University of Wisconsin-La Crosse",
    value: "University of Wisconsin-La Crosse"
}, {
    label: "University of Wisconsin-Madison",
    value: "University of Wisconsin-Madison"
}, {
    label: "University of Wisconsin-Milwaukee",
    value: "University of Wisconsin-Milwaukee"
}, {
    label: "University of Wisconsin-Oshkosh",
    value: "University of Wisconsin-Oshkosh"
}, {
    label: "University of Wisconsin-Parkside",
    value: "University of Wisconsin-Parkside"
}, {
    label: "University of Wisconsin-Platteville",
    value: "University of Wisconsin-Platteville"
}, {
    label: "University of Wisconsin-River Falls",
    value: "University of Wisconsin-River Falls"
}, {
    label: "Youngstown State University",
    value: "Youngstown State University"
}]
  , qve = [{
    label: "High School Student",
    value: "high-school-student"
}, {
    label: "College Student",
    value: "college-student"
}, {
    label: "Parent/Guardian",
    value: "parent-guardian"
}, {
    label: "Counselor/Other",
    value: "counselor-other"
}];
function Vve() {
    var g, m, w, C, b, x, E, k, A, I, T, F;
    const {form_fields: e, form_info: t, promo_status: r, form_title: a} = window.promoInformation
      , [n,i] = q.useState(null)
      , [o,s] = q.useState(!1)
      , {control: l, formState: {errors: u, isSubmitting: c}, setValue: d, handleSubmit: v} = Cr()
      , {sendEvent: h, sendFormEvent: p, handleFormErrors: f} = Bve();
    if (Pve(window.promoInformation) === "closed")
        return null;
    const y = async R => {
        if (!c)
            try {
                p("submit"),
                await Uve(R, t),
                p("submit success"),
                Fve(R, t),
                Ove(R, t),
                s(!0)
            } catch (O) {
                O.message === "PromoSubmitFailed" && window.alert("There was an error submitting your request")
            }
    }
    ;
    return S.jsx("div", {
        class: "promotions-form-section__container",
        children: S.jsxs("div", {
            class: "promotions-form__container",
            children: [S.jsx("div", {
                class: "promotions-form__header-container background-color__dark-blue",
                children: S.jsx("h3", {
                    class: "h3",
                    children: o ? "You've Officially Entered" : a
                })
            }), S.jsx("div", {
                class: "promotions-form__bottom-container background-color__white",
                children: S.jsxs("div", {
                    className: "promotions-form__app-container",
                    children: [o && S.jsx(Dve, {}), !o && S.jsxs("div", {
                        className: "promotion-form__form-container",
                        children: [S.jsx("p", {
                            className: "p-xsmall",
                            children: "Required fields*"
                        }), S.jsxs("div", {
                            className: "promotion-form__fields-container",
                            children: [e.year.show && S.jsx("div", {
                                className: "promotion-form__row",
                                children: S.jsx(Ta, {
                                    control: l,
                                    name: "year",
                                    label: `I'm a${e.year.required ? "*" : ""}`,
                                    placeholder: "",
                                    options: qve,
                                    setValue: d,
                                    errors: u.year,
                                    onChange: R => i(R.value),
                                    onBlur: () => h("I'm a"),
                                    message: (g = u.year) == null ? void 0 : g.message,
                                    isRequired: e.year.required
                                })
                            }), e.currentSchool.show && S.jsxs("div", {
                                className: "promotion-form__row",
                                children: [n === "college-student" && S.jsx(Ta, {
                                    control: l,
                                    name: "current_university",
                                    label: `Current University${e.currentSchool.required ? "*" : ""}`,
                                    placeholder: "",
                                    options: Lve,
                                    isSearchable: !0,
                                    allowInput: !0,
                                    setValue: d,
                                    errors: u.current_university,
                                    onBlur: () => h("Current University"),
                                    message: (m = u.current_university) == null ? void 0 : m.message,
                                    isRequired: e.currentSchool.required
                                }), n === "high-school-student" && S.jsx(Ee, {
                                    control: l,
                                    type: "text",
                                    name: "current_high_school",
                                    label: `Current High School${e.currentSchool.required ? "*" : ""}`,
                                    errors: u.current_high_school,
                                    onBlur: () => h("Current High School"),
                                    message: ((w = u.current_high_school) == null ? void 0 : w.message) || "",
                                    isRequired: e.currentSchool.required
                                })]
                            }), (e.firstName.show || e.lastName.show) && S.jsxs("div", {
                                className: "promotion-form__row",
                                children: [e.firstName.show && S.jsx(Ee, {
                                    control: l,
                                    type: "name",
                                    name: "firstName",
                                    label: `First Name${e.firstName.required ? "*" : ""}`,
                                    onBlur: () => h("First Name"),
                                    errors: u.firstName,
                                    message: ((C = u.firstName) == null ? void 0 : C.message) || "",
                                    isRequired: e.firstName.required
                                }), e.lastName.show && S.jsx(Ee, {
                                    control: l,
                                    type: "name",
                                    name: "lastName",
                                    label: `Last Name${e.lastName.required ? "*" : ""}`,
                                    onBlur: () => h("Last Name"),
                                    errors: u.lastName,
                                    message: ((b = u.lastName) == null ? void 0 : b.message) || "",
                                    isRequired: e.lastName.required
                                })]
                            }), e.email.show && S.jsx("div", {
                                className: "promotion-form__row",
                                children: S.jsx(Ee, {
                                    control: l,
                                    type: "email",
                                    name: "email",
                                    label: `Email Address${e.email.required ? "*" : ""}`,
                                    onBlur: () => h("Email Address"),
                                    errors: u.email,
                                    message: ((x = u.email) == null ? void 0 : x.message) || "",
                                    isRequired: e.email.required
                                })
                            }), e.phoneNumber.show && S.jsx("div", {
                                className: "promotion-form__row",
                                children: S.jsx(Ee, {
                                    control: l,
                                    type: "phone",
                                    name: "phoneNumber",
                                    label: `Phone Number${e.phoneNumber.required ? "*" : ""}`,
                                    onBlur: () => h("Phone Number"),
                                    errors: u.phoneNumber,
                                    message: ((E = u.phoneNumber) == null ? void 0 : E.message) || "",
                                    isRequired: e.phoneNumber.required
                                })
                            }), (e.address.show || e.city.show) && S.jsxs("div", {
                                className: "promotion-form__row",
                                children: [e.address.show && S.jsx(Ee, {
                                    control: l,
                                    type: "address",
                                    name: "address",
                                    label: `Street Address${e.address.required ? "*" : ""}`,
                                    onBlur: () => h("Street Address"),
                                    errors: u.address,
                                    message: ((k = u.address) == null ? void 0 : k.message) || "",
                                    isRequired: e.address.required
                                }), e.city.show && S.jsx(Ee, {
                                    control: l,
                                    type: "text",
                                    name: "city",
                                    label: `City${e.city.required ? "*" : ""}`,
                                    onBlur: () => h("City"),
                                    errors: u.city,
                                    message: ((A = u.city) == null ? void 0 : A.message) || "",
                                    isRequired: e.city.required
                                })]
                            }), (e.state.show || e.zip.show) && S.jsxs("div", {
                                className: "promotion-form__row",
                                children: [e.state.show && S.jsx(Ta, {
                                    control: l,
                                    name: "state",
                                    label: `State${e.state.required ? "*" : ""}`,
                                    placeholder: "",
                                    options: Rve,
                                    isSearchable: !0,
                                    allowInput: !1,
                                    setValue: d,
                                    errors: u.state,
                                    onBlur: () => h("State"),
                                    message: (I = u.state) == null ? void 0 : I.message,
                                    isRequired: e.state.required
                                }), e.zip.show && S.jsx(Ee, {
                                    control: l,
                                    type: "zip",
                                    name: "zip",
                                    label: `ZIP Code${e.zip.required ? "*" : ""}`,
                                    onBlur: () => h("ZIP Code"),
                                    errors: u.zip,
                                    message: ((T = u.zip) == null ? void 0 : T.message) || "",
                                    isRequired: e.zip.required
                                })]
                            }), S.jsx("div", {
                                className: "promotion-form__row",
                                children: S.jsx(zm, {
                                    name: "certify",
                                    control: l,
                                    setValue: d,
                                    onChange: () => h("Certify Checkbox"),
                                    errors: u.certify,
                                    message: ((F = u.certify) == null ? void 0 : F.message) || "",
                                    isRequired: !0,
                                    children: S.jsxs("p", {
                                        className: "p-xsmall",
                                        children: ["I certify that I have read and agreed to the ", S.jsx(Ga, {
                                            target: "_blank",
                                            href: `${window.location.pathname}rules/`,
                                            label: "Rules and Regulations"
                                        }), " of this contents and ", S.jsx(Ga, {
                                            href: "/privacy/",
                                            target: "_blank",
                                            label: "Privacy Policy"
                                        }), ". I also grant Afri Fund Universty Lender permission to contact me via email."]
                                    })
                                })
                            })]
                        }), S.jsx(Re, {
                            isLoading: c,
                            className: "button button__dark-teal button__width-203 dropshadow dropshadow__hover-off",
                            onClick: v(y, f),
                            children: "Submit"
                        })]
                    })]
                })
            })]
        })
    })
}
function Vs(e) {
    const {name: t, control: r, errors: a, label: n, placeholder: i, message: o, isRequired: s, onFocus: l, onBlur: u, onChange: c, customValidate: d, rows: v=4} = e
      , h = q.useMemo( () => !a || Object.keys(a).length === 0)
      , p = (_, y) => (_ && _(y),
    y)
      , f = q.useCallback(_ => {
        if (d)
            return d(_)
    }
    , [d]);
    return S.jsxs("div", {
        className: `form-field form-field__text-input${h ? "" : " form-field__error"}`,
        children: [S.jsxs("label", {
            className: "form-field__label-container",
            children: [S.jsx("p", {
                className: "form-field__label",
                children: n
            }), S.jsx("div", {
                className: "form-field__text-input-button-container",
                children: S.jsx("div", {
                    className: "form-field__text-input-container",
                    children: S.jsx(au, {
                        name: t,
                        control: r,
                        defaultValue: e.value || "",
                        rules: {
                            required: s ? "This field is required" : !1,
                            validate: _ => !f || !s && !_ ? !0 : f(_)
                        },
                        render: ({field: _}) => S.jsx("textarea", {
                            className: "form-field__input",
                            rows: v,
                            name: t,
                            value: _.value,
                            onFocus: l,
                            onBlur: u,
                            onChange: y => _.onChange(p(c, y)),
                            label: n,
                            placeholder: i,
                            isValid: !a || Object.keys(a).length === 0,
                            message: o,
                            isRequired: s
                        })
                    })
                })
            })]
        }), !!o && S.jsx("p", {
            className: "form-field__message",
            children: o
        })]
    })
}
Vs.propTypes = {
    name: Pa.string.isRequired,
    control: Pa.object.isRequired,
    label: Pa.string.isRequired,
    value: Pa.string,
    placeholder: Pa.string,
    message: Pa.string
};
const $ve = [{
    label: "Required Documentation",
    value: "Required Documentation"
}, {
    label: "Has my school certified my loan",
    value: "Has my school certified my loan"
}, {
    label: "When will my money be disbursed",
    value: "When will my money be disbursed"
}, {
    label: "Loan cancellation requests",
    value: "Loan cancellation requests"
}, {
    label: "Notification of credit freeze removal",
    value: "Notification of credit freeze removal"
}, {
    label: "It's something else",
    value: "It's something else"
}]
  , zve = [{
    label: "I have already uploaded my docs",
    value: "I have already uploaded my docs"
}, {
    label: "I need to upload my docs",
    value: "I need to upload my docs"
}]
  , Gve = [{
    label: "I got a lower rate",
    value: "I got a lower rate"
}, {
    label: "I took a loan from a competitor",
    value: "I took a loan from a competitor"
}, {
    label: "I am no longer attending school",
    value: "I am no longer attending school"
}, {
    label: "I no longer need a private loan",
    value: "I no longer need a private loan"
}];
function jve({onSubmit: e, sendEvent: t, handleErrors: r}) {
    var h, p, f, _, y, g, m, w, C, b, x;
    const [a,n] = q.useState("")
      , {control: i, formState: {errors: o, isSubmitting: s}, setValue: l, unregister: u, handleSubmit: c} = Cr()
      , d = E => {
        u("app_in_progress_required_documentation_dropdown_selection"),
        u("app_in_progress_loan_cancellation_dropdown_selection"),
        u("app_in_progress_credit_freeze_selection"),
        n(E.value)
    }
      , v = E => {
        const {app_in_progress_help_dropdown_selection: k} = E;
        if (k === "Notification of credit freeze removal") {
            const A = E.app_in_progress_credit_freeze_selection ? "checked" : "unchecked";
            return e({
                ...E,
                app_in_progress_credit_freeze_selection: A
            })
        }
        return e(E)
    }
    ;
    return S.jsxs("div", {
        className: "contact-form__form-container",
        children: [S.jsxs("div", {
            className: "contact-form__fields-container",
            children: [S.jsxs("div", {
                className: "contact-form__row",
                children: [S.jsx(Ee, {
                    name: "first_name",
                    type: "name",
                    control: i,
                    label: "First Name*",
                    placeholder: "",
                    onBlur: () => t("First Name"),
                    errors: o.first_name,
                    message: ((h = o.first_name) == null ? void 0 : h.message) || "",
                    isRequired: !0
                }), S.jsx(Ee, {
                    name: "last_name",
                    type: "name",
                    control: i,
                    label: "Last Name*",
                    onBlur: () => t("Last Name"),
                    placeholder: "",
                    errors: o.last_name,
                    message: ((p = o.last_name) == null ? void 0 : p.message) || "",
                    isRequired: !0
                })]
            }), S.jsxs("div", {
                className: "contact-form__row",
                children: [S.jsx(Ee, {
                    name: "email",
                    type: "email",
                    control: i,
                    label: "Email Address*",
                    onBlur: () => t("EmailAddress"),
                    placeholder: "",
                    errors: o.email,
                    message: ((f = o.email) == null ? void 0 : f.message) || "",
                    isRequired: !0
                }), S.jsx(Ee, {
                    name: "date_of_birth",
                    type: "dateOfBirth",
                    control: i,
                    label: "Date of Birth MM/DD/YYYY*",
                    onBlur: () => t("Date of Birth MM/DD/YYYY"),
                    placeholder: "",
                    errors: o.date_of_birth,
                    message: ((_ = o.date_of_birth) == null ? void 0 : _.message) || "",
                    isRequired: !0
                })]
            }), S.jsxs("div", {
                className: "contact-form__row",
                children: [S.jsx(Ee, {
                    name: "reference_number",
                    type: "number",
                    control: i,
                    label: "14-Digit Reference Number*",
                    onBlur: () => t("14-Digit Reference Number"),
                    placeholder: "",
                    errors: o.reference_number,
                    message: ((y = o.reference_number) == null ? void 0 : y.message) || "",
                    maxLength: 14,
                    isRequired: !0
                }), S.jsx(Ee, {
                    name: "last_4_of_ssn",
                    type: "number",
                    control: i,
                    label: "Last 4 of SSN*",
                    onBlur: () => t("Last 4 of SSN"),
                    placeholder: "",
                    errors: o.last_4_of_ssn,
                    message: ((g = o.last_4_of_ssn) == null ? void 0 : g.message) || "",
                    maxLength: 4,
                    isRequired: !0
                })]
            }), S.jsx("div", {
                className: "contact-form__row",
                children: S.jsx(Ta, {
                    control: i,
                    name: "app_in_progress_help_dropdown_selection",
                    label: "What can we help you with?*",
                    onBlur: () => t("What can we help you with?"),
                    placeholder: "",
                    options: $ve,
                    setValue: l,
                    errors: o.app_in_progress_help_dropdown_selection,
                    message: (m = o.app_in_progress_help_dropdown_selection) == null ? void 0 : m.message,
                    onChange: d,
                    isRequired: !0
                })
            }), a === "Required Documentation" && S.jsx("div", {
                className: "contact-form__row",
                children: S.jsx(Ta, {
                    control: i,
                    name: "app_in_progress_required_documentation_dropdown_selection",
                    label: "Required Documents*",
                    onBlur: () => t("Required Documents"),
                    placeholder: "",
                    options: zve,
                    setValue: l,
                    errors: o.app_in_progress_required_documentation_dropdown_selection,
                    message: (w = o.app_in_progress_required_documentation_dropdown_selection) == null ? void 0 : w.message,
                    isRequired: !0
                })
            }), a === "Loan cancellation requests" && S.jsx("div", {
                className: "contact-form__row",
                children: S.jsx(Ta, {
                    control: i,
                    name: "app_in_progress_loan_cancellation_dropdown_selection",
                    label: "Why do you want to cancel?*",
                    onBlur: () => t("Why do you want to cancel?"),
                    placeholder: "",
                    options: Gve,
                    setValue: l,
                    errors: o.app_in_progress_loan_cancellation_dropdown_selection,
                    message: (C = o.app_in_progress_loan_cancellation_dropdown_selection) == null ? void 0 : C.message,
                    isRequired: !0
                })
            }), a === "Notification of credit freeze removal" && S.jsx("div", {
                className: "contact-form__row",
                children: S.jsx(zm, {
                    name: "app_in_progress_credit_freeze_selection",
                    control: i,
                    setValue: l,
                    onChange: () => t("Credit freeze checkbox"),
                    message: ((b = o.app_in_progress_credit_freeze_selection) == null ? void 0 : b.message) || "",
                    children: S.jsx("p", {
                        children: "I have unfrozen my credit"
                    })
                })
            }), S.jsx("div", {
                className: "contact-form__row",
                children: S.jsxs("p", {
                    children: [`Please enter details of your request. For your protection please don't include any sensitive information such as your full Social Security number. A member of our support staff will respond as soon as possible. By clicking "Submit" I acknowledge I have read and agree to Afri Fund Universty Lender's `, S.jsx("a", {
                        href: "/privacy/",
                        target: "_blank",
                        children: "Privacy Policy"
                    }), "."]
                })
            }), S.jsx("div", {
                className: "contact-form__row",
                children: S.jsx(Vs, {
                    control: i,
                    name: "description",
                    label: "Description*",
                    onBlur: () => t("Description"),
                    placeholder: "",
                    errors: o.description,
                    message: ((x = o.description) == null ? void 0 : x.message) || "",
                    isRequired: !0
                })
            })]
        }), S.jsx(Re, {
            isLoading: s,
            onClick: c(E => v(E), r),
            className: "button button__dark-teal button__width-203 dropshadow dropshadow__hover-off",
            children: "Submit"
        })]
    })
}
const Hve = [{
    label: "I need to check the status of a loan",
    value: "I need to check the status of a loan"
}, {
    label: "I need to update loan info",
    value: "I need to update loan info"
}, {
    label: "I need to update our certification and/or disbursement method",
    value: "I need to update our certification and/or disbursement method"
}, {
    label: "I have a question about your eligibility requirements",
    value: "I have a question about your eligibility requirements"
}, {
    label: "How do I get my school added",
    value: "How do I get my school added"
}]
  , Wve = [{
    label: "A loan period",
    value: "A loan period"
}, {
    label: "A disbursement date",
    value: "A disbursement date"
}, {
    label: "Other",
    value: "Other"
}];
function Yve({onSubmit: e, sendEvent: t, handleErrors: r}) {
    var v, h, p, f, _, y, g, m;
    const [a,n] = q.useState("")
      , {control: i, formState: {errors: o, isSubmitting: s}, setValue: l, unregister: u, handleSubmit: c} = Cr()
      , d = w => {
        u("financial_aid_employee_update_loan_info_dropdown_selection"),
        n(w.value)
    }
    ;
    return S.jsxs("div", {
        className: "contact-form__form-container",
        children: [S.jsxs("div", {
            className: "contact-form__fields-container",
            children: [S.jsx("div", {
                className: "contact-form__row",
                children: S.jsx(Ee, {
                    name: "school_name",
                    type: "text",
                    control: i,
                    label: "School Name*",
                    onBlur: () => t("School Name"),
                    placeholder: "",
                    errors: o.school_name,
                    message: ((v = o.school_name) == null ? void 0 : v.message) || "",
                    isRequired: !0
                })
            }), S.jsxs("div", {
                className: "contact-form__row",
                children: [S.jsx(Ee, {
                    name: "school_code",
                    type: "text",
                    control: i,
                    label: "School Code*",
                    onBlur: () => t("School Code"),
                    placeholder: "",
                    errors: o.school_code,
                    message: ((h = o.school_code) == null ? void 0 : h.message) || "",
                    isRequired: !0
                }), S.jsx(Ee, {
                    name: "email",
                    type: "email",
                    control: i,
                    label: "Email Address*",
                    onBlur: () => t("Email Address"),
                    placeholder: "",
                    errors: o.email,
                    message: ((p = o.email) == null ? void 0 : p.message) || "",
                    isRequired: !0
                })]
            }), S.jsxs("div", {
                className: "contact-form__row",
                children: [S.jsx(Ee, {
                    name: "students_name",
                    type: "text",
                    control: i,
                    label: "Student's Name",
                    onBlur: () => t("Student's Name"),
                    placeholder: "",
                    errors: o.students_name,
                    message: ((f = o.students_name) == null ? void 0 : f.message) || ""
                }), S.jsx(Ee, {
                    name: "last_4_students_ssn",
                    type: "number",
                    control: i,
                    label: "Last 4 of Student's SSN",
                    onBlur: () => t("Last 4 of Student's SSN"),
                    placeholder: "",
                    errors: o.last_4_students_ssn,
                    message: ((_ = o.last_4_students_ssn) == null ? void 0 : _.message) || "",
                    maxLength: 4
                })]
            }), S.jsx("div", {
                className: "contact-form__row",
                children: S.jsx(Ta, {
                    control: i,
                    name: "financial_aid_employee_help_dropdown_selection",
                    label: "What can we help you with?*",
                    onBlur: () => t("What can we help you with?"),
                    placeholder: "",
                    options: Hve,
                    setValue: l,
                    errors: o.financial_aid_employee_help_dropdown_selection,
                    message: (y = o.financial_aid_employee_help_dropdown_selection) == null ? void 0 : y.message,
                    onChange: d,
                    isRequired: !0
                })
            }), a === "I need to update loan info" && S.jsx("div", {
                className: "contact-form__row",
                children: S.jsx(Ta, {
                    control: i,
                    name: "financial_aid_employee_update_loan_info_dropdown_selection",
                    label: "What info do you need to update?*",
                    onBlur: () => t("What info do you need to update?"),
                    placeholder: "",
                    options: Wve,
                    setValue: l,
                    errors: o.financial_aid_employee_update_loan_info_dropdown_selection,
                    message: (g = o.financial_aid_employee_update_loan_info_dropdown_selection) == null ? void 0 : g.message,
                    isRequired: !0
                })
            }), S.jsx("div", {
                className: "contact-form__row",
                children: S.jsxs("p", {
                    children: [`Please enter details of your request. For your protection please don't include any sensitive information such as your full Social Security number. A member of our support staff will respond as soon as possible. By clicking "Submit" I acknowledge I have read and agree to Afri Fund Universty Lender's `, S.jsx("a", {
                        href: "/privacy/",
                        target: "_blank",
                        children: "Privacy Policy"
                    }), "."]
                })
            }), S.jsx("div", {
                className: "contact-form__row",
                children: S.jsx(Vs, {
                    control: i,
                    name: "description",
                    label: "Description*",
                    onBlur: () => t("Description"),
                    placeholder: "",
                    errors: o.description,
                    message: ((m = o.description) == null ? void 0 : m.message) || "",
                    isRequired: !0
                })
            })]
        }), S.jsx(Re, {
            isLoading: s,
            onClick: c(w => e(w), r),
            className: "button button__dark-teal button__width-203 dropshadow dropshadow__hover-off",
            children: "Submit"
        })]
    })
}
const Jve = [{
    label: "Undergraduate",
    value: "Undergraduate"
}, {
    label: "Graduate",
    value: "Graduate"
}, {
    label: "Career",
    value: "Career"
}, {
    label: "Parent",
    value: "Parent"
}, {
    label: "Refinance",
    value: "Refinance"
}];
function Kve({onSubmit: e, sendEvent: t, handleErrors: r}) {
    var l, u, c, d, v, h;
    const {control: a, formState: {errors: n, isSubmitting: i}, setValue: o, handleSubmit: s} = Cr();
    return S.jsxs("div", {
        className: "contact-form__form-container",
        children: [S.jsxs("div", {
            className: "contact-form__fields-container",
            children: [S.jsxs("div", {
                className: "contact-form__row",
                children: [S.jsx(Ee, {
                    name: "first_name",
                    type: "name",
                    control: a,
                    label: "First Name*",
                    onBlur: () => t("First Name"),
                    placeholder: "",
                    errors: n.first_name,
                    message: ((l = n.first_name) == null ? void 0 : l.message) || "",
                    isRequired: !0
                }), S.jsx(Ee, {
                    name: "last_name",
                    type: "name",
                    control: a,
                    label: "Last Name*",
                    onBlur: () => t("Last Name"),
                    placeholder: "",
                    errors: n.last_name,
                    message: ((u = n.last_name) == null ? void 0 : u.message) || "",
                    isRequired: !0
                })]
            }), S.jsxs("div", {
                className: "contact-form__row",
                children: [S.jsx(Ee, {
                    name: "email",
                    type: "email",
                    control: a,
                    label: "Email Address*",
                    onBlur: () => t("Email Address"),
                    placeholder: "",
                    errors: n.email,
                    message: ((c = n.email) == null ? void 0 : c.message) || "",
                    isRequired: !0
                }), S.jsx(Ee, {
                    name: "phone_number",
                    type: "phone",
                    control: a,
                    label: "Phone Number*",
                    onBlur: () => t("Phone Number"),
                    placeholder: "",
                    errors: n.phone_number,
                    message: ((d = n.phone_number) == null ? void 0 : d.message) || "",
                    isRequired: !0
                })]
            }), S.jsx("div", {
                className: "contact-form__row",
                children: S.jsx(Ta, {
                    control: a,
                    name: "product",
                    label: "Which product are you inquiring about?*",
                    onBlur: () => t("Which product are you inquiring about?"),
                    placeholder: "",
                    options: Jve,
                    setValue: o,
                    errors: n.product,
                    message: (v = n.product) == null ? void 0 : v.message,
                    isRequired: !0
                })
            }), S.jsx("div", {
                className: "contact-form__row",
                children: S.jsxs("p", {
                    children: [`Please enter details of your request. For your protection please don't include any sensitive information such as your full Social Security number. A member of our support staff will respond as soon as possible. By clicking "Submit" I acknowledge I have read and agree to Afri Fund Universty Lender's `, S.jsx("a", {
                        href: "/privacy/",
                        target: "_blank",
                        children: "Privacy Policy"
                    }), "."]
                })
            }), S.jsx("div", {
                className: "contact-form__row",
                children: S.jsx(Vs, {
                    control: a,
                    name: "description",
                    label: "Description*",
                    onBlur: () => t("Description"),
                    placeholder: "",
                    errors: n.description,
                    message: ((h = n.description) == null ? void 0 : h.message) || "",
                    isRequired: !0
                })
            })]
        }), S.jsx(Re, {
            isLoading: i,
            onClick: s(p => e(p), r),
            className: "button button__dark-teal button__width-203 dropshadow dropshadow__hover-off",
            children: "Submit"
        })]
    })
}
const Qve = [{
    label: "Website assistance",
    value: "Website assistance"
}, {
    label: "Enrollment Status",
    value: "Enrollment Status"
}, {
    label: "Make a payment",
    value: "Make a payment"
}, {
    label: "Other",
    value: "Other"
}];
function Zve({onSubmit: e, sendEvent: t, handleErrors: r}) {
    var l, u, c, d, v, h, p, f, _, y;
    const {control: a, formState: {errors: n, isSubmitting: i}, setValue: o, handleSubmit: s} = Cr();
    return S.jsxs("div", {
        className: "contact-form__form-container",
        children: [S.jsxs("div", {
            className: "contact-form__fields-container",
            children: [S.jsxs("div", {
                className: "contact-form__row",
                children: [S.jsx(Ee, {
                    name: "first_name",
                    type: "name",
                    control: a,
                    label: "First Name*",
                    onBlur: () => t("First Name"),
                    placeholder: "",
                    errors: n.first_name,
                    message: ((l = n.first_name) == null ? void 0 : l.message) || "",
                    isRequired: !0
                }), S.jsx(Ee, {
                    name: "last_name",
                    type: "name",
                    control: a,
                    label: "Last Name*",
                    onBlur: () => t("Last Name"),
                    placeholder: "",
                    errors: n.last_name,
                    message: ((u = n.last_name) == null ? void 0 : u.message) || "",
                    isRequired: !0
                })]
            }), S.jsxs("div", {
                className: "contact-form__row",
                children: [S.jsx(Ee, {
                    name: "email",
                    type: "email",
                    control: a,
                    label: "Email Address*",
                    onBlur: () => t("Email Address"),
                    placeholder: "",
                    errors: n.email,
                    message: ((c = n.email) == null ? void 0 : c.message) || "",
                    isRequired: !0
                }), S.jsx(Ee, {
                    name: "phone_number",
                    type: "phone",
                    control: a,
                    label: "Phone Number*",
                    onBlur: () => t("Phone Number"),
                    placeholder: "",
                    errors: n.phone,
                    message: ((d = n.phone_number) == null ? void 0 : d.message) || "",
                    isRequired: !0
                })]
            }), S.jsx("div", {
                className: "contact-form__row",
                children: S.jsx(Ee, {
                    name: "mailing_address",
                    type: "text",
                    control: a,
                    label: "Mailing Address*",
                    onBlur: () => t("Mailing Address"),
                    placeholder: "",
                    errors: n.mailing_address,
                    message: ((v = n.mailing_address) == null ? void 0 : v.message) || "",
                    isRequired: !0
                })
            }), S.jsxs("div", {
                className: "contact-form__row",
                children: [S.jsx(Ee, {
                    name: "date_of_birth",
                    type: "dateOfBirth",
                    control: a,
                    label: "Date of Birth MM/DD/YYYY*",
                    onBlur: () => t("Date of Birth MM/DD/YYYY"),
                    placeholder: "",
                    errors: n.date_of_birth,
                    message: ((h = n.date_of_birth) == null ? void 0 : h.message) || "",
                    isRequired: !0
                }), S.jsx(Ee, {
                    name: "last_4_of_ssn",
                    type: "number",
                    control: a,
                    label: "Last 4 of SSN*",
                    onBlur: () => t("Last 4 of SSN"),
                    placeholder: "",
                    errors: n.last_4_of_ssn,
                    message: ((p = n.last_4_of_ssn) == null ? void 0 : p.message) || "",
                    maxLength: 4,
                    isRequired: !0
                })]
            }), S.jsx("div", {
                className: "contact-form__row",
                children: S.jsx(Ee, {
                    name: "loan_id_number",
                    type: "number",
                    control: a,
                    label: "Loan ID Number",
                    onBlur: () => t("Loan ID Number"),
                    placeholder: "",
                    maxLength: 12,
                    errors: n.loan_id_number,
                    message: ((f = n.loan_id_number) == null ? void 0 : f.message) || ""
                })
            }), S.jsx("div", {
                className: "contact-form__row",
                children: S.jsx(Ta, {
                    control: a,
                    name: "existing_Loan_help_dropdown_selection",
                    label: "What can we help you with?*",
                    onBlur: () => t("What can we help you with?"),
                    placeholder: "",
                    options: Qve,
                    setValue: o,
                    errors: n.existing_Loan_help_dropdown_selection,
                    message: (_ = n.existing_Loan_help_dropdown_selection) == null ? void 0 : _.message,
                    isRequired: !0
                })
            }), S.jsx("div", {
                className: "contact-form__row",
                children: S.jsxs("p", {
                    children: [`Please enter details of your request. For your protection please don't include any sensitive information such as your full Social Security number. A member of our support staff will respond as soon as possible. By clicking "Submit" I acknowledge I have read and agree to Afri Fund Universty Lender's `, S.jsx("a", {
                        href: "/privacy/",
                        target: "_blank",
                        children: "Privacy Policy"
                    }), "."]
                })
            }), S.jsx("div", {
                className: "contact-form__row",
                children: S.jsx(Vs, {
                    control: a,
                    name: "description",
                    label: "Description*",
                    onBlur: () => t("Description"),
                    placeholder: "",
                    errors: n.description,
                    message: ((y = n.description) == null ? void 0 : y.message) || "",
                    isRequired: !0
                })
            })]
        }), S.jsx(Re, {
            isLoading: i,
            onClick: s(g => e(g), r),
            className: "button button__dark-teal button__width-203 dropshadow dropshadow__hover-off",
            children: "Submit"
        })]
    })
}
const Xve = [{
    label: "How it works",
    value: "How it works"
}, {
    label: "Account registration in progress",
    value: "Student Card Help Topic > Account registration in progress"
}, {
    label: "Question about my account",
    value: "Student Card Help Topic > Question about my account"
}, {
    label: "Website assistance",
    value: "Student Card Help Topic > Student Card Website assistance"
}, {
    label: "Other",
    value: "Student Card Help Topic > Student Other"
}];
function ehe({onSubmit: e, sendEvent: t, handleErrors: r}) {
    var l, u, c, d, v, h, p, f, _;
    const {control: a, formState: {errors: n, isSubmitting: i}, setValue: o, handleSubmit: s} = Cr();
    return S.jsxs("div", {
        className: "contact-form__form-container",
        children: [S.jsxs("div", {
            className: "contact-form__fields-container",
            children: [S.jsxs("div", {
                className: "contact-form__row",
                children: [S.jsx(Ee, {
                    name: "first_name",
                    type: "name",
                    control: a,
                    label: "First Name*",
                    onBlur: () => t("First Name"),
                    placeholder: "",
                    errors: n.first_name,
                    message: ((l = n.first_name) == null ? void 0 : l.message) || "",
                    isRequired: !0
                }), S.jsx(Ee, {
                    name: "last_name",
                    type: "name",
                    control: a,
                    label: "Last Name*",
                    onBlur: () => t("Last Name"),
                    placeholder: "",
                    errors: n.last_name,
                    message: ((u = n.last_name) == null ? void 0 : u.message) || "",
                    isRequired: !0
                })]
            }), S.jsxs("div", {
                className: "contact-form__row",
                children: [S.jsx(Ee, {
                    name: "email",
                    type: "email",
                    control: a,
                    label: "Email Address*",
                    onBlur: () => t("Email Address"),
                    placeholder: "",
                    errors: n.email,
                    message: ((c = n.email) == null ? void 0 : c.message) || "",
                    isRequired: !0
                }), S.jsx(Ee, {
                    name: "phone_number",
                    type: "phone",
                    control: a,
                    label: "Phone Number*",
                    onBlur: () => t("Phone Number"),
                    placeholder: "",
                    errors: n.phone,
                    message: ((d = n.phone_number) == null ? void 0 : d.message) || "",
                    isRequired: !0
                })]
            }), S.jsxs("div", {
                className: "contact-form__row",
                children: [S.jsx(Ee, {
                    name: "date_of_birth",
                    type: "dateOfBirth",
                    control: a,
                    label: "Date of Birth MM/DD/YYYY*",
                    onBlur: () => t("Date of Birth MM/DD/YYYY"),
                    placeholder: "",
                    errors: n.date_of_birth,
                    message: ((v = n.date_of_birth) == null ? void 0 : v.message) || "",
                    isRequired: !0
                }), S.jsx(Ee, {
                    name: "last_4_of_ssn",
                    type: "number",
                    control: a,
                    label: "Last 4 of SSN*",
                    onBlur: () => t("Last 4 of SSN"),
                    placeholder: "",
                    errors: n.last_4_of_ssn,
                    message: ((h = n.last_4_of_ssn) == null ? void 0 : h.message) || "",
                    maxLength: 4,
                    isRequired: !0
                })]
            }), S.jsx("div", {
                className: "contact-form__row",
                children: S.jsx(Ee, {
                    name: "last_4_of_account_number",
                    type: "number",
                    control: a,
                    label: "Last 4 digits of account number",
                    onBlur: () => t("Last 4 digits of account number"),
                    placeholder: "",
                    maxLength: 12,
                    errors: n.last_4_of_account_number,
                    message: ((p = n.last_4_of_account_number) == null ? void 0 : p.message) || ""
                })
            }), S.jsx("div", {
                className: "contact-form__row",
                children: S.jsx(Ta, {
                    control: a,
                    name: "student_card_help_dropdown_selection",
                    label: "What can we help you with?*",
                    onBlur: () => t("What can we help you with?"),
                    placeholder: "",
                    options: Xve,
                    setValue: o,
                    errors: n.student_card_help_dropdown_selection,
                    message: (f = n.student_card_help_dropdown_selection) == null ? void 0 : f.message,
                    isRequired: !0
                })
            }), S.jsx("div", {
                className: "contact-form__row",
                children: S.jsxs("p", {
                    children: [`Please enter details of your request. For your protection please don't include any sensitive information such as your full Social Security number. A member of our support staff will respond as soon as possible. By clicking "Submit" I acknowledge I have read and agree to Afri Fund Universty Lender's `, S.jsx("a", {
                        href: "/privacy/",
                        target: "_blank",
                        children: "Privacy Policy"
                    }), "."]
                })
            }), S.jsx("div", {
                className: "contact-form__row",
                children: S.jsx(Vs, {
                    control: a,
                    name: "description",
                    label: "Description*",
                    onBlur: () => t("Description"),
                    placeholder: "",
                    errors: n.description,
                    message: ((_ = n.description) == null ? void 0 : _.message) || "",
                    isRequired: !0
                })
            })]
        }), S.jsx(Re, {
            isLoading: i,
            onClick: s(y => e(y), r),
            className: "button button__dark-teal button__width-203 dropshadow dropshadow__hover-off",
            children: "Submit"
        })]
    })
}
function the() {
    return S.jsxs("div", {
        className: "contact-form__success-container",
        children: [S.jsx("img", {
            src: "/static/assets/images/icons/success.svg",
            alt: "success",
            className: "contact-form__success-image"
        }), S.jsx("div", {
            className: "contact-form__success-text",
            children: S.jsx("p", {
                className: "p-large",
                children: "We're on it! We review questions and requests in the order they are received. We'll be in touch soon."
            })
        })]
    })
}
const rhe = async e => {
    try {
        const t = {
            ...e,
            form_type: "contact_form"
        }
          , r = await za.post(`${Uo}/v1/help-desk/ticket`, t);
        if (r !== "success")
            throw new Error("Reponse Not Success");
        return r
    } catch (t) {
        throw new Error("There was an error. Please try again.",{
            cause: t
        })
    }
}
  , ahe = ({formSelected: e}) => {
    const t = i => {
        const o = {
            type: "event",
            eventAction: "Form Field - interaction",
            eventLabel: `Contact - ${e} > ${i}`
        };
        return mn(o)
    }
      , r = i => {
        const o = {
            type: "event",
            eventAction: `Contact Form - ${i}`,
            eventLabel: `Contact - ${e}`
        };
        return mn(o)
    }
      , a = i => {
        const o = {
            type: "event",
            eventAction: "Form Field - error",
            eventLabel: `${e} - ${i}`
        };
        return mn(o)
    }
    ;
    return {
        sendEvent: t,
        sendFormEvent: r,
        handleFormErrors: i => {
            const o = {
                description: "Description",
                email: "Email",
                first_name: "First Name",
                last_name: "Last Name",
                phone_number: "Phone Number",
                product: "Product",
                app_in_progress_help_dropdown_selection: "What can we help you with?",
                app_in_progress_required_documentation_dropdown_selection: "Required Documents",
                app_in_progress_loan_cancellation_dropdown_selection: "Why do you want to cancel?",
                date_of_birth: "Date of Birth MM/DD/YYYY",
                last_4_of_ssn: "Last 4 of SSN",
                reference_number: "Reference Number",
                financial_aid_employee_help_dropdown_selection: "What can we help you with?",
                financial_aid_employee_update_loan_info_selection: "What info do you need to update?",
                school_code: "School Code",
                school_name: "School Name",
                existing_Loan_help_dropdown_selection: "What can we help you with?",
                mailing_address: "Mailing Address"
            };
            Object.keys(i).map(l => (o[l] || `${l}${i[l].message}`,
            `Contact > ${o[l]} > ${i[l].message}`)).forEach(a)
        }
    }
}
  , nhe = [{
    label: "Questions about starting a new application",
    value: "Questions about starting a new application"
}, {
    label: "Questions about an application already in progress",
    value: "Questions about an application already in progress"
}, {
    label: "Questions from a school financial aid employee",
    value: "Questions from a school financial aid employee"
}, {
    label: "Questions about the servicing of an existing loan",
    value: "Questions about the servicing of an existing loan"
}, {
    label: "Questions about Student Card",
    value: "Questions about Student Card"
}];
function ihe() {
    const [e,t] = q.useState(null)
      , [r,a] = q.useState(!1)
      , {sendEvent: n, sendFormEvent: i, handleFormErrors: o} = ahe({
        formSelected: e
    })
      , s = async l => {
        try {
            i("submit"),
            await rhe({
                ...l,
                primary_help_dropdown_selection: e
            })
        } catch (u) {
            return window.alert(u.message)
        }
        i("submit success"),
        a(!0),
        t(null)
    }
    ;
    return S.jsx("section", {
        className: "contact-forms-section",
        children: S.jsx("div", {
            className: "section-container",
            children: S.jsx("div", {
                className: "contact-forms-section__outer-container background-color__gray",
                children: S.jsx("div", {
                    className: "contact-forms-section__inner-container background-color__white",
                    children: S.jsxs("div", {
                        className: "contact-forms-section__forms-outer-container",
                        children: [S.jsx("h3", {
                            className: "h3",
                            children: "Send Us An Email"
                        }), r && S.jsx(the, {}), !r && S.jsxs("div", {
                            className: "contact-forms-section__forms-outer-container",
                            children: [S.jsx(Cu, {
                                name: "primary_help_dropdown_selection",
                                label: "What can we help you with?",
                                placeholder: "",
                                onChange: l => t(l.value),
                                onBlur: () => n("What can we help you with?"),
                                options: nhe
                            }), e === "Questions about starting a new application" && S.jsx(Kve, {
                                onSubmit: s,
                                sendEvent: n,
                                handleErrors: o
                            }), e === "Questions about an application already in progress" && S.jsx(jve, {
                                onSubmit: s,
                                sendEvent: n,
                                handleErrors: o
                            }), e === "Questions from a school financial aid employee" && S.jsx(Yve, {
                                onSubmit: s,
                                sendEvent: n,
                                handleErrors: o
                            }), e === "Questions about the servicing of an existing loan" && S.jsx(Zve, {
                                onSubmit: s,
                                sendEvent: n,
                                handleErrors: o
                            }), e === "Questions about Student Card" && S.jsx(ehe, {
                                onSubmit: s,
                                sendEvent: n,
                                handleErrors: o
                            })]
                        })]
                    })
                })
            })
        })
    })
}
function Kn(e) {
    const {name: t, control: r, errors: a, message: n, label: i, isRequired: o, onClick: s} = e
      , l = !a || Object.keys(a).length === 0
      , u = () => {
        s && s()
    }
    ;
    return S.jsx(au, {
        name: t,
        control: r,
        defaultValue: [],
        rules: {
            required: o ? "This field is required" : !1
        },
        render: ({field: c}) => S.jsxs("div", {
            className: `document-upload-form__document-upload-button${l ? "" : " form-field__error"}`,
            children: [S.jsx("label", {
                className: "document-upload-form__document-upload-label",
                children: i
            }), S.jsx("input", {
                className: "document-upload-form__document-upload-input",
                type: "file",
                "aria-required": o,
                "aria-invalid": !l,
                onClick: u,
                onChange: d => c.onChange(Object.values(d.target.files)),
                accept: ".pdf,.png,.jpeg,.gif,.txt",
                multiple: !0
            }), !!n && S.jsx("p", {
                className: "form-field__message",
                children: n
            }), c.value.length > 1 && S.jsx("ol", {
                className: "document-upload-form__uploaded-document-list",
                children: c.value.map(d => S.jsx("li", {
                    children: S.jsx("p", {
                        children: d.name
                    })
                }))
            })]
        })
    })
}
function ohe({onSubmit: e, sendEvent: t, handleErrors: r}) {
    var s, l, u, c, d;
    const {control: a, formState: {errors: n, isSubmitting: i}, handleSubmit: o} = Cr();
    return S.jsxs("div", {
        className: "document-upload-form__form-container",
        children: [S.jsxs("div", {
            className: "document-upload-form__fields-container",
            children: [S.jsxs("div", {
                className: "document-upload-form__row",
                children: [S.jsx(Ee, {
                    name: "borrower_first_name",
                    type: "name",
                    control: a,
                    label: "Borrower First Name*",
                    onBlur: () => t("Borrower First Name"),
                    placeholder: "",
                    errors: n.borrower_first_name,
                    message: ((s = n.borrower_first_name) == null ? void 0 : s.message) || "",
                    isRequired: !0
                }), S.jsx(Ee, {
                    name: "borrower_last_name",
                    type: "name",
                    control: a,
                    label: "Borrower Last Name*",
                    onBlur: () => t("Borrower Last Name"),
                    placeholder: "",
                    errors: n.borrower_last_name,
                    message: ((l = n.borrower_last_name) == null ? void 0 : l.message) || "",
                    isRequired: !0
                })]
            }), S.jsxs("div", {
                className: "document-upload-form__row",
                children: [S.jsx(Ee, {
                    name: "email",
                    type: "email",
                    control: a,
                    label: "Email Address*",
                    onBlur: () => t("Email Address"),
                    placeholder: "",
                    errors: n.email,
                    message: ((u = n.email) == null ? void 0 : u.message) || "",
                    isRequired: !0
                }), S.jsx(Ee, {
                    name: "loan_id_number",
                    type: "number",
                    control: a,
                    label: "Loan ID*",
                    onBlur: () => t("Loan ID"),
                    placeholder: "",
                    errors: n.loan_id_number,
                    message: ((c = n.loan_id_number) == null ? void 0 : c.message) || "",
                    maxLength: 12,
                    isRequired: !0
                })]
            }), S.jsx("div", {
                className: "document-upload-form__row",
                children: S.jsx(Kn, {
                    control: a,
                    name: "files_to_upload",
                    label: "Upload Document(s):",
                    onClick: () => t("Upload Document(s)"),
                    errors: n.files_to_upload,
                    message: (d = n.files_to_upload) == null ? void 0 : d.message,
                    isRequired: !0
                })
            })]
        }), S.jsx(Re, {
            isLoading: i,
            onClick: o(e, r),
            className: "button button__dark-teal button__width-203 dropshadow dropshadow__hover-off",
            children: "Submit"
        })]
    })
}
const she = [{
    label: "Yes",
    value: "Yes"
}, {
    label: "No",
    value: "No"
}];
function lhe({onSubmit: e, sendEvent: t, handleErrors: r}) {
    var l, u, c, d, v, h, p, f, _;
    const {control: a, formState: {errors: n, isSubmitting: i}, setValue: o, handleSubmit: s} = Cr();
    return S.jsxs("div", {
        className: "document-upload-form__form-container",
        children: [S.jsxs("div", {
            className: "document-upload-form__fields-container",
            children: [S.jsx("div", {
                className: "document-upload-form__row",
                children: S.jsxs("div", {
                    children: [S.jsx("p", {
                        children: "If the borrower meets the following criteria, they can submit the application below requesting to remove their cosigner from the loan:"
                    }), S.jsxs("ol", {
                        style: {
                            display: "flex",
                            flexDirection: "column",
                            gap: "5px"
                        },
                        children: [S.jsx("li", {
                            children: "Must be a U.S.Citizen or permanent resident"
                        }), S.jsx("li", {
                            children: "Half of the original repayment term must have elapsed. (for example, if your loan has a 10-year repayment term the loan is eligible for cosigner release after the 5th year)."
                        }), S.jsx("li", {
                            children: "Documented annual income is at least twice the balance of outstanding loan(s) (pay stubs, tax returns, or other evidence of income must be submitted)."
                        }), S.jsx("li", {
                            children: "Pass a credit review and has none of the following:"
                        }), S.jsxs("ol", {
                            style: {
                                padding: "0",
                                listStyle: "none"
                            },
                            children: [S.jsx("li", {
                                children: "(i) 30 day or greater delinquency in the last 12 months, and"
                            }), S.jsx("li", {
                                children: "(ii) bankruptcy, foreclosure, or repossession in the last 24 months."
                            })]
                        })]
                    })]
                })
            }), S.jsxs("div", {
                className: "document-upload-form__row",
                children: [S.jsx(Ee, {
                    name: "borrower_first_name",
                    type: "name",
                    control: a,
                    label: "Borrower First Name*",
                    onBlur: () => t("Borrower First Name"),
                    placeholder: "",
                    errors: n.borrower_first_name,
                    message: ((l = n.borrower_first_name) == null ? void 0 : l.message) || "",
                    isRequired: !0
                }), S.jsx(Ee, {
                    name: "borrower_last_name",
                    type: "name",
                    control: a,
                    label: "Borrower Last Name*",
                    onBlur: () => t("Borrower Last Name"),
                    placeholder: "",
                    errors: n.borrower_last_name,
                    message: ((u = n.borrower_last_name) == null ? void 0 : u.message) || "",
                    isRequired: !0
                })]
            }), S.jsxs("div", {
                className: "document-upload-form__row",
                children: [S.jsx(Ee, {
                    name: "email",
                    type: "email",
                    control: a,
                    label: "Email Address*",
                    onBlur: () => t("Email Address"),
                    placeholder: "",
                    errors: n.email,
                    message: ((c = n.email) == null ? void 0 : c.message) || "",
                    isRequired: !0
                }), S.jsx(Ee, {
                    name: "phone_number",
                    type: "phone",
                    control: a,
                    label: "Phone Number*",
                    onBlur: () => t("Phone Number"),
                    placeholder: "",
                    errors: n.phone_number,
                    message: ((d = n.phone_number) == null ? void 0 : d.message) || "",
                    isRequired: !0
                })]
            }), S.jsx("div", {
                className: "document-upload-form__row",
                children: S.jsx(Ee, {
                    name: "loan_ids",
                    type: "text",
                    control: a,
                    label: "Eligible Loan IDs (comma separate for multiple)*",
                    onBlur: () => t("Eligible Loan IDs"),
                    placeholder: "",
                    errors: n.loan_ids,
                    message: ((v = n.loan_ids) == null ? void 0 : v.message) || "",
                    isRequired: !0
                })
            }), S.jsxs("div", {
                className: "document-upload-form__row",
                style: {
                    alignItems: "flex-end"
                },
                children: [S.jsx(Ee, {
                    name: "total_annual_income",
                    type: "number",
                    control: a,
                    mask: E3,
                    label: "Total Annual Income*",
                    onBlur: () => t("Total Annual Income"),
                    placeholder: "",
                    errors: n.total_annual_income,
                    message: ((h = n.total_annual_income) == null ? void 0 : h.message) || "",
                    isRequired: !0
                }), S.jsx(Ta, {
                    control: a,
                    name: "is_us_citizen",
                    label: "Are you a U.S. Citizen or permanent resident?*",
                    onBlur: () => t("Are you a U.S. Citizen or permanent resident?"),
                    placeholder: "",
                    options: she,
                    setValue: o,
                    errors: n.is_us_citizen,
                    message: (p = n.is_us_citizen) == null ? void 0 : p.message,
                    isRequired: !0
                })]
            }), S.jsx("div", {
                className: "document-upload-form__row",
                children: S.jsx(Kn, {
                    control: a,
                    name: "files_to_upload",
                    label: "Upload Proof of Income:",
                    onBlur: () => t("Upload Proof of Income"),
                    errors: n.files_to_upload,
                    message: (f = n.files_to_upload) == null ? void 0 : f.message,
                    isRequired: !0
                })
            }), S.jsx("div", {
                className: "document-upload-form__row",
                children: S.jsx(zm, {
                    name: "acknowledgment_of_loan_criteria",
                    onChange: () => t("Acknowledgment of Loan Criteria"),
                    control: a,
                    setValue: o,
                    errors: n.acknowledgment_of_loan_criteria,
                    message: ((_ = n.acknowledgment_of_loan_criteria) == null ? void 0 : _.message) || "",
                    isRequired: !0,
                    children: S.jsx("p", {
                        children: "I acknowledge that I have read and understand the Cosigner Release Loan Eligibility Criteria and declare that the information provided on or with this application is true and correct to the best of my knowledge. I grant Afri Fund Universty Lender Student Loan Servicing, LLC and/or its related entities or vendors permission to access my credit report. I have read Afri Fund Universty Lender's Electronic Receipt of Consumer Disclosures available here and consent to receive all information related to this application electronically."
                    })
                })
            })]
        }), S.jsx(Re, {
            isLoading: i,
            onClick: s(y => e({
                ...y,
                acknowledgment_of_loan_criteria: "cosigner_release_yes"
            }), r),
            className: "button button__dark-teal button__width-203 dropshadow dropshadow__hover-off",
            children: "Submit"
        })]
    })
}
function uhe({onSubmit: e, sendEvent: t, handleErrors: r}) {
    var s, l, u, c, d, v, h, p, f;
    const {control: a, formState: {errors: n, isSubmitting: i}, handleSubmit: o} = Cr();
    return S.jsxs("div", {
        className: "document-upload-form__form-container",
        children: [S.jsxs("div", {
            className: "document-upload-form__fields-container",
            children: [S.jsxs("div", {
                className: "document-upload-form__row",
                children: [S.jsx(Ee, {
                    name: "first_name",
                    type: "name",
                    control: a,
                    label: "First Name*",
                    onBlur: () => t("First Name"),
                    placeholder: "",
                    errors: n.first_name,
                    message: ((s = n.first_name) == null ? void 0 : s.message) || "",
                    isRequired: !0
                }), S.jsx(Ee, {
                    name: "last_name",
                    type: "name",
                    control: a,
                    label: "Last Name*",
                    onBlur: () => t("Last Name"),
                    placeholder: "",
                    errors: n.last_name,
                    message: ((l = n.last_name) == null ? void 0 : l.message) || "",
                    isRequired: !0
                })]
            }), S.jsx("div", {
                className: "document-upload-form__row",
                children: S.jsx(Ee, {
                    name: "mailing_address",
                    type: "text",
                    control: a,
                    label: "Mailing Address*",
                    onBlur: () => t("Mailing Address"),
                    placeholder: "",
                    errors: n.mailing_address,
                    message: ((u = n.mailing_address) == null ? void 0 : u.message) || "",
                    isRequired: !0
                })
            }), S.jsxs("div", {
                className: "document-upload-form__row",
                children: [S.jsx(Ee, {
                    name: "last_4_of_ssn",
                    type: "number",
                    control: a,
                    label: "Last 4 of SSN*",
                    onBlur: () => t("Last 4 of SSN"),
                    placeholder: "",
                    errors: n.last_4_of_ssn,
                    message: ((c = n.last_4_of_ssn) == null ? void 0 : c.message) || "",
                    maxLength: 4,
                    isRequired: !0
                }), S.jsx(Ee, {
                    name: "date_of_credit_inquiry",
                    type: "dateOfBirth",
                    control: a,
                    label: "Date of credit inquiry MM/DD/YYYY*",
                    onBlur: () => t("Date of credit inquiry MM/DD/YYYY"),
                    placeholder: "",
                    errors: n.date_of_credit_inquiry,
                    message: ((d = n.date_of_credit_inquiry) == null ? void 0 : d.message) || "",
                    isRequired: !0
                })]
            }), S.jsxs("div", {
                className: "document-upload-form__row",
                children: [S.jsx(Ee, {
                    name: "email",
                    type: "email",
                    control: a,
                    label: "Email Address*",
                    onBlur: () => t("Email Address"),
                    placeholder: "",
                    errors: n.email,
                    message: ((v = n.email) == null ? void 0 : v.message) || "",
                    isRequired: !0
                }), S.jsx(Ee, {
                    name: "loan_id_number",
                    type: "number",
                    control: a,
                    label: "Loan ID*",
                    onBlur: () => t("Loan ID"),
                    placeholder: "",
                    errors: n.loan_id_number,
                    message: ((h = n.loan_id_number) == null ? void 0 : h.message) || "",
                    maxLength: 12,
                    isRequired: !0
                })]
            }), S.jsx("div", {
                className: "document-upload-form__row",
                children: S.jsx(Kn, {
                    control: a,
                    name: "files_to_upload",
                    label: "If you want to include any supporting documentation upload it here",
                    onBlur: () => t("if you want to include any supporting documentation upload it here"),
                    errors: n.files_to_upload,
                    message: (p = n.files_to_upload) == null ? void 0 : p.message
                })
            }), S.jsx("div", {
                className: "contact-form__row",
                children: S.jsx(Vs, {
                    control: a,
                    name: "description",
                    label: "Comments*",
                    onBlur: () => t("Comments"),
                    placeholder: "",
                    errors: n.description,
                    message: ((f = n.description) == null ? void 0 : f.message) || "",
                    isRequired: !0
                })
            })]
        }), S.jsx(Re, {
            isLoading: i,
            onClick: o(e, r),
            className: "button button__dark-teal button__width-203 dropshadow dropshadow__hover-off",
            children: "Submit"
        })]
    })
}
function che({selected: e, value: t, onChange: r, label: a}) {
    return S.jsxs("label", {
        className: "multi-checkbox__option",
        children: [S.jsx("input", {
            className: "checkbox__checkmark-input",
            type: "checkbox",
            checked: e,
            "aria-checked": e,
            onChange: () => r(a)
        }), S.jsx("div", {
            className: "checkbox__checkmark-container",
            children: e && S.jsx("div", {
                className: "checkbox__checked",
                children: S.jsx("div", {
                    className: "checkbox__checkmark"
                })
            })
        }), S.jsx("div", {
            className: "checkbox__label-container",
            children: S.jsx("p", {
                children: a
            })
        })]
    })
}
function yN(e) {
    const {name: t, control: r, options: a, label: n, setValue: i, errors: o, message: s, isRequired: l} = e
      , [u,c] = q.useState([])
      , d = !o || Object.keys(o).length === 0
      , v = h => {
        if (u.includes(h)) {
            const p = u.filter(f => f !== h);
            return i(t, p),
            c(p)
        }
        return i(t, [...u, h]),
        c([...u, h])
    }
    ;
    return S.jsx(au, {
        name: t,
        control: r,
        defaultValue: u,
        rules: {
            required: l ? "This field is required" : !1
        },
        render: () => S.jsxs("div", {
            className: `form_field multi-checkbox__container${d ? "" : " form-field__error"}`,
            children: [!!n && S.jsx("p", {
                children: n
            }), a.map(h => S.jsx(che, {
                selected: u.includes(h.value),
                value: h.value,
                label: h.label,
                onChange: v
            })), !!s && S.jsx("p", {
                className: "form-field__message",
                children: s
            })]
        })
    })
}
const dhe = [{
    label: "Borrower",
    value: "Borrower"
}, {
    label: "Cosigner",
    value: "Cosigner"
}]
  , vhe = [{
    label: "Social Security Statement",
    value: "Social Security Statement"
}, {
    label: "Medical Documentation",
    value: "Medical Documentation"
}, {
    label: "Reduction in income proof",
    value: "Reduction in income proof"
}, {
    label: "Death certificate",
    value: "Death certificate"
}];
function hhe({onSubmit: e, sendEvent: t, handleErrors: r}) {
    var u, c, d, v, h, p, f, _;
    const {control: a, formState: {errors: n, isSubmitting: i}, setValue: o, handleSubmit: s} = Cr()
      , l = (y, g) => {
        const m = g.join(",");
        return o(y, m)
    }
    ;
    return S.jsxs("div", {
        className: "document-upload-form__form-container",
        children: [S.jsxs("div", {
            className: "document-upload-form__fields-container",
            children: [S.jsxs("div", {
                className: "document-upload-form__row",
                children: [S.jsx(Ee, {
                    name: "borrower_first_name",
                    type: "name",
                    control: a,
                    label: "Borrower First Name*",
                    onBlur: () => t("Borrower First Name"),
                    placeholder: "",
                    errors: n.borrower_first_name,
                    message: ((u = n.borrower_first_name) == null ? void 0 : u.message) || "",
                    isRequired: !0
                }), S.jsx(Ee, {
                    name: "borrower_last_name",
                    type: "name",
                    control: a,
                    label: "Borrower Last Name*",
                    onBlur: () => t("Borrower Last Name"),
                    placeholder: "",
                    errors: n.borrower_last_name,
                    message: ((c = n.borrower_last_name) == null ? void 0 : c.message) || "",
                    isRequired: !0
                })]
            }), S.jsxs("div", {
                className: "document-upload-form__row",
                children: [S.jsx(Ee, {
                    name: "email",
                    type: "email",
                    control: a,
                    label: "Email Address*",
                    onBlur: () => t("Email Address"),
                    placeholder: "",
                    errors: n.email,
                    message: ((d = n.email) == null ? void 0 : d.message) || "",
                    isRequired: !0
                }), S.jsx(Ee, {
                    name: "loan_id_number",
                    type: "number",
                    control: a,
                    label: "Loan ID*",
                    onBlur: () => t("Loan ID"),
                    placeholder: "",
                    errors: n.loan_id_number,
                    message: ((v = n.loan_id_number) == null ? void 0 : v.message) || "",
                    maxLength: 12,
                    isRequired: !0
                })]
            }), S.jsxs("div", {
                className: "document-upload-form__row",
                children: [S.jsx(Ta, {
                    control: a,
                    name: "borrower_or_cosigner_forgiveness",
                    label: "Is the request for borrower or cosigner?*",
                    onBlur: () => t("Is the request for borrower or cosigner?"),
                    placeholder: "",
                    options: dhe,
                    setValue: o,
                    errors: n.borrower_or_cosigner_forgiveness,
                    message: (h = n.borrower_or_cosigner_forgiveness) == null ? void 0 : h.message,
                    isRequired: !0
                }), S.jsx(Ee, {
                    name: "state",
                    type: "text",
                    control: a,
                    label: "State*",
                    onBlur: () => t("State"),
                    placeholder: "",
                    errors: n.state,
                    message: ((p = n.state) == null ? void 0 : p.message) || "",
                    isRequired: !0
                })]
            }), S.jsx("div", {
                className: "document-upload-form__row",
                children: S.jsx(yN, {
                    name: "loan_forgiveness_multi_select",
                    label: "I need to upload (check all that apply):",
                    onBlur: () => t("I need to upload"),
                    control: a,
                    errors: n.loan_forgiveness_multi_select,
                    message: (f = n.loan_forgiveness_multi_select) == null ? void 0 : f.message,
                    setValue: l,
                    options: vhe,
                    isRequired: !0
                })
            }), S.jsx("div", {
                className: "document-upload-form__row",
                children: S.jsx(Kn, {
                    control: a,
                    name: "files_to_upload",
                    label: "Upload Document(s):",
                    onClick: () => t("Upload Document(s)"),
                    errors: n.files_to_upload,
                    message: (_ = n.files_to_upload) == null ? void 0 : _.message,
                    isRequired: !0
                })
            })]
        }), S.jsx(Re, {
            isLoading: i,
            onClick: s(e, r),
            className: "button button__dark-teal button__width-203 dropshadow dropshadow__hover-off",
            children: "Submit"
        })]
    })
}
function mhe({onSubmit: e, sendEvent: t, handleErrors: r}) {
    var s, l, u, c, d;
    const {control: a, formState: {errors: n, isSubmitting: i}, handleSubmit: o} = Cr();
    return S.jsxs("div", {
        className: "document-upload-form__form-container",
        children: [S.jsxs("div", {
            className: "document-upload-form__fields-container",
            children: [S.jsxs("div", {
                className: "document-upload-form__row",
                children: [S.jsx(Ee, {
                    name: "borrower_first_name",
                    type: "name",
                    control: a,
                    label: "Borrower First Name*",
                    onBlur: () => t("Borrower First Name"),
                    placeholder: "",
                    errors: n.borrower_first_name,
                    message: ((s = n.borrower_first_name) == null ? void 0 : s.message) || "",
                    isRequired: !0
                }), S.jsx(Ee, {
                    name: "borrower_last_name",
                    type: "name",
                    control: a,
                    label: "Borrower Last Name*",
                    onBlur: () => t("Borrower Last Name"),
                    placeholder: "",
                    errors: n.borrower_last_name,
                    message: ((l = n.borrower_last_name) == null ? void 0 : l.message) || "",
                    isRequired: !0
                })]
            }), S.jsxs("div", {
                className: "document-upload-form__row",
                children: [S.jsx(Ee, {
                    name: "email",
                    type: "email",
                    control: a,
                    label: "Email Address*",
                    onBlur: () => t("Email Address"),
                    placeholder: "",
                    errors: n.email,
                    message: ((u = n.email) == null ? void 0 : u.message) || "",
                    isRequired: !0
                }), S.jsx(Ee, {
                    name: "reference_number",
                    type: "number",
                    control: a,
                    label: "14-Digit Reference Number*",
                    onBlur: () => t("14 Digit Reference Number"),
                    placeholder: "",
                    errors: n.reference_number,
                    message: ((c = n.reference_number) == null ? void 0 : c.message) || "",
                    maxLength: 14,
                    isRequired: !0
                })]
            }), S.jsx("div", {
                className: "document-upload-form__row",
                children: S.jsx(Kn, {
                    control: a,
                    name: "files_to_upload",
                    label: "Upload Document(s):",
                    onClick: () => t("Upload Document(s)"),
                    errors: n.files_to_upload,
                    message: (d = n.files_to_upload) == null ? void 0 : d.message,
                    isRequired: !0
                })
            })]
        }), S.jsx(Re, {
            isLoading: i,
            onClick: o(e, r),
            className: "button button__dark-teal button__width-203 dropshadow dropshadow__hover-off",
            children: "Submit"
        })]
    })
}
function fhe({doc_upload_center_selection: e, onSubmit: t, sendEvent: r, handleErrors: a}) {
    var l, u, c, d;
    const {control: n, formState: {errors: i, isSubmitting: o}, handleSubmit: s} = Cr();
    return S.jsxs("div", {
        className: "document-upload-form__form-container",
        children: [S.jsxs("div", {
            className: "document-upload-form__fields-container",
            children: [S.jsx("div", {
                className: "document-upload-form__row",
                children: S.jsx(Ee, {
                    name: "victim_full_name",
                    type: "name",
                    control: n,
                    label: "Victim Full Name*",
                    onBlur: () => r("Victim Full Name"),
                    placeholder: "",
                    errors: i.victim_full_name,
                    message: ((l = i.victim_full_name) == null ? void 0 : l.message) || "",
                    isRequired: !0
                })
            }), S.jsxs("div", {
                className: "document-upload-form__row",
                children: [S.jsx(Ee, {
                    name: "email",
                    type: "email",
                    control: n,
                    label: "Email Address*",
                    onBlur: () => r("Email Address"),
                    placeholder: "",
                    errors: i.email,
                    message: ((u = i.email) == null ? void 0 : u.message) || "",
                    isRequired: !0
                }), S.jsx(Ee, {
                    name: "loan_id_number",
                    type: "number",
                    control: n,
                    label: "Loan ID*",
                    onBlur: () => r("Loan ID"),
                    placeholder: "",
                    errors: i.loan_id_number,
                    message: ((c = i.loan_id_number) == null ? void 0 : c.message) || "",
                    maxLength: 12,
                    isRequired: !0
                })]
            }), S.jsx("div", {
                className: "document-upload-form__row",
                children: S.jsx(Kn, {
                    control: n,
                    name: "files_to_upload",
                    label: "Upload Document(s):",
                    onClick: () => r("Upload Document(s)"),
                    errors: i.files_to_upload,
                    message: (d = i.files_to_upload) == null ? void 0 : d.message,
                    isRequired: !0
                })
            })]
        }), S.jsx(Re, {
            isLoading: o,
            onClick: s(t, a),
            className: "button button__dark-teal button__width-203 dropshadow dropshadow__hover-off",
            children: "Submit"
        })]
    })
}
const phe = [{
    label: "Borrower",
    value: "Borrower"
}, {
    label: "Cosigner",
    value: "Cosigner"
}]
  , yhe = [{
    label: "Driver's License",
    value: "Driver's License"
}, {
    label: "SSN Card",
    value: "SSN Card"
}, {
    label: "W-2",
    value: "W-2"
}, {
    label: "Utility Bill",
    value: "Utility Bill"
}, {
    label: "Lease",
    value: "Lease"
}, {
    label: "Piece of mail addressed to borrower/cosigner",
    value: "Piece of mail addressed to borrower/cosigner"
}];
function whe({onSubmit: e, sendEvent: t, handleErrors: r}) {
    var u, c, d, v, h, p, f;
    const {control: a, formState: {errors: n, isSubmitting: i}, setValue: o, handleSubmit: s} = Cr()
      , l = (_, y) => {
        const g = y.join(",");
        return o(_, g)
    }
    ;
    return S.jsxs("div", {
        className: "document-upload-form__form-container",
        children: [S.jsxs("div", {
            className: "document-upload-form__fields-container",
            children: [S.jsxs("div", {
                className: "document-upload-form__row",
                children: [S.jsx(Ee, {
                    name: "first_name",
                    type: "name",
                    control: a,
                    label: "First Name*",
                    onBlur: () => t("First Name"),
                    placeholder: "",
                    errors: n.first_name,
                    message: ((u = n.first_name) == null ? void 0 : u.message) || "",
                    isRequired: !0
                }), S.jsx(Ee, {
                    name: "last_name",
                    type: "name",
                    control: a,
                    label: "Last Name*",
                    onBlur: () => t("Last Name"),
                    placeholder: "",
                    errors: n.last_name,
                    message: ((c = n.last_name) == null ? void 0 : c.message) || "",
                    isRequired: !0
                })]
            }), S.jsx("div", {
                className: "document-upload-form__row",
                children: S.jsx(Ee, {
                    name: "email",
                    type: "email",
                    control: a,
                    label: "Email Address*",
                    onBlur: () => t("Email Address"),
                    placeholder: "",
                    errors: n.email,
                    message: ((d = n.email) == null ? void 0 : d.message) || "",
                    isRequired: !0
                })
            }), S.jsxs("div", {
                className: "document-upload-form__row",
                children: [S.jsx(Ta, {
                    control: a,
                    name: "cosigner_or_borrower",
                    label: "I am the*",
                    onBlur: () => t("I am the"),
                    placeholder: "",
                    options: phe,
                    setValue: o,
                    errors: n.cosigner_or_borrower,
                    message: (v = n.cosigner_or_borrower) == null ? void 0 : v.message,
                    isRequired: !0
                }), S.jsx(Ee, {
                    name: "reference_number",
                    type: "number",
                    control: a,
                    label: "14-Digit Reference Number*",
                    onBlur: () => t("14-Digit Reference Number"),
                    placeholder: "",
                    errors: n.reference_number,
                    message: ((h = n.reference_number) == null ? void 0 : h.message) || "",
                    maxLength: 14,
                    isRequired: !0
                })]
            }), S.jsx("div", {
                className: "document-upload-form__row",
                children: S.jsx(yN, {
                    name: "id_verification_multi_select",
                    label: "I need to upload (check all that apply):",
                    onBlur: () => t("I need to upload"),
                    control: a,
                    errors: n.id_verification_multi_select,
                    message: (p = n.id_verification_multi_select) == null ? void 0 : p.message,
                    setValue: l,
                    options: yhe,
                    isRequired: !0
                })
            }), S.jsx("div", {
                className: "document-upload-form__row",
                children: S.jsx(Kn, {
                    control: a,
                    name: "files_to_upload",
                    label: "Upload Document(s):",
                    onClick: () => t("Upload Document(s)"),
                    errors: n.files_to_upload,
                    message: (f = n.files_to_upload) == null ? void 0 : f.message,
                    isRequired: !0
                })
            })]
        }), S.jsx(Re, {
            isLoading: i,
            onClick: s(e, r),
            className: "button button__dark-teal button__width-203 dropshadow dropshadow__hover-off",
            children: "Submit"
        })]
    })
}
function ghe({onSubmit: e, sendEvent: t, handleErrors: r}) {
    var s, l, u, c, d;
    const {control: a, formState: {errors: n, isSubmitting: i}, handleSubmit: o} = Cr();
    return S.jsxs("div", {
        className: "document-upload-form__form-container",
        children: [S.jsxs("div", {
            className: "document-upload-form__fields-container",
            children: [S.jsx("div", {
                className: "document-upload-form__row",
                children: S.jsx("p", {
                    children: "If you are still in school or plan on re-enrolling in the next 6 months, please upload proof of enrollment. This will include a letter or an email from the school advising start date, graduation date, an also status. We'll review the documentation and update your loan status if you meet the criteria."
                })
            }), S.jsxs("div", {
                className: "document-upload-form__row",
                children: [S.jsx(Ee, {
                    name: "borrower_first_name",
                    type: "name",
                    control: a,
                    label: "Borrower First Name*",
                    onBlur: () => t("Borrower First Name"),
                    placeholder: "",
                    errors: n.borrower_first_name,
                    message: ((s = n.borrower_first_name) == null ? void 0 : s.message) || "",
                    isRequired: !0
                }), S.jsx(Ee, {
                    name: "borrower_last_name",
                    type: "name",
                    control: a,
                    label: "Borrower Last Name*",
                    onBlur: () => t("Borrower Last Name"),
                    placeholder: "",
                    errors: n.borrower_last_name,
                    message: ((l = n.borrower_last_name) == null ? void 0 : l.message) || "",
                    isRequired: !0
                })]
            }), S.jsxs("div", {
                className: "document-upload-form__row",
                children: [S.jsx(Ee, {
                    name: "email",
                    type: "email",
                    control: a,
                    label: "Email Address*",
                    onBlur: () => t("Email Address"),
                    placeholder: "",
                    errors: n.email,
                    message: ((u = n.email) == null ? void 0 : u.message) || "",
                    isRequired: !0
                }), S.jsx(Ee, {
                    name: "loan_id_number",
                    type: "number",
                    control: a,
                    label: "Loan ID*",
                    onBlur: () => t("Loan ID"),
                    placeholder: "",
                    errors: n.loan_id_number,
                    message: ((c = n.loan_id_number) == null ? void 0 : c.message) || "",
                    maxLength: 12,
                    isRequired: !0
                })]
            }), S.jsx("div", {
                className: "document-upload-form__row",
                children: S.jsx(Kn, {
                    control: a,
                    name: "files_to_upload",
                    label: "Upload Document(s):",
                    onClick: () => t("Upload Document(s)"),
                    errors: n.files_to_upload,
                    message: (d = n.files_to_upload) == null ? void 0 : d.message,
                    isRequired: !0
                })
            })]
        }), S.jsx(Re, {
            isLoading: i,
            onClick: o(e, r),
            className: "button button__dark-teal button__width-203 dropshadow dropshadow__hover-off",
            children: "Submit"
        })]
    })
}
function _he({onSubmit: e, sendEvent: t, handleErrors: r}) {
    var s, l, u, c, d;
    const {control: a, formState: {errors: n, isSubmitting: i}, handleSubmit: o} = Cr();
    return S.jsxs("div", {
        className: "document-upload-form__form-container",
        children: [S.jsxs("div", {
            className: "document-upload-form__fields-container",
            children: [S.jsxs("div", {
                className: "document-upload-form__row",
                children: [S.jsx(Ee, {
                    name: "borrower_first_name",
                    type: "name",
                    control: a,
                    label: "Borrower First Name*",
                    onBlur: () => t("Borrower First Name"),
                    placeholder: "",
                    errors: n.borrower_first_name,
                    message: ((s = n.borrower_first_name) == null ? void 0 : s.message) || "",
                    isRequired: !0
                }), S.jsx(Ee, {
                    name: "borrower_last_name",
                    type: "name",
                    control: a,
                    label: "Borrower Last Name*",
                    onBlur: () => t("Borrower Last Name"),
                    placeholder: "",
                    errors: n.borrower_last_name,
                    message: ((l = n.borrower_last_name) == null ? void 0 : l.message) || "",
                    isRequired: !0
                })]
            }), S.jsxs("div", {
                className: "document-upload-form__row",
                children: [S.jsx(Ee, {
                    name: "email",
                    type: "email",
                    control: a,
                    label: "Email Address*",
                    onBlur: () => t("Email Address"),
                    placeholder: "",
                    errors: n.email,
                    message: ((u = n.email) == null ? void 0 : u.message) || "",
                    isRequired: !0
                }), S.jsx(Ee, {
                    name: "reference_number",
                    type: "number",
                    control: a,
                    label: "14-Digit Reference Number*",
                    onBlur: () => t("14-Digit Reference Number"),
                    placeholder: "",
                    errors: n.reference_number,
                    message: ((c = n.reference_number) == null ? void 0 : c.message) || "",
                    maxLength: 14,
                    isRequired: !0
                })]
            }), S.jsx("div", {
                className: "document-upload-form__row",
                children: S.jsx(Kn, {
                    control: a,
                    name: "files_to_upload",
                    label: "Upload Document(s):",
                    onClick: () => t("Upload Document(s)"),
                    errors: n.files_to_upload,
                    message: (d = n.files_to_upload) == null ? void 0 : d.message,
                    isRequired: !0
                })
            })]
        }), S.jsx(Re, {
            isLoading: i,
            onClick: o(e, r),
            className: "button button__dark-teal button__width-203 dropshadow dropshadow__hover-off",
            children: "Submit"
        })]
    })
}
function bhe({onSubmit: e, sendEvent: t, handleErrors: r}) {
    var s, l, u, c;
    const {control: a, formState: {errors: n, isSubmitting: i}, handleSubmit: o} = Cr();
    return S.jsxs("div", {
        className: "document-upload-form__form-container",
        children: [S.jsxs("div", {
            className: "document-upload-form__fields-container",
            children: [S.jsxs("div", {
                className: "document-upload-form__row",
                children: [S.jsx(Ee, {
                    name: "first_name",
                    type: "name",
                    control: a,
                    label: "First Name*",
                    onBlur: () => t("First Name"),
                    placeholder: "",
                    errors: n.first_name,
                    message: ((s = n.first_name) == null ? void 0 : s.message) || "",
                    isRequired: !0
                }), S.jsx(Ee, {
                    name: "last_name",
                    type: "name",
                    control: a,
                    label: "Last Name*",
                    onBlur: () => t("Last Name"),
                    placeholder: "",
                    errors: n.last_name,
                    message: ((l = n.last_name) == null ? void 0 : l.message) || "",
                    isRequired: !0
                })]
            }), S.jsx("div", {
                className: "document-upload-form__row",
                children: S.jsx(Ee, {
                    name: "email",
                    type: "email",
                    control: a,
                    label: "Email Address*",
                    onBlur: () => t("Email Address"),
                    placeholder: "",
                    errors: n.email,
                    message: ((u = n.email) == null ? void 0 : u.message) || "",
                    isRequired: !0
                })
            }), S.jsx("div", {
                className: "document-upload-form__row",
                children: S.jsx(Kn, {
                    control: a,
                    name: "files_to_upload",
                    label: "Upload Document(s):",
                    onClick: () => t("Upload Document(s)"),
                    errors: n.files_to_upload,
                    message: (c = n.files_to_upload) == null ? void 0 : c.message,
                    isRequired: !0
                })
            })]
        }), S.jsx(Re, {
            isLoading: i,
            onClick: o(e, r),
            className: "button button__dark-teal button__width-203 dropshadow dropshadow__hover-off",
            children: "Submit"
        })]
    })
}
function Che({onSubmit: e, sendEvent: t, handleErrors: r}) {
    var s, l, u, c, d;
    const {control: a, formState: {errors: n, isSubmitting: i}, handleSubmit: o} = Cr();
    return S.jsxs("div", {
        className: "document-upload-form__form-container",
        children: [S.jsxs("div", {
            className: "document-upload-form__fields-container",
            children: [S.jsxs("div", {
                className: "document-upload-form__row",
                children: [S.jsx(Ee, {
                    name: "borrower_first_name",
                    type: "name",
                    control: a,
                    label: "Borrower First Name*",
                    onBlur: () => t("Borrower First Name"),
                    placeholder: "",
                    errors: n.borrower_first_name,
                    message: ((s = n.borrower_first_name) == null ? void 0 : s.message) || "",
                    isRequired: !0
                }), S.jsx(Ee, {
                    name: "borrower_last_name",
                    type: "name",
                    control: a,
                    label: "Borrower Last Name*",
                    onBlur: () => t("Borrower Last Name"),
                    placeholder: "",
                    errors: n.borrower_last_name,
                    message: ((l = n.borrower_last_name) == null ? void 0 : l.message) || "",
                    isRequired: !0
                })]
            }), S.jsxs("div", {
                className: "document-upload-form__row",
                children: [S.jsx(Ee, {
                    name: "email",
                    type: "email",
                    control: a,
                    label: "Email Address*",
                    onBlur: () => t("Email Address"),
                    placeholder: "",
                    errors: n.email,
                    message: ((u = n.email) == null ? void 0 : u.message) || "",
                    isRequired: !0
                }), S.jsx(Ee, {
                    name: "loan_id_number",
                    type: "number",
                    control: a,
                    label: "Loan ID*",
                    onBlur: () => t("Loan ID"),
                    placeholder: "",
                    errors: n.loan_id_number,
                    message: ((c = n.loan_id_number) == null ? void 0 : c.message) || "",
                    maxLength: 12,
                    isRequired: !0
                })]
            }), S.jsx("div", {
                className: "document-upload-form__row",
                children: S.jsx(Kn, {
                    control: a,
                    name: "files_to_upload",
                    label: "Upload Document(s):",
                    onClick: () => t("Upload Document(s)"),
                    errors: n.files_to_upload,
                    message: (d = n.files_to_upload) == null ? void 0 : d.message,
                    isRequired: !0
                })
            })]
        }), S.jsx(Re, {
            isLoading: i,
            onClick: o(e, r),
            className: "button button__dark-teal button__width-203 dropshadow dropshadow__hover-off",
            children: "Submit"
        })]
    })
}
function She({onClick: e}) {
    return S.jsxs("div", {
        className: "document-upload-form__success-container",
        children: [S.jsx("img", {
            src: "/static/assets/images/icons/success.svg",
            alt: "success",
            className: "document-upload-form__success-image"
        }), S.jsxs("div", {
            className: "document-upload-form__success-text",
            children: [S.jsx("h3", {
                className: "h3",
                children: "Your Document Successfully Uploaded!"
            }), S.jsx("h4", {
                className: "h4",
                children: "We will be in touch with you if necessary."
            }), S.jsx(o3, {
                direction: "right",
                label: "Upload Another Document",
                onClick: e
            })]
        })]
    })
}
const xhe = async e => {
    try {
        const {files_to_upload: t, ...r} = e
          , a = await Ahe(t)
          , n = {
            ...r,
            ...a.length > 0 && {
                filesToUpload: a
            },
            form_type: "web_upload",
            primary_help_dropdown_selection: "Doc upload"
        }
          , i = await za.post(`${Uo}/v1/help-desk/ticket`, n);
        if (i !== "success")
            throw new Error("Response Not Success");
        return i
    } catch (t) {
        throw t.message === "FileConversionError" ? new Error("There is an issue with the file you're attempting to upload.",{
            cause: t
        }) : new Error("There was an error. Please try again.",{
            cause: t
        })
    }
}
  , Ahe = async e => {
    if (e.length === 0)
        return [];
    try {
        const t = e.map(Ehe);
        return Promise.all(t)
    } catch (t) {
        throw new Error("FileConversionError",{
            cause: t
        })
    }
}
  , Ehe = e => new Promise( (t, r) => {
    const a = new FileReader;
    a.readAsDataURL(e),
    a.onload = () => {
        const i = a.result.replace("data:" + e.type + ";base64,", "");
        t({
            name: e.name,
            type: e.type,
            file: i
        })
    }
    ,
    a.onerror = n => r(n)
}
)
  , khe = ({formSelected: e}) => {
    const t = i => {
        const o = {
            type: "event",
            eventAction: "Form Field - interaction",
            eventLabel: `Upload - ${e} > ${i}`
        };
        return mn(o)
    }
      , r = i => {
        const o = {
            type: "event",
            eventAction: `Upload Form - ${i}`,
            eventLabel: `Upload - ${e}`
        };
        return mn(o)
    }
      , a = i => {
        const o = {
            type: "event",
            eventAction: "Form Field - error",
            eventLabel: `${e} - ${i}`
        };
        return mn(o)
    }
    ;
    return {
        sendEvent: t,
        sendFormEvent: r,
        handleFormErrors: i => {
            const o = {
                email: "Email",
                first_name: "First Name",
                last_name: "Last Name",
                reference_number: "Reference Number",
                cosigner_or_borrower: "I am the (cosigner/borrower)",
                id_verification_multi_select: "I need to upload (check all that apply)",
                loan_forgiveness_multi_select: "I need to upload (check all that apply)",
                files_to_upload: "Upload Documents(s)",
                borrower_first_name: "Borrower First Name",
                borrower_last_name: "Borrower Last Name",
                loan_id_number: "Loan ID",
                borrower_or_cosigner_forgiveness: "Is the request for borrower or cosigner?",
                state: "State",
                phone_number: "Phone Number",
                acknowledgment_of_loan_criteria: "Acknowledgment of Loan Criteria",
                is_us_citizen: "Are you a U.S. Citizen of permanent resident?",
                loan_ids: "Eligible Loan IDs",
                total_annual_income: "Total Annual Income",
                victim_full_name: "Victim Full Name",
                date_of_credit_inquiry: "Date of credit inquiry MM/DD/YYYY",
                description: "Comments",
                last_4_of_ssn: "Last 4 of SSN",
                mailing_address: "Mailing Address"
            };
            Object.keys(i).map(l => (o[l] || `${l}${i[l].message}`,
            `Upload > ${o[l]} > ${i[l].message}`)).forEach(a)
        }
    }
}
  , The = [{
    label: "ID verification for an application in progress",
    value: "ID verification for an application in progress"
}, {
    label: "Degree verification",
    value: "Degree verification"
}, {
    label: "Proof of existing loan",
    value: "Proof of existing loan"
}, {
    label: "Proof of enrollment",
    value: "Proof of enrollment"
}, {
    label: "Death or disability verification for loan forgiveness",
    value: "Death or disability verification for loan forgiveness"
}, {
    label: "Cosigner release application",
    value: "Cosigner release application doc upload"
}, {
    label: "3rd party authorization",
    value: "3rd party authorization"
}, {
    label: "Verification of active-duty status",
    value: "Verification of active-duty status"
}, {
    label: "Fraud",
    value: "Fraud"
}, {
    label: "W9 to claim sweepstakes/scholarship prize",
    value: "W9 to claim sweepstakes/scholarship prize"
}, {
    label: "Credit bureau dispute",
    value: "Credit bureau dispute"
}];
function Nhe() {
    const [e,t] = q.useState(null)
      , [r,a] = q.useState(!1)
      , {sendEvent: n, sendFormEvent: i, handleFormErrors: o} = khe({
        formSelected: e
    })
      , s = async l => {
        try {
            i("submit"),
            await xhe({
                ...l,
                doc_upload_center_selection: e
            })
        } catch (u) {
            return window.alert(u.message)
        }
        i("submit success"),
        a(!0),
        t(null)
    }
    ;
    return S.jsx("section", {
        className: "document-upload-forms-section",
        children: S.jsx("div", {
            className: "section-container",
            children: S.jsx("div", {
                className: "document-upload-forms-section__outer-container background-color__gray",
                children: S.jsxs("div", {
                    className: "document-upload-forms-section__inner-container background-color__white",
                    children: [r && S.jsx(She, {
                        onClick: () => a(!1)
                    }), !r && S.jsxs("div", {
                        className: "document-upload-forms-section__forms-outer-container",
                        children: [S.jsx(Cu, {
                            name: "doc_upload_center_selection",
                            label: "What is the documentation for?",
                            placeholder: "",
                            onBlur: () => n("What is the documentation for?"),
                            onChange: l => t(l.value),
                            options: The
                        }), e === "ID verification for an application in progress" && S.jsx(whe, {
                            onSubmit: s,
                            sendEvent: n,
                            handleErrors: o
                        }), e === "Degree verification" && S.jsx(mhe, {
                            onSubmit: s,
                            sendEvent: n,
                            handleErrors: o
                        }), e === "Proof of existing loan" && S.jsx(_he, {
                            onSubmit: s,
                            sendEvent: n,
                            handleErrors: o
                        }), e === "Proof of enrollment" && S.jsx(ghe, {
                            onSubmit: s,
                            sendEvent: n,
                            handleErrors: o
                        }), e === "Death or disability verification for loan forgiveness" && S.jsx(hhe, {
                            onSubmit: s,
                            sendEvent: n,
                            handleErrors: o
                        }), e === "Cosigner release application doc upload" && S.jsx(lhe, {
                            onSubmit: s,
                            sendEvent: n,
                            handleErrors: o
                        }), e === "3rd party authorization" && S.jsx(Che, {
                            onSubmit: s,
                            sendEvent: n,
                            handleErrors: o
                        }), e === "Verification of active-duty status" && S.jsx(ohe, {
                            onSubmit: s,
                            sendEvent: n,
                            handleErrors: o
                        }), e === "Fraud" && S.jsx(fhe, {
                            onSubmit: s,
                            sendEvent: n,
                            handleErrors: o
                        }), e === "W9 to claim sweepstakes/scholarship prize" && S.jsx(bhe, {
                            onSubmit: s,
                            sendEvent: n,
                            handleErrors: o
                        }), e === "Credit bureau dispute" && S.jsx(uhe, {
                            onSubmit: s,
                            sendEvent: n,
                            handleErrors: o
                        })]
                    })]
                })
            })
        })
    })
}
const Mhe = {
    Glossary: sD,
    ResourcesSection: nD,
    PrequalifySection: fP,
    GenericCalculator: Lse,
    UndergradCalculator: $de,
    CareerCalculator: zde,
    GraduateCalculator: Hde,
    ParentCalculator: Qde,
    RefinanceCalculator: Ive,
    PressReleaseSection: _P,
    ReviewsSection: DP,
    PromotionsForm: Vve,
    ContactForms: ihe,
    DocumentUploadForms: Nhe
};
function Ihe(e) {
    const t = Mhe[e.sectionName];
    return t ? S.jsx(t, {}) : null
}
const Dhe = document.querySelectorAll("[data-app]");
Dhe.forEach(e => {
    const t = e.dataset.app;
    Vp.createRoot(e).render(S.jsx(Gt.StrictMode, {
        children: S.jsx(Ihe, {
            sectionName: t
        })
    }))
}
);